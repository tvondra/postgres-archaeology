query 1 run 1
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424893.54..424893.55 rows=1 width=25) (actual time=10421.818..10421.818 rows=1 loops=1)
   ->  Sort  (cost=424893.54..424893.56 rows=6 width=25) (actual time=10421.816..10421.816 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424893.35..424893.51 rows=6 width=25) (actual time=10421.789..10421.795 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..187573.79 rows=5932989 width=25) (actual time=0.422..1264.286 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning time: 13.644 ms
 Execution time: 10421.874 ms
(11 rows)

SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424893.54..424893.55 rows=1 width=25) (actual time=10199.412..10199.412 rows=1 loops=1)
   ->  Sort  (cost=424893.54..424893.56 rows=6 width=25) (actual time=10199.411..10199.411 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424893.35..424893.51 rows=6 width=25) (actual time=10199.384..10199.389 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..187573.79 rows=5932989 width=25) (actual time=0.021..1075.486 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning time: 0.832 ms
 Execution time: 10199.464 ms
(11 rows)

query 2 run 1
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=19360.01..19360.01 rows=1 width=192) (actual time=175.083..175.094 rows=100 loops=1)
   ->  Sort  (cost=19360.01..19360.01 rows=1 width=192) (actual time=175.083..175.090 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Nested Loop  (cost=15.16..19360.00 rows=1 width=192) (actual time=5.698..174.722 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.007..0.012 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.000..0.001 rows=25 loops=1)
               ->  Materialize  (cost=15.16..19357.30 rows=1 width=170) (actual time=0.503..34.862 rows=489 loops=5)
                     ->  Nested Loop  (cost=15.16..19357.29 rows=1 width=170) (actual time=2.510..173.810 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.88..19356.01 rows=1 width=34) (actual time=2.183..135.837 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5472.67 rows=853 width=30) (actual time=0.480..25.272 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=14.46..16.27 rows=1 width=14) (actual time=0.001..0.002 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=14.02..14.03 rows=1 width=6) (actual time=0.135..0.135 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.97..14.02 rows=1 width=6) (actual time=0.122..0.133 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.97..12.91 rows=4 width=10) (actual time=0.100..0.130 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.83..12.24 rows=4 width=10) (actual time=0.098..0.123 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.093..0.094 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.41..2.43 rows=1 width=8) (actual time=0.006..0.007 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                                       SubPlan 1
                                         ->  Aggregate  (cost=14.02..14.03 rows=1 width=6) (actual time=0.135..0.135 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.97..14.02 rows=1 width=6) (actual time=0.122..0.133 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.97..12.91 rows=4 width=10) (actual time=0.100..0.130 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.83..12.24 rows=4 width=10) (actual time=0.098..0.123 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.093..0.094 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.41..2.43 rows=1 width=8) (actual time=0.006..0.007 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.076..0.077 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning time: 19.930 ms
 Execution time: 175.158 ms
(65 rows)

SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=19360.01..19360.01 rows=1 width=192) (actual time=23.605..23.618 rows=100 loops=1)
   ->  Sort  (cost=19360.01..19360.01 rows=1 width=192) (actual time=23.604..23.613 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Nested Loop  (cost=15.16..19360.00 rows=1 width=192) (actual time=0.164..23.273 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.006..0.010 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.000..0.000 rows=25 loops=1)
               ->  Materialize  (cost=15.16..19357.30 rows=1 width=170) (actual time=0.015..4.594 rows=489 loops=5)
                     ->  Nested Loop  (cost=15.16..19357.29 rows=1 width=170) (actual time=0.071..22.520 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.88..19356.01 rows=1 width=34) (actual time=0.064..21.383 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5472.67 rows=853 width=30) (actual time=0.015..6.574 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=14.46..16.27 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=14.02..14.03 rows=1 width=6) (actual time=0.017..0.017 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.97..14.02 rows=1 width=6) (actual time=0.012..0.015 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.97..12.91 rows=4 width=10) (actual time=0.005..0.014 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.83..12.24 rows=4 width=10) (actual time=0.004..0.010 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.41..2.43 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                                       SubPlan 1
                                         ->  Aggregate  (cost=14.02..14.03 rows=1 width=6) (actual time=0.017..0.017 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.97..14.02 rows=1 width=6) (actual time=0.012..0.015 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.97..12.91 rows=4 width=10) (actual time=0.005..0.014 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.83..12.24 rows=4 width=10) (actual time=0.004..0.010 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.41..2.43 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.002..0.002 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning time: 1.676 ms
 Execution time: 23.673 ms
(65 rows)

query 3 run 1
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=306037.10..306037.12 rows=10 width=24) (actual time=2003.042..2003.044 rows=10 loops=1)
   ->  Sort  (cost=306037.10..306844.18 rows=322831 width=24) (actual time=2003.040..2003.041 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=289375.91..299060.84 rows=322831 width=24) (actual time=1984.014..2001.034 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=289375.91..290182.99 rows=322831 width=24) (actual time=1983.999..1985.571 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=56802.01..259836.19 rows=322831 width=24) (actual time=553.016..1977.667 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187573.79 rows=3261890 width=16) (actual time=0.003..1158.736 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 2739342
                           ->  Hash  (cost=54945.97..54945.97 rows=148483 width=12) (actual time=551.684..551.684 rows=146063 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                                 ->  Hash Join  (cost=5855.12..54945.97 rows=148483 width=12) (actual time=53.370..525.544 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=726671 width=16) (actual time=0.003..354.808 rows=722275 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 777725
                                       ->  Hash  (cost=5472.00..5472.00 rows=30650 width=4) (actual time=53.344..53.344 rows=30142 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30650 width=4) (actual time=0.002..49.050 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
 Planning time: 22.556 ms
 Execution time: 2003.839 ms
(28 rows)

SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=306037.10..306037.12 rows=10 width=24) (actual time=1550.414..1550.415 rows=10 loops=1)
   ->  Sort  (cost=306037.10..306844.18 rows=322831 width=24) (actual time=1550.413..1550.413 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=289375.91..299060.84 rows=322831 width=24) (actual time=1531.514..1548.447 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=289375.91..290182.99 rows=322831 width=24) (actual time=1531.500..1533.083 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=56802.01..259836.19 rows=322831 width=24) (actual time=328.013..1525.745 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187573.79 rows=3261890 width=16) (actual time=0.002..942.394 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 2739342
                           ->  Hash  (cost=54945.97..54945.97 rows=148483 width=12) (actual time=327.502..327.502 rows=146063 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                                 ->  Hash Join  (cost=5855.12..54945.97 rows=148483 width=12) (actual time=27.193..304.663 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=726671 width=16) (actual time=0.003..189.350 rows=722275 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 777725
                                       ->  Hash  (cost=5472.00..5472.00 rows=30650 width=4) (actual time=27.169..27.169 rows=30142 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30650 width=4) (actual time=0.002..23.824 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
 Planning time: 1.115 ms
 Execution time: 1550.494 ms
(28 rows)

query 4 run 1
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=122410.35..122410.35 rows=1 width=16) (actual time=2138.481..2138.481 rows=1 loops=1)
   ->  Sort  (cost=122410.35..122410.35 rows=1 width=16) (actual time=2138.479..2138.479 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=122410.33..122410.34 rows=1 width=16) (actual time=2138.459..2138.460 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Merge Semi Join  (cost=32578.13..122117.24 rows=58618 width=16) (actual time=530.543..2120.254 rows=51398 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=32575.80..32722.35 rows=58618 width=20) (actual time=530.098..538.312 rows=55973 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: quicksort  Memory: 5909kB
                           ->  Bitmap Heap Scan on orders  (cost=923.26..27933.53 rows=58618 width=20) (actual time=12.422..516.000 rows=55973 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=23186
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..908.61 rows=58618 width=0) (actual time=9.406..9.406 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using q4_idx_1 on lineitem  (cost=0.43..83465.87 rows=2000368 width=4) (actual time=0.392..1343.195 rows=3793256 loops=1)
 Planning time: 17.957 ms
 Execution time: 2138.548 ms
(19 rows)

SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=122410.35..122410.35 rows=1 width=16) (actual time=901.066..901.066 rows=1 loops=1)
   ->  Sort  (cost=122410.35..122410.35 rows=1 width=16) (actual time=901.064..901.064 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=122410.33..122410.34 rows=1 width=16) (actual time=901.044..901.044 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Merge Semi Join  (cost=32578.13..122117.24 rows=58618 width=16) (actual time=51.686..890.163 rows=51398 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=32575.80..32722.35 rows=58618 width=20) (actual time=51.663..58.912 rows=55973 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: quicksort  Memory: 5909kB
                           ->  Bitmap Heap Scan on orders  (cost=923.26..27933.53 rows=58618 width=20) (actual time=8.887..43.384 rows=55973 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=23186
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..908.61 rows=58618 width=0) (actual time=5.744..5.744 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using q4_idx_1 on lineitem  (cost=0.43..83465.87 rows=2000368 width=4) (actual time=0.013..601.085 rows=3793256 loops=1)
 Planning time: 0.942 ms
 Execution time: 901.121 ms
(19 rows)

query 5 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=158064.63..158064.63 rows=1 width=38) (actual time=1098.943..1098.944 rows=1 loops=1)
   ->  Sort  (cost=158064.63..158064.69 rows=25 width=38) (actual time=1098.942..1098.942 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=158064.19..158064.50 rows=25 width=38) (actual time=1098.925..1098.925 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Hash Join  (cost=10467.16..157989.89 rows=7430 width=38) (actual time=96.112..1088.423 rows=7540 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9994.16..156049.34 rows=185767 width=50) (actual time=90.589..1051.199 rows=182435 loops=1)
                           ->  Hash Join  (cost=9993.60..40942.94 rows=46442 width=38) (actual time=89.285..663.195 rows=45297 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3656.57..33270.70 rows=232209 width=8) (actual time=30.602..543.194 rows=226645 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       Heap Blocks: exact=26127
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3598.52 rows=232209 width=0) (actual time=27.243..27.243 rows=226645 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=58.644..58.644 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                       ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.026..53.358 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.003..37.154 rows=150000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.019..0.019 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.013..0.017 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.001 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.44 rows=4 width=20) (actual time=0.007..0.008 rows=4 loops=45297)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.420..5.420 rows=10000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 519kB
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..4.263 rows=10000 loops=1)
 Planning time: 29.854 ms
 Execution time: 1099.018 ms
(39 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=158064.63..158064.63 rows=1 width=38) (actual time=307.045..307.045 rows=1 loops=1)
   ->  Sort  (cost=158064.63..158064.69 rows=25 width=38) (actual time=307.045..307.045 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=158064.19..158064.50 rows=25 width=38) (actual time=307.027..307.027 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Hash Join  (cost=10467.16..157989.89 rows=7430 width=38) (actual time=57.329..300.433 rows=7540 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9994.16..156049.34 rows=185767 width=50) (actual time=54.740..278.485 rows=182435 loops=1)
                           ->  Hash Join  (cost=9993.60..40942.94 rows=46442 width=38) (actual time=54.696..146.180 rows=45297 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3656.57..33270.70 rows=232209 width=8) (actual time=21.680..73.950 rows=226645 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       Heap Blocks: exact=26127
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3598.52 rows=232209 width=0) (actual time=18.312..18.312 rows=226645 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=32.985..32.985 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                       ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.026..28.576 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..8.097 rows=150000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.019..0.019 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.013..0.017 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.002 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.44 rows=4 width=20) (actual time=0.002..0.002 rows=4 loops=45297)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.568..2.568 rows=10000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 519kB
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.003..1.408 rows=10000 loops=1)
 Planning time: 3.099 ms
 Execution time: 307.124 ms
(39 rows)

query 6 run 1
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=118476.56..118476.57 rows=1 width=12) (actual time=1270.967..1270.967 rows=1 loops=1)
   ->  Aggregate  (cost=118476.56..118476.57 rows=1 width=12) (actual time=1270.965..1270.965 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=23372.70..117868.88 rows=121535 width=12) (actual time=140.429..1198.275 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..23342.32 rows=121535 width=0) (actual time=128.893..128.893 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 12.175 ms
 Execution time: 1271.755 ms
(9 rows)

SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=118476.56..118476.57 rows=1 width=12) (actual time=227.098..227.099 rows=1 loops=1)
   ->  Aggregate  (cost=118476.56..118476.57 rows=1 width=12) (actual time=227.097..227.097 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=23372.70..117868.88 rows=121535 width=12) (actual time=106.686..185.659 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..23342.32 rows=121535 width=0) (actual time=96.063..96.063 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 0.640 ms
 Execution time: 227.142 ms
(9 rows)

query 7 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=238326.85..238326.86 rows=1 width=68) (actual time=3272.917..3272.917 rows=1 loops=1)
   ->  Sort  (cost=238326.85..238334.55 rows=3078 width=68) (actual time=3272.917..3272.917 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=238257.60..238311.46 rows=3078 width=68) (actual time=3272.881..3272.887 rows=4 loops=1)
               Group Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=88807.55..238165.71 rows=6126 width=68) (actual time=833.243..3263.281 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=88427.65..236967.61 rows=147207 width=46) (actual time=827.569..3233.371 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=33040.75..173207.06 rows=1840421 width=24) (actual time=301.033..2475.779 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32580.64 rows=1840421 width=0) (actual time=280.287..280.287 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53886.90..53886.90 rows=120000 width=30) (actual time=526.107..526.107 rows=118477 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                 ->  Hash Join  (cost=5930.90..53886.90 rows=120000 width=30) (actual time=53.320..501.609 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.003..278.467 rows=1500000 loops=1)
                                       ->  Hash  (cost=5780.90..5780.90 rows=12000 width=30) (actual time=53.305..53.305 rows=11896 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5780.90 rows=12000 width=30) (actual time=0.019..51.139 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..37.310 rows=150000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.015..0.015 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.012 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=369.90..369.90 rows=800 width=30) (actual time=4.939..4.939 rows=794 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 57kB
                           ->  Hash Join  (cost=1.40..369.90 rows=800 width=30) (actual time=0.013..4.824 rows=794 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..3.893 rows=10000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.009..0.009 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.008 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Planning time: 27.496 ms
 Execution time: 3273.794 ms
(44 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=238326.85..238326.86 rows=1 width=68) (actual time=1013.695..1013.696 rows=1 loops=1)
   ->  Sort  (cost=238326.85..238334.55 rows=3078 width=68) (actual time=1013.693..1013.693 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=238257.60..238311.46 rows=3078 width=68) (actual time=1013.659..1013.665 rows=4 loops=1)
               Group Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=88807.55..238165.71 rows=6126 width=68) (actual time=534.105..1007.878 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=88427.65..236967.61 rows=147207 width=46) (actual time=532.160..990.439 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=33040.75..173207.06 rows=1840421 width=24) (actual time=228.991..493.486 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32580.64 rows=1840421 width=0) (actual time=208.512..208.512 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53886.90..53886.90 rows=120000 width=30) (actual time=302.895..302.895 rows=118477 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                 ->  Hash Join  (cost=5930.90..53886.90 rows=120000 width=30) (actual time=27.515..283.224 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.003..76.509 rows=1500000 loops=1)
                                       ->  Hash  (cost=5780.90..5780.90 rows=12000 width=30) (actual time=27.502..27.502 rows=11896 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5780.90 rows=12000 width=30) (actual time=0.016..26.032 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.001..7.920 rows=150000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.013 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.011 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=369.90..369.90 rows=800 width=30) (actual time=1.867..1.867 rows=794 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 57kB
                           ->  Hash Join  (cost=1.40..369.90 rows=800 width=30) (actual time=0.014..1.769 rows=794 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..0.545 rows=10000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.010..0.010 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.009 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Planning time: 2.827 ms
 Execution time: 1013.800 ms
(44 rows)

query 8 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=61007.71..61007.71 rows=1 width=42) (actual time=1203.571..1203.571 rows=1 loops=1)
   ->  Sort  (cost=61007.71..61009.54 rows=734 width=42) (actual time=1203.569..1203.569 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=60987.52..61004.04 rows=734 width=42) (actual time=1203.557..1203.558 rows=2 loops=1)
               Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=50754.79..60938.74 rows=2439 width=42) (actual time=731.255..1197.191 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=50753.23..60891.45 rows=2439 width=20) (actual time=730.589..1193.307 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=50305.23..60409.91 rows=2439 width=20) (actual time=725.023..1186.330 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.98..9931.28 rows=39997 width=20) (actual time=2.409..452.318 rows=39694 loops=1)
                                       ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5435.75 rows=1333 width=4) (actual time=1.305..35.397 rows=1320 loops=1)
                                             Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.06 rows=31 width=24) (actual time=0.253..0.310 rows=30 loops=1320)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Heap Fetches: 0
                                 ->  Hash  (cost=49160.69..49160.69 rows=91485 width=8) (actual time=722.485..722.485 rows=91179 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 4586kB
                                       ->  Hash Join  (cost=13538.09..49160.69 rows=91485 width=8) (actual time=111.629..704.102 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=7201.05..40193.46 rows=457427 width=12) (actual time=53.366..556.526 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=26131
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7086.70 rows=457427 width=0) (actual time=49.967..49.967 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=58.192..58.192 rows=29952 loops=1)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                                   ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.022..53.888 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..37.837 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.017..0.017 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.012..0.017 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.001 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.555..5.555 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..4.223 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.009..0.009 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.004 rows=25 loops=1)
 Planning time: 32.920 ms
 Execution time: 1203.673 ms
(51 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=61007.71..61007.71 rows=1 width=42) (actual time=247.437..247.437 rows=1 loops=1)
   ->  Sort  (cost=61007.71..61009.54 rows=734 width=42) (actual time=247.436..247.436 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=60987.52..61004.04 rows=734 width=42) (actual time=247.424..247.424 rows=2 loops=1)
               Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=50754.79..60938.74 rows=2439 width=42) (actual time=218.253..245.335 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=50753.23..60891.45 rows=2439 width=20) (actual time=218.220..244.378 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=50305.23..60409.91 rows=2439 width=20) (actual time=215.502..240.917 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.98..9931.28 rows=39997 width=20) (actual time=0.059..19.303 rows=39694 loops=1)
                                       ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5435.75 rows=1333 width=4) (actual time=0.044..7.069 rows=1320 loops=1)
                                             Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.06 rows=31 width=24) (actual time=0.003..0.007 rows=30 loops=1320)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Heap Fetches: 0
                                 ->  Hash  (cost=49160.69..49160.69 rows=91485 width=8) (actual time=215.367..215.367 rows=91179 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 4586kB
                                       ->  Hash Join  (cost=13538.09..49160.69 rows=91485 width=8) (actual time=70.718..202.157 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=7201.05..40193.46 rows=457427 width=12) (actual time=38.750..109.423 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=26131
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7086.70 rows=457427 width=0) (actual time=35.348..35.348 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=31.941..31.941 rows=29952 loops=1)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                                   ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.018..28.716 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.001..8.183 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.014..0.014 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.009..0.014 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.001 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.707..2.707 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..1.430 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.009..0.009 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.005 rows=25 loops=1)
 Planning time: 3.362 ms
 Execution time: 247.533 ms
(51 rows)

query 9 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=56200.62..56200.66 rows=1 width=53) (actual time=7665.696..7665.696 rows=1 loops=1)
   ->  GroupAggregate  (cost=56200.62..56203.24 rows=70 width=53) (actual time=7665.695..7665.695 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=56200.62..56200.79 rows=70 width=53) (actual time=7664.400..7664.671 rows=1210 loops=1)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
               Sort Method: external merge  Disk: 24040kB
               ->  Nested Loop  (cost=3.22..56198.47 rows=70 width=53) (actual time=3.642..6491.543 rows=325928 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 7822272
                     ->  Nested Loop  (cost=3.22..56170.56 rows=70 width=31) (actual time=3.605..5428.958 rows=325928 loops=1)
                           ->  Nested Loop  (cost=2.80..55886.59 rows=70 width=31) (actual time=3.028..1709.745 rows=325928 loops=1)
                                 ->  Merge Join  (cost=2.39..55730.32 rows=70 width=35) (actual time=2.820..1106.048 rows=325928 loops=1)
                                       Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                       Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                       Rows Removed by Join Filter: 977784
                                       ->  Nested Loop  (cost=0.98..26378.43 rows=181863 width=33) (actual time=2.337..656.675 rows=325928 loops=1)
                                             ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6454.42 rows=6061 width=4) (actual time=0.238..57.494 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 189120
                                                   Heap Fetches: 0
                                             ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.98 rows=31 width=29) (actual time=0.039..0.052 rows=30 loops=10880)
                                                   Index Cond: (l_partkey = part.p_partkey)
                                                   Heap Fetches: 0
                                       ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..18168.42 rows=800000 width=14) (actual time=0.459..223.981 rows=2060177 loops=1)
                                             Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.41..2.22 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                                       Heap Fetches: 0
                           ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.05 rows=1 width=8) (actual time=0.011..0.011 rows=1 loops=325928)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=325928)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.004..0.008 rows=25 loops=1)
 Planning time: 36.308 ms
 Execution time: 7669.009 ms
(34 rows)

SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=56200.62..56200.66 rows=1 width=53) (actual time=4151.214..4151.215 rows=1 loops=1)
   ->  GroupAggregate  (cost=56200.62..56203.24 rows=70 width=53) (actual time=4151.214..4151.214 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=56200.62..56200.79 rows=70 width=53) (actual time=4149.991..4150.272 rows=1210 loops=1)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
               Sort Method: external merge  Disk: 24040kB
               ->  Nested Loop  (cost=3.22..56198.47 rows=70 width=53) (actual time=0.115..2997.394 rows=325928 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 7822272
                     ->  Nested Loop  (cost=3.22..56170.56 rows=70 width=31) (actual time=0.094..2020.345 rows=325928 loops=1)
                           ->  Nested Loop  (cost=2.80..55886.59 rows=70 width=31) (actual time=0.087..1081.141 rows=325928 loops=1)
                                 ->  Merge Join  (cost=2.39..55730.32 rows=70 width=35) (actual time=0.079..559.979 rows=325928 loops=1)
                                       Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                       Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                       Rows Removed by Join Filter: 977784
                                       ->  Nested Loop  (cost=0.98..26378.43 rows=181863 width=33) (actual time=0.050..177.154 rows=325928 loops=1)
                                             ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6454.42 rows=6061 width=4) (actual time=0.035..42.125 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 189120
                                                   Heap Fetches: 0
                                             ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.98 rows=31 width=29) (actual time=0.004..0.009 rows=30 loops=10880)
                                                   Index Cond: (l_partkey = part.p_partkey)
                                                   Heap Fetches: 0
                                       ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..18168.42 rows=800000 width=14) (actual time=0.019..182.967 rows=2060177 loops=1)
                                             Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.41..2.22 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                                       Heap Fetches: 0
                           ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.05 rows=1 width=8) (actual time=0.002..0.003 rows=1 loops=325928)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=325928)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.006 rows=25 loops=1)
 Planning time: 4.407 ms
 Execution time: 4154.629 ms
(34 rows)

query 10 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=165713.02..165713.07 rows=20 width=182) (actual time=1570.594..1570.598 rows=20 loops=1)
   ->  Sort  (cost=165713.02..165852.52 rows=55800 width=182) (actual time=1570.593..1570.595 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=163530.70..164228.20 rows=55800 width=182) (actual time=1543.862..1561.208 rows=38076 loops=1)
               Group Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
               ->  Hash Join  (cost=35570.47..162135.70 rows=55800 width=182) (actual time=602.075..1399.917 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=35568.90..161366.89 rows=55800 width=160) (actual time=601.844..1378.813 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=28596.90..153627.64 rows=55800 width=16) (actual time=514.471..1254.711 rows=114347 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..118963.53 rows=1469270 width=16) (actual time=0.836..578.663 rows=1478870 loops=1)
                                       Index Cond: (l_returnflag = 'R'::bpchar)
                                       Heap Fetches: 0
                                 ->  Hash  (cost=27884.12..27884.12 rows=56978 width=8) (actual time=513.538..513.538 rows=57111 loops=1)
                                       Buckets: 65536  Batches: 1  Memory Usage: 2743kB
                                       ->  Bitmap Heap Scan on orders  (cost=898.45..27884.12 rows=56978 width=8) (actual time=12.085..497.843 rows=57111 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=23377
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..884.21 rows=56978 width=0) (actual time=9.020..9.020 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=87.072..87.072 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.004..49.820 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.222..0.222 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.006 rows=25 loops=1)
 Planning time: 28.691 ms
 Execution time: 1571.461 ms
(30 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=165713.02..165713.07 rows=20 width=182) (actual time=814.883..814.888 rows=20 loops=1)
   ->  Sort  (cost=165713.02..165852.52 rows=55800 width=182) (actual time=814.882..814.884 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=163530.70..164228.20 rows=55800 width=182) (actual time=788.107..805.398 rows=38076 loops=1)
               Group Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
               ->  Hash Join  (cost=35570.47..162135.70 rows=55800 width=182) (actual time=108.467..658.910 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=35568.90..161366.89 rows=55800 width=160) (actual time=108.454..638.960 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=28596.90..153627.64 rows=55800 width=16) (actual time=47.765..542.924 rows=114347 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..118963.53 rows=1469270 width=16) (actual time=0.041..353.220 rows=1478870 loops=1)
                                       Index Cond: (l_returnflag = 'R'::bpchar)
                                       Heap Fetches: 0
                                 ->  Hash  (cost=27884.12..27884.12 rows=56978 width=8) (actual time=47.669..47.669 rows=57111 loops=1)
                                       Buckets: 65536  Batches: 1  Memory Usage: 2743kB
                                       ->  Bitmap Heap Scan on orders  (cost=898.45..27884.12 rows=56978 width=8) (actual time=8.306..40.516 rows=57111 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=23377
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..884.21 rows=56978 width=0) (actual time=5.318..5.318 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=60.152..60.152 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.004..24.863 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.010..0.010 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.007 rows=25 loops=1)
 Planning time: 1.712 ms
 Execution time: 815.060 ms
(30 rows)

query 11 run 1
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29295.21..29295.21 rows=1 width=14) (actual time=760.616..760.616 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=14020.17..14020.18 rows=1 width=10) (actual time=30.834..30.834 rows=1 loops=1)
           ->  Nested Loop  (cost=7.81..13780.17 rows=32000 width=10) (actual time=1.610..20.459 rows=32880 loops=1)
                 ->  Nested Loop  (cost=7.38..234.45 rows=400 width=4) (actual time=1.603..1.825 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.007 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=7.38..229.14 rows=400 width=8) (actual time=1.596..1.781 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=1.565..1.565 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..33.06 rows=80 width=14) (actual time=0.003..0.036 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=15275.03..15355.03 rows=32000 width=14) (actual time=760.614..760.614 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=14555.03..15115.03 rows=32000 width=14) (actual time=751.764..760.470 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=0.42..13995.03 rows=32000 width=14) (actual time=0.230..688.704 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..449.31 rows=400 width=4) (actual time=0.064..4.107 rows=411 loops=1)
                           Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                           Rows Removed by Join Filter: 9589
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..3.021 rows=10000 loops=1)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..33.06 rows=80 width=18) (actual time=0.102..1.648 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 18.133 ms
 Execution time: 761.625 ms
(34 rows)

SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29295.21..29295.21 rows=1 width=14) (actual time=84.144..84.144 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=14020.17..14020.18 rows=1 width=10) (actual time=28.759..28.759 rows=1 loops=1)
           ->  Nested Loop  (cost=7.81..13780.17 rows=32000 width=10) (actual time=0.068..18.363 rows=32880 loops=1)
                 ->  Nested Loop  (cost=7.38..234.45 rows=400 width=4) (actual time=0.062..0.290 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.007 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=7.38..229.14 rows=400 width=8) (actual time=0.053..0.232 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.036..0.036 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..33.06 rows=80 width=14) (actual time=0.003..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=15275.03..15355.03 rows=32000 width=14) (actual time=84.144..84.144 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=14555.03..15115.03 rows=32000 width=14) (actual time=75.075..84.023 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=0.42..13995.03 rows=32000 width=14) (actual time=0.031..28.761 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..449.31 rows=400 width=4) (actual time=0.026..1.781 rows=411 loops=1)
                           Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                           Rows Removed by Join Filter: 9589
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..0.560 rows=10000 loops=1)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..33.06 rows=80 width=18) (actual time=0.004..0.055 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 0.973 ms
 Execution time: 84.223 ms
(34 rows)

query 12 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=115541.88..115541.88 rows=1 width=27) (actual time=4003.773..4003.774 rows=1 loops=1)
   ->  Sort  (cost=115541.88..115541.88 rows=1 width=27) (actual time=4003.771..4003.771 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=115541.86..115541.87 rows=1 width=27) (actual time=4003.759..4003.759 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Merge Join  (cost=54001.20..115041.38 rows=28599 width=27) (actual time=3495.900..3983.678 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.289..388.941 rows=1499957 loops=1)
                     ->  Sort  (cost=54000.77..54072.28 rows=28604 width=15) (actual time=3495.553..3499.373 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 2219kB
                           ->  Index Scan using q12_idx_1 on lineitem  (cost=0.42..51883.51 rows=28604 width=15) (actual time=2.083..3472.500 rows=30953 loops=1)
                                 Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Planning time: 21.577 ms
 Execution time: 4003.847 ms
(16 rows)

SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=115541.88..115541.88 rows=1 width=27) (actual time=406.265..406.265 rows=1 loops=1)
   ->  Sort  (cost=115541.88..115541.88 rows=1 width=27) (actual time=406.263..406.263 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=115541.86..115541.87 rows=1 width=27) (actual time=406.252..406.253 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Merge Join  (cost=54001.20..115041.38 rows=28599 width=27) (actual time=102.460..391.288 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.005..194.580 rows=1499957 loops=1)
                     ->  Sort  (cost=54000.77..54072.28 rows=28604 width=15) (actual time=102.437..105.647 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 2219kB
                           ->  Index Scan using q12_idx_1 on lineitem  (cost=0.42..51883.51 rows=28604 width=15) (actual time=0.018..95.136 rows=30953 loops=1)
                                 Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Planning time: 1.002 ms
 Execution time: 406.324 ms
(16 rows)

query 13 run 1
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81709.61..81709.61 rows=1 width=8) (actual time=1629.846..1629.846 rows=1 loops=1)
   ->  Sort  (cost=81709.61..81710.11 rows=200 width=8) (actual time=1629.845..1629.845 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=81706.61..81708.61 rows=200 width=8) (actual time=1629.821..1629.825 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=77956.61..79456.61 rows=150000 width=8) (actual time=1583.939..1610.612 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4953.42..70457.36 rows=1499850 width=8) (actual time=33.425..1127.151 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.357..644.748 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=32.743..32.743 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.940..17.096 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 13.366 ms
 Execution time: 1630.487 ms
(19 rows)

SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81709.61..81709.61 rows=1 width=8) (actual time=1432.317..1432.318 rows=1 loops=1)
   ->  Sort  (cost=81709.61..81710.11 rows=200 width=8) (actual time=1432.316..1432.316 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=81706.61..81708.61 rows=200 width=8) (actual time=1432.294..1432.298 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=77956.61..79456.61 rows=150000 width=8) (actual time=1386.456..1412.840 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4953.42..70457.36 rows=1499850 width=8) (actual time=28.989..958.909 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.009..503.913 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=28.675..28.675 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.039..13.030 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 0.577 ms
 Execution time: 1432.958 ms
(19 rows)

query 14 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=82887.36..82887.38 rows=1 width=33) (actual time=1047.713..1047.713 rows=1 loops=1)
   ->  Aggregate  (cost=82887.36..82887.38 rows=1 width=33) (actual time=1047.711..1047.711 rows=1 loops=1)
         ->  Hash Join  (cost=9851.27..81668.60 rows=69643 width=33) (actual time=108.490..954.345 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1252.27..72112.01 rows=69643 width=16) (actual time=22.108..805.128 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1234.86 rows=69643 width=0) (actual time=15.605..15.605 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=85.961..85.961 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.005..54.013 rows=200000 loops=1)
 Planning time: 24.695 ms
 Execution time: 1048.403 ms
(14 rows)

SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=82887.36..82887.38 rows=1 width=33) (actual time=204.683..204.683 rows=1 loops=1)
   ->  Aggregate  (cost=82887.36..82887.38 rows=1 width=33) (actual time=204.682..204.682 rows=1 loops=1)
         ->  Hash Join  (cost=9851.27..81668.60 rows=69643 width=33) (actual time=71.617..157.195 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1252.27..72112.01 rows=69643 width=16) (actual time=15.319..67.360 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1234.86 rows=69643 width=0) (actual time=9.479..9.479 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=55.907..55.907 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.004..26.925 rows=200000 loops=1)
 Planning time: 0.899 ms
 Execution time: 204.752 ms
(14 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=245683.16..245684.41 rows=1 width=103) (actual time=1504.367..1504.367 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=121994.30..121994.31 rows=1 width=32) (actual time=226.740..226.740 rows=1 loops=1)
           ->  HashAggregate  (cost=121985.00..121989.65 rows=372 width=16) (actual time=224.390..226.054 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4016.95..119748.40 rows=223660 width=16) (actual time=33.044..97.324 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3961.03 rows=223660 width=0) (actual time=23.184..23.184 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=123688.85..124153.43 rows=372 width=103) (actual time=1504.365..1504.365 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..434.29 rows=10000 width=71) (actual time=0.414..4.564 rows=8449 loops=1)
         ->  Sort  (cost=123688.56..123689.49 rows=372 width=36) (actual time=1499.346..1499.346 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=123662.45..123672.68 rows=372 width=36) (actual time=1498.536..1499.336 rows=1 loops=1)
                     ->  HashAggregate  (cost=123662.45..123668.96 rows=372 width=16) (actual time=1498.535..1499.335 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=4016.95..119748.40 rows=223660 width=16) (actual time=46.081..1055.409 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3961.03 rows=223660 width=0) (actual time=35.398..35.398 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 16.466 ms
 Execution time: 1505.074 ms
(28 rows)

DROP VIEW
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=245683.16..245684.41 rows=1 width=103) (actual time=489.525..489.525 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=121994.30..121994.31 rows=1 width=32) (actual time=226.168..226.168 rows=1 loops=1)
           ->  HashAggregate  (cost=121985.00..121989.65 rows=372 width=16) (actual time=223.794..225.530 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4016.95..119748.40 rows=223660 width=16) (actual time=32.338..96.378 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3961.03 rows=223660 width=0) (actual time=22.654..22.654 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=123688.85..124153.43 rows=372 width=103) (actual time=489.524..489.524 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..434.29 rows=10000 width=71) (actual time=0.009..1.314 rows=8449 loops=1)
         ->  Sort  (cost=123688.56..123689.49 rows=372 width=36) (actual time=487.765..487.765 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=123662.45..123672.68 rows=372 width=36) (actual time=486.958..487.760 rows=1 loops=1)
                     ->  HashAggregate  (cost=123662.45..123668.96 rows=372 width=16) (actual time=486.958..487.759 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=4016.95..119748.40 rows=223660 width=16) (actual time=34.836..125.426 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3961.03 rows=223660 width=0) (actual time=24.963..24.963 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 0.918 ms
 Execution time: 489.603 ms
(28 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=35433.50..35433.50 rows=1 width=40) (actual time=739.154..739.154 rows=1 loops=1)
   ->  Sort  (cost=35433.50..35440.80 rows=2921 width=40) (actual time=739.154..739.154 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=34688.68..35418.89 rows=2921 width=40) (actual time=688.607..736.362 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=34688.68..34828.88 rows=56080 width=40) (actual time=688.586..698.087 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9812.51..30265.31 rows=56080 width=40) (actual time=96.223..305.005 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..18740.43 rows=400000 width=8) (actual time=6.613..143.352 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.463..5.471 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29207 width=40) (actual time=89.569..89.569 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29207 width=40) (actual time=0.008..83.919 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning time: 14.199 ms
 Execution time: 739.219 ms
(26 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=35433.50..35433.50 rows=1 width=40) (actual time=687.188..687.188 rows=1 loops=1)
   ->  Sort  (cost=35433.50..35440.80 rows=2921 width=40) (actual time=687.187..687.187 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=34688.68..35418.89 rows=2921 width=40) (actual time=636.373..684.347 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=34688.68..34828.88 rows=56080 width=40) (actual time=636.353..646.127 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9812.51..30265.31 rows=56080 width=40) (actual time=62.965..252.583 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..18740.43 rows=400000 width=8) (actual time=2.234..122.368 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.084..2.207 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29207 width=40) (actual time=60.692..60.692 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29207 width=40) (actual time=0.007..56.132 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning time: 0.780 ms
 Execution time: 687.236 ms
(26 rows)

query 17 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=179285.38..179285.39 rows=1 width=8) (actual time=2057.102..2057.103 rows=1 loops=1)
   ->  Aggregate  (cost=179285.38..179285.39 rows=1 width=8) (actual time=2057.101..2057.101 rows=1 loops=1)
         ->  Nested Loop  (cost=7107.68..179280.47 rows=1961 width=8) (actual time=59.079..2056.711 rows=592 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=7107.12..178715.86 rows=196 width=40) (actual time=58.508..1947.769 rows=208 loops=1)
                     Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=0.43..169168.15 rows=195044 width=9) (actual time=0.866..1883.482 rows=199276 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136236.98 rows=6001103 width=9) (actual time=0.821..969.233 rows=5979358 loops=1)
                                 Heap Fetches: 0
                     ->  Sort  (cost=7106.69..7107.19 rows=201 width=4) (actual time=51.590..51.710 rows=208 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 34kB
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=201 width=4) (actual time=0.688..51.498 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.76 rows=10 width=17) (actual time=0.485..0.521 rows=3 loops=208)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning time: 17.103 ms
 Execution time: 2057.148 ms
(21 rows)

SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=179285.38..179285.39 rows=1 width=8) (actual time=1704.759..1704.760 rows=1 loops=1)
   ->  Aggregate  (cost=179285.38..179285.39 rows=1 width=8) (actual time=1704.758..1704.758 rows=1 loops=1)
         ->  Nested Loop  (cost=7107.68..179280.47 rows=1961 width=8) (actual time=30.236..1704.659 rows=592 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=7107.12..178715.86 rows=196 width=40) (actual time=30.218..1703.015 rows=208 loops=1)
                     Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=0.43..169168.15 rows=195044 width=9) (actual time=0.040..1667.686 rows=199276 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136236.98 rows=6001103 width=9) (actual time=0.017..783.047 rows=5979358 loops=1)
                                 Heap Fetches: 0
                     ->  Sort  (cost=7106.69..7107.19 rows=201 width=4) (actual time=24.934..24.969 rows=208 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 34kB
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=201 width=4) (actual time=0.085..24.895 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.76 rows=10 width=17) (actual time=0.006..0.007 rows=3 loops=208)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning time: 1.077 ms
 Execution time: 1704.799 ms
(21 rows)

query 18 run 1
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=906859.19..906862.19 rows=100 width=44) (actual time=2823.955..2823.978 rows=9 loops=1)
   ->  GroupAggregate  (cost=906859.19..996859.19 rows=3000000 width=44) (actual time=2823.955..2823.978 rows=9 loops=1)
         Group Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
         ->  Sort  (cost=906859.19..914359.19 rows=3000000 width=44) (actual time=2823.947..2823.948 rows=63 loops=1)
               Sort Key: orders.o_totalprice DESC, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 29kB
               ->  Hash Join  (cost=6976.52..518191.22 rows=3000000 width=44) (actual time=707.025..2823.869 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=4.52..469969.22 rows=3000000 width=25) (actual time=639.608..2756.424 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.86..286867.96 rows=750000 width=24) (actual time=482.266..2155.999 rows=9 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.262..312.494 rows=1201687 loops=1)
                                 ->  Materialize  (cost=0.43..207500.08 rows=1500276 width=4) (actual time=377.980..1775.927 rows=9 loops=1)
                                       ->  GroupAggregate  (cost=0.43..188746.63 rows=1500276 width=9) (actual time=377.977..1775.911 rows=9 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 1499991
                                             ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136236.98 rows=6001103 width=9) (actual time=0.482..668.830 rows=6001215 loops=1)
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136236.98 rows=6001103 width=9) (actual time=0.010..396.092 rows=4807580 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=67.065..67.065 rows=150000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.005..42.650 rows=150000 loops=1)
 Planning time: 22.841 ms
 Execution time: 2824.069 ms
(27 rows)

SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=906859.19..906862.19 rows=100 width=44) (actual time=2436.386..2436.409 rows=9 loops=1)
   ->  GroupAggregate  (cost=906859.19..996859.19 rows=3000000 width=44) (actual time=2436.384..2436.407 rows=9 loops=1)
         Group Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
         ->  Sort  (cost=906859.19..914359.19 rows=3000000 width=44) (actual time=2436.377..2436.380 rows=63 loops=1)
               Sort Key: orders.o_totalprice DESC, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 29kB
               ->  Hash Join  (cost=6976.52..518191.22 rows=3000000 width=44) (actual time=587.770..2436.300 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=4.52..469969.22 rows=3000000 width=25) (actual time=547.540..2396.045 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.86..286867.96 rows=750000 width=24) (actual time=392.855..1807.341 rows=9 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.005..151.802 rows=1201687 loops=1)
                                 ->  Materialize  (cost=0.43..207500.08 rows=1500276 width=4) (actual time=335.605..1590.383 rows=9 loops=1)
                                       ->  GroupAggregate  (cost=0.43..188746.63 rows=1500276 width=9) (actual time=335.603..1590.373 rows=9 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 1499991
                                             ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136236.98 rows=6001103 width=9) (actual time=0.026..496.968 rows=6001215 loops=1)
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136236.98 rows=6001103 width=9) (actual time=0.008..384.189 rows=4807580 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=39.890..39.890 rows=150000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.004..18.323 rows=150000 loops=1)
 Planning time: 1.561 ms
 Execution time: 2436.495 ms
(27 rows)

query 19 run 1
SET
SET


 Limit  (cost=14236.67..14236.68 rows=1 width=12) (actual time=343.673..343.674 rows=1 loops=1)
   ->  Aggregate  (cost=14236.67..14236.68 rows=1 width=12) (actual time=343.673..343.673 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..14235.86 rows=108 width=12) (actual time=1.914..343.315 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=474 width=30) (actual time=0.841..100.444 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.44 rows=1 width=21) (actual time=0.457..0.478 rows=0 loops=507)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning time: 22.453 ms
 Execution time: 343.922 ms
(13 rows)

SET
SET


 Limit  (cost=14236.67..14236.68 rows=1 width=12) (actual time=61.542..61.542 rows=1 loops=1)
   ->  Aggregate  (cost=14236.67..14236.68 rows=1 width=12) (actual time=61.542..61.542 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..14235.86 rows=108 width=12) (actual time=0.322..61.429 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=474 width=30) (actual time=0.251..56.982 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.44 rows=1 width=21) (actual time=0.008..0.008 rows=0 loops=507)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning time: 2.717 ms
 Execution time: 61.791 ms
(13 rows)

query 20 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=169450.84..169450.84 rows=1 width=51) (actual time=3011.252..3011.252 rows=1 loops=1)
   ->  Sort  (cost=169450.84..169451.34 rows=200 width=51) (actual time=3011.251..3011.251 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=160457.82..169449.84 rows=200 width=51) (actual time=2821.631..3011.054 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1972713
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.360..3.770 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.348..2.860 rows=10000 loops=1)
               ->  Materialize  (cost=160457.82..168964.54 rows=6 width=8) (actual time=5.743..6.580 rows=4504 loops=438)
                     ->  Hash Join  (cost=160457.82..168964.51 rows=6 width=8) (actual time=2515.485..2818.840 rows=5898 loops=1)
                           Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 16
                           ->  HashAggregate  (cost=149762.35..151141.81 rows=91964 width=13) (actual time=2455.049..2709.136 rows=544869 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Bitmap Heap Scan on lineitem  (cost=16510.65..142865.12 rows=919631 width=13) (actual time=157.779..1889.028 rows=913487 loops=1)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       Heap Blocks: exact=104951
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16280.74 rows=919631 width=0) (actual time=137.475..137.475 rows=913487 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Hash  (cost=10579.12..10579.12 rows=7757 width=16) (actual time=60.372..60.372 rows=8748 loops=1)
                                 Buckets: 16384 (originally 8192)  Batches: 1 (originally 1)  Memory Usage: 539kB
                                 ->  Nested Loop  (cost=0.84..10579.12 rows=7757 width=16) (actual time=0.465..58.630 rows=8748 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6454.42 rows=2020 width=4) (actual time=0.253..33.096 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..2.00 rows=4 width=12) (actual time=0.010..0.011 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning time: 23.219 ms
 Execution time: 3011.948 ms
(38 rows)

SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=169450.84..169450.84 rows=1 width=51) (actual time=1319.943..1319.944 rows=1 loops=1)
   ->  Sort  (cost=169450.84..169451.34 rows=200 width=51) (actual time=1319.943..1319.943 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=160457.82..169449.84 rows=200 width=51) (actual time=1131.530..1319.777 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1972713
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.010..1.754 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.001..0.569 rows=10000 loops=1)
               ->  Materialize  (cost=160457.82..168964.54 rows=6 width=8) (actual time=1.887..2.723 rows=4504 loops=438)
                     ->  Hash Join  (cost=160457.82..168964.51 rows=6 width=8) (actual time=826.308..1129.171 rows=5898 loops=1)
                           Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 16
                           ->  HashAggregate  (cost=149762.35..151141.81 rows=91964 width=13) (actual time=795.632..1049.584 rows=544869 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Bitmap Heap Scan on lineitem  (cost=16510.65..142865.12 rows=919631 width=13) (actual time=116.868..307.737 rows=913487 loops=1)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       Heap Blocks: exact=104951
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16280.74 rows=919631 width=0) (actual time=96.805..96.805 rows=913487 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Hash  (cost=10579.12..10579.12 rows=7757 width=16) (actual time=30.631..30.631 rows=8748 loops=1)
                                 Buckets: 16384 (originally 8192)  Batches: 1 (originally 1)  Memory Usage: 539kB
                                 ->  Nested Loop  (cost=0.84..10579.12 rows=7757 width=16) (actual time=0.048..29.304 rows=8748 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6454.42 rows=2020 width=4) (actual time=0.032..23.152 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..2.00 rows=4 width=12) (actual time=0.002..0.002 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning time: 1.665 ms
 Execution time: 1320.633 ms
(38 rows)

query 21 run 1
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=224469.08..224469.08 rows=1 width=26) (actual time=2388.676..2388.686 rows=100 loops=1)
   ->  Sort  (cost=224469.08..224469.08 rows=1 width=26) (actual time=2388.675..2388.681 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=224469.06..224469.07 rows=1 width=26) (actual time=2388.166..2388.207 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Nested Loop Anti Join  (cost=98524.57..224469.05 rows=1 width=26) (actual time=1737.512..2385.724 rows=4227 loops=1)
                     ->  Nested Loop Semi Join  (cost=98524.14..224464.60 rows=1 width=34) (actual time=1737.260..2257.102 rows=73962 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 8252
                           ->  Merge Join  (cost=98523.71..127960.48 rows=39104 width=38) (actual time=1736.891..1958.022 rows=76644 loops=1)
                                 Merge Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Sort  (cost=98523.27..98723.31 rows=80015 width=34) (actual time=1736.474..1755.749 rows=159165 loops=1)
                                       Sort Key: l1.l_orderkey
                                       Sort Method: quicksort  Memory: 18579kB
                                       ->  Hash Join  (cost=239.88..92006.85 rows=80015 width=34) (actual time=5.746..1698.681 rows=159165 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Index Scan using q4_idx_1 on lineitem l1  (cost=0.43..83465.87 rows=2000368 width=8) (actual time=0.273..1365.054 rows=3793296 loops=1)
                                             ->  Hash  (cost=234.45..234.45 rows=400 width=30) (actual time=5.397..5.397 rows=421 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                   ->  Nested Loop  (cost=7.38..234.45 rows=400 width=30) (actual time=0.921..5.296 rows=421 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=7.38..229.14 rows=400 width=34) (actual time=0.913..5.227 rows=421 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=184
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.873..0.873 rows=421 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..26814.43 rows=733200 width=4) (actual time=0.411..134.174 rows=733203 loops=1)
                                       Index Cond: (o_orderstatus = 'F'::bpchar)
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.004..0.004 rows=1 loops=76644)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
                     ->  Index Only Scan using q21_idx_1 on lineitem l3  (cost=0.43..2.44 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=73962)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 2
                           Heap Fetches: 0
 Planning time: 22.761 ms
 Execution time: 2388.780 ms
(42 rows)

SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=224469.08..224469.08 rows=1 width=26) (actual time=1302.937..1302.947 rows=100 loops=1)
   ->  Sort  (cost=224469.08..224469.08 rows=1 width=26) (actual time=1302.937..1302.942 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=224469.06..224469.07 rows=1 width=26) (actual time=1302.433..1302.480 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Nested Loop Anti Join  (cost=98524.57..224469.05 rows=1 width=26) (actual time=883.737..1300.836 rows=4227 loops=1)
                     ->  Nested Loop Semi Join  (cost=98524.14..224464.60 rows=1 width=34) (actual time=883.631..1190.578 rows=73962 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 8252
                           ->  Merge Join  (cost=98523.71..127960.48 rows=39104 width=38) (actual time=883.614..1058.795 rows=76644 loops=1)
                                 Merge Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Sort  (cost=98523.27..98723.31 rows=80015 width=34) (actual time=883.566..897.016 rows=159165 loops=1)
                                       Sort Key: l1.l_orderkey
                                       Sort Method: quicksort  Memory: 18579kB
                                       ->  Hash Join  (cost=239.88..92006.85 rows=80015 width=34) (actual time=0.449..858.708 rows=159165 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Index Scan using q4_idx_1 on lineitem l1  (cost=0.43..83465.87 rows=2000368 width=8) (actual time=0.005..553.547 rows=3793296 loops=1)
                                             ->  Hash  (cost=234.45..234.45 rows=400 width=30) (actual time=0.425..0.425 rows=421 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                   ->  Nested Loop  (cost=7.38..234.45 rows=400 width=30) (actual time=0.063..0.366 rows=421 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=7.38..229.14 rows=400 width=34) (actual time=0.055..0.309 rows=421 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=184
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.037..0.037 rows=421 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..26814.43 rows=733200 width=4) (actual time=0.043..102.247 rows=733203 loops=1)
                                       Index Cond: (o_orderstatus = 'F'::bpchar)
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.001..0.001 rows=1 loops=76644)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
                     ->  Index Only Scan using q21_idx_1 on lineitem l3  (cost=0.43..2.44 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=73962)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 2
                           Heap Fetches: 0
 Planning time: 2.271 ms
 Execution time: 1303.250 ms
(42 rows)

query 22 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16177.15..16177.15 rows=1 width=22) (actual time=248.835..248.835 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.43..7546.44 rows=1 width=6) (actual time=112.985..112.985 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4770 width=6) (actual time=0.008..106.723 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  Sort  (cost=8630.71..8632.53 rows=727 width=22) (actual time=248.834..248.834 rows=1 loops=1)
         Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=8614.36..8627.08 rows=727 width=22) (actual time=248.813..248.816 rows=7 loops=1)
               Group Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Nested Loop Anti Join  (cost=0.43..8608.90 rows=727 width=22) (actual time=113.045..245.728 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=113.016..173.734 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.38 rows=17 width=4) (actual time=0.003..0.003 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 12.083 ms
 Execution time: 249.428 ms
(20 rows)

SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16177.15..16177.15 rows=1 width=22) (actual time=180.811..180.811 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.43..7546.44 rows=1 width=6) (actual time=86.621..86.621 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4770 width=6) (actual time=0.007..81.590 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  Sort  (cost=8630.71..8632.53 rows=727 width=22) (actual time=180.810..180.810 rows=1 loops=1)
         Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=8614.36..8627.08 rows=727 width=22) (actual time=180.793..180.794 rows=7 loops=1)
               Group Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Nested Loop Anti Join  (cost=0.43..8608.90 rows=727 width=22) (actual time=86.659..178.301 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=86.647..143.744 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.38 rows=17 width=4) (actual time=0.001..0.001 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 0.575 ms
 Execution time: 180.854 ms
(20 rows)

