query 1 run 1
SET
SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4244761.22..4244761.22 rows=1 width=236) (actual time=69480.482..69480.483 rows=1 loops=1)
   ->  Sort  (cost=4244761.22..4244761.23 rows=6 width=236) (actual time=69480.481..69480.481 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=4244761.02..4244761.19 rows=6 width=236) (actual time=69480.454..69480.462 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..1875017.50 rows=59243588 width=25) (actual time=0.490..11289.279 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning Time: 23.781 ms
 Execution Time: 69481.396 ms
(11 rows)

SET
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4244761.22..4244761.22 rows=1 width=236) (actual time=67851.763..67851.764 rows=1 loops=1)
   ->  Sort  (cost=4244761.22..4244761.23 rows=6 width=236) (actual time=67851.762..67851.763 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=4244761.02..4244761.19 rows=6 width=236) (actual time=67851.738..67851.745 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..1875017.50 rows=59243588 width=25) (actual time=0.023..9544.062 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning Time: 0.893 ms
 Execution Time: 67851.830 ms
(11 rows)

query 2 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=570081.83..570081.83 rows=1 width=192) (actual time=30147.128..30147.142 rows=100 loops=1)
   ->  Sort  (cost=570081.83..570081.83 rows=1 width=192) (actual time=30147.127..30147.135 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Nested Loop  (cost=55.33..570081.82 rows=1 width=192) (actual time=30.986..30144.147 rows=4737 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.388..0.394 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.202..0.203 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.181..0.183 rows=25 loops=1)
               ->  Materialize  (cost=55.33..570079.12 rows=1 width=170) (actual time=5.118..6027.984 rows=4737 loops=5)
                     ->  Nested Loop  (cost=55.33..570079.11 rows=1 width=170) (actual time=25.585..30130.645 rows=4737 loops=1)
                           Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
                           Rows Removed by Join Filter: 236714834
                           ->  Nested Loop  (cost=55.33..565608.11 rows=1 width=34) (actual time=1.990..1182.152 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..54699.60 rows=8983 width=30) (actual time=0.437..271.908 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=54.78..56.87 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=54.34..54.35 rows=1 width=32) (actual time=0.108..0.108 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.54..54.33 rows=4 width=6) (actual time=0.095..0.104 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.54..53.03 rows=19 width=10) (actual time=0.079..0.101 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.97..51.41 rows=19 width=10) (actual time=0.077..0.099 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.77 rows=19 width=10) (actual time=0.068..0.069 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.54..2.56 rows=1 width=8) (actual time=0.007..0.007 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.009..0.009 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.005 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..2.578 rows=49972 loops=4737)
 Planning Time: 24.359 ms
 Execution Time: 30147.233 ms
(50 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=570081.83..570081.83 rows=1 width=192) (actual time=28792.471..28792.487 rows=100 loops=1)
   ->  Sort  (cost=570081.83..570081.83 rows=1 width=192) (actual time=28792.470..28792.478 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Nested Loop  (cost=55.33..570081.82 rows=1 width=192) (actual time=13.857..28789.634 rows=4737 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.009..0.015 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
               ->  Materialize  (cost=55.33..570079.12 rows=1 width=170) (actual time=2.127..5757.226 rows=4737 loops=5)
                     ->  Nested Loop  (cost=55.33..570079.11 rows=1 width=170) (actual time=10.629..28777.654 rows=4737 loops=1)
                           Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
                           Rows Removed by Join Filter: 236714834
                           ->  Nested Loop  (cost=55.33..565608.11 rows=1 width=34) (actual time=0.064..318.930 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..54699.60 rows=8983 width=30) (actual time=0.012..81.654 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=54.78..56.87 rows=1 width=14) (actual time=0.001..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=54.34..54.35 rows=1 width=32) (actual time=0.025..0.025 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.54..54.33 rows=4 width=6) (actual time=0.018..0.021 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.54..53.03 rows=19 width=10) (actual time=0.010..0.019 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.97..51.41 rows=19 width=10) (actual time=0.008..0.017 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.77 rows=19 width=10) (actual time=0.004..0.005 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.54..2.56 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.009..0.009 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..2.567 rows=49972 loops=4737)
 Planning Time: 2.394 ms
 Execution Time: 28792.571 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3431000.56..3431000.59 rows=10 width=44) (actual time=22718.247..22718.251 rows=10 loops=1)
   ->  Sort  (cost=3431000.56..3438588.47 rows=3035162 width=44) (actual time=22718.245..22718.248 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=3274356.94..3365411.80 rows=3035162 width=44) (actual time=22542.019..22697.825 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=3274356.94..3281944.85 rows=3035162 width=24) (actual time=22542.006..22554.553 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 31119kB
                     ->  Hash Join  (cost=550284.71..2903108.54 rows=3035162 width=24) (actual time=4391.467..22439.382 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1875017.50 rows=32601787 width=16) (actual time=0.514..11461.117 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 27451823
                           ->  Hash  (cost=526006.53..526006.53 rows=1396655 width=12) (actual time=4386.407..4386.408 rows=1451805 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                                 ->  Hash Join  (cost=58338.35..526006.53 rows=1396655 width=12) (actual time=505.414..4132.720 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..448792.78 rows=7190608 width=16) (actual time=0.571..2230.736 rows=7239437 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 7760563
                                       ->  Hash  (cost=54696.56..54696.56 rows=291343 width=4) (actual time=504.070..504.070 rows=300276 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                             ->  Seq Scan on customer  (cost=0.00..54696.56 rows=291343 width=4) (actual time=0.491..452.096 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 1199724
 Planning Time: 31.794 ms
 Execution Time: 22719.263 ms
(28 rows)

SET
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3431000.56..3431000.59 rows=10 width=44) (actual time=19786.176..19786.180 rows=10 loops=1)
   ->  Sort  (cost=3431000.56..3438588.47 rows=3035162 width=44) (actual time=19786.175..19786.178 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=3274356.94..3365411.80 rows=3035162 width=44) (actual time=19611.136..19765.673 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=3274356.94..3281944.85 rows=3035162 width=24) (actual time=19611.123..19623.785 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 31119kB
                     ->  Hash Join  (cost=550284.71..2903108.54 rows=3035162 width=24) (actual time=3561.123..19510.038 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1875017.50 rows=32601787 width=16) (actual time=0.034..9457.235 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 27451823
                           ->  Hash  (cost=526006.53..526006.53 rows=1396655 width=12) (actual time=3559.156..3559.158 rows=1451805 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                                 ->  Hash Join  (cost=58338.35..526006.53 rows=1396655 width=12) (actual time=254.444..3320.535 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..448792.78 rows=7190608 width=16) (actual time=0.042..1744.465 rows=7239437 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 7760563
                                       ->  Hash  (cost=54696.56..54696.56 rows=291343 width=4) (actual time=253.706..253.706 rows=300276 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                             ->  Seq Scan on customer  (cost=0.00..54696.56 rows=291343 width=4) (actual time=0.018..209.470 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 1199724
 Planning Time: 1.888 ms
 Execution Time: 19786.394 ms
(28 rows)

query 4 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=801421.19..801421.20 rows=1 width=24) (actual time=10341.575..10341.576 rows=1 loops=1)
   ->  Sort  (cost=801421.19..801421.21 rows=5 width=24) (actual time=10341.573..10341.574 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=801421.12..801421.17 rows=5 width=24) (actual time=10341.555..10341.556 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Merge Semi Join  (cost=329263.40..798723.45 rows=539534 width=16) (actual time=4898.674..10242.878 rows=513822 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=329239.64..330588.88 rows=539696 width=20) (actual time=4898.118..4978.889 rows=560424 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: external merge  Disk: 16456kB
                           ->  Bitmap Heap Scan on orders  (cost=8492.32..277855.76 rows=539696 width=20) (actual time=123.920..4723.187 rows=560424 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=231887
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8357.39 rows=539696 width=0) (actual time=84.915..84.915 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q21_idx_2 on lineitem  (cost=0.56..409600.36 rows=19996653 width=4) (actual time=0.547..3504.750 rows=37929279 loops=1)
                           Heap Fetches: 0
 Planning Time: 27.077 ms
 Execution Time: 10344.780 ms
(20 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=801421.19..801421.20 rows=1 width=24) (actual time=6820.081..6820.083 rows=1 loops=1)
   ->  Sort  (cost=801421.19..801421.21 rows=5 width=24) (actual time=6820.080..6820.081 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=801421.12..801421.17 rows=5 width=24) (actual time=6820.064..6820.065 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Merge Semi Join  (cost=329263.40..798723.45 rows=539534 width=16) (actual time=1597.889..6723.333 rows=513822 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=329239.64..330588.88 rows=539696 width=20) (actual time=1597.827..1676.230 rows=560424 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: external merge  Disk: 16456kB
                           ->  Bitmap Heap Scan on orders  (cost=8492.32..277855.76 rows=539696 width=20) (actual time=118.570..1465.442 rows=560424 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=231887
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8357.39 rows=539696 width=0) (actual time=79.869..79.869 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q21_idx_2 on lineitem  (cost=0.56..409600.36 rows=19996653 width=4) (actual time=0.055..3301.590 rows=37929279 loops=1)
                           Heap Fetches: 0
 Planning Time: 1.619 ms
 Execution Time: 6822.343 ms
(20 rows)

query 5 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1616555.95..1616555.95 rows=1 width=58) (actual time=10553.910..10553.916 rows=1 loops=1)
   ->  Sort  (cost=1616555.95..1616556.01 rows=25 width=58) (actual time=10553.909..10553.914 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=1615671.83..1616555.83 rows=25 width=58) (actual time=10530.589..10553.896 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=1615671.83..1615848.56 rows=70695 width=38) (actual time=10524.768..10527.812 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=103279.72..1609977.58 rows=70695 width=38) (actual time=943.110..10483.372 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=98558.72..1595853.90 rows=1790984 width=50) (actual time=897.771..9974.777 rows=1815327 loops=1)
                                 ->  Hash Join  (cost=98558.15..406293.70 rows=447880 width=38) (actual time=897.335..6412.896 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=35234.28..330093.28 rows=2239400 width=8) (actual time=296.952..5108.883 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=261246
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..34674.43 rows=2239400 width=0) (actual time=253.447..253.448 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59573.96..59573.96 rows=299993 width=38) (actual time=599.945..599.948 rows=299436 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                             ->  Hash Join  (cost=2.51..59573.96 rows=299993 width=38) (actual time=0.960..536.068 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50946.65 rows=1499965 width=8) (actual time=0.471..371.384 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.480..0.481 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.468..0.478 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.208..0.211 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.250..0.250 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.243..0.246 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.006..0.007 rows=4 loops=453399)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=43.558..43.558 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.259..28.540 rows=100000 loops=1)
 Planning Time: 37.648 ms
 Execution Time: 10554.772 ms
(42 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1616555.95..1616555.95 rows=1 width=58) (actual time=5309.349..5309.355 rows=1 loops=1)
   ->  Sort  (cost=1616555.95..1616556.01 rows=25 width=58) (actual time=5309.347..5309.353 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=1615671.83..1616555.83 rows=25 width=58) (actual time=5285.836..5309.333 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=1615671.83..1615848.56 rows=70695 width=38) (actual time=5280.101..5283.250 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=103279.72..1609977.58 rows=70695 width=38) (actual time=780.744..5250.155 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=98558.72..1595853.90 rows=1790984 width=50) (actual time=741.486..4804.661 rows=1815327 loops=1)
                                 ->  Hash Join  (cost=98558.15..406293.70 rows=447880 width=38) (actual time=741.455..2711.788 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=35234.28..330093.28 rows=2239400 width=8) (actual time=270.562..1669.278 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=261246
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..34674.43 rows=2239400 width=0) (actual time=227.601..227.602 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59573.96..59573.96 rows=299993 width=38) (actual time=470.539..470.542 rows=299436 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                             ->  Hash Join  (cost=2.51..59573.96 rows=299993 width=38) (actual time=0.058..410.472 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50946.65 rows=1499965 width=8) (actual time=0.019..252.103 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.032..0.034 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.027..0.032 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.008..0.009 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.003..0.004 rows=4 loops=453399)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=38.744..38.745 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.022..22.149 rows=100000 loops=1)
 Planning Time: 4.244 ms
 Execution Time: 5309.551 ms
(42 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2013696.14..2013696.15 rows=1 width=32) (actual time=12835.588..12835.590 rows=1 loops=1)
   ->  Aggregate  (cost=2013696.14..2013696.15 rows=1 width=32) (actual time=12835.587..12835.588 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=221879.95..2007977.86 rows=1143656 width=12) (actual time=1245.119..12270.023 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 13724091
               Heap Blocks: exact=395900 lossy=267068
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..221594.04 rows=1143656 width=0) (actual time=1174.267..1174.267 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 21.894 ms
 Execution Time: 12836.404 ms
(10 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2013696.14..2013696.15 rows=1 width=32) (actual time=6467.590..6467.592 rows=1 loops=1)
   ->  Aggregate  (cost=2013696.14..2013696.15 rows=1 width=32) (actual time=6467.589..6467.589 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=221879.95..2007977.86 rows=1143656 width=12) (actual time=1113.841..6106.578 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 13724091
               Heap Blocks: exact=395900 lossy=267068
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..221594.04 rows=1143656 width=0) (actual time=1043.441..1043.441 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 1.395 ms
 Execution Time: 6467.840 ms
(10 rows)

query 7 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2718094.09..2718094.21 rows=1 width=92) (actual time=19003.951..19003.957 rows=1 loops=1)
   ->  GroupAggregate  (cost=2718094.09..2719323.63 rows=10044 width=92) (actual time=19003.950..19003.956 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=2718094.09..2718244.63 rows=60215 width=72) (actual time=18996.885..18997.614 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=563436.12..2713313.67 rows=60215 width=72) (actual time=5111.497..18968.400 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=3629.40..2111823.89 rows=1446914 width=46) (actual time=35.796..13210.819 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2024992.40 rows=18328787 width=24) (actual time=0.567..10995.547 rows=18230325 loops=1)
                                 Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Filter: 41755727
                           ->  Hash  (cost=3529.40..3529.40 rows=8000 width=30) (actual time=35.198..35.200 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3529.40 rows=8000 width=30) (actual time=0.523..33.789 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.279..24.087 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.236..0.236 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.227..0.231 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536599.73..536599.73 rows=1200159 width=30) (actual time=5071.274..5071.276 rows=1191175 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 22152kB
                           ->  Hash Join  (cost=57052.91..536599.73 rows=1200159 width=30) (actual time=540.435..4815.224 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411287.82 rows=15001982 width=8) (actual time=0.785..1700.957 rows=15000000 loops=1)
                                 ->  Hash  (cost=55552.95..55552.95 rows=119997 width=30) (actual time=539.392..539.394 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55552.95 rows=119997 width=30) (actual time=0.507..513.062 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.65 rows=1499965 width=8) (actual time=0.473..372.127 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.025..0.026 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.017..0.021 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 36.783 ms
 Execution Time: 19004.882 ms
(42 rows)

SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2718094.09..2718094.21 rows=1 width=92) (actual time=15468.349..15468.355 rows=1 loops=1)
   ->  GroupAggregate  (cost=2718094.09..2719323.63 rows=10044 width=92) (actual time=15468.347..15468.353 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=2718094.09..2718244.63 rows=60215 width=72) (actual time=15461.347..15462.080 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=563436.12..2713313.67 rows=60215 width=72) (actual time=4149.511..15434.146 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=3629.40..2111823.89 rows=1446914 width=46) (actual time=18.312..10673.121 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2024992.40 rows=18328787 width=24) (actual time=0.036..8768.166 rows=18230325 loops=1)
                                 Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Filter: 41755727
                           ->  Hash  (cost=3529.40..3529.40 rows=8000 width=30) (actual time=18.262..18.263 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3529.40 rows=8000 width=30) (actual time=0.015..17.296 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.003..5.467 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.009..0.010 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536599.73..536599.73 rows=1200159 width=30) (actual time=4129.041..4129.043 rows=1191175 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 22152kB
                           ->  Hash Join  (cost=57052.91..536599.73 rows=1200159 width=30) (actual time=282.115..3888.713 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411287.82 rows=15001982 width=8) (actual time=0.030..1246.290 rows=15000000 loops=1)
                                 ->  Hash  (cost=55552.95..55552.95 rows=119997 width=30) (actual time=281.831..281.832 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55552.95 rows=119997 width=30) (actual time=0.021..262.009 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.65 rows=1499965 width=8) (actual time=0.003..82.407 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.013 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.010 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 3.057 ms
 Execution Time: 15468.497 ms
(42 rows)

query 8 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=594531.37..594531.62 rows=1 width=40) (actual time=11350.307..11350.314 rows=1 loops=1)
   ->  GroupAggregate  (cost=594531.37..595113.16 rows=2406 width=40) (actual time=11350.306..11350.312 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=594531.37..594590.00 rows=23451 width=46) (actual time=11345.359..11345.827 rows=11818 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 2631kB
               ->  Hash Join  (cost=243563.30..592829.14 rows=23451 width=46) (actual time=5305.411..11331.222 rows=23842 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=243561.74..592638.33 rows=23451 width=20) (actual time=5305.154..11307.092 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=239090.74..588104.95 rows=23765 width=20) (actual time=5261.196..11250.376 rows=23842 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=175766.87..524097.83 rows=118826 width=24) (actual time=4682.306..10634.389 rows=118593 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=72059.27..402027.03 rows=4579984 width=12) (actual time=521.678..5306.631 rows=4557513 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..70914.27 rows=4579984 width=0) (actual time=477.357..477.357 rows=4557513 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=98842.35..98842.35 rows=389220 width=20) (actual time=4160.291..4160.292 rows=389521 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25019kB
                                             ->  Nested Loop  (cost=1.12..98842.35 rows=389220 width=20) (actual time=3.147..4015.545 rows=389521 loops=1)
                                                   ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..54314.28 rows=13305 width=4) (actual time=1.204..288.622 rows=13011 loops=1)
                                                         Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.06 rows=29 width=24) (actual time=0.222..0.280 rows=30 loops=13011)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=59573.96..59573.96 rows=299993 width=4) (actual time=578.303..578.305 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                       ->  Hash Join  (cost=2.51..59573.96 rows=299993 width=4) (actual time=0.888..527.465 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.65 rows=1499965 width=8) (actual time=0.564..369.937 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.312..0.313 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.301..0.310 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.009..0.012 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.285..0.285 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.278..0.280 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=43.890..43.890 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.261..29.124 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.238..0.238 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.220..0.226 rows=25 loops=1)
 Planning Time: 43.944 ms
 Execution Time: 11351.343 ms
(51 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=594531.37..594531.62 rows=1 width=40) (actual time=3830.746..3830.752 rows=1 loops=1)
   ->  GroupAggregate  (cost=594531.37..595113.16 rows=2406 width=40) (actual time=3830.744..3830.750 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=594531.37..594590.00 rows=23451 width=46) (actual time=3825.801..3826.260 rows=11818 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 2631kB
               ->  Hash Join  (cost=243563.30..592829.14 rows=23451 width=46) (actual time=1400.582..3817.399 rows=23842 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=243561.74..592638.33 rows=23451 width=20) (actual time=1400.557..3804.793 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=239090.74..588104.95 rows=23765 width=20) (actual time=1363.576..3758.814 rows=23842 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=175766.87..524097.83 rows=118826 width=24) (actual time=925.344..3293.914 rows=118593 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=72059.27..402027.03 rows=4579984 width=12) (actual time=464.404..1998.979 rows=4557513 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..70914.27 rows=4579984 width=0) (actual time=420.867..420.867 rows=4557513 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=98842.35..98842.35 rows=389220 width=20) (actual time=460.622..460.623 rows=389521 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25019kB
                                             ->  Nested Loop  (cost=1.12..98842.35 rows=389220 width=20) (actual time=0.090..371.972 rows=389521 loops=1)
                                                   ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..54314.28 rows=13305 width=4) (actual time=0.057..127.866 rows=13011 loops=1)
                                                         Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.06 rows=29 width=24) (actual time=0.008..0.015 rows=30 loops=13011)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=59573.96..59573.96 rows=299993 width=4) (actual time=437.605..437.607 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                       ->  Hash Join  (cost=2.51..59573.96 rows=299993 width=4) (actual time=0.054..390.116 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.65 rows=1499965 width=8) (actual time=0.021..237.633 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.027..0.028 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.022..0.027 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.005 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=36.916..36.916 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.028..21.245 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.014..0.015 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.006..0.009 rows=25 loops=1)
 Planning Time: 4.325 ms
 Execution Time: 3831.036 ms
(51 rows)

query 9 run 1
SET
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1127618.42..1127618.42 rows=1 width=66) (actual time=22240.476..22240.480 rows=1 loops=1)
   ->  Sort  (cost=1127618.42..1127768.79 rows=60150 width=66) (actual time=22240.474..22240.478 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1126265.04..1127317.67 rows=60150 width=66) (actual time=22239.948..22240.395 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=492053.12..1105853.13 rows=1166395 width=57) (actual time=11190.858..19685.105 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=492051.56..1096438.76 rows=1166395 width=31) (actual time=11189.871..18847.633 rows=3248192 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..411287.82 rows=15001982 width=8) (actual time=0.496..2422.596 rows=15000000 loops=1)
                           ->  Hash  (cost=469497.62..469497.62 rows=1166395 width=31) (actual time=11188.474..11188.477 rows=3248192 loops=1)
                                 Buckets: 524288 (originally 524288)  Batches: 8 (originally 4)  Memory Usage: 30530kB
                                 ->  Hash Join  (cost=4491.22..469497.62 rows=1166395 width=31) (actual time=45.868..10386.375 rows=3248192 loops=1)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Merge Join  (cost=20.22..461923.67 rows=1182025 width=35) (actual time=2.832..9560.522 rows=3248192 loops=1)
                                             Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                             Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                             Rows Removed by Join Filter: 4873781
                                             ->  Nested Loop  (cost=1.12..199703.32 rows=1182025 width=33) (actual time=2.514..6761.813 rows=3248192 loops=1)
                                                   ->  Index Only Scan using q20_idx_2 on part  (cost=0.55..64484.14 rows=40406 width=4) (actual time=0.021..486.147 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.06 rows=29 width=29) (actual time=0.038..0.054 rows=30 loops=108312)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                             ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..181626.56 rows=8001075 width=14) (actual time=0.305..1352.389 rows=12548878 loops=1)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=42.965..42.965 rows=100000 loops=1)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.233..28.463 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.238..0.238 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.221..0.227 rows=25 loops=1)
 Planning Time: 43.157 ms
 Execution Time: 22241.567 ms
(37 rows)

SET
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1127618.42..1127618.42 rows=1 width=66) (actual time=16489.466..16489.471 rows=1 loops=1)
   ->  Sort  (cost=1127618.42..1127768.79 rows=60150 width=66) (actual time=16489.465..16489.470 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1126265.04..1127317.67 rows=60150 width=66) (actual time=16488.935..16489.386 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=492053.12..1105853.13 rows=1166395 width=57) (actual time=5969.073..13997.808 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=492051.56..1096438.76 rows=1166395 width=31) (actual time=5969.039..13158.478 rows=3248192 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..411287.82 rows=15001982 width=8) (actual time=0.037..1990.710 rows=15000000 loops=1)
                           ->  Hash  (cost=469497.62..469497.62 rows=1166395 width=31) (actual time=5968.096..5968.099 rows=3248192 loops=1)
                                 Buckets: 524288 (originally 524288)  Batches: 8 (originally 4)  Memory Usage: 30530kB
                                 ->  Hash Join  (cost=4491.22..469497.62 rows=1166395 width=31) (actual time=28.800..5223.160 rows=3248192 loops=1)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Merge Join  (cost=20.22..461923.67 rows=1182025 width=35) (actual time=0.065..4455.549 rows=3248192 loops=1)
                                             Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                             Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                             Rows Removed by Join Filter: 4873781
                                             ->  Nested Loop  (cost=1.12..199703.32 rows=1182025 width=33) (actual time=0.044..2040.303 rows=3248192 loops=1)
                                                   ->  Index Only Scan using q20_idx_2 on part  (cost=0.55..64484.14 rows=40406 width=4) (actual time=0.023..369.554 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.06 rows=29 width=29) (actual time=0.003..0.012 rows=30 loops=108312)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                             ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..181626.56 rows=8001075 width=14) (actual time=0.008..1062.697 rows=12548878 loops=1)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=28.650..28.650 rows=100000 loops=1)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.011..14.392 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.018..0.019 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.013 rows=25 loops=1)
 Planning Time: 4.805 ms
 Execution Time: 16490.244 ms
(37 rows)

query 10 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1781228.14..1781228.19 rows=20 width=201) (actual time=14520.803..14520.809 rows=20 loops=1)
   ->  Sort  (cost=1781228.14..1782676.12 rows=579191 width=201) (actual time=14520.801..14520.806 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=1749888.33..1765816.08 rows=579191 width=201) (actual time=13613.028..14408.757 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Sort  (cost=1749888.33..1751336.31 rows=579191 width=181) (actual time=13613.011..13807.170 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Sort Method: external merge  Disk: 218520kB
                     ->  Hash Join  (cost=388757.18..1657681.59 rows=579191 width=181) (actual time=5875.562..12864.323 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=388755.62..1655901.91 rows=579191 width=159) (actual time=5875.348..12673.178 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=286833.40..1514575.32 rows=579191 width=16) (actual time=4893.819..10891.538 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..1189166.67 rows=14695541 width=16) (actual time=0.718..4328.945 rows=14808183 loops=1)
                                             Index Cond: (l_returnflag = 'R'::bpchar)
                                             Heap Fetches: 0
                                       ->  Hash  (cost=279441.98..279441.98 rows=591269 width=8) (actual time=4891.807..4891.807 rows=573160 loops=1)
                                             Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                             ->  Bitmap Heap Scan on orders  (cost=9304.94..279441.98 rows=591269 width=8) (actual time=122.349..4718.689 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   Heap Blocks: exact=233346
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..9157.12 rows=591269 width=0) (actual time=83.379..83.380 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=50946.65..50946.65 rows=1499965 width=147) (actual time=980.951..980.952 rows=1500000 loops=1)
                                       Buckets: 262144  Batches: 16  Memory Usage: 18791kB
                                       ->  Seq Scan on customer  (cost=0.00..50946.65 rows=1499965 width=147) (actual time=0.437..503.212 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.209..0.210 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.192..0.198 rows=25 loops=1)
 Planning Time: 33.927 ms
 Execution Time: 14556.577 ms
(33 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1781228.14..1781228.19 rows=20 width=201) (actual time=10485.547..10485.554 rows=20 loops=1)
   ->  Sort  (cost=1781228.14..1782676.12 rows=579191 width=201) (actual time=10485.546..10485.551 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=1749888.33..1765816.08 rows=579191 width=201) (actual time=9570.149..10373.962 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Sort  (cost=1749888.33..1751336.31 rows=579191 width=181) (actual time=9570.132..9765.028 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Sort Method: external merge  Disk: 218520kB
                     ->  Hash Join  (cost=388757.18..1657681.59 rows=579191 width=181) (actual time=2427.031..8825.294 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=388755.62..1655901.91 rows=579191 width=159) (actual time=2427.003..8634.350 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=286833.40..1514575.32 rows=579191 width=16) (actual time=1585.032..7009.493 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..1189166.67 rows=14695541 width=16) (actual time=0.035..3804.521 rows=14808183 loops=1)
                                             Index Cond: (l_returnflag = 'R'::bpchar)
                                             Heap Fetches: 0
                                       ->  Hash  (cost=279441.98..279441.98 rows=591269 width=8) (actual time=1583.693..1583.694 rows=573160 loops=1)
                                             Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                             ->  Bitmap Heap Scan on orders  (cost=9304.94..279441.98 rows=591269 width=8) (actual time=111.054..1455.195 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   Heap Blocks: exact=233346
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..9157.12 rows=591269 width=0) (actual time=72.830..72.831 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=50946.65..50946.65 rows=1499965 width=147) (actual time=841.516..841.516 rows=1500000 loops=1)
                                       Buckets: 262144  Batches: 16  Memory Usage: 18791kB
                                       ->  Seq Scan on customer  (cost=0.00..50946.65 rows=1499965 width=147) (actual time=0.013..369.567 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.023..0.024 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.015..0.018 rows=25 loops=1)
 Planning Time: 2.397 ms
 Execution Time: 10520.296 ms
(33 rows)

query 11 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=625788.99..625788.99 rows=1 width=36) (actual time=3613.381..3613.386 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293194.85..293194.86 rows=1 width=32) (actual time=1519.989..1519.991 rows=1 loops=1)
           ->  Hash Join  (cost=2357.31..290794.52 rows=320043 width=10) (actual time=2.801..1430.478 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255232.75 rows=8001075 width=14) (actual time=0.036..737.268 rows=8000000 loops=1)
                 ->  Hash  (cost=2307.31..2307.31 rows=4000 width=4) (actual time=2.733..2.735 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=4) (actual time=0.498..2.367 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=55.29..2266.00 rows=4000 width=8) (actual time=0.488..1.971 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=0.314..0.314 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=332594.12..332860.83 rows=106681 width=36) (actual time=3613.380..3613.383 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=320059.11..332060.72 rows=106681 width=36) (actual time=3613.371..3613.373 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Rows Removed by Filter: 301833
               ->  Sort  (cost=320059.11..320859.21 rows=320043 width=14) (actual time=1907.849..1920.106 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 25961kB
                     ->  Hash Join  (cost=2357.31..290794.52 rows=320043 width=14) (actual time=39.761..1855.959 rows=320800 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255232.75 rows=8001075 width=18) (actual time=0.566..1068.705 rows=8000000 loops=1)
                           ->  Hash  (cost=2307.31..2307.31 rows=4000 width=4) (actual time=39.138..39.139 rows=4010 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                 ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=4) (actual time=2.311..38.109 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.200..0.203 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 24
                                       ->  Bitmap Heap Scan on supplier  (cost=55.29..2266.00 rows=4000 width=8) (actual time=2.105..37.150 rows=4010 loops=1)
                                             Recheck Cond: (s_nationkey = nation.n_nationkey)
                                             Heap Blocks: exact=1869
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=1.764..1.764 rows=4010 loops=1)
                                                   Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 19.253 ms
 Execution Time: 3614.019 ms
(43 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=625788.99..625788.99 rows=1 width=36) (actual time=3196.758..3196.763 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293194.85..293194.86 rows=1 width=32) (actual time=1524.387..1524.389 rows=1 loops=1)
           ->  Hash Join  (cost=2357.31..290794.52 rows=320043 width=10) (actual time=2.781..1436.847 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255232.75 rows=8001075 width=14) (actual time=0.034..736.211 rows=8000000 loops=1)
                 ->  Hash  (cost=2307.31..2307.31 rows=4000 width=4) (actual time=2.718..2.719 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=4) (actual time=0.502..2.358 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=55.29..2266.00 rows=4000 width=8) (actual time=0.492..1.959 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=0.319..0.319 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=332594.12..332860.83 rows=106681 width=36) (actual time=3196.757..3196.759 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=320059.11..332060.72 rows=106681 width=36) (actual time=3196.748..3196.750 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Rows Removed by Filter: 301833
               ->  Sort  (cost=320059.11..320859.21 rows=320043 width=14) (actual time=1486.516..1498.727 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 25961kB
                     ->  Hash Join  (cost=2357.31..290794.52 rows=320043 width=14) (actual time=3.546..1436.342 rows=320800 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255232.75 rows=8001075 width=18) (actual time=0.025..741.639 rows=8000000 loops=1)
                           ->  Hash  (cost=2307.31..2307.31 rows=4000 width=4) (actual time=3.496..3.497 rows=4010 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                 ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=4) (actual time=0.491..3.118 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 24
                                       ->  Bitmap Heap Scan on supplier  (cost=55.29..2266.00 rows=4000 width=8) (actual time=0.479..2.717 rows=4010 loops=1)
                                             Recheck Cond: (s_nationkey = nation.n_nationkey)
                                             Heap Blocks: exact=1869
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=0.302..0.302 rows=4010 loops=1)
                                                   Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 1.025 ms
 Execution Time: 3196.829 ms
(43 rows)

query 12 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=681331.20..681331.21 rows=1 width=27) (actual time=5111.224..5111.226 rows=1 loops=1)
   ->  Sort  (cost=681331.20..681331.22 rows=7 width=27) (actual time=5111.222..5111.224 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=681331.10..681331.17 rows=7 width=27) (actual time=5111.200..5111.202 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Hash Join  (cost=149536.83..676245.55 rows=290603 width=27) (actual time=920.112..4987.838 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..411287.82 rows=15001982 width=20) (actual time=0.547..1672.277 rows=15000000 loops=1)
                     ->  Hash  (cost=145904.29..145904.29 rows=290603 width=15) (actual time=918.815..918.815 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.56..145904.29 rows=290603 width=15) (actual time=0.684..850.761 rows=311258 loops=1)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 778088
                                 Heap Fetches: 0
 Planning Time: 30.080 ms
 Execution Time: 5112.138 ms
(18 rows)

SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=681331.20..681331.21 rows=1 width=27) (actual time=4266.931..4266.933 rows=1 loops=1)
   ->  Sort  (cost=681331.20..681331.22 rows=7 width=27) (actual time=4266.930..4266.931 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=681331.10..681331.17 rows=7 width=27) (actual time=4266.910..4266.912 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Hash Join  (cost=149536.83..676245.55 rows=290603 width=27) (actual time=657.612..4148.272 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..411287.82 rows=15001982 width=20) (actual time=0.027..1223.487 rows=15000000 loops=1)
                     ->  Hash  (cost=145904.29..145904.29 rows=290603 width=15) (actual time=656.894..656.895 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.56..145904.29 rows=290603 width=15) (actual time=0.034..595.844 rows=311258 loops=1)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 778088
                                 Heap Fetches: 0
 Planning Time: 1.283 ms
 Execution Time: 4267.024 ms
(18 rows)

query 13 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2751003.72..2751003.72 rows=1 width=16) (actual time=19919.742..19919.745 rows=1 loops=1)
   ->  Sort  (cost=2751003.72..2751004.22 rows=200 width=16) (actual time=19919.741..19919.743 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2751000.72..2751002.72 rows=200 width=16) (actual time=19919.720..19919.728 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  GroupAggregate  (cost=2600997.98..2728501.25 rows=1499965 width=12) (actual time=15925.560..19738.721 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Sort  (cost=2600997.98..2638499.19 rows=15000482 width=8) (actual time=15925.548..17969.591 rows=15337604 loops=1)
                           Sort Key: customer.c_custkey
                           Sort Method: external merge  Disk: 268424kB
                           ->  Hash Right Join  (cost=55341.46..666562.62 rows=15000482 width=8) (actual time=359.027..11169.640 rows=15337604 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..448792.78 rows=15000482 width=8) (actual time=0.677..5227.279 rows=14837583 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                       Rows Removed by Filter: 162417
                                 ->  Hash  (cost=30731.90..30731.90 rows=1499965 width=4) (actual time=356.999..357.000 rows=1500000 loops=1)
                                       Buckets: 1048576  Batches: 4  Memory Usage: 21380kB
                                       ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30731.90 rows=1499965 width=4) (actual time=0.384..159.360 rows=1500000 loops=1)
                                             Heap Fetches: 0
 Planning Time: 17.797 ms
 Execution Time: 19959.998 ms
(22 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2751003.72..2751003.72 rows=1 width=16) (actual time=19314.554..19314.557 rows=1 loops=1)
   ->  Sort  (cost=2751003.72..2751004.22 rows=200 width=16) (actual time=19314.553..19314.556 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2751000.72..2751002.72 rows=200 width=16) (actual time=19314.531..19314.539 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  GroupAggregate  (cost=2600997.98..2728501.25 rows=1499965 width=12) (actual time=15374.661..19133.569 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Sort  (cost=2600997.98..2638499.19 rows=15000482 width=8) (actual time=15374.650..17428.511 rows=15337604 loops=1)
                           Sort Key: customer.c_custkey
                           Sort Method: external merge  Disk: 268424kB
                           ->  Hash Right Join  (cost=55341.46..666562.62 rows=15000482 width=8) (actual time=322.493..10624.604 rows=15337604 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..448792.78 rows=15000482 width=8) (actual time=0.034..4752.160 rows=14837583 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                       Rows Removed by Filter: 162417
                                 ->  Hash  (cost=30731.90..30731.90 rows=1499965 width=4) (actual time=321.122..321.123 rows=1500000 loops=1)
                                       Buckets: 1048576  Batches: 4  Memory Usage: 21380kB
                                       ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30731.90 rows=1499965 width=4) (actual time=0.032..127.331 rows=1500000 loops=1)
                                             Heap Fetches: 0
 Planning Time: 0.645 ms
 Execution Time: 19354.368 ms
(22 rows)

query 14 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1298814.00..1298814.02 rows=1 width=32) (actual time=4696.933..4696.934 rows=1 loops=1)
   ->  Aggregate  (cost=1298814.00..1298814.02 rows=1 width=32) (actual time=4696.932..4696.933 rows=1 loops=1)
         ->  Merge Join  (cost=9.24..1285796.62 rows=743850 width=33) (actual time=1.034..4313.269 rows=772942 loops=1)
               Merge Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Index Only Scan using q14_idx_1 on lineitem  (cost=0.56..1202272.80 rows=762664 width=16) (actual time=0.603..3578.993 rows=772942 loops=1)
                     Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Fetches: 0
               ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..69181.92 rows=2000091 width=25) (actual time=0.425..365.380 rows=1999998 loops=1)
                     Heap Fetches: 0
 Planning Time: 31.393 ms
 Execution Time: 4697.693 ms
(11 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1298814.00..1298814.02 rows=1 width=32) (actual time=3528.321..3528.322 rows=1 loops=1)
   ->  Aggregate  (cost=1298814.00..1298814.02 rows=1 width=32) (actual time=3528.320..3528.321 rows=1 loops=1)
         ->  Merge Join  (cost=9.24..1285796.62 rows=743850 width=33) (actual time=0.068..3173.559 rows=772942 loops=1)
               Merge Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Index Only Scan using q14_idx_1 on lineitem  (cost=0.56..1202272.80 rows=762664 width=16) (actual time=0.038..2539.406 rows=772942 loops=1)
                     Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Fetches: 0
               ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..69181.92 rows=2000091 width=25) (actual time=0.025..292.955 rows=1999998 loops=1)
                     Heap Fetches: 0
 Planning Time: 1.667 ms
 Execution Time: 3528.366 ms
(11 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4039957.48..4040057.97 rows=1 width=103) (actual time=20709.637..20709.639 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1892667.02..1892667.03 rows=1 width=32) (actual time=6121.352..6121.353 rows=1 loops=1)
           ->  HashAggregate  (cost=1890133.52..1891400.27 rows=101340 width=36) (actual time=6078.315..6115.143 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=42696.61..1866348.11 rows=2378541 width=16) (actual time=349.545..4664.374 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 13223651
                       Heap Blocks: exact=401153 lossy=267105
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..42101.98 rows=2378541 width=0) (actual time=277.926..277.926 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=2147290.46..2198238.68 rows=507 width=103) (actual time=20709.635..20709.636 rows=1 loops=1)
         ->  GroupAggregate  (cost=2147290.17..2196634.44 rows=507 width=36) (actual time=20708.952..20708.953 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 69997
               ->  Sort  (cost=2147290.17..2153236.52 rows=2378541 width=16) (actual time=13898.077..14078.681 rows=1585450 loops=1)
                     Sort Key: lineitem.l_suppkey
                     Sort Method: external merge  Disk: 60920kB
                     ->  Bitmap Heap Scan on lineitem  (cost=42696.61..1866348.11 rows=2378541 width=16) (actual time=408.338..12871.603 rows=2265714 loops=1)
                           Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                           Rows Removed by Index Recheck: 13223651
                           Heap Blocks: exact=401153 lossy=267105
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..42101.98 rows=2378541 width=0) (actual time=335.938..335.938 rows=2265714 loops=1)
                                 Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.15 rows=1 width=71) (actual time=0.679..0.679 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 24.237 ms
 Execution Time: 20718.716 ms
(29 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4039957.48..4040057.97 rows=1 width=103) (actual time=12907.768..12907.771 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1892667.02..1892667.03 rows=1 width=32) (actual time=6193.854..6193.855 rows=1 loops=1)
           ->  HashAggregate  (cost=1890133.52..1891400.27 rows=101340 width=36) (actual time=6150.800..6187.623 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=42696.61..1866348.11 rows=2378541 width=16) (actual time=350.357..4732.997 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 13223651
                       Heap Blocks: exact=401153 lossy=267105
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..42101.98 rows=2378541 width=0) (actual time=278.249..278.250 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=2147290.46..2198238.68 rows=507 width=103) (actual time=12907.767..12907.768 rows=1 loops=1)
         ->  GroupAggregate  (cost=2147290.17..2196634.44 rows=507 width=36) (actual time=12907.732..12907.732 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 69997
               ->  Sort  (cost=2147290.17..2153236.52 rows=2378541 width=16) (actual time=6021.102..6202.180 rows=1585450 loops=1)
                     Sort Key: lineitem.l_suppkey
                     Sort Method: external merge  Disk: 60920kB
                     ->  Bitmap Heap Scan on lineitem  (cost=42696.61..1866348.11 rows=2378541 width=16) (actual time=371.888..5186.851 rows=2265714 loops=1)
                           Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                           Rows Removed by Index Recheck: 13223651
                           Heap Blocks: exact=401153 lossy=267105
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..42101.98 rows=2378541 width=0) (actual time=300.311..300.311 rows=2265714 loops=1)
                                 Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.15 rows=1 width=71) (actual time=0.031..0.031 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 1.604 ms
 Execution Time: 12917.786 ms
(29 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=370258.03..370258.04 rows=1 width=44) (actual time=6557.004..6557.007 rows=1 loops=1)
   ->  Sort  (cost=370258.03..370641.27 rows=153295 width=44) (actual time=6557.003..6557.005 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=360586.18..369491.56 rows=153295 width=44) (actual time=5887.687..6550.835 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=360586.18..362060.67 rows=589794 width=40) (actual time=5887.638..6264.693 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Hash Join  (cost=98140.62..292534.87 rows=589794 width=40) (actual time=811.442..3076.617 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..187364.27 rows=4000538 width=8) (actual time=36.815..1508.268 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=1.208..36.483 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90983.27..90983.27 rows=294871 width=40) (actual time=773.974..773.974 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90983.27 rows=294871 width=40) (actual time=0.690..702.988 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning Time: 21.206 ms
 Execution Time: 6565.995 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=370258.03..370258.04 rows=1 width=44) (actual time=6078.479..6078.482 rows=1 loops=1)
   ->  Sort  (cost=370258.03..370641.27 rows=153295 width=44) (actual time=6078.478..6078.481 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=360586.18..369491.56 rows=153295 width=44) (actual time=5408.242..6072.236 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=360586.18..362060.67 rows=589794 width=40) (actual time=5408.194..5785.322 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Hash Join  (cost=98140.62..292534.87 rows=589794 width=40) (actual time=501.134..2601.699 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..187364.27 rows=4000538 width=8) (actual time=20.295..1342.882 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.091..20.251 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90983.27..90983.27 rows=294871 width=40) (actual time=480.155..480.156 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90983.27 rows=294871 width=40) (actual time=0.016..419.103 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning Time: 1.277 ms
 Execution Time: 6086.993 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1795411.54..1795411.55 rows=1 width=32) (actual time=22640.714..22640.717 rows=1 loops=1)
   ->  Aggregate  (cost=1795411.54..1795411.55 rows=1 width=32) (actual time=22640.712..22640.714 rows=1 loops=1)
         ->  Nested Loop  (cost=71089.87..1795362.87 rows=19466 width=8) (actual time=530.280..22638.022 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=71089.30..1789257.90 rows=1996 width=40) (actual time=529.315..21398.486 rows=1996 loops=1)
                     Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Sort  (cost=71088.74..71093.61 rows=1947 width=4) (actual time=519.873..521.113 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 142kB
                           ->  Seq Scan on part  (cost=0.00..70982.36 rows=1947 width=4) (actual time=1.010..519.055 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
                     ->  GroupAggregate  (cost=0.56..1692505.96 rows=2050680 width=36) (actual time=2.664..20706.068 rows=1999332 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361795.96 rows=59989960 width=9) (actual time=1.274..12749.747 rows=59965964 loops=1)
                                 Heap Fetches: 0
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.93 rows=10 width=17) (actual time=0.572..0.618 rows=3 loops=1996)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning Time: 25.521 ms
 Execution Time: 22641.366 ms
(21 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1795411.54..1795411.55 rows=1 width=32) (actual time=20105.487..20105.489 rows=1 loops=1)
   ->  Aggregate  (cost=1795411.54..1795411.55 rows=1 width=32) (actual time=20105.486..20105.487 rows=1 loops=1)
         ->  Nested Loop  (cost=71089.87..1795362.87 rows=19466 width=8) (actual time=371.824..20104.593 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=71089.30..1789257.90 rows=1996 width=40) (actual time=371.797..20071.711 rows=1996 loops=1)
                     Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Sort  (cost=71088.74..71093.61 rows=1947 width=4) (actual time=365.415..365.814 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 142kB
                           ->  Seq Scan on part  (cost=0.00..70982.36 rows=1947 width=4) (actual time=0.143..364.779 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
                     ->  GroupAggregate  (cost=0.56..1692505.96 rows=2050680 width=36) (actual time=0.070..19548.251 rows=1999332 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361795.96 rows=59989960 width=9) (actual time=0.034..11613.263 rows=59965964 loops=1)
                                 Heap Fetches: 0
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.93 rows=10 width=17) (actual time=0.014..0.015 rows=3 loops=1996)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning Time: 1.658 ms
 Execution Time: 20105.536 ms
(21 rows)

query 18 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=8819266.07..8819266.32 rows=100 width=71) (actual time=29279.439..29279.452 rows=99 loops=1)
   ->  Sort  (cost=8819266.07..8869242.73 rows=19990664 width=71) (actual time=29279.437..29279.444 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  GroupAggregate  (cost=7605447.33..8055237.27 rows=19990664 width=71) (actual time=29279.194..29279.364 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=7605447.33..7655423.99 rows=19990664 width=44) (actual time=29279.184..29279.212 rows=693 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 79kB
                     ->  Hash Join  (cost=78563.08..4742047.14 rows=19990664 width=44) (actual time=3033.521..29278.956 rows=693 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=77.87..4328987.29 rows=19990664 width=25) (actual time=643.368..28504.976 rows=693 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Join  (cost=1.00..2605255.40 rows=4999163 width=24) (actual time=490.037..21204.219 rows=99 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..568561.17 rows=15001982 width=20) (actual time=0.675..3121.037 rows=14982724 loops=1)
                                       ->  GroupAggregate  (cost=0.56..1886708.11 rows=4999163 width=4) (actual time=385.021..17255.773 rows=99 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 14999901
                                             ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361795.96 rows=59989960 width=9) (actual time=0.382..6096.405 rows=59986052 loops=1)
                                                   Heap Fetches: 0
                                 ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361795.96 rows=59989960 width=9) (actual time=0.013..4743.911 rows=59916431 loops=1)
                                       Heap Fetches: 0
                           ->  Hash  (cost=50946.65..50946.65 rows=1499965 width=23) (actual time=672.512..672.512 rows=1500000 loops=1)
                                 Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                                 ->  Seq Scan on customer  (cost=0.00..50946.65 rows=1499965 width=23) (actual time=0.745..420.779 rows=1500000 loops=1)
 Planning Time: 26.996 ms
 Execution Time: 29280.261 ms
(29 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=8819266.07..8819266.32 rows=100 width=71) (actual time=27781.598..27781.611 rows=99 loops=1)
   ->  Sort  (cost=8819266.07..8869242.73 rows=19990664 width=71) (actual time=27781.597..27781.604 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  GroupAggregate  (cost=7605447.33..8055237.27 rows=19990664 width=71) (actual time=27781.355..27781.524 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=7605447.33..7655423.99 rows=19990664 width=44) (actual time=27781.344..27781.372 rows=693 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 79kB
                     ->  Hash Join  (cost=78563.08..4742047.14 rows=19990664 width=44) (actual time=2730.903..27781.123 rows=693 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=77.87..4328987.29 rows=19990664 width=25) (actual time=590.744..27144.795 rows=693 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Join  (cost=1.00..2605255.40 rows=4999163 width=24) (actual time=436.703..19866.390 rows=99 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..568561.17 rows=15001982 width=20) (actual time=0.029..2362.634 rows=14982724 loops=1)
                                       ->  GroupAggregate  (cost=0.56..1886708.11 rows=4999163 width=4) (actual time=361.004..16702.007 rows=99 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 14999901
                                             ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361795.96 rows=59989960 width=9) (actual time=0.032..5540.034 rows=59986052 loops=1)
                                                   Heap Fetches: 0
                                 ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361795.96 rows=59989960 width=9) (actual time=0.013..4726.426 rows=59916431 loops=1)
                                       Heap Fetches: 0
                           ->  Hash  (cost=50946.65..50946.65 rows=1499965 width=23) (actual time=535.238..535.239 rows=1500000 loops=1)
                                 Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                                 ->  Seq Scan on customer  (cost=0.00..50946.65 rows=1499965 width=23) (actual time=0.027..289.850 rows=1500000 loops=1)
 Planning Time: 2.214 ms
 Execution Time: 27781.723 ms
(29 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=142561.37..142561.38 rows=1 width=32) (actual time=3186.726..3186.727 rows=1 loops=1)
   ->  Aggregate  (cost=142561.37..142561.38 rows=1 width=32) (actual time=3186.725..3186.725 rows=1 loops=1)
         ->  Nested Loop  (cost=0.69..142553.50 rows=1049 width=12) (actual time=14.254..3184.283 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125984.87 rows=4747 width=30) (actual time=1.217..813.301 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.69..3.48 rows=1 width=21) (actual time=0.474..0.495 rows=0 loops=4781)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning Time: 29.356 ms
 Execution Time: 3187.447 ms
(13 rows)

SET
SET
SET


 Limit  (cost=142561.37..142561.38 rows=1 width=32) (actual time=456.859..456.860 rows=1 loops=1)
   ->  Aggregate  (cost=142561.37..142561.38 rows=1 width=32) (actual time=456.858..456.858 rows=1 loops=1)
         ->  Nested Loop  (cost=0.69..142553.50 rows=1049 width=12) (actual time=1.104..456.190 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125984.87 rows=4747 width=30) (actual time=0.192..411.366 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.69..3.48 rows=1 width=21) (actual time=0.008..0.009 rows=0 loops=4781)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning Time: 3.185 ms
 Execution Time: 456.907 ms
(13 rows)

query 20 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3573463.45..3573463.45 rows=1 width=51) (actual time=35819.976..35819.980 rows=1 loops=1)
   ->  Sort  (cost=3573463.45..3573463.45 rows=1 width=51) (actual time=35819.975..35819.978 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=3200947.23..3573463.44 rows=1 width=51) (actual time=15230.555..35818.115 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.503..34.851 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.214..0.216 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.282..27.018 rows=100000 loops=1)
               ->  Materialize  (cost=3200947.23..3568811.13 rows=3 width=8) (actual time=3.445..6.370 rows=44445 loops=4095)
                     ->  Merge Join  (cost=3200947.23..3568811.12 rows=3 width=8) (actual time=14108.021..20060.237 rows=59002 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  GroupAggregate  (cost=3200946.24..3365855.84 rows=4863005 width=40) (actual time=14107.643..19140.461 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=3200946.24..3223937.37 rows=9196452 width=13) (actual time=14107.631..15747.716 rows=9123091 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 205344kB
                                       ->  Seq Scan on lineitem  (cost=0.00..2024992.40 rows=9196452 width=13) (actual time=0.519..10669.527 rows=9123688 loops=1)
                                             Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Rows Removed by Filter: 50862364
                           ->  Materialize  (cost=0.98..121868.06 rows=80819 width=16) (actual time=0.059..627.492 rows=237286 loops=1)
                                 ->  Nested Loop  (cost=0.98..121666.01 rows=80819 width=16) (actual time=0.056..604.609 rows=86872 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.55..64484.14 rows=20203 width=4) (actual time=0.025..297.836 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.64 rows=19 width=12) (actual time=0.013..0.013 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 33.422 ms
 Execution Time: 35843.904 ms
(38 rows)

SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3573463.45..3573463.45 rows=1 width=51) (actual time=33114.737..33114.740 rows=1 loops=1)
   ->  Sort  (cost=3573463.45..3573463.45 rows=1 width=51) (actual time=33114.736..33114.738 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=3200947.23..3573463.44 rows=1 width=51) (actual time=12739.939..33113.140 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.021..17.585 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.014 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.007..6.231 rows=100000 loops=1)
               ->  Materialize  (cost=3200947.23..3568811.13 rows=3 width=8) (actual time=2.852..5.700 rows=44445 loops=4095)
                     ->  Merge Join  (cost=3200947.23..3568811.12 rows=3 width=8) (actual time=11678.440..17329.830 rows=59002 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  GroupAggregate  (cost=3200946.24..3365855.84 rows=4863005 width=40) (actual time=11678.078..16762.545 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=3200946.24..3223937.37 rows=9196452 width=13) (actual time=11678.066..13325.829 rows=9123091 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 205344kB
                                       ->  Seq Scan on lineitem  (cost=0.00..2024992.40 rows=9196452 width=13) (actual time=0.025..8289.347 rows=9123688 loops=1)
                                             Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Rows Removed by Filter: 50862364
                           ->  Materialize  (cost=0.98..121868.06 rows=80819 width=16) (actual time=0.039..280.366 rows=237286 loops=1)
                                 ->  Nested Loop  (cost=0.98..121666.01 rows=80819 width=16) (actual time=0.036..259.865 rows=86872 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.55..64484.14 rows=20203 width=4) (actual time=0.025..190.903 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.64 rows=19 width=12) (actual time=0.002..0.003 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 2.182 ms
 Execution Time: 33142.743 ms
(38 rows)

query 21 run 1
SET
SET
SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1064265.66..1064265.67 rows=1 width=34) (actual time=17098.103..17098.117 rows=100 loops=1)
   ->  Sort  (cost=1064265.66..1064265.67 rows=1 width=34) (actual time=17098.102..17098.110 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=1064265.63..1064265.65 rows=1 width=34) (actual time=17091.360..17096.929 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=1064265.63..1064265.64 rows=1 width=26) (actual time=17091.352..17092.836 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Semi Join  (cost=587568.82..1064265.62 rows=1 width=26) (actual time=6995.873..16925.983 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 27756
                           ->  Nested Loop  (cost=587568.25..1064262.98 rows=1 width=38) (actual time=6995.865..13194.540 rows=65960 loops=1)
                                 ->  Merge Anti Join  (cost=587567.82..1064260.53 rows=1 width=34) (actual time=6995.852..12534.062 rows=134155 loops=1)
                                       Merge Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 551044
                                       ->  Sort  (cost=587567.25..589540.48 rows=789290 width=34) (actual time=6995.822..7243.329 rows=1514267 loops=1)
                                             Sort Key: l1.l_orderkey
                                             Sort Method: external merge  Disk: 68184kB
                                             ->  Hash Join  (cost=2357.88..494838.02 rows=789290 width=34) (actual time=39.974..6676.728 rows=1514267 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..409600.36 rows=19996653 width=8) (actual time=0.646..3865.214 rows=37929348 loops=1)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=2307.31..2307.31 rows=4000 width=30) (actual time=39.303..39.305 rows=3991 loops=1)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                         ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=30) (actual time=2.212..38.153 rows=3991 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.190..0.193 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=55.29..2266.00 rows=4000 width=34) (actual time=2.015..37.204 rows=3991 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=1865
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=1.603..1.604 rows=3991 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..409600.36 rows=19996653 width=8) (actual time=0.019..3212.799 rows=37966635 loops=1)
                                             Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.45 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=134155)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.056..0.056 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 33.428 ms
 Execution Time: 17107.331 ms
(45 rows)

SET
SET
SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1064265.66..1064265.67 rows=1 width=34) (actual time=11918.650..11918.668 rows=100 loops=1)
   ->  Sort  (cost=1064265.66..1064265.67 rows=1 width=34) (actual time=11918.649..11918.660 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=1064265.63..1064265.65 rows=1 width=34) (actual time=11911.847..11917.478 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=1064265.63..1064265.64 rows=1 width=26) (actual time=11911.841..11913.350 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Semi Join  (cost=587568.82..1064265.62 rows=1 width=26) (actual time=6056.591..11753.824 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 27756
                           ->  Nested Loop  (cost=587568.25..1064262.98 rows=1 width=38) (actual time=6056.584..11579.449 rows=65960 loops=1)
                                 ->  Merge Anti Join  (cost=587567.82..1064260.53 rows=1 width=34) (actual time=6056.571..11301.932 rows=134155 loops=1)
                                       Merge Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 551044
                                       ->  Sort  (cost=587567.25..589540.48 rows=789290 width=34) (actual time=6056.543..6273.041 rows=1514267 loops=1)
                                             Sort Key: l1.l_orderkey
                                             Sort Method: external merge  Disk: 68184kB
                                             ->  Hash Join  (cost=2357.88..494838.02 rows=789290 width=34) (actual time=4.175..5760.281 rows=1514267 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..409600.36 rows=19996653 width=8) (actual time=0.238..3074.938 rows=37929348 loops=1)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=2307.31..2307.31 rows=4000 width=30) (actual time=3.917..3.921 rows=3991 loops=1)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                         ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=30) (actual time=0.503..3.310 rows=3991 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=55.29..2266.00 rows=4000 width=34) (actual time=0.492..2.863 rows=3991 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=1865
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=0.309..0.313 rows=3991 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..409600.36 rows=19996653 width=8) (actual time=0.018..3064.951 rows=37966635 loops=1)
                                             Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=134155)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 2.486 ms
 Execution Time: 11927.859 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=162293.23..162293.25 rows=1 width=72) (actual time=2301.074..2301.076 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75440.33..75440.34 rows=1 width=32) (actual time=1013.757..1013.758 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75321.08 rows=47698 width=6) (actual time=0.016..976.328 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=86852.89..87070.85 rows=7926 width=72) (actual time=2301.073..2301.073 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=86852.89..86872.70 rows=7926 width=38) (actual time=2299.224..2299.544 rows=9006 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..86339.58 rows=7926 width=38) (actual time=1014.207..2278.076 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75321.08 rows=17500 width=26) (actual time=1014.183..1572.461 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.66 rows=18 width=4) (actual time=0.003..0.003 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 18.963 ms
 Execution Time: 2301.693 ms
(20 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=162293.23..162293.25 rows=1 width=72) (actual time=1653.201..1653.203 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75440.33..75440.34 rows=1 width=32) (actual time=751.523..751.524 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75321.08 rows=47698 width=6) (actual time=0.007..718.589 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=86852.89..87070.85 rows=7926 width=72) (actual time=1653.200..1653.200 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=86852.89..86872.70 rows=7926 width=38) (actual time=1651.354..1651.678 rows=9006 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..86339.58 rows=7926 width=38) (actual time=751.561..1633.693 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75321.08 rows=17500 width=26) (actual time=751.547..1270.923 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.66 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 0.708 ms
 Execution Time: 1653.247 ms
(20 rows)

