query 1 run 1
SET
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424835.02..424835.02 rows=1 width=236) (actual time=7043.208..7043.209 rows=1 loops=1)
   ->  Sort  (cost=424835.02..424835.04 rows=6 width=236) (actual time=7043.206..7043.207 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424834.83..424834.99 rows=6 width=236) (actual time=7043.178..7043.186 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 24kB
               ->  Seq Scan on lineitem  (cost=0.00..187579.23 rows=5931390 width=25) (actual time=0.467..1150.408 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning Time: 17.278 ms
 Execution Time: 7043.560 ms
(12 rows)

SET
SET
SET
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424835.02..424835.02 rows=1 width=236) (actual time=6811.485..6811.486 rows=1 loops=1)
   ->  Sort  (cost=424835.02..424835.04 rows=6 width=236) (actual time=6811.484..6811.484 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424834.83..424834.99 rows=6 width=236) (actual time=6811.457..6811.465 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 24kB
               ->  Seq Scan on lineitem  (cost=0.00..187579.23 rows=5931390 width=25) (actual time=0.026..961.278 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning Time: 1.275 ms
 Execution Time: 6811.557 ms
(12 rows)

query 2 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18601.29..18601.29 rows=1 width=192) (actual time=169.179..169.201 rows=100 loops=1)
   ->  Sort  (cost=18601.29..18601.29 rows=1 width=192) (actual time=169.179..169.186 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=14.58..18601.28 rows=1 width=192) (actual time=4.496..168.832 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.407..0.413 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.204..0.205 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.198..0.200 rows=25 loops=1)
               ->  Materialize  (cost=14.58..18598.58 rows=1 width=170) (actual time=0.345..33.592 rows=489 loops=5)
                     ->  Nested Loop  (cost=14.58..18598.58 rows=1 width=170) (actual time=1.718..167.254 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.30..18597.30 rows=1 width=34) (actual time=1.333..125.267 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5440.26 rows=838 width=30) (actual time=0.285..25.437 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.88..15.69 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.44..13.45 rows=1 width=32) (actual time=0.121..0.121 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.85..13.44 rows=1 width=6) (actual time=0.108..0.119 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..12.33 rows=4 width=10) (actual time=0.090..0.116 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.71..11.71 rows=4 width=10) (actual time=0.087..0.109 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.080..0.082 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..2.30 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.085..0.085 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 21.757 ms
 Execution Time: 170.090 ms
(47 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18601.29..18601.29 rows=1 width=192) (actual time=23.451..23.464 rows=100 loops=1)
   ->  Sort  (cost=18601.29..18601.29 rows=1 width=192) (actual time=23.451..23.457 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=14.58..18601.28 rows=1 width=192) (actual time=0.170..23.143 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.017..0.022 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
               ->  Materialize  (cost=14.58..18598.58 rows=1 width=170) (actual time=0.011..4.558 rows=489 loops=5)
                     ->  Nested Loop  (cost=14.58..18598.58 rows=1 width=170) (actual time=0.053..22.426 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.30..18597.30 rows=1 width=34) (actual time=0.048..21.343 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5440.26 rows=838 width=30) (actual time=0.007..6.764 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.88..15.69 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.44..13.45 rows=1 width=32) (actual time=0.016..0.016 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.85..13.44 rows=1 width=6) (actual time=0.011..0.015 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..12.33 rows=4 width=10) (actual time=0.005..0.013 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.71..11.71 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.003..0.003 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..2.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.002..0.002 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 1.951 ms
 Execution Time: 23.757 ms
(47 rows)

query 3 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=287849.32..287849.35 rows=10 width=44) (actual time=2155.044..2155.049 rows=10 loops=1)
   ->  Sort  (cost=287849.32..288643.77 rows=317780 width=44) (actual time=2155.043..2155.046 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=273285.98..280982.21 rows=317780 width=44) (actual time=2148.722..2153.064 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 4  Batches: 1  Memory Usage: 7185kB
               ->  Hash Join  (cost=51665.00..254715.71 rows=317780 width=24) (actual time=729.282..2128.179 rows=30533 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..187579.23 rows=3278535 width=16) (actual time=0.568..1103.249 rows=3261873 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 2739342
                     ->  Hash  (cost=49847.61..49847.61 rows=145391 width=12) (actual time=727.492..727.494 rows=146063 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                           ->  Hash Join  (cost=12752.46..49847.61 rows=145391 width=12) (actual time=94.312..697.142 rows=146063 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=6904.39..42096.63 rows=724899 width=16) (actual time=42.050..510.005 rows=722275 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=26131
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6723.17 rows=724899 width=0) (actual time=38.648..38.648 rows=722275 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=5472.00..5472.00 rows=30085 width=4) (actual time=52.180..52.181 rows=30142 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                       ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30085 width=4) (actual time=0.319..47.443 rows=30142 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 119858
 Planning Time: 24.379 ms
 Execution Time: 2156.606 ms
(28 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=287849.32..287849.35 rows=10 width=44) (actual time=1481.274..1481.279 rows=10 loops=1)
   ->  Sort  (cost=287849.32..288643.77 rows=317780 width=44) (actual time=1481.272..1481.276 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=273285.98..280982.21 rows=317780 width=44) (actual time=1474.999..1479.269 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 4  Batches: 1  Memory Usage: 7185kB
               ->  Hash Join  (cost=51665.00..254715.71 rows=317780 width=24) (actual time=286.567..1455.896 rows=30533 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..187579.23 rows=3278535 width=16) (actual time=0.038..885.165 rows=3261873 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 2739342
                     ->  Hash  (cost=49847.61..49847.61 rows=145391 width=12) (actual time=286.002..286.004 rows=146063 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                           ->  Hash Join  (cost=12752.46..49847.61 rows=145391 width=12) (actual time=59.742..261.760 rows=146063 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=6904.39..42096.63 rows=724899 width=16) (actual time=33.961..137.653 rows=722275 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=26131
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6723.17 rows=724899 width=0) (actual time=30.979..30.980 rows=722275 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=5472.00..5472.00 rows=30085 width=4) (actual time=25.755..25.756 rows=30142 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                       ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30085 width=4) (actual time=0.006..22.298 rows=30142 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 119858
 Planning Time: 1.583 ms
 Execution Time: 1481.985 ms
(28 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=75983.04..75983.04 rows=1 width=24) (actual time=979.760..979.762 rows=1 loops=1)
   ->  Sort  (cost=75983.04..75983.05 rows=5 width=24) (actual time=979.758..979.759 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=75982.97..75983.02 rows=5 width=24) (actual time=979.736..979.738 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Merge Semi Join  (cost=32180.44..75697.76 rows=57042 width=16) (actual time=474.385..969.787 rows=51398 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=32179.98..32322.59 rows=57042 width=20) (actual time=474.102..478.558 rows=55973 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: quicksort  Memory: 5909kB
                           ->  Bitmap Heap Scan on orders  (cost=687.11..27673.74 rows=57042 width=20) (actual time=8.361..459.688 rows=55973 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=23186
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..672.85 rows=57042 width=0) (actual time=5.401..5.401 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.43..37472.13 rows=2000513 width=4) (actual time=0.275..320.962 rows=3793256 loops=1)
                           Heap Fetches: 0
 Planning Time: 20.279 ms
 Execution Time: 979.870 ms
(21 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=75983.04..75983.04 rows=1 width=24) (actual time=495.475..495.477 rows=1 loops=1)
   ->  Sort  (cost=75983.04..75983.05 rows=5 width=24) (actual time=495.474..495.475 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=75982.97..75983.02 rows=5 width=24) (actual time=495.455..495.457 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Merge Semi Join  (cost=32180.44..75697.76 rows=57042 width=16) (actual time=45.276..486.786 rows=51398 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=32179.98..32322.59 rows=57042 width=20) (actual time=45.253..48.291 rows=55973 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: quicksort  Memory: 5909kB
                           ->  Bitmap Heap Scan on orders  (cost=687.11..27673.74 rows=57042 width=20) (actual time=6.235..37.515 rows=55973 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=23186
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..672.85 rows=57042 width=0) (actual time=3.560..3.561 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.43..37472.13 rows=2000513 width=4) (actual time=0.015..270.801 rows=3793256 loops=1)
                           Heap Fetches: 0
 Planning Time: 1.384 ms
 Execution Time: 495.528 ms
(21 rows)

query 5 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=146606.73..146606.73 rows=1 width=58) (actual time=1144.999..1145.004 rows=1 loops=1)
   ->  Sort  (cost=146606.73..146606.79 rows=25 width=58) (actual time=1144.997..1145.002 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=146517.15..146606.60 rows=25 width=58) (actual time=1142.280..1144.976 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=146517.15..146534.98 rows=7131 width=38) (actual time=1141.614..1141.906 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 782kB
                     ->  Hash Join  (cost=9490.81..146060.77 rows=7131 width=38) (actual time=86.359..1137.764 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=9017.81..144651.66 rows=178305 width=50) (actual time=79.953..1095.512 rows=182435 loops=1)
                                 ->  Hash Join  (cost=9017.38..39771.98 rows=44565 width=38) (actual time=79.658..679.806 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=2680.37..32153.73 rows=222824 width=8) (actual time=16.981..547.684 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2624.67 rows=222824 width=0) (actual time=13.704..13.704 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=62.615..62.618 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=0.939..56.618 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.343..39.589 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.584..0.586 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.572..0.582 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.276..0.279 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.281..0.282 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.273..0.275 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.43..2.31 rows=4 width=20) (actual time=0.008..0.008 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=6.360..6.360 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.399..4.804 rows=10000 loops=1)
 Planning Time: 28.961 ms
 Execution Time: 1146.044 ms
(42 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=146606.73..146606.73 rows=1 width=58) (actual time=302.744..302.750 rows=1 loops=1)
   ->  Sort  (cost=146606.73..146606.79 rows=25 width=58) (actual time=302.743..302.748 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=146517.15..146606.60 rows=25 width=58) (actual time=300.135..302.732 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=146517.15..146534.98 rows=7131 width=38) (actual time=299.488..299.771 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 782kB
                     ->  Hash Join  (cost=9490.81..146060.77 rows=7131 width=38) (actual time=50.893..296.997 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=9017.81..144651.66 rows=178305 width=50) (actual time=48.032..272.404 rows=182435 loops=1)
                                 ->  Hash Join  (cost=9017.38..39771.98 rows=44565 width=38) (actual time=48.011..144.466 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=2680.37..32153.73 rows=222824 width=8) (actual time=13.459..68.031 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2624.67 rows=222824 width=0) (actual time=10.535..10.536 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=34.522..34.524 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=0.035..29.716 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.005..8.880 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.026..0.028 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.019..0.025 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.43..2.31 rows=4 width=20) (actual time=0.002..0.002 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.834..2.834 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.009..1.388 rows=10000 loops=1)
 Planning Time: 3.506 ms
 Execution Time: 302.832 ms
(42 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=115995.65..115995.66 rows=1 width=32) (actual time=1261.718..1261.719 rows=1 loops=1)
   ->  Aggregate  (cost=115995.65..115995.66 rows=1 width=32) (actual time=1261.716..1261.717 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=22757.63..115414.62 rows=116205 width=12) (actual time=134.847..1199.417 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22728.58 rows=116205 width=0) (actual time=125.428..125.428 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 16.015 ms
 Execution Time: 1262.877 ms
(9 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=115995.65..115995.66 rows=1 width=32) (actual time=216.912..216.914 rows=1 loops=1)
   ->  Aggregate  (cost=115995.65..115995.66 rows=1 width=32) (actual time=216.911..216.912 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=22757.63..115414.62 rows=116205 width=12) (actual time=109.461..187.759 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22728.58 rows=116205 width=0) (actual time=100.473..100.473 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 1.029 ms
 Execution Time: 216.960 ms
(9 rows)

query 7 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=238271.14..238271.18 rows=1 width=92) (actual time=3357.936..3357.942 rows=1 loops=1)
   ->  GroupAggregate  (cost=238271.14..238485.41 rows=6122 width=92) (actual time=3357.935..3357.940 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=238271.14..238286.45 rows=6122 width=72) (actual time=3357.288..3357.343 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 998kB
               ->  Hash Join  (cost=88557.55..237886.08 rows=6122 width=72) (actual time=768.880..3352.429 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=88192.45..236703.30 rows=147115 width=46) (actual time=762.174..3311.932 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=33027.55..173171.62 rows=1838938 width=24) (actual time=211.796..2425.771 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32567.81 rows=1838938 width=0) (actual time=194.027..194.027 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=550.098..550.101 rows=118477 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                 ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=56.190..525.744 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.312..293.326 rows=1500000 loops=1)
                                       ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=55.854..55.856 rows=11896 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.367..53.573 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.328..39.165 rows=150000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.028..0.028 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.019..0.022 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=6.086..6.087 rows=794 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 57kB
                           ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.799..5.944 rows=794 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.436..4.550 rows=10000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.353..0.354 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.348..0.350 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Planning Time: 29.178 ms
 Execution Time: 3358.432 ms
(44 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=238271.14..238271.18 rows=1 width=92) (actual time=988.143..988.150 rows=1 loops=1)
   ->  GroupAggregate  (cost=238271.14..238485.41 rows=6122 width=92) (actual time=988.142..988.148 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=238271.14..238286.45 rows=6122 width=72) (actual time=987.496..987.552 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 998kB
               ->  Hash Join  (cost=88557.55..237886.08 rows=6122 width=72) (actual time=466.383..984.656 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=88192.45..236703.30 rows=147115 width=46) (actual time=464.308..965.477 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=33027.55..173171.62 rows=1838938 width=24) (actual time=150.673..442.099 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32567.81 rows=1838938 width=0) (actual time=133.515..133.516 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=313.536..313.539 rows=118477 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                 ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=28.803..294.356 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.007..82.005 rows=1500000 loops=1)
                                       ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=28.783..28.784 rows=11896 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.019..27.202 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..8.609 rows=150000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.013 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.010 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=1.990..1.991 rows=794 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 57kB
                           ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.023..1.894 rows=794 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.008..0.608 rows=10000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.011..0.012 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.009 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Planning Time: 3.134 ms
 Execution Time: 988.251 ms
(44 rows)

query 8 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=57348.94..57348.98 rows=1 width=40) (actual time=1104.029..1104.036 rows=1 loops=1)
   ->  GroupAggregate  (cost=57348.94..57456.44 rows=2389 width=40) (actual time=1104.028..1104.034 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=57348.94..57354.91 rows=2389 width=46) (actual time=1103.468..1103.524 rows=1235 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 291kB
               ->  Hash Join  (cost=22375.92..57214.89 rows=2389 width=46) (actual time=531.404..1102.317 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=22374.35..57194.04 rows=2389 width=20) (actual time=530.095..1099.075 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=21926.35..56739.77 rows=2389 width=20) (actual time=523.810..1091.760 rows=2485 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=15589.35..50334.08 rows=11945 width=24) (actual time=464.201..1028.844 rows=12097 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=5447.98..38374.43 rows=453030 width=12) (actual time=28.842..516.153 rows=457263 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..5334.73 rows=453030 width=0) (actual time=25.461..25.461 rows=457263 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=9646.99..9646.99 rows=39550 width=20) (actual time=435.242..435.243 rows=39694 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 2645kB
                                             ->  Nested Loop  (cost=0.85..9646.99 rows=39550 width=20) (actual time=2.185..420.267 rows=39694 loops=1)
                                                   ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5401.60 rows=1318 width=4) (actual time=1.093..37.655 rows=1320 loops=1)
                                                         Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.43..2.92 rows=30 width=24) (actual time=0.227..0.284 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=59.594..59.596 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                       ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.653..55.268 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.402..38.731 rows=150000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.246..0.247 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.234..0.244 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.006 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.224..0.224 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.219..0.221 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=6.270..6.271 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.398..4.829 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.300..0.300 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.291..0.294 rows=25 loops=1)
 Planning Time: 35.526 ms
 Execution Time: 1104.832 ms
(51 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=57348.94..57348.98 rows=1 width=40) (actual time=222.523..222.530 rows=1 loops=1)
   ->  GroupAggregate  (cost=57348.94..57456.44 rows=2389 width=40) (actual time=222.521..222.528 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=57348.94..57354.91 rows=2389 width=46) (actual time=221.969..222.027 rows=1235 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 291kB
               ->  Hash Join  (cost=22375.92..57214.89 rows=2389 width=46) (actual time=85.723..221.392 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=22374.35..57194.04 rows=2389 width=20) (actual time=85.690..220.416 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=21926.35..56739.77 rows=2389 width=20) (actual time=82.956..216.788 rows=2485 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=15589.35..50334.08 rows=11945 width=24) (actual time=50.090..181.120 rows=12097 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=5447.98..38374.43 rows=453030 width=12) (actual time=23.197..100.945 rows=457263 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..5334.73 rows=453030 width=0) (actual time=20.255..20.255 rows=457263 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=9646.99..9646.99 rows=39550 width=20) (actual time=26.846..26.847 rows=39694 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 2645kB
                                             ->  Nested Loop  (cost=0.85..9646.99 rows=39550 width=20) (actual time=0.035..20.399 rows=39694 loops=1)
                                                   ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5401.60 rows=1318 width=4) (actual time=0.024..8.225 rows=1320 loops=1)
                                                         Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.43..2.92 rows=30 width=24) (actual time=0.003..0.007 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=32.851..32.853 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                       ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.023..29.599 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.003..8.957 rows=150000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.016..0.018 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.011..0.016 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.722..2.722 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.005..1.378 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.017..0.017 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.009..0.012 rows=25 loops=1)
 Planning Time: 3.931 ms
 Execution Time: 222.617 ms
(51 rows)

query 9 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=132555.21..132555.21 rows=1 width=66) (actual time=2214.242..2214.247 rows=1 loops=1)
   ->  Sort  (cost=132555.21..132705.59 rows=60150 width=66) (actual time=2214.241..2214.245 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=131201.84..132254.46 rows=60150 width=66) (actual time=2213.760..2214.172 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               Batches: 1  Memory Usage: 3153kB
               ->  Hash Join  (cost=72869.08..125897.45 rows=303108 width=57) (actual time=1091.279..1952.566 rows=325928 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=72867.51..123449.80 rows=303108 width=31) (actual time=1090.113..1851.551 rows=325928 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=72419.51..122205.81 rows=303108 width=35) (actual time=1083.735..1755.540 rows=325928 loops=1)
                                 Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.407..309.168 rows=1500000 loops=1)
                                 ->  Hash  (cost=68630.66..68630.66 rows=303108 width=35) (actual time=1082.745..1082.747 rows=325928 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 26989kB
                                       ->  Hash Join  (cost=42471.47..68630.66 rows=303108 width=35) (actual time=745.852..1009.333 rows=325928 loops=1)
                                             Hash Cond: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND (partsupp.ps_partkey = lineitem.l_partkey))
                                             ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..18158.42 rows=800000 width=14) (actual time=0.370..97.405 rows=800000 loops=1)
                                                   Heap Fetches: 0
                                             ->  Hash  (cost=37924.43..37924.43 rows=303108 width=33) (actual time=744.709..744.710 rows=325928 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 25716kB
                                                   ->  Nested Loop  (cost=0.85..37924.43 rows=303108 width=33) (actual time=2.064..673.280 rows=325928 loops=1)
                                                         ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6438.42 rows=10101 width=4) (actual time=0.022..53.822 rows=10880 loops=1)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 189120
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.82 rows=30 width=29) (actual time=0.042..0.054 rows=30 loops=10880)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=6.364..6.365 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.395..4.932 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.260..0.260 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.241..0.247 rows=25 loops=1)
 Planning Time: 37.554 ms
 Execution Time: 2215.739 ms
(38 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=132555.21..132555.21 rows=1 width=66) (actual time=1421.121..1421.126 rows=1 loops=1)
   ->  Sort  (cost=132555.21..132705.59 rows=60150 width=66) (actual time=1421.119..1421.124 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=131201.84..132254.46 rows=60150 width=66) (actual time=1420.652..1421.054 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               Batches: 1  Memory Usage: 3153kB
               ->  Hash Join  (cost=72869.08..125897.45 rows=303108 width=57) (actual time=517.679..1173.624 rows=325928 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=72867.51..123449.80 rows=303108 width=31) (actual time=517.647..1081.032 rows=325928 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=72419.51..122205.81 rows=303108 width=35) (actual time=514.979..1001.560 rows=325928 loops=1)
                                 Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.004..93.772 rows=1500000 loops=1)
                                 ->  Hash  (cost=68630.66..68630.66 rows=303108 width=35) (actual time=514.387..514.389 rows=325928 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 26989kB
                                       ->  Hash Join  (cost=42471.47..68630.66 rows=303108 width=35) (actual time=207.730..442.643 rows=325928 loops=1)
                                             Hash Cond: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND (partsupp.ps_partkey = lineitem.l_partkey))
                                             ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..18158.42 rows=800000 width=14) (actual time=0.023..73.461 rows=800000 loops=1)
                                                   Heap Fetches: 0
                                             ->  Hash  (cost=37924.43..37924.43 rows=303108 width=33) (actual time=206.968..206.969 rows=325928 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 25716kB
                                                   ->  Nested Loop  (cost=0.85..37924.43 rows=303108 width=33) (actual time=0.034..146.532 rows=325928 loops=1)
                                                         ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6438.42 rows=10101 width=4) (actual time=0.021..37.674 rows=10880 loops=1)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 189120
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.82 rows=30 width=29) (actual time=0.003..0.007 rows=30 loops=10880)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.661..2.661 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.011..1.349 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.016..0.016 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.007..0.010 rows=25 loops=1)
 Planning Time: 4.633 ms
 Execution Time: 1421.661 ms
(38 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=161095.52..161095.57 rows=20 width=202) (actual time=1512.448..1512.455 rows=20 loops=1)
   ->  Sort  (cost=161095.52..161234.07 rows=55421 width=202) (actual time=1512.447..1512.452 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=158928.03..159620.79 rows=55421 width=202) (actual time=1482.960..1501.296 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 22033kB
               ->  Hash Join  (cost=35360.76..158235.26 rows=55421 width=182) (actual time=596.045..1394.404 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=35359.20..158063.56 rows=55421 width=160) (actual time=595.818..1370.329 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=28387.20..150946.08 rows=55421 width=16) (actual time=504.273..1243.630 rows=114347 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.43..118733.70 rows=1457373 width=16) (actual time=0.338..565.196 rows=1478870 loops=1)
                                       Index Cond: (l_returnflag = 'R'::bpchar)
                                       Heap Fetches: 0
                                 ->  Hash  (cost=27673.74..27673.74 rows=57042 width=8) (actual time=503.866..503.867 rows=57111 loops=1)
                                       Buckets: 65536  Batches: 1  Memory Usage: 2743kB
                                       ->  Bitmap Heap Scan on orders  (cost=687.11..27673.74 rows=57042 width=8) (actual time=8.353..487.053 rows=57111 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=23377
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..672.85 rows=57042 width=0) (actual time=5.375..5.375 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=91.181..91.181 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.298..49.318 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.223..0.223 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.205..0.210 rows=25 loops=1)
 Planning Time: 26.589 ms
 Execution Time: 1513.222 ms
(31 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=161095.52..161095.57 rows=20 width=202) (actual time=753.711..753.718 rows=20 loops=1)
   ->  Sort  (cost=161095.52..161234.07 rows=55421 width=202) (actual time=753.709..753.714 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=158928.03..159620.79 rows=55421 width=202) (actual time=724.443..742.683 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 22033kB
               ->  Hash Join  (cost=35360.76..158235.26 rows=55421 width=182) (actual time=110.676..646.395 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=35359.20..158063.56 rows=55421 width=160) (actual time=110.656..624.203 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=28387.20..150946.08 rows=55421 width=16) (actual time=45.913..526.583 rows=114347 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.43..118733.70 rows=1457373 width=16) (actual time=0.016..334.251 rows=1478870 loops=1)
                                       Index Cond: (l_returnflag = 'R'::bpchar)
                                       Heap Fetches: 0
                                 ->  Hash  (cost=27673.74..27673.74 rows=57042 width=8) (actual time=45.845..45.846 rows=57111 loops=1)
                                       Buckets: 65536  Batches: 1  Memory Usage: 2743kB
                                       ->  Bitmap Heap Scan on orders  (cost=687.11..27673.74 rows=57042 width=8) (actual time=6.029..38.401 rows=57111 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=23377
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..672.85 rows=57042 width=0) (actual time=3.396..3.396 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=64.384..64.384 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.005..25.006 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.015..0.016 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.006..0.009 rows=25 loops=1)
 Planning Time: 2.200 ms
 Execution Time: 754.189 ms
(31 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=20432.90..20432.91 rows=1 width=36) (actual time=693.079..693.084 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=9749.78..9749.79 rows=1 width=32) (actual time=25.479..25.481 rows=1 loops=1)
           ->  Nested Loop  (cost=5.81..9509.78 rows=32000 width=10) (actual time=0.052..17.934 rows=32880 loops=1)
                 ->  Nested Loop  (cost=5.38..232.45 rows=400 width=4) (actual time=0.046..0.269 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=5.38..227.14 rows=400 width=8) (actual time=0.036..0.217 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.020..0.020 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..22.39 rows=80 width=14) (actual time=0.002..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=10683.11..10709.78 rows=10667 width=36) (actual time=693.078..693.080 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=10069.78..10629.78 rows=10667 width=36) (actual time=682.420..692.940 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 11793kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.81..9509.78 rows=32000 width=14) (actual time=1.127..627.932 rows=32880 loops=1)
                     ->  Nested Loop  (cost=5.38..232.45 rows=400 width=4) (actual time=0.729..4.303 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.280..0.284 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=5.38..227.14 rows=400 width=8) (actual time=0.445..3.913 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.234..0.234 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..22.39 rows=80 width=18) (actual time=0.046..1.500 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 15.137 ms
 Execution Time: 693.677 ms
(37 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=20432.90..20432.91 rows=1 width=36) (actual time=79.293..79.298 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=9749.78..9749.79 rows=1 width=32) (actual time=25.445..25.447 rows=1 loops=1)
           ->  Nested Loop  (cost=5.81..9509.78 rows=32000 width=10) (actual time=0.049..17.869 rows=32880 loops=1)
                 ->  Nested Loop  (cost=5.38..232.45 rows=400 width=4) (actual time=0.044..0.265 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=5.38..227.14 rows=400 width=8) (actual time=0.033..0.211 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.018..0.018 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..22.39 rows=80 width=14) (actual time=0.002..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=10683.11..10709.78 rows=10667 width=36) (actual time=79.292..79.294 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=10069.78..10629.78 rows=10667 width=36) (actual time=68.791..79.155 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 11793kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.81..9509.78 rows=32000 width=14) (actual time=0.060..26.290 rows=32880 loops=1)
                     ->  Nested Loop  (cost=5.38..232.45 rows=400 width=4) (actual time=0.055..0.404 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.015 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=5.38..227.14 rows=400 width=8) (actual time=0.039..0.333 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.022..0.022 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..22.39 rows=80 width=18) (actual time=0.003..0.054 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.099 ms
 Execution Time: 79.645 ms
(37 rows)

query 12 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=67916.91..67916.91 rows=1 width=27) (actual time=589.088..589.090 rows=1 loops=1)
   ->  Sort  (cost=67916.91..67916.93 rows=7 width=27) (actual time=589.086..589.088 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=67916.81..67916.88 rows=7 width=27) (actual time=589.063..589.065 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               Batches: 1  Memory Usage: 24kB
               ->  Hash Join  (cost=14745.17..67413.63 rows=28753 width=27) (actual time=92.406..576.254 rows=30953 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.321..289.931 rows=1500000 loops=1)
                     ->  Hash  (cost=14385.76..14385.76 rows=28753 width=15) (actual time=91.963..91.964 rows=30953 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1707kB
                           ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..14385.76 rows=28753 width=15) (actual time=0.298..86.297 rows=30953 loops=1)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 77481
                                 Heap Fetches: 0
 Planning Time: 20.516 ms
 Execution Time: 589.717 ms
(19 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=67916.91..67916.91 rows=1 width=27) (actual time=345.224..345.227 rows=1 loops=1)
   ->  Sort  (cost=67916.91..67916.93 rows=7 width=27) (actual time=345.223..345.225 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=67916.81..67916.88 rows=7 width=27) (actual time=345.202..345.204 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               Batches: 1  Memory Usage: 24kB
               ->  Hash Join  (cost=14745.17..67413.63 rows=28753 width=27) (actual time=63.983..335.520 rows=30953 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.004..81.299 rows=1500000 loops=1)
                     ->  Hash  (cost=14385.76..14385.76 rows=28753 width=15) (actual time=63.938..63.939 rows=30953 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1707kB
                           ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..14385.76 rows=28753 width=15) (actual time=0.025..59.806 rows=30953 loops=1)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 77481
                                 Heap Fetches: 0
 Planning Time: 1.404 ms
 Execution Time: 345.515 ms
(19 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64793.97..64793.97 rows=1 width=16) (actual time=1472.397..1472.399 rows=1 loops=1)
   ->  Sort  (cost=64793.97..64794.47 rows=200 width=16) (actual time=1472.395..1472.397 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64790.97..64792.97 rows=200 width=16) (actual time=1472.370..1472.377 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61040.97..62540.97 rows=150000 width=12) (actual time=1431.818..1455.754 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4953.42..53692.49 rows=1469697 width=8) (actual time=34.197..1072.188 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1469697 width=8) (actual time=0.453..629.274 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=33.368..33.368 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.354..16.424 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 13.634 ms
 Execution Time: 1473.945 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64793.97..64793.97 rows=1 width=16) (actual time=1273.398..1273.401 rows=1 loops=1)
   ->  Sort  (cost=64793.97..64794.47 rows=200 width=16) (actual time=1273.397..1273.399 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64790.97..64792.97 rows=200 width=16) (actual time=1273.371..1273.378 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61040.97..62540.97 rows=150000 width=12) (actual time=1233.481..1256.485 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4953.42..53692.49 rows=1469697 width=8) (actual time=28.425..891.259 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1469697 width=8) (actual time=0.012..474.172 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=27.976..27.977 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.014..12.388 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 1.116 ms
 Execution Time: 1274.490 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=80977.79..80977.80 rows=1 width=32) (actual time=812.082..812.084 rows=1 loops=1)
   ->  Aggregate  (cost=80977.79..80977.80 rows=1 width=32) (actual time=812.080..812.082 rows=1 loops=1)
         ->  Hash Join  (cost=9818.65..79790.83 rows=67826 width=33) (actual time=107.854..759.709 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1219.65..71013.78 rows=67826 width=16) (actual time=18.632..625.693 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1202.69 rows=67826 width=0) (actual time=13.062..13.062 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=89.013..89.013 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.453..55.423 rows=200000 loops=1)
 Planning Time: 20.884 ms
 Execution Time: 812.694 ms
(14 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=80977.79..80977.80 rows=1 width=32) (actual time=182.584..182.586 rows=1 loops=1)
   ->  Aggregate  (cost=80977.79..80977.80 rows=1 width=32) (actual time=182.583..182.585 rows=1 loops=1)
         ->  Hash Join  (cost=9818.65..79790.83 rows=67826 width=33) (actual time=70.902..151.637 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1219.65..71013.78 rows=67826 width=16) (actual time=12.993..66.200 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1202.69 rows=67826 width=0) (actual time=7.806..7.806 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=57.686..57.687 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.010..27.013 rows=200000 loops=1)
 Planning Time: 1.317 ms
 Execution Time: 182.649 ms
(14 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=247526.91..247536.11 rows=1 width=103) (actual time=1428.763..1428.766 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122917.56..122917.57 rows=1 width=32) (actual time=203.069..203.070 rows=1 loops=1)
           ->  HashAggregate  (cost=122667.74..122792.65 rows=9993 width=36) (actual time=199.964..202.490 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4225.96..120315.03 rows=235271 width=16) (actual time=28.163..96.060 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4167.14 rows=235271 width=0) (actual time=19.160..19.160 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=124609.34..125069.09 rows=50 width=103) (actual time=1428.761..1428.763 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..434.29 rows=10000 width=71) (actual time=0.426..5.260 rows=8449 loops=1)
         ->  Sort  (cost=124609.06..124609.18 rows=50 width=36) (actual time=1422.991..1422.993 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=124432.27..124607.65 rows=50 width=36) (actual time=1420.653..1422.985 rows=1 loops=1)
                     ->  HashAggregate  (cost=124432.27..124607.15 rows=50 width=36) (actual time=1420.652..1422.983 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 4497kB
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=4225.96..120315.03 rows=235271 width=16) (actual time=39.843..1041.927 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4167.14 rows=235271 width=0) (actual time=30.072..30.072 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 19.180 ms
 Execution Time: 1429.517 ms
(30 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=247526.91..247536.11 rows=1 width=103) (actual time=439.048..439.051 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122917.56..122917.57 rows=1 width=32) (actual time=201.822..201.823 rows=1 loops=1)
           ->  HashAggregate  (cost=122667.74..122792.65 rows=9993 width=36) (actual time=198.743..201.250 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4225.96..120315.03 rows=235271 width=16) (actual time=27.646..95.303 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4167.14 rows=235271 width=0) (actual time=18.692..18.692 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=124609.34..125069.09 rows=50 width=103) (actual time=439.046..439.048 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..434.29 rows=10000 width=71) (actual time=0.007..1.257 rows=8449 loops=1)
         ->  Sort  (cost=124609.06..124609.18 rows=50 width=36) (actual time=437.299..437.300 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=124432.27..124607.65 rows=50 width=36) (actual time=434.929..437.296 rows=1 loops=1)
                     ->  HashAggregate  (cost=124432.27..124607.15 rows=50 width=36) (actual time=434.928..437.294 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 4497kB
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=4225.96..120315.03 rows=235271 width=16) (actual time=29.092..123.175 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4167.14 rows=235271 width=0) (actual time=20.052..20.053 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 1.358 ms
 Execution Time: 439.397 ms
(30 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=34803.43..34803.43 rows=1 width=44) (actual time=609.619..609.622 rows=1 loops=1)
   ->  Sort  (cost=34803.43..34842.99 rows=15825 width=44) (actual time=609.618..609.620 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=33841.03..34724.30 rows=15825 width=44) (actual time=559.026..605.962 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=33841.03..33986.03 rows=58002 width=40) (actual time=559.002..566.690 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9809.94..29251.96 rows=58002 width=40) (actual time=86.749..294.660 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..18740.43 rows=400000 width=8) (actual time=6.434..140.688 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.290..5.775 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29001 width=40) (actual time=80.272..80.273 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29001 width=40) (actual time=0.686..73.811 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning Time: 17.698 ms
 Execution Time: 609.685 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=34803.43..34803.43 rows=1 width=44) (actual time=552.233..552.236 rows=1 loops=1)
   ->  Sort  (cost=34803.43..34842.99 rows=15825 width=44) (actual time=552.232..552.234 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=33841.03..34724.30 rows=15825 width=44) (actual time=502.083..548.634 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=33841.03..33986.03 rows=58002 width=40) (actual time=502.062..509.518 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9809.94..29251.96 rows=58002 width=40) (actual time=51.533..237.987 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..18740.43 rows=400000 width=8) (actual time=2.082..117.391 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.086..2.065 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29001 width=40) (actual time=49.421..49.422 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29001 width=40) (actual time=0.007..44.258 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning Time: 1.390 ms
 Execution Time: 552.292 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=179340.65..179340.66 rows=1 width=32) (actual time=2136.204..2136.206 rows=1 loops=1)
   ->  Aggregate  (cost=179340.65..179340.66 rows=1 width=32) (actual time=2136.203..2136.204 rows=1 loops=1)
         ->  Nested Loop  (cost=7107.37..179335.78 rows=1945 width=8) (actual time=61.442..2135.913 rows=592 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=7106.94..178803.15 rows=194 width=40) (actual time=60.928..2012.316 rows=208 loops=1)
                     Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Sort  (cost=7106.51..7107.00 rows=197 width=4) (actual time=54.123..54.220 rows=208 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 34kB
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=197 width=4) (actual time=1.210..54.057 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
                     ->  GroupAggregate  (cost=0.43..169226.21 rows=197401 width=36) (actual time=0.566..1945.111 rows=199275 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136257.50 rows=6001538 width=9) (actual time=0.509..1164.858 rows=5979328 loops=1)
                                 Heap Fetches: 0
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.62 rows=10 width=17) (actual time=0.554..0.592 rows=3 loops=208)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning Time: 20.174 ms
 Execution Time: 2136.982 ms
(21 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=179340.65..179340.66 rows=1 width=32) (actual time=1764.225..1764.227 rows=1 loops=1)
   ->  Aggregate  (cost=179340.65..179340.66 rows=1 width=32) (actual time=1764.224..1764.225 rows=1 loops=1)
         ->  Nested Loop  (cost=7107.37..179335.78 rows=1945 width=8) (actual time=32.096..1764.142 rows=592 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=7106.94..178803.15 rows=194 width=40) (actual time=32.082..1762.480 rows=208 loops=1)
                     Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Sort  (cost=7106.51..7107.00 rows=197 width=4) (actual time=26.674..26.708 rows=208 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 34kB
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=197 width=4) (actual time=0.098..26.638 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
                     ->  GroupAggregate  (cost=0.43..169226.21 rows=197401 width=36) (actual time=0.036..1725.142 rows=199275 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136257.50 rows=6001538 width=9) (actual time=0.015..967.824 rows=5979328 loops=1)
                                 Heap Fetches: 0
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.62 rows=10 width=17) (actual time=0.006..0.007 rows=3 loops=208)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning Time: 1.477 ms
 Execution Time: 1764.282 ms
(21 rows)

query 18 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=707360.42..707360.67 rows=100 width=71) (actual time=2948.483..2948.488 rows=9 loops=1)
   ->  Sort  (cost=707360.42..712362.98 rows=2001025 width=71) (actual time=2948.482..2948.486 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=570695.60..630882.68 rows=2001025 width=71) (actual time=2948.089..2948.453 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 3097kB
               ->  Hash Join  (cost=7001.04..445318.88 rows=2001025 width=44) (actual time=737.628..2948.019 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=29.04..433094.04 rows=2001025 width=25) (actual time=666.694..2877.050 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=0.86..260610.26 rows=500128 width=24) (actual time=506.163..2265.014 rows=9 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.551..330.085 rows=1201687 loops=1)
                                 ->  GroupAggregate  (cost=0.43..188742.95 rows=500128 width=4) (actual time=395.610..1861.901 rows=9 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 1499991
                                       ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136229.50 rows=6001538 width=9) (actual time=0.281..701.787 rows=6001215 loops=1)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136229.50 rows=6001538 width=9) (actual time=0.016..410.726 rows=4807580 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=70.608..70.609 rows=150000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.461..44.878 rows=150000 loops=1)
 Planning Time: 26.765 ms
 Execution Time: 2949.772 ms
(27 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=707360.42..707360.67 rows=100 width=71) (actual time=2550.670..2550.674 rows=9 loops=1)
   ->  Sort  (cost=707360.42..712362.98 rows=2001025 width=71) (actual time=2550.668..2550.672 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=570695.60..630882.68 rows=2001025 width=71) (actual time=2550.286..2550.637 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 3097kB
               ->  Hash Join  (cost=7001.04..445318.88 rows=2001025 width=44) (actual time=614.762..2550.227 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=29.04..433094.04 rows=2001025 width=25) (actual time=572.811..2508.243 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=0.86..260610.26 rows=500128 width=24) (actual time=412.259..1897.163 rows=9 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.008..164.969 rows=1201687 loops=1)
                                 ->  GroupAggregate  (cost=0.43..188742.95 rows=500128 width=4) (actual time=350.774..1663.462 rows=9 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 1499991
                                       ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136229.50 rows=6001538 width=9) (actual time=0.019..528.953 rows=6001215 loops=1)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136229.50 rows=6001538 width=9) (actual time=0.012..409.668 rows=4807580 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=41.629..41.629 rows=150000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.009..18.653 rows=150000 loops=1)
 Planning Time: 1.874 ms
 Execution Time: 2551.365 ms
(27 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=14266.45..14266.46 rows=1 width=32) (actual time=332.815..332.816 rows=1 loops=1)
   ->  Aggregate  (cost=14266.45..14266.46 rows=1 width=32) (actual time=332.813..332.814 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..14265.59 rows=114 width=12) (actual time=2.729..332.502 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=484 width=30) (actual time=1.336..90.937 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.43 rows=1 width=21) (actual time=0.455..0.475 rows=0 loops=507)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning Time: 22.402 ms
 Execution Time: 333.548 ms
(13 rows)

SET
SET
SET


 Limit  (cost=14266.45..14266.46 rows=1 width=32) (actual time=51.149..51.150 rows=1 loops=1)
   ->  Aggregate  (cost=14266.45..14266.46 rows=1 width=32) (actual time=51.148..51.149 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..14265.59 rows=114 width=12) (actual time=0.297..51.072 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=484 width=30) (actual time=0.244..46.766 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.43 rows=1 width=21) (actual time=0.008..0.008 rows=0 loops=507)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning Time: 2.641 ms
 Execution Time: 51.192 ms
(13 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=221885.84..221885.84 rows=1 width=51) (actual time=3522.369..3522.373 rows=1 loops=1)
   ->  Sort  (cost=221885.84..221885.84 rows=1 width=51) (actual time=3522.368..3522.371 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=193219.77..221885.83 rows=1 width=51) (actual time=3354.766..3522.169 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1907818
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.817..4.029 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.213..0.216 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.596..3.054 rows=10000 loops=1)
               ->  Materialize  (cost=193219.77..221430.52 rows=1 width=8) (actual time=5.607..7.796 rows=4356 loops=438)
                     ->  Nested Loop  (cost=193219.77..221430.51 rows=1 width=8) (actual time=2455.994..3348.541 rows=5898 loops=1)
                           ->  Hash Join  (cost=193219.35..215763.06 rows=4931 width=44) (actual time=2455.517..3055.383 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=186755.68..203136.20 rows=488172 width=40) (actual time=2424.777..2978.587 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 9  Memory Usage: 34897kB  Disk Usage: 31704kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16659.65..143132.64 rows=927533 width=13) (actual time=126.542..1938.023 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16427.76 rows=927533 width=0) (actual time=109.702..109.702 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6438.42..6438.42 rows=2020 width=4) (actual time=30.719..30.720 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6438.42 rows=2020 width=4) (actual time=0.037..30.180 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                             Heap Fetches: 0
                           ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..1.14 rows=1 width=12) (actual time=0.049..0.049 rows=1 loops=5914)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning Time: 26.365 ms
 Execution Time: 3527.411 ms
(39 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=221885.84..221885.84 rows=1 width=51) (actual time=1451.512..1451.516 rows=1 loops=1)
   ->  Sort  (cost=221885.84..221885.84 rows=1 width=51) (actual time=1451.511..1451.514 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=193219.77..221885.83 rows=1 width=51) (actual time=1285.403..1451.339 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1907818
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.023..1.707 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.011..0.613 rows=10000 loops=1)
               ->  Materialize  (cost=193219.77..221430.52 rows=1 width=8) (actual time=1.626..3.075 rows=4356 loops=438)
                     ->  Nested Loop  (cost=193219.77..221430.51 rows=1 width=8) (actual time=711.898..1281.968 rows=5898 loops=1)
                           ->  Hash Join  (cost=193219.35..215763.06 rows=4931 width=44) (actual time=711.878..1263.029 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=186755.68..203136.20 rows=488172 width=40) (actual time=691.456..1204.762 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 9  Memory Usage: 34897kB  Disk Usage: 31704kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16659.65..143132.64 rows=927533 width=13) (actual time=90.736..297.854 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16427.76 rows=927533 width=0) (actual time=74.599..74.599 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6438.42..6438.42 rows=2020 width=4) (actual time=20.404..20.405 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6438.42 rows=2020 width=4) (actual time=0.018..20.083 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                             Heap Fetches: 0
                           ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..1.14 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning Time: 2.767 ms
 Execution Time: 1456.909 ms
(39 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=103680.69..103680.70 rows=1 width=34) (actual time=1856.705..1856.719 rows=100 loops=1)
   ->  Sort  (cost=103680.69..103680.70 rows=1 width=34) (actual time=1856.703..1856.711 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=103680.66..103680.68 rows=1 width=34) (actual time=1855.686..1856.311 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=103680.66..103680.67 rows=1 width=26) (actual time=1855.677..1855.833 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=55999.95..103680.65 rows=1 width=26) (actual time=837.201..1842.013 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 2768
                           ->  Nested Loop  (cost=55999.52..103678.22 rows=1 width=38) (actual time=837.161..1457.173 rows=6909 loops=1)
                                 ->  Merge Anti Join  (cost=55999.09..103675.86 rows=1 width=34) (actual time=837.148..1388.735 rows=14289 loops=1)
                                       Merge Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 55738
                                       ->  Sort  (cost=55998.66..56198.71 rows=80021 width=34) (actual time=837.016..848.399 rows=159165 loops=1)
                                             Sort Key: l1.l_orderkey
                                             Sort Method: quicksort  Memory: 18579kB
                                             ->  Hash Join  (cost=237.88..49481.71 rows=80021 width=34) (actual time=5.663..811.466 rows=159165 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..40942.13 rows=2000513 width=8) (actual time=0.287..456.560 rows=3793296 loops=1)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=232.45..232.45 rows=400 width=30) (actual time=5.353..5.355 rows=421 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=5.38..232.45 rows=400 width=30) (actual time=1.146..5.237 rows=421 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.199..0.201 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=5.38..227.14 rows=400 width=34) (actual time=0.940..4.952 rows=421 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.559..0.559 rows=421 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..40942.13 rows=2000513 width=8) (actual time=0.016..336.806 rows=3797105 loops=1)
                                             Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=14289)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.055..0.055 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 25.819 ms
 Execution Time: 1857.621 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=103680.69..103680.70 rows=1 width=34) (actual time=1330.366..1330.380 rows=100 loops=1)
   ->  Sort  (cost=103680.69..103680.70 rows=1 width=34) (actual time=1330.365..1330.372 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=103680.66..103680.68 rows=1 width=34) (actual time=1329.351..1329.972 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=103680.66..103680.67 rows=1 width=26) (actual time=1329.343..1329.500 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=55999.95..103680.65 rows=1 width=26) (actual time=744.768..1316.555 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 2768
                           ->  Nested Loop  (cost=55999.52..103678.22 rows=1 width=38) (actual time=744.751..1299.989 rows=6909 loops=1)
                                 ->  Merge Anti Join  (cost=55999.09..103675.86 rows=1 width=34) (actual time=744.739..1270.956 rows=14289 loops=1)
                                       Merge Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 55738
                                       ->  Sort  (cost=55998.66..56198.71 rows=80021 width=34) (actual time=744.607..754.360 rows=159165 loops=1)
                                             Sort Key: l1.l_orderkey
                                             Sort Method: quicksort  Memory: 18579kB
                                             ->  Hash Join  (cost=237.88..49481.71 rows=80021 width=34) (actual time=0.431..721.733 rows=159165 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..40942.13 rows=2000513 width=8) (actual time=0.016..379.158 rows=3793296 loops=1)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=232.45..232.45 rows=400 width=30) (actual time=0.397..0.398 rows=421 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=5.38..232.45 rows=400 width=30) (actual time=0.048..0.333 rows=421 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=5.38..227.14 rows=400 width=34) (actual time=0.039..0.281 rows=421 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.019..0.019 rows=421 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..40942.13 rows=2000513 width=8) (actual time=0.015..320.825 rows=3797105 loops=1)
                                             Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=14289)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 2.589 ms
 Execution Time: 1330.684 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16127.32..16127.34 rows=1 width=72) (actual time=196.228..196.230 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.45..7546.47 rows=1 width=32) (actual time=98.250..98.251 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4781 width=6) (actual time=0.016..94.705 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8580.85..8601.45 rows=749 width=72) (actual time=196.227..196.227 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8580.85..8582.72 rows=749 width=38) (actual time=196.033..196.068 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8545.09 rows=749 width=38) (actual time=98.592..193.914 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=98.576..151.258 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.00 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 14.391 ms
 Execution Time: 196.286 ms
(20 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16127.32..16127.34 rows=1 width=72) (actual time=154.536..154.538 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.45..7546.47 rows=1 width=32) (actual time=72.103..72.104 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4781 width=6) (actual time=0.006..68.914 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8580.85..8601.45 rows=749 width=72) (actual time=154.535..154.535 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8580.85..8582.72 rows=749 width=38) (actual time=154.341..154.376 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8545.09 rows=749 width=38) (actual time=72.145..152.429 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=72.129..122.867 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.00 rows=17 width=4) (actual time=0.001..0.001 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 0.782 ms
 Execution Time: 154.578 ms
(20 rows)

