query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184156.25..184156.89 rows=1 width=236) (actual time=1988.760..1990.654 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184156.25..184160.07 rows=6 width=236) (actual time=1988.759..1990.653 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184156.25..184159.12 rows=24 width=236) (actual time=1988.725..1990.623 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183156.19..183156.21 rows=6 width=236) (actual time=1978.265..1978.266 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 26kB
                     Worker 0:  Sort Method: quicksort  Memory: 26kB
                     Worker 1:  Sort Method: quicksort  Memory: 26kB
                     Worker 2:  Sort Method: quicksort  Memory: 26kB
                     Worker 3:  Sort Method: quicksort  Memory: 26kB
                     ->  Partial HashAggregate  (cost=183155.98..183156.11 rows=6 width=236) (actual time=1978.229..1978.234 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.68 rows=1481180 width=25) (actual time=0.130..516.176 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 22.160 ms
 Execution Time: 1991.327 ms
(25 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184156.25..184156.89 rows=1 width=236) (actual time=1798.636..1799.272 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184156.25..184160.07 rows=6 width=236) (actual time=1798.635..1799.270 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184156.25..184159.12 rows=24 width=236) (actual time=1798.607..1799.245 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183156.19..183156.21 rows=6 width=236) (actual time=1794.152..1794.153 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 26kB
                     Worker 0:  Sort Method: quicksort  Memory: 26kB
                     Worker 1:  Sort Method: quicksort  Memory: 26kB
                     Worker 2:  Sort Method: quicksort  Memory: 26kB
                     Worker 3:  Sort Method: quicksort  Memory: 26kB
                     ->  Partial HashAggregate  (cost=183155.98..183156.11 rows=6 width=236) (actual time=1794.123..1794.128 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.68 rows=1481180 width=25) (actual time=0.034..248.177 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 1.052 ms
 Execution Time: 1799.571 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18275.64..18275.64 rows=1 width=192) (actual time=172.102..172.120 rows=100 loops=1)
   ->  Sort  (cost=18275.64..18275.64 rows=1 width=192) (actual time=172.093..172.100 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Nested Loop  (cost=14.58..18275.63 rows=1 width=192) (actual time=5.258..171.763 rows=489 loops=1)
               Join Filter: (supplier.s_nationkey = nation.n_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.393..0.399 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.191..0.192 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.197..0.199 rows=25 loops=1)
               ->  Materialize  (cost=14.58..18272.93 rows=1 width=170) (actual time=0.375..34.190 rows=489 loops=5)
                     ->  Nested Loop  (cost=14.58..18272.93 rows=1 width=170) (actual time=1.872..170.291 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.30..18271.66 rows=1 width=34) (actual time=1.482..126.926 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5439.33 rows=817 width=30) (actual time=0.257..25.591 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.88..15.70 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.44..13.45 rows=1 width=32) (actual time=0.123..0.123 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.85..13.44 rows=1 width=6) (actual time=0.110..0.120 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..12.33 rows=4 width=10) (actual time=0.088..0.117 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.71..11.71 rows=4 width=10) (actual time=0.086..0.110 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.081..0.082 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..2.30 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.088..0.088 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 22.896 ms
 Execution Time: 172.802 ms
(47 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18275.64..18275.64 rows=1 width=192) (actual time=26.416..26.434 rows=100 loops=1)
   ->  Sort  (cost=18275.64..18275.64 rows=1 width=192) (actual time=26.415..26.423 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Nested Loop  (cost=14.58..18275.63 rows=1 width=192) (actual time=0.173..26.127 rows=489 loops=1)
               Join Filter: (supplier.s_nationkey = nation.n_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.010..0.016 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
               ->  Materialize  (cost=14.58..18272.93 rows=1 width=170) (actual time=0.013..5.161 rows=489 loops=5)
                     ->  Nested Loop  (cost=14.58..18272.93 rows=1 width=170) (actual time=0.060..25.451 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.30..18271.66 rows=1 width=34) (actual time=0.052..24.259 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5439.33 rows=817 width=30) (actual time=0.008..8.636 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.88..15.70 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.44..13.45 rows=1 width=32) (actual time=0.017..0.017 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.85..13.44 rows=1 width=6) (actual time=0.012..0.016 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..12.33 rows=4 width=10) (actual time=0.006..0.014 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.71..11.71 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.003..0.003 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..2.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.002..0.002 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 2.618 ms
 Execution Time: 26.486 ms
(47 rows)

query 3 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234415.59..234415.62 rows=10 width=44) (actual time=1170.598..1173.603 rows=10 loops=1)
   ->  Sort  (cost=234415.59..235219.25 rows=321462 width=44) (actual time=1170.597..1173.601 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=180138.57..227468.91 rows=321462 width=44) (actual time=1148.997..1171.255 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180138.57..218628.71 rows=321462 width=24) (actual time=1148.984..1156.235 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=179138.51..179339.43 rows=80366 width=24) (actual time=1139.342..1139.603 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 465kB
                           Worker 0:  Sort Method: quicksort  Memory: 460kB
                           Worker 1:  Sort Method: quicksort  Memory: 476kB
                           Worker 2:  Sort Method: quicksort  Memory: 469kB
                           Worker 3:  Sort Method: quicksort  Memory: 465kB
                           ->  Parallel Hash Join  (cost=37918.70..172590.97 rows=80366 width=24) (actual time=239.780..1137.567 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.68 rows=826245 width=16) (actual time=0.669..828.189 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37330.40..37330.40 rows=47064 width=12) (actual time=237.890..237.892 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8960kB
                                       ->  Parallel Hash Join  (cost=4534.91..37330.40 rows=47064 width=12) (actual time=27.806..227.956 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=234695 width=16) (actual time=0.472..171.862 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12533 width=4) (actual time=27.221..27.221 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12533 width=4) (actual time=0.795..25.507 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 24.079 ms
 Execution Time: 1174.016 ms
(35 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234415.59..234415.62 rows=10 width=44) (actual time=424.274..425.658 rows=10 loops=1)
   ->  Sort  (cost=234415.59..235219.25 rows=321462 width=44) (actual time=424.273..425.656 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=180138.57..227468.91 rows=321462 width=44) (actual time=402.358..423.289 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180138.57..218628.71 rows=321462 width=24) (actual time=402.343..407.998 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=179138.51..179339.43 rows=80366 width=24) (actual time=397.223..397.494 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 434kB
                           Worker 0:  Sort Method: quicksort  Memory: 517kB
                           Worker 1:  Sort Method: quicksort  Memory: 522kB
                           Worker 2:  Sort Method: quicksort  Memory: 475kB
                           Worker 3:  Sort Method: quicksort  Memory: 386kB
                           ->  Parallel Hash Join  (cost=37918.70..172590.97 rows=80366 width=24) (actual time=92.458..395.028 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.68 rows=826245 width=16) (actual time=0.817..223.537 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37330.40..37330.40 rows=47064 width=12) (actual time=91.045..91.048 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                       ->  Parallel Hash Join  (cost=4534.91..37330.40 rows=47064 width=12) (actual time=8.849..81.543 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=234695 width=16) (actual time=0.012..46.530 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12533 width=4) (actual time=8.199..8.199 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12533 width=4) (actual time=0.447..6.144 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 1.695 ms
 Execution Time: 425.737 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29416.32..53561.65 rows=1 width=24) (actual time=922.591..927.376 rows=1 loops=1)
   ->  GroupAggregate  (cost=29416.32..150142.96 rows=5 width=24) (actual time=922.589..927.374 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29416.32..149855.43 rows=57496 width=16) (actual time=425.456..923.323 rows=10479 loops=1)
               ->  Gather Merge  (cost=29415.89..36218.04 rows=57496 width=20) (actual time=424.950..435.583 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28415.85..28462.22 rows=18547 width=20) (actual time=417.283..417.669 rows=3790 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 943kB
                           Worker 0:  Sort Method: quicksort  Memory: 921kB
                           Worker 1:  Sort Method: quicksort  Memory: 915kB
                           Worker 2:  Sort Method: quicksort  Memory: 946kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=691.76..27100.97 rows=18547 width=20) (actual time=4.589..411.835 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5990
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..677.39 rows=57496 width=0) (actual time=6.994..6.995 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.43..2.22 rows=1 width=4) (actual time=0.042..0.042 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Heap Fetches: 0
 Planning Time: 21.187 ms
 Execution Time: 928.853 ms
(23 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29416.32..53561.65 rows=1 width=24) (actual time=66.391..71.296 rows=1 loops=1)
   ->  GroupAggregate  (cost=29416.32..150142.96 rows=5 width=24) (actual time=66.390..71.294 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29416.32..149855.43 rows=57496 width=16) (actual time=35.886..69.838 rows=10479 loops=1)
               ->  Gather Merge  (cost=29415.89..36218.04 rows=57496 width=20) (actual time=35.843..43.488 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28415.85..28462.22 rows=18547 width=20) (actual time=32.015..32.256 rows=3733 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 892kB
                           Worker 0:  Sort Method: quicksort  Memory: 891kB
                           Worker 1:  Sort Method: quicksort  Memory: 950kB
                           Worker 2:  Sort Method: quicksort  Memory: 992kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=691.76..27100.97 rows=18547 width=20) (actual time=6.013..28.463 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5340
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..677.39 rows=57496 width=0) (actual time=5.495..5.496 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.43..2.22 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Heap Fetches: 0
 Planning Time: 1.494 ms
 Execution Time: 71.347 ms
(23 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=72032.21..72032.22 rows=1 width=58) (actual time=774.444..781.507 rows=1 loops=1)
   ->  Sort  (cost=72032.21..72032.28 rows=25 width=58) (actual time=774.443..781.505 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=71992.36..72032.09 rows=25 width=58) (actual time=773.910..781.494 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=71992.36..72031.21 rows=75 width=58) (actual time=773.701..781.475 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=70992.32..71022.36 rows=25 width=58) (actual time=766.141..766.817 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=70992.32..70998.27 rows=2378 width=38) (actual time=765.966..766.050 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 154kB
                                 Worker 0:  Sort Method: quicksort  Memory: 152kB
                                 Worker 1:  Sort Method: quicksort  Memory: 149kB
                                 Worker 2:  Sort Method: quicksort  Memory: 152kB
                                 ->  Hash Join  (cost=7985.19..70858.97 rows=2378 width=38) (actual time=58.576..764.691 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7512.19..70073.79 rows=59463 width=50) (actual time=53.893..748.760 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7511.76..35097.99 rows=14862 width=38) (actual time=53.397..551.752 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2771.63..30017.28 rows=74310 width=8) (actual time=20.211..495.134 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6497
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2714.04 rows=230361 width=0) (actual time=16.130..16.130 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=33.016..33.019 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.252..30.578 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.132..25.853 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.113..0.115 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.108..0.113 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.050..0.051 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.052..0.053 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.050..0.051 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.43..2.31 rows=4 width=20) (actual time=0.016..0.016 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=4.320..4.320 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.311..2.409 rows=10000 loops=4)
 Planning Time: 29.809 ms
 Execution Time: 781.590 ms
(50 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=72032.21..72032.22 rows=1 width=58) (actual time=129.080..138.832 rows=1 loops=1)
   ->  Sort  (cost=72032.21..72032.28 rows=25 width=58) (actual time=129.079..138.831 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=71992.36..72032.09 rows=25 width=58) (actual time=128.541..138.819 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=71992.36..72031.21 rows=75 width=58) (actual time=128.337..138.787 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=70992.32..71022.36 rows=25 width=58) (actual time=124.343..125.016 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=70992.32..70998.27 rows=2378 width=38) (actual time=124.167..124.252 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 150kB
                                 Worker 0:  Sort Method: quicksort  Memory: 153kB
                                 Worker 1:  Sort Method: quicksort  Memory: 156kB
                                 Worker 2:  Sort Method: quicksort  Memory: 147kB
                                 ->  Hash Join  (cost=7985.19..70858.97 rows=2378 width=38) (actual time=31.453..123.434 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7512.19..70073.79 rows=59463 width=50) (actual time=27.908..112.127 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7511.76..35097.99 rows=14862 width=38) (actual time=27.877..67.396 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2771.63..30017.28 rows=74310 width=8) (actual time=16.319..42.194 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6500
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2714.04 rows=230361 width=0) (actual time=12.560..12.560 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.426..11.428 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.054..9.294 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.009..3.699 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.039..0.041 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.034..0.039 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.014..0.015 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.43..2.31 rows=4 width=20) (actual time=0.003..0.003 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.336..3.336 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.015..1.467 rows=10000 loops=4)
 Planning Time: 5.168 ms
 Execution Time: 138.908 ms
(50 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=115189.27..115189.28 rows=1 width=32) (actual time=1089.284..1096.194 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=115189.27..115189.28 rows=1 width=32) (actual time=1089.283..1096.192 rows=1 loops=1)
         ->  Gather  (cost=115188.84..115189.25 rows=4 width=32) (actual time=1088.657..1096.180 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=114188.84..114188.85 rows=1 width=32) (actual time=1080.767..1080.768 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=22601.16..114040.79 rows=29608 width=12) (actual time=131.570..1064.817 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13277
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22571.55 rows=118434 width=0) (actual time=126.910..126.911 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 18.203 ms
 Execution Time: 1097.701 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=115189.27..115189.28 rows=1 width=32) (actual time=196.106..200.846 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=115189.27..115189.28 rows=1 width=32) (actual time=196.105..200.844 rows=1 loops=1)
         ->  Gather  (cost=115188.84..115189.25 rows=4 width=32) (actual time=192.106..200.826 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=114188.84..114188.85 rows=1 width=32) (actual time=188.553..188.554 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=22601.16..114040.79 rows=29608 width=12) (actual time=103.369..181.677 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=9735
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22571.55 rows=118434 width=0) (actual time=95.050..95.050 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.963 ms
 Execution Time: 200.896 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141519.81..141678.42 rows=1 width=116) (actual time=3124.895..3128.334 rows=1 loops=1)
   ->  GroupAggregate  (cost=141519.81..1122188.95 rows=6183 width=116) (actual time=3124.894..3128.333 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141519.81..1122003.46 rows=6183 width=96) (actual time=927.229..3125.654 rows=1359 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 32757
               ->  Nested Loop  (cost=141519.39..778033.52 rows=154571 width=76) (actual time=923.567..2703.957 rows=34116 loops=1)
                     ->  Gather Merge  (cost=141518.96..160026.47 rows=154571 width=76) (actual time=922.520..961.552 rows=34116 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140518.90..140615.51 rows=38643 width=76) (actual time=910.199..911.075 rows=7235 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 3775kB
                                 Worker 0:  Sort Method: quicksort  Memory: 3759kB
                                 Worker 1:  Sort Method: quicksort  Memory: 3633kB
                                 Worker 2:  Sort Method: quicksort  Memory: 3653kB
                                 Worker 3:  Sort Method: quicksort  Memory: 3720kB
                                 ->  Hash Join  (cost=381.77..137574.71 rows=38643 width=76) (actual time=3.936..886.904 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135065.61 rows=464279 width=24) (actual time=0.510..837.110 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.862..2.865 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.299..2.732 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.214..1.604 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.079..0.081 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.070..0.075 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.059..0.060 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.004..0.005 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=8) (actual time=0.050..0.050 rows=1 loops=34116)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.21 rows=1 width=8) (actual time=0.011..0.012 rows=1 loops=34116)
                     Index Cond: (c_custkey = orders.o_custkey)
                     Heap Fetches: 0
 Planning Time: 31.011 ms
 Execution Time: 3128.722 ms
(46 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141519.81..141678.42 rows=1 width=116) (actual time=484.713..486.008 rows=1 loops=1)
   ->  GroupAggregate  (cost=141519.81..1122188.95 rows=6183 width=116) (actual time=484.713..486.007 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141519.81..1122003.46 rows=6183 width=96) (actual time=310.657..484.845 rows=1359 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 32714
               ->  Nested Loop  (cost=141519.39..778033.52 rows=154571 width=76) (actual time=310.244..410.544 rows=34073 loops=1)
                     ->  Gather Merge  (cost=141518.96..160026.47 rows=154571 width=76) (actual time=310.198..328.771 rows=34073 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140518.90..140615.51 rows=38643 width=76) (actual time=300.741..301.394 rows=7231 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 3192kB
                                 Worker 0:  Sort Method: quicksort  Memory: 5233kB
                                 Worker 1:  Sort Method: quicksort  Memory: 2533kB
                                 Worker 2:  Sort Method: quicksort  Memory: 4893kB
                                 Worker 3:  Sort Method: quicksort  Memory: 4993kB
                                 ->  Hash Join  (cost=381.77..137574.71 rows=38643 width=76) (actual time=2.181..274.762 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135065.61 rows=464279 width=24) (actual time=0.042..221.807 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.057..2.060 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.041..1.925 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.009..0.684 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.029..0.031 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.020..0.025 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.011 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.005 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34073)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.21 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34073)
                     Index Cond: (c_custkey = orders.o_custkey)
                     Heap Fetches: 0
 Planning Time: 3.786 ms
 Execution Time: 486.097 ms
(46 rows)

query 8 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41768.95..41783.00 rows=1 width=64) (actual time=715.950..721.224 rows=1 loops=1)
   ->  GroupAggregate  (cost=41768.95..75436.97 rows=2397 width=64) (actual time=715.949..721.222 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41768.95..75341.09 rows=2397 width=70) (actual time=337.692..719.280 rows=1235 loops=1)
               ->  Nested Loop  (cost=41768.80..75247.42 rows=2397 width=20) (actual time=337.676..717.267 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41768.52..70283.42 rows=2397 width=20) (actual time=337.494..697.878 rows=1235 loops=1)
                           Join Filter: (n1.n_regionkey = region.r_regionkey)
                           Rows Removed by Join Filter: 4857
                           ->  Nested Loop  (cost=41768.52..70102.59 rows=11984 width=24) (actual time=337.287..694.802 rows=6092 loops=1)
                                 ->  Nested Loop  (cost=41768.37..69780.54 rows=11984 width=24) (actual time=337.077..688.223 rows=6092 loops=1)
                                       ->  Gather Merge  (cost=41767.95..43185.74 rows=11984 width=24) (actual time=336.695..346.022 rows=6092 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Sort  (cost=40767.91..40777.58 rows=3866 width=24) (actual time=328.835..329.018 rows=2182 loops=4)
                                                   Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                                   Sort Method: quicksort  Memory: 261kB
                                                   Worker 0:  Sort Method: quicksort  Memory: 262kB
                                                   Worker 1:  Sort Method: quicksort  Memory: 252kB
                                                   Worker 2:  Sort Method: quicksort  Memory: 248kB
                                                   ->  Parallel Hash Join  (cost=6591.12..40537.56 rows=3866 width=24) (actual time=113.884..327.328 rows=3024 loops=4)
                                                         Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=146059 width=12) (actual time=1.017..193.365 rows=114316 loops=4)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 260684
                                                         ->  Parallel Hash  (cost=6467.05..6467.05 rows=9925 width=20) (actual time=112.303..112.305 rows=9924 loops=4)
                                                               Buckets: 65536  Batches: 1  Memory Usage: 2720kB
                                                               ->  Nested Loop  (cost=0.85..6467.05 rows=9925 width=20) (actual time=0.926..108.636 rows=9924 loops=4)
                                                                     ->  Parallel Index Only Scan using q2_idx_1 on part  (cost=0.42..5391.73 rows=331 width=4) (actual time=0.335..10.739 rows=330 loops=4)
                                                                           Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                                           Heap Fetches: 0
                                                                     ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.43..2.94 rows=31 width=24) (actual time=0.239..0.293 rows=30 loops=1320)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                       ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.22 rows=1 width=8) (actual time=0.056..0.056 rows=1 loops=6092)
                                             Index Cond: (c_custkey = orders.o_custkey)
                                             Heap Fetches: 0
                                 ->  Memoize  (cost=0.15..1.17 rows=1 width=8) (actual time=0.000..0.000 rows=1 loops=6092)
                                       Cache Key: customer.c_nationkey
                                       Cache Mode: logical
                                       Hits: 6067  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 3kB
                                       ->  Index Scan using nation_pkey on nation n1  (cost=0.14..1.16 rows=1 width=8) (actual time=0.011..0.011 rows=1 loops=25)
                                             Index Cond: (n_nationkey = customer.c_nationkey)
                           ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6092)
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.200..0.201 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                     ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.29..2.07 rows=1 width=8) (actual time=0.015..0.015 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Heap Fetches: 0
               ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1235)
                     Cache Key: supplier.s_nationkey
                     Cache Mode: logical
                     Hits: 1210  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                     ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.003..0.003 rows=1 loops=25)
                           Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 39.265 ms
 Execution Time: 722.059 ms
(57 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41768.95..41783.00 rows=1 width=64) (actual time=108.122..112.334 rows=1 loops=1)
   ->  GroupAggregate  (cost=41768.95..75436.97 rows=2397 width=64) (actual time=108.121..112.332 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41768.95..75341.09 rows=2397 width=70) (actual time=84.127..111.495 rows=1235 loops=1)
               ->  Nested Loop  (cost=41768.80..75247.42 rows=2397 width=20) (actual time=84.120..110.531 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41768.52..70283.42 rows=2397 width=20) (actual time=84.110..108.302 rows=1235 loops=1)
                           Join Filter: (n1.n_regionkey = region.r_regionkey)
                           Rows Removed by Join Filter: 4858
                           ->  Nested Loop  (cost=41768.52..70102.59 rows=11984 width=24) (actual time=84.044..106.676 rows=6093 loops=1)
                                 ->  Nested Loop  (cost=41768.37..69780.54 rows=11984 width=24) (actual time=84.031..103.864 rows=6093 loops=1)
                                       ->  Gather Merge  (cost=41767.95..43185.74 rows=11984 width=24) (actual time=83.999..90.204 rows=6093 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Sort  (cost=40767.91..40777.58 rows=3866 width=24) (actual time=80.748..80.862 rows=2172 loops=4)
                                                   Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                                   Sort Method: quicksort  Memory: 261kB
                                                   Worker 0:  Sort Method: quicksort  Memory: 258kB
                                                   Worker 1:  Sort Method: quicksort  Memory: 256kB
                                                   Worker 2:  Sort Method: quicksort  Memory: 250kB
                                                   ->  Parallel Hash Join  (cost=6591.12..40537.56 rows=3866 width=24) (actual time=12.406..79.467 rows=3024 loops=4)
                                                         Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=146059 width=12) (actual time=0.012..50.159 rows=114316 loops=4)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 260684
                                                         ->  Parallel Hash  (cost=6467.05..6467.05 rows=9925 width=20) (actual time=12.197..12.199 rows=9924 loops=4)
                                                               Buckets: 65536  Batches: 1  Memory Usage: 2752kB
                                                               ->  Nested Loop  (cost=0.85..6467.05 rows=9925 width=20) (actual time=0.073..9.725 rows=9924 loops=4)
                                                                     ->  Parallel Index Only Scan using q2_idx_1 on part  (cost=0.42..5391.73 rows=331 width=4) (actual time=0.047..5.586 rows=330 loops=4)
                                                                           Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                                           Heap Fetches: 0
                                                                     ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.43..2.94 rows=31 width=24) (actual time=0.005..0.009 rows=30 loops=1320)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                       ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.22 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=6093)
                                             Index Cond: (c_custkey = orders.o_custkey)
                                             Heap Fetches: 0
                                 ->  Memoize  (cost=0.15..1.17 rows=1 width=8) (actual time=0.000..0.000 rows=1 loops=6093)
                                       Cache Key: customer.c_nationkey
                                       Cache Mode: logical
                                       Hits: 6068  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 3kB
                                       ->  Index Scan using nation_pkey on nation n1  (cost=0.14..1.16 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25)
                                             Index Cond: (n_nationkey = customer.c_nationkey)
                           ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6093)
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                     ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.29..2.07 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Heap Fetches: 0
               ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1235)
                     Cache Key: supplier.s_nationkey
                     Cache Mode: logical
                     Hits: 1210  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                     ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=25)
                           Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 5.620 ms
 Execution Time: 112.419 ms
(57 rows)

query 9 run 1
SET
SET
SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=59423.02..59435.11 rows=1 width=90) (actual time=1051.993..1059.223 rows=1 loops=1)
   ->  GroupAggregate  (cost=59423.02..786293.28 rows=60150 width=90) (actual time=1051.991..1059.220 rows=1 loops=1)
         Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=59423.02..780086.67 rows=303106 width=81) (actual time=917.722..1056.637 rows=1210 loops=1)
               Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Gather Merge  (cost=59422.60..95281.99 rows=303106 width=63) (actual time=916.703..925.483 rows=1210 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=58422.56..58667.00 rows=97776 width=63) (actual time=905.104..905.211 rows=719 loops=4)
                           Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
                           Sort Method: quicksort  Memory: 10208kB
                           Worker 0:  Sort Method: quicksort  Memory: 10018kB
                           Worker 1:  Sort Method: quicksort  Memory: 10047kB
                           Worker 2:  Sort Method: quicksort  Memory: 10027kB
                           ->  Hash Join  (cost=16918.57..50318.30 rows=97776 width=63) (actual time=553.104..794.154 rows=81482 loops=4)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=16917.01..50016.57 rows=97776 width=41) (actual time=552.963..767.025 rows=81482 loops=4)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.663..103.957 rows=375000 loops=4)
                                       ->  Parallel Hash  (cost=15694.81..15694.81 rows=97776 width=41) (actual time=551.504..551.507 rows=81482 loops=4)
                                             Buckets: 524288  Batches: 1  Memory Usage: 29600kB
                                             ->  Hash Join  (cost=448.85..15694.81 rows=97776 width=41) (actual time=4.006..517.449 rows=81482 loops=4)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.85..14990.04 rows=97776 width=33) (actual time=0.733..492.499 rows=81482 loops=4)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=3258 width=4) (actual time=0.121..16.354 rows=2720 loops=4)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 47280
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.83 rows=31 width=29) (actual time=0.147..0.171 rows=30 loops=10880)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.254..3.255 rows=10000 loops=4)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.085..1.981 rows=10000 loops=4)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.069..0.070 rows=25 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.061..0.064 rows=25 loops=4)
               ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..2.24 rows=1 width=14) (actual time=0.106..0.106 rows=1 loops=1210)
                     Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                     Heap Fetches: 0
 Planning Time: 42.857 ms
 Execution Time: 1059.839 ms
(42 rows)

SET
SET
SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=59423.02..59435.11 rows=1 width=90) (actual time=393.112..399.807 rows=1 loops=1)
   ->  GroupAggregate  (cost=59423.02..786293.28 rows=60150 width=90) (actual time=393.111..399.805 rows=1 loops=1)
         Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=59423.02..780086.67 rows=303106 width=81) (actual time=387.708..398.862 rows=1210 loops=1)
               Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Gather Merge  (cost=59422.60..95281.99 rows=303106 width=63) (actual time=387.671..394.960 rows=1210 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=58422.56..58667.00 rows=97776 width=63) (actual time=382.008..382.097 rows=719 loops=4)
                           Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
                           Sort Method: quicksort  Memory: 10134kB
                           Worker 0:  Sort Method: quicksort  Memory: 10118kB
                           Worker 1:  Sort Method: quicksort  Memory: 10012kB
                           Worker 2:  Sort Method: quicksort  Memory: 10036kB
                           ->  Hash Join  (cost=16918.57..50318.30 rows=97776 width=63) (actual time=104.760..270.394 rows=81482 loops=4)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=16917.01..50016.57 rows=97776 width=41) (actual time=104.670..243.652 rows=81482 loops=4)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.013..26.915 rows=375000 loops=4)
                                       ->  Parallel Hash  (cost=15694.81..15694.81 rows=97776 width=41) (actual time=103.878..103.881 rows=81482 loops=4)
                                             Buckets: 524288  Batches: 1  Memory Usage: 29664kB
                                             ->  Hash Join  (cost=448.85..15694.81 rows=97776 width=41) (actual time=2.579..71.753 rows=81482 loops=4)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.85..14990.04 rows=97776 width=33) (actual time=0.047..50.251 rows=81482 loops=4)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=3258 width=4) (actual time=0.024..12.023 rows=2720 loops=4)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 47280
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.83 rows=31 width=29) (actual time=0.005..0.011 rows=30 loops=10880)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.514..2.514 rows=10000 loops=4)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.010..1.247 rows=10000 loops=4)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.019..0.020 rows=25 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.013 rows=25 loops=4)
               ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..2.24 rows=1 width=14) (actual time=0.003..0.003 rows=1 loops=1210)
                     Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                     Heap Fetches: 0
 Planning Time: 7.094 ms
 Execution Time: 399.891 ms
(42 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83003.71..83003.76 rows=20 width=202) (actual time=715.704..720.484 rows=20 loops=1)
   ->  Sort  (cost=83003.71..83141.24 rows=55013 width=202) (actual time=715.703..720.480 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=80852.17..81539.83 rows=55013 width=202) (actual time=685.101..709.176 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Gather  (cost=6686.46..80164.51 rows=55013 width=182) (actual time=59.687..588.737 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5686.46..73663.21 rows=17746 width=182) (actual time=52.382..636.973 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5684.90..73607.16 rows=17746 width=160) (actual time=52.249..629.016 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=681.65..68557.33 rows=17746 width=16) (actual time=13.721..572.392 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=681.21..27085.44 rows=18215 width=8) (actual time=13.008..332.755 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=4406
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..667.10 rows=56467 width=0) (actual time=9.179..9.179 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.43..2.27 rows=1 width=16) (actual time=0.015..0.016 rows=2 loops=57111)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=37.982..37.983 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.136..17.342 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.063..0.063 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.055..0.057 rows=25 loops=4)
 Planning Time: 30.102 ms
 Execution Time: 721.575 ms
(31 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83003.71..83003.76 rows=20 width=202) (actual time=198.798..203.055 rows=20 loops=1)
   ->  Sort  (cost=83003.71..83141.24 rows=55013 width=202) (actual time=198.797..203.052 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=80852.17..81539.83 rows=55013 width=202) (actual time=168.189..191.738 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Gather  (cost=6686.46..80164.51 rows=55013 width=182) (actual time=42.072..91.315 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5686.46..73663.21 rows=17746 width=182) (actual time=39.233..132.197 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5684.90..73607.16 rows=17746 width=160) (actual time=39.147..126.055 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=681.65..68557.33 rows=17746 width=16) (actual time=10.815..84.547 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=681.21..27085.44 rows=18215 width=8) (actual time=10.753..28.079 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=1839
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..667.10 rows=56467 width=0) (actual time=7.406..7.406 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.43..2.27 rows=1 width=16) (actual time=0.003..0.003 rows=2 loops=57111)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=27.881..27.882 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29344kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.009..7.586 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.020..0.020 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.013 rows=25 loops=4)
 Planning Time: 2.404 ms
 Execution Time: 203.407 ms
(31 rows)

query 11 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17303.21..17303.21 rows=1 width=36) (actual time=612.793..612.965 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=7232.02..7232.03 rows=1 width=32) (actual time=20.674..20.812 rows=1 loops=1)
           ->  Gather  (cost=7231.90..7232.01 rows=1 width=32) (actual time=20.443..20.802 rows=2 loops=1)
                 Workers Planned: 1
                 Workers Launched: 1
                 ->  Partial Aggregate  (cost=6231.90..6231.91 rows=1 width=32) (actual time=18.616..18.618 rows=1 loops=2)
                       ->  Nested Loop  (cost=0.86..6090.72 rows=18824 width=10) (actual time=0.093..14.899 rows=16440 loops=2)
                             ->  Nested Loop  (cost=0.43..640.26 rows=235 width=4) (actual time=0.083..2.261 rows=206 loops=2)
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.025..0.956 rows=5000 loops=2)
                                         Heap Fetches: 0
                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=4) (actual time=0.000..0.000 rows=0 loops=10000)
                                         Cache Key: supplier_1.s_nationkey
                                         Cache Mode: logical
                                         Hits: 6341  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                         Worker 0:  Hits: 3609  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                         ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=50)
                                               Index Cond: (n_nationkey = supplier_1.s_nationkey)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 1
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..22.39 rows=80 width=14) (actual time=0.003..0.053 rows=80 loops=411)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=10071.17..10097.84 rows=10667 width=36) (actual time=612.792..612.824 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize HashAggregate  (cost=9537.84..10017.84 rows=10667 width=36) (actual time=603.155..612.459 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Gather  (cost=7278.96..9396.66 rows=18824 width=36) (actual time=559.687..568.915 rows=31814 loops=1)
                     Workers Planned: 1
                     Workers Launched: 1
                     ->  Partial HashAggregate  (cost=6278.96..6514.26 rows=18824 width=36) (actual time=554.132..560.932 rows=15907 loops=2)
                           Group Key: partsupp.ps_partkey
                           Batches: 1  Memory Usage: 6929kB
                           Worker 0:  Batches: 1  Memory Usage: 6929kB
                           ->  Nested Loop  (cost=0.86..6090.72 rows=18824 width=14) (actual time=0.530..537.144 rows=16440 loops=2)
                                 ->  Nested Loop  (cost=0.43..640.26 rows=235 width=4) (actual time=0.256..3.507 rows=206 loops=2)
                                       ->  Parallel Index Only Scan using q2_idx_3 on supplier  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.083..1.764 rows=5000 loops=2)
                                             Heap Fetches: 0
                                       ->  Memoize  (cost=0.15..0.17 rows=1 width=4) (actual time=0.000..0.000 rows=0 loops=10000)
                                             Cache Key: supplier.s_nationkey
                                             Cache Mode: logical
                                             Hits: 5308  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                             Worker 0:  Hits: 4642  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                             ->  Index Scan using nation_pkey on nation  (cost=0.14..0.16 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=50)
                                                   Index Cond: (n_nationkey = supplier.s_nationkey)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..22.39 rows=80 width=18) (actual time=0.078..2.578 rows=80 loops=411)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 15.053 ms
 Execution Time: 613.363 ms
(54 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17303.21..17303.21 rows=1 width=36) (actual time=82.332..82.457 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=7232.02..7232.03 rows=1 width=32) (actual time=19.715..19.808 rows=1 loops=1)
           ->  Gather  (cost=7231.90..7232.01 rows=1 width=32) (actual time=19.695..19.792 rows=2 loops=1)
                 Workers Planned: 1
                 Workers Launched: 1
                 ->  Partial Aggregate  (cost=6231.90..6231.91 rows=1 width=32) (actual time=17.883..17.885 rows=1 loops=2)
                       ->  Nested Loop  (cost=0.86..6090.72 rows=18824 width=10) (actual time=0.103..14.169 rows=16440 loops=2)
                             ->  Nested Loop  (cost=0.43..640.26 rows=235 width=4) (actual time=0.092..2.243 rows=206 loops=2)
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.025..0.939 rows=5000 loops=2)
                                         Heap Fetches: 0
                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=4) (actual time=0.000..0.000 rows=0 loops=10000)
                                         Cache Key: supplier_1.s_nationkey
                                         Cache Mode: logical
                                         Hits: 5895  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                         Worker 0:  Hits: 4055  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                         ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=50)
                                               Index Cond: (n_nationkey = supplier_1.s_nationkey)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 1
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..22.39 rows=80 width=14) (actual time=0.003..0.049 rows=80 loops=411)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=10071.17..10097.84 rows=10667 width=36) (actual time=82.331..82.361 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize HashAggregate  (cost=9537.84..10017.84 rows=10667 width=36) (actual time=72.696..81.971 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Gather  (cost=7278.96..9396.66 rows=18824 width=36) (actual time=30.379..39.488 rows=31869 loops=1)
                     Workers Planned: 1
                     Workers Launched: 1
                     ->  Partial HashAggregate  (cost=6278.96..6514.26 rows=18824 width=36) (actual time=28.445..35.145 rows=15934 loops=2)
                           Group Key: partsupp.ps_partkey
                           Batches: 1  Memory Usage: 8977kB
                           Worker 0:  Batches: 1  Memory Usage: 6929kB
                           ->  Nested Loop  (cost=0.86..6090.72 rows=18824 width=14) (actual time=0.090..18.604 rows=16440 loops=2)
                                 ->  Nested Loop  (cost=0.43..640.26 rows=235 width=4) (actual time=0.079..2.287 rows=206 loops=2)
                                       ->  Parallel Index Only Scan using q2_idx_3 on supplier  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.017..0.960 rows=5000 loops=2)
                                             Heap Fetches: 0
                                       ->  Memoize  (cost=0.15..0.17 rows=1 width=4) (actual time=0.000..0.000 rows=0 loops=10000)
                                             Cache Key: supplier.s_nationkey
                                             Cache Mode: logical
                                             Hits: 5291  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                             Worker 0:  Hits: 4659  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                             ->  Index Scan using nation_pkey on nation  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=50)
                                                   Index Cond: (n_nationkey = supplier.s_nationkey)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..22.39 rows=80 width=18) (actual time=0.004..0.069 rows=80 loops=411)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.183 ms
 Execution Time: 82.854 ms
(54 rows)

query 12 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16335.77..33189.16 rows=1 width=27) (actual time=1037.637..1041.040 rows=1 loops=1)
   ->  GroupAggregate  (cost=16335.77..134309.50 rows=7 width=27) (actual time=1037.635..1041.038 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=16335.77..133810.49 rows=28511 width=27) (actual time=66.532..1030.604 rows=15492 loops=1)
               ->  Gather Merge  (cost=16335.34..19749.09 rows=28511 width=15) (actual time=66.105..77.297 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=15335.28..15353.10 rows=7128 width=15) (actual time=56.881..57.232 rows=4290 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 431kB
                           Worker 0:  Sort Method: quicksort  Memory: 375kB
                           Worker 1:  Sort Method: quicksort  Memory: 366kB
                           Worker 2:  Sort Method: quicksort  Memory: 373kB
                           Worker 3:  Sort Method: quicksort  Memory: 385kB
                           ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..14879.11 rows=7128 width=15) (actual time=0.146..55.709 rows=6191 loops=5)
                                 Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Heap Fetches: 0
               ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=20) (actual time=0.061..0.061 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 20.987 ms
 Execution Time: 1041.723 ms
(21 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16335.77..33189.16 rows=1 width=27) (actual time=87.319..88.843 rows=1 loops=1)
   ->  GroupAggregate  (cost=16335.77..134309.50 rows=7 width=27) (actual time=87.318..88.841 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=16335.77..133810.49 rows=28511 width=27) (actual time=38.380..83.992 rows=15492 loops=1)
               ->  Gather Merge  (cost=16335.34..19749.09 rows=28511 width=15) (actual time=38.353..43.315 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=15335.28..15353.10 rows=7128 width=15) (actual time=34.655..34.883 rows=4195 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 428kB
                           Worker 0:  Sort Method: quicksort  Memory: 394kB
                           Worker 1:  Sort Method: quicksort  Memory: 338kB
                           Worker 2:  Sort Method: quicksort  Memory: 385kB
                           Worker 3:  Sort Method: quicksort  Memory: 384kB
                           ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..14879.11 rows=7128 width=15) (actual time=0.192..33.643 rows=6191 loops=5)
                                 Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Heap Fetches: 0
               ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 1.571 ms
 Execution Time: 88.893 ms
(21 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=65023.89..65023.89 rows=1 width=16) (actual time=1383.223..1383.226 rows=1 loops=1)
   ->  Sort  (cost=65023.89..65024.39 rows=200 width=16) (actual time=1383.222..1383.224 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=65020.89..65022.89 rows=200 width=16) (actual time=1383.197..1383.204 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61270.89..62770.89 rows=150000 width=12) (actual time=1343.120..1366.491 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4953.42..53771.64 rows=1499850 width=8) (actual time=35.748..999.109 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.601..576.387 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=34.741..34.742 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.292..16.880 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 15.178 ms
 Execution Time: 1384.317 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=65023.89..65023.89 rows=1 width=16) (actual time=1244.996..1245.000 rows=1 loops=1)
   ->  Sort  (cost=65023.89..65024.39 rows=200 width=16) (actual time=1244.995..1244.998 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=65020.89..65022.89 rows=200 width=16) (actual time=1244.970..1244.978 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61270.89..62770.89 rows=150000 width=12) (actual time=1205.012..1228.195 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4953.42..53771.64 rows=1499850 width=8) (actual time=30.048..875.807 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.015..478.648 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=29.712..29.713 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.023..13.482 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 1.002 ms
 Execution Time: 1246.413 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79849.64..79849.65 rows=1 width=32) (actual time=541.683..547.232 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=79849.64..79849.65 rows=1 width=32) (actual time=541.681..547.230 rows=1 loops=1)
         ->  Gather  (cost=79849.18..79849.59 rows=4 width=64) (actual time=540.379..547.214 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=78849.18..78849.19 rows=1 width=64) (actual time=530.865..530.867 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7263.23..78535.54 rows=17922 width=33) (actual time=53.305..516.430 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1289.23..72514.50 rows=17922 width=16) (actual time=20.743..467.189 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8306
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1271.31 rows=71688 width=0) (actual time=13.662..13.662 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=32.073..32.073 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.076..11.877 rows=40000 loops=5)
 Planning Time: 27.604 ms
 Execution Time: 548.139 ms
(18 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79849.64..79849.65 rows=1 width=32) (actual time=107.061..109.435 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=79849.64..79849.65 rows=1 width=32) (actual time=107.060..109.432 rows=1 loops=1)
         ->  Gather  (cost=79849.18..79849.59 rows=4 width=64) (actual time=100.558..109.411 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=78849.18..78849.19 rows=1 width=64) (actual time=96.288..96.291 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7263.23..78535.54 rows=17922 width=33) (actual time=37.371..88.428 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1289.23..72514.50 rows=17922 width=16) (actual time=14.479..55.272 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=7044
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1271.31 rows=71688 width=0) (actual time=8.071..8.072 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=22.457..22.457 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14240kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.009..6.552 rows=40000 loops=5)
 Planning Time: 1.762 ms
 Execution Time: 109.477 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=240677.61..240784.79 rows=1 width=103) (actual time=1286.772..1293.881 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=121635.40..121635.41 rows=1 width=32) (actual time=227.924..227.926 rows=1 loops=1)
           ->  HashAggregate  (cost=121387.40..121511.40 rows=9920 width=36) (actual time=224.704..227.337 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3955.09..119185.78 rows=220162 width=16) (actual time=28.009..119.224 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3900.05 rows=220162 width=0) (actual time=17.364..17.365 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119042.20..124401.01 rows=50 width=103) (actual time=1286.771..1293.877 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119041.91..124239.38 rows=50 width=36) (actual time=1286.316..1293.421 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119041.91..123792.98 rows=39680 width=36) (actual time=1035.759..1050.326 rows=41822 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118041.86..118066.66 rows=9920 width=36) (actual time=1024.235..1025.076 rows=8852 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1234kB
                           Worker 0:  Sort Method: quicksort  Memory: 1234kB
                           Worker 1:  Sort Method: quicksort  Memory: 1236kB
                           Worker 2:  Sort Method: quicksort  Memory: 1236kB
                           Worker 3:  Sort Method: quicksort  Memory: 1235kB
                           ->  Partial HashAggregate  (cost=117259.36..117383.36 rows=9920 width=36) (actual time=1017.178..1022.100 rows=9897 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3955.09..116708.96 rows=55040 width=16) (actual time=41.658..964.731 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13533
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3900.05 rows=220162 width=0) (actual time=37.780..37.780 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.22 rows=1 width=71) (actual time=0.449..0.449 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 20.626 ms
 Execution Time: 1294.514 ms
(42 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=240677.61..240784.79 rows=1 width=103) (actual time=402.945..413.001 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=121635.40..121635.41 rows=1 width=32) (actual time=213.717..213.718 rows=1 loops=1)
           ->  HashAggregate  (cost=121387.40..121511.40 rows=9920 width=36) (actual time=210.485..213.134 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3955.09..119185.78 rows=220162 width=16) (actual time=28.008..106.307 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3900.05 rows=220162 width=0) (actual time=17.342..17.343 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119042.20..124401.01 rows=50 width=103) (actual time=402.944..412.997 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119041.91..124239.38 rows=50 width=36) (actual time=402.911..412.964 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119041.91..123792.98 rows=39680 width=36) (actual time=166.453..183.993 rows=41739 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118041.86..118066.66 rows=9920 width=36) (actual time=158.977..159.831 rows=8879 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1233kB
                           Worker 0:  Sort Method: quicksort  Memory: 1238kB
                           Worker 1:  Sort Method: quicksort  Memory: 1224kB
                           Worker 2:  Sort Method: quicksort  Memory: 1236kB
                           Worker 3:  Sort Method: quicksort  Memory: 1238kB
                           ->  Partial HashAggregate  (cost=117259.36..117383.36 rows=9920 width=36) (actual time=151.098..156.195 rows=9881 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3955.09..116708.96 rows=55040 width=16) (actual time=31.538..117.349 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=12380
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3900.05 rows=220162 width=0) (actual time=25.968..25.968 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.22 rows=1 width=71) (actual time=0.028..0.029 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 1.407 ms
 Execution Time: 413.341 ms
(42 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=27908.53..27908.53 rows=1 width=44) (actual time=285.144..286.026 rows=1 loops=1)
   ->  Sort  (cost=27908.53..27948.69 rows=16064 width=44) (actual time=285.142..286.024 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=19882.20..27828.21 rows=16064 width=44) (actual time=208.346..282.718 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=19882.20..27067.47 rows=60010 width=40) (actual time=208.330..262.916 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=18882.14..18919.64 rows=15002 width=40) (actual time=173.582..174.994 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 1998kB
                           Worker 0:  Sort Method: quicksort  Memory: 2194kB
                           Worker 1:  Sort Method: quicksort  Memory: 2348kB
                           Worker 2:  Sort Method: quicksort  Memory: 1908kB
                           Worker 3:  Sort Method: quicksort  Memory: 2356kB
                           ->  Parallel Hash Join  (cost=6687.04..17841.54 rows=15002 width=40) (actual time=30.690..100.333 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..11240.43 rows=100000 width=8) (actual time=6.008..58.087 rows=159936 loops=5)
                                       Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.883..5.321 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12502 width=40) (actual time=24.536..24.537 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12502 width=40) (actual time=0.429..21.800 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 20.312 ms
 Execution Time: 286.995 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=27908.53..27908.53 rows=1 width=44) (actual time=250.870..251.296 rows=1 loops=1)
   ->  Sort  (cost=27908.53..27948.69 rows=16064 width=44) (actual time=250.868..251.294 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=19882.20..27828.21 rows=16064 width=44) (actual time=173.554..247.916 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=19882.20..27067.47 rows=60010 width=40) (actual time=173.540..228.243 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=18882.14..18919.64 rows=15002 width=40) (actual time=154.733..156.087 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 2093kB
                           Worker 0:  Sort Method: quicksort  Memory: 1806kB
                           Worker 1:  Sort Method: quicksort  Memory: 2292kB
                           Worker 2:  Sort Method: quicksort  Memory: 2381kB
                           Worker 3:  Sort Method: quicksort  Memory: 2232kB
                           ->  Parallel Hash Join  (cost=6687.04..17841.54 rows=15002 width=40) (actual time=19.378..76.612 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..11240.43 rows=100000 width=8) (actual time=2.778..41.766 rows=159936 loops=5)
                                       Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.090..2.091 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12502 width=40) (actual time=15.577..15.577 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12502 width=40) (actual time=0.016..13.198 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 1.121 ms
 Execution Time: 251.567 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=176286.36..176286.37 rows=1 width=32) (actual time=2436.881..2439.929 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=176286.36..176286.37 rows=1 width=32) (actual time=2436.880..2439.927 rows=1 loops=1)
         ->  Gather  (cost=176286.13..176286.34 rows=2 width=32) (actual time=2436.868..2439.919 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=175286.13..175286.14 rows=1 width=32) (actual time=2424.026..2424.027 rows=1 loops=3)
                     ->  Nested Loop  (cost=5352.67..175284.01 rows=850 width=8) (actual time=391.413..2423.954 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=5352.24..175049.79 rows=85 width=40) (actual time=391.052..2392.599 rows=69 loops=3)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=5351.80..5352.02 rows=87 width=4) (actual time=22.448..22.481 rows=69 loops=3)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 25kB
                                       Worker 0:  Sort Method: quicksort  Memory: 25kB
                                       Worker 1:  Sort Method: quicksort  Memory: 25kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=87 width=4) (actual time=0.509..22.430 rows=69 loops=3)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 66597
                                 ->  GroupAggregate  (cost=0.43..169206.37 rows=196133 width=36) (actual time=0.629..2353.875 rows=198926 loops=3)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136256.89 rows=6001497 width=9) (actual time=0.572..1533.616 rows=5968847 loops=3)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.63 rows=10 width=17) (actual time=0.418..0.450 rows=3 loops=208)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 23.845 ms
 Execution Time: 2440.881 ms
(27 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=176286.36..176286.37 rows=1 width=32) (actual time=2103.721..2103.798 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=176286.36..176286.37 rows=1 width=32) (actual time=2103.720..2103.797 rows=1 loops=1)
         ->  Gather  (cost=176286.13..176286.34 rows=2 width=32) (actual time=2103.711..2103.791 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=175286.13..175286.14 rows=1 width=32) (actual time=2084.455..2084.457 rows=1 loops=3)
                     ->  Nested Loop  (cost=5352.67..175284.01 rows=850 width=8) (actual time=199.786..2084.418 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=5352.24..175049.79 rows=85 width=40) (actual time=199.766..2083.707 rows=69 loops=3)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=5351.80..5352.02 rows=87 width=4) (actual time=10.053..10.068 rows=69 loops=3)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 25kB
                                       Worker 0:  Sort Method: quicksort  Memory: 25kB
                                       Worker 1:  Sort Method: quicksort  Memory: 25kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=87 width=4) (actual time=0.069..10.040 rows=69 loops=3)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 66597
                                 ->  GroupAggregate  (cost=0.43..169206.37 rows=196133 width=36) (actual time=0.060..2060.060 rows=196305 loops=3)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136256.89 rows=6001497 width=9) (actual time=0.033..1284.963 rows=5890393 loops=3)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.63 rows=10 width=17) (actual time=0.008..0.009 rows=3 loops=208)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 1.674 ms
 Execution Time: 2103.852 ms
(27 rows)

query 18 run 1
SET
SET
SET
                                                                                                    QUERY PLAN                                                                                                     
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=669421.20..669421.45 rows=100 width=71) (actual time=2932.116..2932.122 rows=9 loops=1)
   ->  Sort  (cost=669421.20..674423.70 rows=2000999 width=71) (actual time=2932.108..2932.112 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=306684.83..592944.45 rows=2000999 width=71) (actual time=2795.380..2932.093 rows=9 loops=1)
               Group Key: orders.o_orderkey, customer.c_custkey
               ->  Incremental Sort  (cost=306684.83..552924.47 rows=2000999 width=44) (actual time=2795.365..2932.060 rows=63 loops=1)
                     Sort Key: orders.o_orderkey, customer.c_custkey
                     Presorted Key: orders.o_orderkey
                     Full-sort Groups: 2  Sort Method: quicksort  Average Memory: 27kB  Peak Memory: 27kB
                     ->  Merge Join  (cost=306684.70..480414.48 rows=2000999 width=44) (actual time=2466.119..2932.026 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Sort  (cost=306678.57..307928.89 rows=500125 width=43) (actual time=2300.033..2300.040 rows=9 loops=1)
                                 Sort Key: orders.o_orderkey
                                 Sort Method: quicksort  Memory: 25kB
                                 ->  Hash Join  (cost=201965.54..248346.92 rows=500125 width=43) (actual time=1984.749..2300.011 rows=9 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash Join  (cost=194993.54..240062.06 rows=500125 width=24) (actual time=1922.527..2237.777 rows=9 loops=1)
                                             Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                             ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.590..231.566 rows=1500000 loops=1)
                                             ->  Hash  (cost=188741.98..188741.98 rows=500125 width=4) (actual time=1833.123..1833.124 rows=9 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                                   ->  GroupAggregate  (cost=0.43..188741.98 rows=500125 width=4) (actual time=389.878..1833.106 rows=9 loops=1)
                                                         Group Key: lineitem_1.l_orderkey
                                                         Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                         Rows Removed by Filter: 1499991
                                                         ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136228.89 rows=6001497 width=9) (actual time=0.309..733.893 rows=6001215 loops=1)
                                                               Heap Fetches: 0
                                       ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=61.915..61.915 rows=150000 loops=1)
                                             Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.487..36.571 rows=150000 loops=1)
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136228.89 rows=6001497 width=9) (actual time=0.018..430.103 rows=4807580 loops=1)
                                 Heap Fetches: 0
 Planning Time: 25.244 ms
 Execution Time: 2932.494 ms
(35 rows)

SET
SET
SET
                                                                                                    QUERY PLAN                                                                                                     
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=669421.20..669421.45 rows=100 width=71) (actual time=2588.019..2588.024 rows=9 loops=1)
   ->  Sort  (cost=669421.20..674423.70 rows=2000999 width=71) (actual time=2588.018..2588.022 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=306684.83..592944.45 rows=2000999 width=71) (actual time=2451.003..2588.002 rows=9 loops=1)
               Group Key: orders.o_orderkey, customer.c_custkey
               ->  Incremental Sort  (cost=306684.83..552924.47 rows=2000999 width=44) (actual time=2450.993..2587.974 rows=63 loops=1)
                     Sort Key: orders.o_orderkey, customer.c_custkey
                     Presorted Key: orders.o_orderkey
                     Full-sort Groups: 2  Sort Method: quicksort  Average Memory: 27kB  Peak Memory: 27kB
                     ->  Merge Join  (cost=306684.70..480414.48 rows=2000999 width=44) (actual time=2120.900..2587.939 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Sort  (cost=306678.57..307928.89 rows=500125 width=43) (actual time=1954.553..1954.561 rows=9 loops=1)
                                 Sort Key: orders.o_orderkey
                                 Sort Method: quicksort  Memory: 25kB
                                 ->  Hash Join  (cost=201965.54..248346.92 rows=500125 width=43) (actual time=1751.106..1954.537 rows=9 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash Join  (cost=194993.54..240062.06 rows=500125 width=24) (actual time=1708.023..1911.445 rows=9 loops=1)
                                             Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                             ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.007..81.967 rows=1500000 loops=1)
                                             ->  Hash  (cost=188741.98..188741.98 rows=500125 width=4) (actual time=1652.632..1652.633 rows=9 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                                   ->  GroupAggregate  (cost=0.43..188741.98 rows=500125 width=4) (actual time=348.340..1652.619 rows=9 loops=1)
                                                         Group Key: lineitem_1.l_orderkey
                                                         Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                         Rows Removed by Filter: 1499991
                                                         ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136228.89 rows=6001497 width=9) (actual time=0.022..565.581 rows=6001215 loops=1)
                                                               Heap Fetches: 0
                                       ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=42.751..42.751 rows=150000 loops=1)
                                             Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.014..18.999 rows=150000 loops=1)
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136228.89 rows=6001497 width=9) (actual time=0.016..430.609 rows=4807580 loops=1)
                                 Heap Fetches: 0
 Planning Time: 2.062 ms
 Execution Time: 2588.107 ms
(35 rows)

query 19 run 1
SET
SET
SET

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9668.97..9668.98 rows=1 width=32) (actual time=107.167..109.922 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=9668.97..9668.98 rows=1 width=32) (actual time=107.166..109.920 rows=1 loops=1)
         ->  Gather  (cost=9668.75..9668.96 rows=2 width=32) (actual time=106.838..109.912 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=8668.75..8668.76 rows=1 width=32) (actual time=99.416..99.417 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.56..8668.39 rows=47 width=12) (actual time=9.129..99.349 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=198 width=30) (actual time=0.788..26.393 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..5.18 rows=1 width=21) (actual time=0.427..0.431 rows=0 loops=507)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 1
                                 Heap Fetches: 0
 Planning Time: 26.242 ms
 Execution Time: 109.977 ms
(17 rows)

SET
SET
SET


 Limit  (cost=9668.97..9668.98 rows=1 width=32) (actual time=21.974..23.786 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=9668.97..9668.98 rows=1 width=32) (actual time=21.973..23.784 rows=1 loops=1)
         ->  Gather  (cost=9668.75..9668.96 rows=2 width=32) (actual time=21.847..23.776 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=8668.75..8668.76 rows=1 width=32) (actual time=19.302..19.302 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.56..8668.39 rows=47 width=12) (actual time=0.398..19.268 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=198 width=30) (actual time=0.134..17.271 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..5.18 rows=1 width=21) (actual time=0.011..0.011 rows=0 loops=507)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 1
                                 Heap Fetches: 0
 Planning Time: 2.893 ms
 Execution Time: 23.828 ms
(17 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=216354.41..216354.41 rows=1 width=51) (actual time=3535.678..3535.771 rows=1 loops=1)
   ->  Sort  (cost=216354.41..216354.41 rows=1 width=51) (actual time=3535.677..3535.769 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=192603.12..216354.40 rows=1 width=51) (actual time=3370.067..3535.603 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.600..3.178 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.263..0.266 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.330..2.205 rows=10000 loops=1)
               ->  Materialize  (cost=192603.12..215899.09 rows=1 width=8) (actual time=5.733..7.832 rows=4340 loops=438)
                     ->  Nested Loop  (cost=192603.12..215899.08 rows=1 width=8) (actual time=2510.919..3364.216 rows=5898 loops=1)
                           ->  Hash Join  (cost=192602.70..210237.36 rows=4926 width=44) (actual time=2510.585..3062.202 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=186595.19..202949.54 rows=487729 width=40) (actual time=2476.931..2975.938 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16623.16..143066.17 rows=925534 width=13) (actual time=126.508..1976.938 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16391.77 rows=925534 width=0) (actual time=106.665..106.665 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=5982.26..5982.26 rows=2020 width=4) (actual time=33.631..33.720 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather Merge  (cost=1000.46..5982.26 rows=2020 width=4) (actual time=26.194..33.540 rows=2187 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=652 width=4) (actual time=0.213..18.728 rows=547 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 49453
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..1.14 rows=1 width=12) (actual time=0.050..0.050 rows=1 loops=5914)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning Time: 30.521 ms
 Execution Time: 3540.999 ms
(42 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=216354.41..216354.41 rows=1 width=51) (actual time=1401.306..1401.399 rows=1 loops=1)
   ->  Sort  (cost=216354.41..216354.41 rows=1 width=51) (actual time=1401.305..1401.397 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=192603.12..216354.40 rows=1 width=51) (actual time=1236.713..1401.233 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.024..1.556 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.014..0.016 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.006..0.650 rows=10000 loops=1)
               ->  Materialize  (cost=192603.12..215899.09 rows=1 width=8) (actual time=1.630..2.964 rows=4340 loops=438)
                     ->  Nested Loop  (cost=192603.12..215899.08 rows=1 width=8) (actual time=713.759..1233.699 rows=5898 loops=1)
                           ->  Hash Join  (cost=192602.70..210237.36 rows=4926 width=44) (actual time=713.733..1214.996 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=186595.19..202949.54 rows=487729 width=40) (actual time=700.323..1158.175 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16623.16..143066.17 rows=925534 width=13) (actual time=87.649..300.891 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16391.77 rows=925534 width=0) (actual time=68.461..68.461 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=5982.26..5982.26 rows=2020 width=4) (actual time=13.389..13.479 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather Merge  (cost=1000.46..5982.26 rows=2020 width=4) (actual time=10.792..13.305 rows=2187 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=652 width=4) (actual time=0.047..7.104 rows=547 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 49453
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..1.14 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning Time: 2.699 ms
 Execution Time: 1406.041 ms
(42 rows)

query 21 run 1
SET
SET
SET
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=57379.13..57379.14 rows=1 width=34) (actual time=1885.635..1887.750 rows=100 loops=1)
   ->  Sort  (cost=57379.13..57379.14 rows=1 width=34) (actual time=1885.634..1887.742 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=57379.10..57379.12 rows=1 width=34) (actual time=1884.627..1887.336 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=57379.10..57379.11 rows=1 width=26) (actual time=1884.618..1886.885 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 193kB
                     ->  Nested Loop Semi Join  (cost=29490.50..57379.09 rows=1 width=26) (actual time=453.375..1873.355 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 2768
                           ->  Nested Loop  (cost=29490.06..57376.66 rows=1 width=38) (actual time=453.066..894.037 rows=6909 loops=1)
                                 ->  Gather  (cost=29489.64..57374.30 rows=1 width=34) (actual time=452.696..473.612 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Parallel Hash Right Anti Join  (cost=28489.64..56374.20 rows=1 width=34) (actual time=444.905..448.232 rows=2858 loops=5)
                                             Hash Cond: (l3.l_orderkey = l1.l_orderkey)
                                             Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                             Rows Removed by Join Filter: 31839
                                             ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..25926.17 rows=500125 width=8) (actual time=0.034..117.223 rows=758659 loops=5)
                                                   Heap Fetches: 0
                                             ->  Parallel Hash  (cost=28239.14..28239.14 rows=20005 width=34) (actual time=234.935..234.938 rows=31833 loops=5)
                                                   Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 14400kB
                                                   ->  Hash Join  (cost=237.88..28239.14 rows=20005 width=34) (actual time=1.951..220.450 rows=31833 loops=5)
                                                         Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                         ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..25926.17 rows=500125 width=8) (actual time=0.355..163.663 rows=758659 loops=5)
                                                               Heap Fetches: 0
                                                         ->  Hash  (cost=232.45..232.45 rows=400 width=30) (actual time=1.585..1.587 rows=421 loops=5)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                               ->  Nested Loop  (cost=5.38..232.45 rows=400 width=30) (actual time=0.358..1.504 rows=421 loops=5)
                                                                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.176..0.177 rows=1 loops=5)
                                                                           Filter: (n_name = 'PERU'::bpchar)
                                                                           Rows Removed by Filter: 24
                                                                     ->  Bitmap Heap Scan on supplier  (cost=5.38..227.14 rows=400 width=34) (actual time=0.180..1.263 rows=421 loops=5)
                                                                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                           Heap Blocks: exact=184
                                                                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.102..0.102 rows=421 loops=5)
                                                                                 Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.029..0.029 rows=0 loops=14289)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.141..0.141 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 26.964 ms
 Execution Time: 1888.455 ms
(47 rows)

SET
SET
SET
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=57379.13..57379.14 rows=1 width=34) (actual time=465.276..467.348 rows=100 loops=1)
   ->  Sort  (cost=57379.13..57379.14 rows=1 width=34) (actual time=465.275..467.340 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=57379.10..57379.12 rows=1 width=34) (actual time=464.272..466.936 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=57379.10..57379.11 rows=1 width=26) (actual time=464.263..466.487 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 193kB
                     ->  Nested Loop Semi Join  (cost=29490.50..57379.09 rows=1 width=26) (actual time=392.845..454.258 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 2768
                           ->  Nested Loop  (cost=29490.06..57376.66 rows=1 width=38) (actual time=392.831..433.507 rows=6909 loops=1)
                                 ->  Gather  (cost=29489.64..57374.30 rows=1 width=34) (actual time=392.804..396.211 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Parallel Hash Right Anti Join  (cost=28489.64..56374.20 rows=1 width=34) (actual time=388.002..389.831 rows=2858 loops=5)
                                             Hash Cond: (l3.l_orderkey = l1.l_orderkey)
                                             Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                             Rows Removed by Join Filter: 31839
                                             ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..25926.17 rows=500125 width=8) (actual time=0.135..107.040 rows=758659 loops=5)
                                                   Heap Fetches: 0
                                             ->  Parallel Hash  (cost=28239.14..28239.14 rows=20005 width=34) (actual time=181.417..181.420 rows=31833 loops=5)
                                                   Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 14368kB
                                                   ->  Hash Join  (cost=237.88..28239.14 rows=20005 width=34) (actual time=0.480..166.013 rows=31833 loops=5)
                                                         Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                         ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..25926.17 rows=500125 width=8) (actual time=0.027..108.868 rows=758659 loops=5)
                                                               Heap Fetches: 0
                                                         ->  Hash  (cost=232.45..232.45 rows=400 width=30) (actual time=0.445..0.446 rows=421 loops=5)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                               ->  Nested Loop  (cost=5.38..232.45 rows=400 width=30) (actual time=0.060..0.379 rows=421 loops=5)
                                                                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.014 rows=1 loops=5)
                                                                           Filter: (n_name = 'PERU'::bpchar)
                                                                           Rows Removed by Filter: 24
                                                                     ->  Bitmap Heap Scan on supplier  (cost=5.38..227.14 rows=400 width=34) (actual time=0.046..0.314 rows=421 loops=5)
                                                                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                           Heap Blocks: exact=184
                                                                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.021..0.022 rows=421 loops=5)
                                                                                 Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=14289)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 3.422 ms
 Execution Time: 467.416 ms
(47 rows)

query 22 run 1
SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.56..12517.22 rows=1 width=72) (actual time=167.545..169.341 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=6242.81..6242.82 rows=1 width=32) (actual time=50.652..50.732 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=50.524..50.722 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=41.990..41.991 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1983 width=6) (actual time=0.171..40.754 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7506.94 rows=743 width=72) (actual time=167.544..169.259 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7488.37 rows=743 width=38) (actual time=75.760..168.675 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=74.733..77.970 rows=2737 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=21.389..21.545 rows=1618 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 535kB
                           Worker 0:  Sort Method: quicksort  Memory: 475kB
                           Worker 1:  Sort Method: quicksort  Memory: 462kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.018..19.513 rows=6359 loops=3)
                                 Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.00 rows=17 width=4) (actual time=0.032..0.032 rows=1 loops=2737)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 14.915 ms
 Execution Time: 170.074 ms
(29 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.56..12517.22 rows=1 width=72) (actual time=58.730..60.379 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=6242.81..6242.82 rows=1 width=32) (actual time=28.561..28.646 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=28.443..28.635 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=26.223..26.224 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1983 width=6) (actual time=0.014..25.102 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7506.94 rows=743 width=72) (actual time=58.729..60.291 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7488.37 rows=743 width=38) (actual time=52.015..60.010 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=51.979..54.298 rows=2735 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=20.719..20.804 rows=1625 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 550kB
                           Worker 0:  Sort Method: quicksort  Memory: 456kB
                           Worker 1:  Sort Method: quicksort  Memory: 466kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.018..18.890 rows=6359 loops=3)
                                 Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.00 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=2735)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 1.141 ms
 Execution Time: 60.440 ms
(29 rows)

