query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184206.13..184206.76 rows=1 width=236) (actual time=2037.273..2042.396 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184206.13..184209.94 rows=6 width=236) (actual time=2037.272..2042.394 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184206.13..184209.00 rows=24 width=236) (actual time=2037.248..2042.373 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183206.07..183206.08 rows=6 width=236) (actual time=2029.943..2029.944 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=183205.86..183205.99 rows=6 width=236) (actual time=2029.904..2029.911 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.00 rows=1482653 width=25) (actual time=1.140..431.618 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 20.025 ms
 Execution Time: 2042.759 ms
(25 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184206.13..184206.76 rows=1 width=236) (actual time=1893.953..1894.032 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184206.13..184209.94 rows=6 width=236) (actual time=1893.952..1894.030 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184206.13..184209.00 rows=24 width=236) (actual time=1893.920..1894.001 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183206.07..183206.08 rows=6 width=236) (actual time=1889.069..1889.070 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=183205.86..183205.99 rows=6 width=236) (actual time=1889.038..1889.044 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.00 rows=1482653 width=25) (actual time=0.028..265.233 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 1.307 ms
 Execution Time: 1894.124 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=19204.67..19204.67 rows=1 width=192) (actual time=160.176..160.189 rows=100 loops=1)
   ->  Sort  (cost=19204.67..19204.67 rows=1 width=192) (actual time=160.175..160.181 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Nested Loop  (cost=14.58..19204.66 rows=1 width=192) (actual time=4.992..159.849 rows=489 loops=1)
               Join Filter: (supplier.s_nationkey = nation.n_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.311..0.316 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.158..0.159 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.150..0.152 rows=25 loops=1)
               ->  Materialize  (cost=14.58..19201.96 rows=1 width=170) (actual time=0.355..31.826 rows=489 loops=5)
                     ->  Nested Loop  (cost=14.58..19201.95 rows=1 width=170) (actual time=1.769..158.533 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.30..19200.68 rows=1 width=34) (actual time=1.335..114.049 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5440.01 rows=877 width=30) (actual time=0.189..23.248 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.88..15.68 rows=1 width=14) (actual time=0.001..0.002 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.44..13.45 rows=1 width=32) (actual time=0.110..0.110 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.85..13.44 rows=1 width=6) (actual time=0.098..0.108 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..12.33 rows=4 width=10) (actual time=0.077..0.105 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.71..11.71 rows=4 width=10) (actual time=0.075..0.099 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.071..0.073 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..2.30 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.090..0.090 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 22.047 ms
 Execution Time: 160.278 ms
(47 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=19204.67..19204.67 rows=1 width=192) (actual time=23.696..23.709 rows=100 loops=1)
   ->  Sort  (cost=19204.67..19204.67 rows=1 width=192) (actual time=23.695..23.702 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Nested Loop  (cost=14.58..19204.66 rows=1 width=192) (actual time=0.167..23.402 rows=489 loops=1)
               Join Filter: (supplier.s_nationkey = nation.n_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.008..0.013 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
               ->  Materialize  (cost=14.58..19201.96 rows=1 width=170) (actual time=0.012..4.617 rows=489 loops=5)
                     ->  Nested Loop  (cost=14.58..19201.95 rows=1 width=170) (actual time=0.056..22.732 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.30..19200.68 rows=1 width=34) (actual time=0.052..21.628 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5440.01 rows=877 width=30) (actual time=0.011..7.425 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.88..15.68 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.44..13.45 rows=1 width=32) (actual time=0.015..0.016 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.85..13.44 rows=1 width=6) (actual time=0.011..0.014 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..12.33 rows=4 width=10) (actual time=0.005..0.012 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.71..11.71 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.003..0.003 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..2.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.002..0.002 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 2.517 ms
 Execution Time: 23.765 ms
(47 rows)

query 3 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234004.54..234004.56 rows=10 width=44) (actual time=1161.154..1163.510 rows=10 loops=1)
   ->  Sort  (cost=234004.54..234803.31 rows=319510 width=44) (actual time=1161.153..1163.507 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=180057.10..227100.04 rows=319510 width=44) (actual time=1138.625..1161.197 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180057.10..218313.51 rows=319510 width=24) (actual time=1138.612..1145.262 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=179057.04..179256.73 rows=79878 width=24) (actual time=1130.479..1130.752 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 532kB
                           Worker 0:  Sort Method: quicksort  Memory: 513kB
                           Worker 1:  Sort Method: quicksort  Memory: 539kB
                           Worker 2:  Sort Method: quicksort  Memory: 487kB
                           Worker 3:  Sort Method: quicksort  Memory: 502kB
                           ->  Parallel Hash Join  (cost=37924.17..172552.77 rows=79878 width=24) (actual time=239.555..1128.575 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.00 rows=815459 width=16) (actual time=0.582..817.736 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37331.71..37331.71 rows=47397 width=12) (actual time=237.525..237.528 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                       ->  Parallel Hash Join  (cost=4535.96..37331.71 rows=47397 width=12) (actual time=22.997..228.232 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=234794 width=16) (actual time=0.458..175.052 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12617 width=4) (actual time=22.430..22.430 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12617 width=4) (actual time=0.107..20.160 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 24.036 ms
 Execution Time: 1163.911 ms
(35 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234004.54..234004.56 rows=10 width=44) (actual time=458.315..461.128 rows=10 loops=1)
   ->  Sort  (cost=234004.54..234803.31 rows=319510 width=44) (actual time=458.314..461.126 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=180057.10..227100.04 rows=319510 width=44) (actual time=435.732..458.802 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180057.10..218313.51 rows=319510 width=24) (actual time=435.717..442.927 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=179057.04..179256.73 rows=79878 width=24) (actual time=431.905..432.179 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 507kB
                           Worker 0:  Sort Method: quicksort  Memory: 485kB
                           Worker 1:  Sort Method: quicksort  Memory: 484kB
                           Worker 2:  Sort Method: quicksort  Memory: 520kB
                           Worker 3:  Sort Method: quicksort  Memory: 577kB
                           ->  Parallel Hash Join  (cost=37924.17..172552.77 rows=79878 width=24) (actual time=99.168..430.076 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.00 rows=815459 width=16) (actual time=0.915..253.382 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37331.71..37331.71 rows=47397 width=12) (actual time=97.636..97.639 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                       ->  Parallel Hash Join  (cost=4535.96..37331.71 rows=47397 width=12) (actual time=10.125..89.294 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=234794 width=16) (actual time=0.011..51.860 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12617 width=4) (actual time=9.103..9.104 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1568kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12617 width=4) (actual time=0.009..5.902 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 1.876 ms
 Execution Time: 461.202 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29418.58..53587.63 rows=1 width=24) (actual time=888.335..893.267 rows=1 loops=1)
   ->  GroupAggregate  (cost=29418.58..150263.83 rows=5 width=24) (actual time=888.334..893.264 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29418.58..149976.01 rows=57553 width=16) (actual time=422.127..888.900 rows=10479 loops=1)
               ->  Gather Merge  (cost=29418.15..36227.04 rows=57553 width=20) (actual time=421.573..432.301 rows=11388 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28418.11..28464.53 rows=18565 width=20) (actual time=414.423..414.798 rows=3790 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1027kB
                           Worker 0:  Sort Method: quicksort  Memory: 1055kB
                           Worker 1:  Sort Method: quicksort  Memory: 1040kB
                           Worker 2:  Sort Method: quicksort  Memory: 1039kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=692.35..27101.83 rows=18565 width=20) (actual time=4.661..409.292 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5652
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..677.96 rows=57553 width=0) (actual time=7.246..7.246 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.43..2.22 rows=1 width=4) (actual time=0.039..0.039 rows=1 loops=11388)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Heap Fetches: 0
 Planning Time: 19.910 ms
 Execution Time: 893.916 ms
(23 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29418.58..53587.63 rows=1 width=24) (actual time=63.666..69.105 rows=1 loops=1)
   ->  GroupAggregate  (cost=29418.58..150263.83 rows=5 width=24) (actual time=63.665..69.103 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29418.58..149976.01 rows=57553 width=16) (actual time=33.677..67.237 rows=10479 loops=1)
               ->  Gather Merge  (cost=29418.15..36227.04 rows=57553 width=20) (actual time=33.640..41.764 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28418.11..28464.53 rows=18565 width=20) (actual time=30.683..30.944 rows=3688 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1037kB
                           Worker 0:  Sort Method: quicksort  Memory: 1013kB
                           Worker 1:  Sort Method: quicksort  Memory: 1026kB
                           Worker 2:  Sort Method: quicksort  Memory: 1085kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=692.35..27101.83 rows=18565 width=20) (actual time=6.263..27.389 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5784
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..677.96 rows=57553 width=0) (actual time=5.425..5.426 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.43..2.22 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Heap Fetches: 0
 Planning Time: 1.440 ms
 Execution Time: 69.409 ms
(23 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=71479.41..71479.41 rows=1 width=58) (actual time=761.388..768.287 rows=1 loops=1)
   ->  Sort  (cost=71479.41..71479.47 rows=25 width=58) (actual time=761.387..768.285 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=71439.96..71479.28 rows=25 width=58) (actual time=760.813..768.269 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=71439.96..71478.41 rows=75 width=58) (actual time=760.581..768.249 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=70439.92..70469.56 rows=25 width=58) (actual time=751.699..752.438 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=70439.92..70445.78 rows=2346 width=38) (actual time=751.512..751.595 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 165kB
                                 Worker 0:  Sort Method: quicksort  Memory: 169kB
                                 Worker 1:  Sort Method: quicksort  Memory: 160kB
                                 Worker 2:  Sort Method: quicksort  Memory: 171kB
                                 ->  Hash Join  (cost=7946.38..70308.59 rows=2346 width=38) (actual time=58.198..750.111 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7473.38..69527.78 rows=58631 width=50) (actual time=54.039..734.847 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7472.95..35038.96 rows=14655 width=38) (actual time=53.366..530.597 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2732.82..29962.98 rows=73277 width=8) (actual time=20.071..473.879 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6550
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2676.03 rows=227160 width=0) (actual time=15.990..15.990 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=33.149..33.151 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.284..30.858 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.158..26.144 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.120..0.122 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.113..0.119 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.050..0.052 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.057..0.057 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.054..0.055 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.43..2.31 rows=4 width=20) (actual time=0.016..0.017 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.870..3.870 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.098..2.417 rows=10000 loops=4)
 Planning Time: 33.520 ms
 Execution Time: 768.403 ms
(50 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=71479.41..71479.41 rows=1 width=58) (actual time=125.894..135.729 rows=1 loops=1)
   ->  Sort  (cost=71479.41..71479.47 rows=25 width=58) (actual time=125.893..135.726 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=71439.96..71479.28 rows=25 width=58) (actual time=125.309..135.715 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=71439.96..71478.41 rows=75 width=58) (actual time=125.092..135.695 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=70439.92..70469.56 rows=25 width=58) (actual time=120.817..121.570 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=70439.92..70445.78 rows=2346 width=38) (actual time=120.630..120.718 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 168kB
                                 Worker 0:  Sort Method: quicksort  Memory: 165kB
                                 Worker 1:  Sort Method: quicksort  Memory: 163kB
                                 Worker 2:  Sort Method: quicksort  Memory: 169kB
                                 ->  Hash Join  (cost=7946.38..70308.59 rows=2346 width=38) (actual time=31.062..119.861 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7473.38..69527.78 rows=58631 width=50) (actual time=28.049..109.231 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7472.95..35038.96 rows=14655 width=38) (actual time=28.015..66.416 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2732.82..29962.98 rows=73277 width=8) (actual time=16.555..41.667 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6546
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2676.03 rows=227160 width=0) (actual time=12.765..12.765 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.320..11.322 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.046..9.410 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.009..3.831 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.032..0.033 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.026..0.031 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.010..0.012 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.43..2.31 rows=4 width=20) (actual time=0.003..0.003 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.942..2.942 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.012..1.543 rows=10000 loops=4)
 Planning Time: 5.205 ms
 Execution Time: 135.815 ms
(50 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116362.76..116362.77 rows=1 width=32) (actual time=1085.065..1091.832 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=116362.76..116362.77 rows=1 width=32) (actual time=1085.063..1091.829 rows=1 loops=1)
         ->  Gather  (cost=116362.33..116362.74 rows=4 width=32) (actual time=1084.568..1091.809 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=115362.33..115362.34 rows=1 width=32) (actual time=1075.043..1075.044 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=23127.13..115211.81 rows=30103 width=12) (actual time=130.631..1057.836 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=12878
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..23097.02 rows=120412 width=0) (actual time=127.057..127.057 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 18.689 ms
 Execution Time: 1092.899 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116362.76..116362.77 rows=1 width=32) (actual time=197.275..203.641 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=116362.76..116362.77 rows=1 width=32) (actual time=197.273..203.638 rows=1 loops=1)
         ->  Gather  (cost=116362.33..116362.74 rows=4 width=32) (actual time=193.879..203.620 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=115362.33..115362.34 rows=1 width=32) (actual time=190.625..190.626 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=23127.13..115211.81 rows=30103 width=12) (actual time=108.533..182.979 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=16969
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..23097.02 rows=120412 width=0) (actual time=100.174..100.174 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 1.208 ms
 Execution Time: 203.699 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141415.83..141574.44 rows=1 width=116) (actual time=3341.067..3344.606 rows=1 loops=1)
   ->  GroupAggregate  (cost=141415.83..1103394.95 rows=6065 width=116) (actual time=3341.065..3344.604 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141415.83..1103213.00 rows=6065 width=96) (actual time=883.032..3341.404 rows=1359 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 32694
               ->  Nested Loop  (cost=141415.41..765798.86 rows=151625 width=76) (actual time=872.294..2885.187 rows=34053 loops=1)
                     ->  Gather Merge  (cost=141414.98..159569.74 rows=151625 width=76) (actual time=870.944..914.261 rows=34053 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140414.92..140509.69 rows=37906 width=76) (actual time=857.193..858.130 rows=7224 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 3846kB
                                 Worker 0:  Sort Method: quicksort  Memory: 4048kB
                                 Worker 1:  Sort Method: quicksort  Memory: 3951kB
                                 Worker 2:  Sort Method: quicksort  Memory: 3841kB
                                 Worker 3:  Sort Method: quicksort  Memory: 3984kB
                                 ->  Hash Join  (cost=381.77..137532.15 rows=37906 width=76) (actual time=3.509..832.400 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135063.60 rows=455428 width=24) (actual time=0.366..777.970 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=3.063..3.066 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.335..2.928 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.239..1.725 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.089..0.091 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.082..0.088 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.069..0.071 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.008 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=8) (actual time=0.057..0.057 rows=1 loops=34053)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.21 rows=1 width=8) (actual time=0.012..0.013 rows=1 loops=34053)
                     Index Cond: (c_custkey = orders.o_custkey)
                     Heap Fetches: 0
 Planning Time: 28.704 ms
 Execution Time: 3345.366 ms
(46 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141415.83..141574.44 rows=1 width=116) (actual time=504.648..505.841 rows=1 loops=1)
   ->  GroupAggregate  (cost=141415.83..1103394.95 rows=6065 width=116) (actual time=504.647..505.839 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141415.83..1103213.00 rows=6065 width=96) (actual time=346.414..504.584 rows=1359 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 32676
               ->  Nested Loop  (cost=141415.41..765798.86 rows=151625 width=76) (actual time=346.256..438.140 rows=34035 loops=1)
                     ->  Gather Merge  (cost=141414.98..159569.74 rows=151625 width=76) (actual time=346.211..364.694 rows=34035 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140414.92..140509.69 rows=37906 width=76) (actual time=333.986..334.689 rows=7212 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 5576kB
                                 Worker 0:  Sort Method: quicksort  Memory: 5387kB
                                 Worker 1:  Sort Method: quicksort  Memory: 2681kB
                                 Worker 2:  Sort Method: quicksort  Memory: 3915kB
                                 Worker 3:  Sort Method: quicksort  Memory: 3648kB
                                 ->  Hash Join  (cost=381.77..137532.15 rows=37906 width=76) (actual time=2.233..307.928 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135063.60 rows=455428 width=24) (actual time=0.037..253.265 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.119..2.122 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.036..1.991 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.009..0.730 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.023..0.025 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.018..0.023 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.010 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.004 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34035)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.21 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34035)
                     Index Cond: (c_custkey = orders.o_custkey)
                     Heap Fetches: 0
 Planning Time: 3.856 ms
 Execution Time: 505.940 ms
(46 rows)

query 8 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41761.56..41775.60 rows=1 width=64) (actual time=692.419..698.808 rows=1 loops=1)
   ->  GroupAggregate  (cost=41761.56..75230.88 rows=2383 width=64) (actual time=692.417..698.805 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41761.56..75135.56 rows=2383 width=70) (actual time=317.915..696.636 rows=1235 loops=1)
               ->  Nested Loop  (cost=41761.41..75042.26 rows=2383 width=20) (actual time=317.901..694.612 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41761.12..70107.25 rows=2383 width=20) (actual time=317.586..685.603 rows=1235 loops=1)
                           Join Filter: (n1.n_regionkey = region.r_regionkey)
                           Rows Removed by Join Filter: 4864
                           ->  Nested Loop  (cost=41761.12..69927.49 rows=11913 width=24) (actual time=317.300..682.217 rows=6099 loops=1)
                                 ->  Nested Loop  (cost=41760.98..69607.19 rows=11913 width=24) (actual time=317.090..675.406 rows=6099 loops=1)
                                       ->  Gather Merge  (cost=41760.56..43169.94 rows=11913 width=24) (actual time=316.701..327.739 rows=6099 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Sort  (cost=40760.52..40770.12 rows=3843 width=24) (actual time=308.396..308.578 rows=2166 loops=4)
                                                   Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                                   Sort Method: quicksort  Memory: 280kB
                                                   Worker 0:  Sort Method: quicksort  Memory: 280kB
                                                   Worker 1:  Sort Method: quicksort  Memory: 276kB
                                                   Worker 2:  Sort Method: quicksort  Memory: 283kB
                                                   ->  Parallel Hash Join  (cost=6587.64..40531.70 rows=3843 width=24) (actual time=111.947..306.448 rows=3024 loops=4)
                                                         Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=145436 width=12) (actual time=0.437..172.460 rows=114316 loops=4)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 260684
                                                         ->  Parallel Hash  (cost=6463.78..6463.78 rows=9909 width=20) (actual time=111.135..111.136 rows=9924 loops=4)
                                                               Buckets: 65536  Batches: 1  Memory Usage: 2752kB
                                                               ->  Nested Loop  (cost=0.85..6463.78 rows=9909 width=20) (actual time=0.521..107.131 rows=9924 loops=4)
                                                                     ->  Parallel Index Only Scan using q2_idx_1 on part  (cost=0.42..5391.72 rows=330 width=4) (actual time=0.287..10.556 rows=330 loops=4)
                                                                           Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                                           Heap Fetches: 0
                                                                     ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.43..2.94 rows=31 width=24) (actual time=0.236..0.288 rows=30 loops=1320)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                       ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.22 rows=1 width=8) (actual time=0.056..0.056 rows=1 loops=6099)
                                             Index Cond: (c_custkey = orders.o_custkey)
                                             Heap Fetches: 0
                                 ->  Memoize  (cost=0.15..1.17 rows=1 width=8) (actual time=0.000..0.000 rows=1 loops=6099)
                                       Cache Key: customer.c_nationkey
                                       Cache Mode: logical
                                       Hits: 6074  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 3kB
                                       ->  Index Scan using nation_pkey on nation n1  (cost=0.14..1.16 rows=1 width=8) (actual time=0.012..0.012 rows=1 loops=25)
                                             Index Cond: (n_nationkey = customer.c_nationkey)
                           ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6099)
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.281..0.282 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                     ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.29..2.07 rows=1 width=8) (actual time=0.007..0.007 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Heap Fetches: 0
               ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1235)
                     Cache Key: supplier.s_nationkey
                     Cache Mode: logical
                     Hits: 1210  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                     ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.003..0.003 rows=1 loops=25)
                           Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 35.753 ms
 Execution Time: 698.927 ms
(57 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41761.56..41775.60 rows=1 width=64) (actual time=115.133..121.898 rows=1 loops=1)
   ->  GroupAggregate  (cost=41761.56..75230.88 rows=2383 width=64) (actual time=115.132..121.896 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41761.56..75135.56 rows=2383 width=70) (actual time=91.196..120.908 rows=1235 loops=1)
               ->  Nested Loop  (cost=41761.41..75042.26 rows=2383 width=20) (actual time=91.188..119.983 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41761.12..70107.25 rows=2383 width=20) (actual time=91.174..117.931 rows=1235 loops=1)
                           Join Filter: (n1.n_regionkey = region.r_regionkey)
                           Rows Removed by Join Filter: 4861
                           ->  Nested Loop  (cost=41761.12..69927.49 rows=11913 width=24) (actual time=91.164..116.173 rows=6096 loops=1)
                                 ->  Nested Loop  (cost=41760.98..69607.19 rows=11913 width=24) (actual time=91.154..113.484 rows=6096 loops=1)
                                       ->  Gather Merge  (cost=41760.56..43169.94 rows=11913 width=24) (actual time=91.126..100.131 rows=6096 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Sort  (cost=40760.52..40770.12 rows=3843 width=24) (actual time=87.992..88.108 rows=2173 loops=4)
                                                   Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                                   Sort Method: quicksort  Memory: 281kB
                                                   Worker 0:  Sort Method: quicksort  Memory: 280kB
                                                   Worker 1:  Sort Method: quicksort  Memory: 279kB
                                                   Worker 2:  Sort Method: quicksort  Memory: 279kB
                                                   ->  Parallel Hash Join  (cost=6587.64..40531.70 rows=3843 width=24) (actual time=12.832..86.637 rows=3024 loops=4)
                                                         Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=145436 width=12) (actual time=0.008..56.322 rows=114316 loops=4)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 260684
                                                         ->  Parallel Hash  (cost=6463.78..6463.78 rows=9909 width=20) (actual time=12.616..12.617 rows=9924 loops=4)
                                                               Buckets: 65536  Batches: 1  Memory Usage: 2752kB
                                                               ->  Nested Loop  (cost=0.85..6463.78 rows=9909 width=20) (actual time=0.147..10.006 rows=9924 loops=4)
                                                                     ->  Parallel Index Only Scan using q2_idx_1 on part  (cost=0.42..5391.72 rows=330 width=4) (actual time=0.118..5.973 rows=330 loops=4)
                                                                           Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                                           Heap Fetches: 0
                                                                     ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.43..2.94 rows=31 width=24) (actual time=0.005..0.009 rows=30 loops=1320)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                       ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.22 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=6096)
                                             Index Cond: (c_custkey = orders.o_custkey)
                                             Heap Fetches: 0
                                 ->  Memoize  (cost=0.15..1.17 rows=1 width=8) (actual time=0.000..0.000 rows=1 loops=6096)
                                       Cache Key: customer.c_nationkey
                                       Cache Mode: logical
                                       Hits: 6071  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 3kB
                                       ->  Index Scan using nation_pkey on nation n1  (cost=0.14..1.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=25)
                                             Index Cond: (n_nationkey = customer.c_nationkey)
                           ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6096)
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                     ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.29..2.07 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Heap Fetches: 0
               ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1235)
                     Cache Key: supplier.s_nationkey
                     Cache Mode: logical
                     Hits: 1210  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                     ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=25)
                           Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 5.580 ms
 Execution Time: 121.996 ms
(57 rows)

query 9 run 1
SET
SET
SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=42587.07..42599.66 rows=1 width=90) (actual time=2542.845..2546.790 rows=1 loops=1)
   ->  GroupAggregate  (cost=42587.07..799347.84 rows=60150 width=90) (actual time=2542.844..2546.787 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=42587.07..795263.06 rows=181859 width=81) (actual time=2541.948..2545.938 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 30kB  Peak Memory: 30kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 1528kB  Peak Memory: 1528kB
               ->  Nested Loop  (cost=11320.31..781324.34 rows=181859 width=81) (actual time=62.627..2523.649 rows=13629 loops=1)
                     ->  Nested Loop  (cost=11319.89..44930.62 rows=181859 width=53) (actual time=61.858..498.266 rows=13629 loops=1)
                           Join Filter: ((supplier.s_suppkey = lineitem.l_suppkey) AND (partsupp.ps_partkey = lineitem.l_partkey))
                           Rows Removed by Join Filter: 40315
                           ->  Gather Merge  (cost=11319.44..14187.67 rows=24244 width=48) (actual time=61.207..67.114 rows=1812 loops=1)
                                 Workers Planned: 3
                                 Workers Launched: 3
                                 ->  Sort  (cost=10319.40..10338.96 rows=7821 width=48) (actual time=52.500..52.606 rows=1042 loops=4)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1306kB
                                       Worker 0:  Sort Method: quicksort  Memory: 1191kB
                                       Worker 1:  Sort Method: quicksort  Memory: 1201kB
                                       Worker 2:  Sort Method: quicksort  Memory: 1240kB
                                       ->  Hash Join  (cost=450.41..9813.65 rows=7821 width=48) (actual time=4.581..45.840 rows=10880 loops=4)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.85..9788.08 rows=7821 width=26) (actual time=4.441..43.726 rows=10880 loops=4)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.84..9319.54 rows=7821 width=18) (actual time=0.173..35.715 rows=10880 loops=4)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=1955 width=4) (actual time=0.094..16.715 rows=2720 loops=4)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 47280
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..2.30 rows=4 width=14) (actual time=0.006..0.006 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=4.253..4.253 rows=10000 loops=4)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.236..2.602 rows=10000 loops=4)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.063..0.064 rows=25 loops=4)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.053..0.056 rows=25 loops=4)
                           ->  Memoize  (cost=0.44..2.86 rows=31 width=29) (actual time=0.164..0.230 rows=30 loops=1812)
                                 Cache Key: part.p_partkey
                                 Cache Mode: logical
                                 Hits: 117  Misses: 1695  Evictions: 0  Overflows: 0  Memory Usage: 3263kB
                                 ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.85 rows=31 width=29) (actual time=0.173..0.228 rows=30 loops=1695)
                                       Index Cond: (l_partkey = part.p_partkey)
                                       Heap Fetches: 0
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.05 rows=1 width=8) (actual time=0.146..0.146 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 41.190 ms
 Execution Time: 2546.896 ms
(50 rows)

SET
SET
SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=42587.07..42599.66 rows=1 width=90) (actual time=135.192..137.243 rows=1 loops=1)
   ->  GroupAggregate  (cost=42587.07..799347.84 rows=60150 width=90) (actual time=135.191..137.242 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=42587.07..795263.06 rows=181859 width=81) (actual time=134.298..136.395 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 30kB  Peak Memory: 30kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 1528kB  Peak Memory: 1528kB
               ->  Nested Loop  (cost=11320.31..781324.34 rows=181859 width=81) (actual time=37.978..127.700 rows=13629 loops=1)
                     ->  Nested Loop  (cost=11319.89..44930.62 rows=181859 width=53) (actual time=37.953..81.899 rows=13629 loops=1)
                           Join Filter: ((supplier.s_suppkey = lineitem.l_suppkey) AND (partsupp.ps_partkey = lineitem.l_partkey))
                           Rows Removed by Join Filter: 40322
                           ->  Gather Merge  (cost=11319.44..14187.67 rows=24244 width=48) (actual time=37.909..40.723 rows=1812 loops=1)
                                 Workers Planned: 3
                                 Workers Launched: 3
                                 ->  Sort  (cost=10319.40..10338.96 rows=7821 width=48) (actual time=34.814..34.897 rows=1052 loops=4)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1327kB
                                       Worker 0:  Sort Method: quicksort  Memory: 1198kB
                                       Worker 1:  Sort Method: quicksort  Memory: 1214kB
                                       Worker 2:  Sort Method: quicksort  Memory: 1200kB
                                       ->  Hash Join  (cost=450.41..9813.65 rows=7821 width=48) (actual time=3.268..28.419 rows=10880 loops=4)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.85..9788.08 rows=7821 width=26) (actual time=3.171..26.460 rows=10880 loops=4)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.84..9319.54 rows=7821 width=18) (actual time=0.088..20.209 rows=10880 loops=4)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=1955 width=4) (actual time=0.063..11.663 rows=2720 loops=4)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 47280
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..2.30 rows=4 width=14) (actual time=0.002..0.003 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.066..3.067 rows=10000 loops=4)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.006..1.466 rows=10000 loops=4)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.023..0.023 rows=25 loops=4)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.012..0.015 rows=25 loops=4)
                           ->  Memoize  (cost=0.44..2.86 rows=31 width=29) (actual time=0.005..0.019 rows=30 loops=1812)
                                 Cache Key: part.p_partkey
                                 Cache Mode: logical
                                 Hits: 117  Misses: 1695  Evictions: 0  Overflows: 0  Memory Usage: 3263kB
                                 ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.85 rows=31 width=29) (actual time=0.004..0.011 rows=30 loops=1695)
                                       Index Cond: (l_partkey = part.p_partkey)
                                       Heap Fetches: 0
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.05 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 7.217 ms
 Execution Time: 137.335 ms
(50 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=85830.88..85830.93 rows=20 width=202) (actual time=703.121..707.942 rows=20 loops=1)
   ->  Sort  (cost=85830.88..85976.47 rows=58238 width=202) (actual time=703.119..707.938 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=83553.21..84281.19 rows=58238 width=202) (actual time=672.189..696.453 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Gather  (cost=6722.36..82825.24 rows=58238 width=182) (actual time=57.712..575.882 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5722.36..76001.44 rows=18786 width=182) (actual time=50.717..624.982 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5720.79..75942.21 rows=18786 width=160) (actual time=50.324..616.676 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=717.54..70889.64 rows=18786 width=16) (actual time=13.889..561.947 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=717.11..27136.40 rows=19219 width=8) (actual time=12.956..389.883 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=4428
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..702.22 rows=59579 width=0) (actual time=9.111..9.111 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.43..2.27 rows=1 width=16) (actual time=0.011..0.011 rows=2 loops=57111)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=36.024..36.024 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.117..15.270 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.137..0.138 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.060..0.063 rows=25 loops=4)
 Planning Time: 27.192 ms
 Execution Time: 708.338 ms
(31 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=85830.88..85830.93 rows=20 width=202) (actual time=197.276..201.412 rows=20 loops=1)
   ->  Sort  (cost=85830.88..85976.47 rows=58238 width=202) (actual time=197.275..201.408 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=83553.21..84281.19 rows=58238 width=202) (actual time=165.922..189.856 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Gather  (cost=6722.36..82825.24 rows=58238 width=182) (actual time=43.059..87.829 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5722.36..76001.44 rows=18786 width=182) (actual time=39.901..129.427 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5720.79..75942.21 rows=18786 width=160) (actual time=39.480..122.869 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=717.54..70889.64 rows=18786 width=16) (actual time=11.021..81.468 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=717.11..27136.40 rows=19219 width=8) (actual time=10.923..28.246 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=1651
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..702.22 rows=59579 width=0) (actual time=7.519..7.519 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.43..2.27 rows=1 width=16) (actual time=0.003..0.003 rows=2 loops=57111)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=28.041..28.042 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29344kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.007..7.697 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.028..0.028 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.016..0.019 rows=25 loops=4)
 Planning Time: 2.552 ms
 Execution Time: 201.760 ms
(31 rows)

query 11 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17301.09..17301.09 rows=1 width=36) (actual time=605.289..605.415 rows=1 loops=1)
   InitPlan 1 (returns $3)
     ->  Finalize Aggregate  (cost=7230.96..7230.97 rows=1 width=32) (actual time=21.410..21.504 rows=1 loops=1)
           ->  Gather  (cost=7230.84..7230.95 rows=1 width=32) (actual time=21.402..21.497 rows=2 loops=1)
                 Workers Planned: 1
                 Workers Launched: 1
                 ->  Partial Aggregate  (cost=6230.84..6230.85 rows=1 width=32) (actual time=19.618..19.620 rows=1 loops=2)
                       ->  Nested Loop  (cost=0.86..6089.66 rows=18824 width=10) (actual time=0.088..15.425 rows=16440 loops=2)
                             ->  Nested Loop  (cost=0.43..640.26 rows=235 width=4) (actual time=0.082..2.290 rows=206 loops=2)
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.024..0.917 rows=5000 loops=2)
                                         Heap Fetches: 0
                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=4) (actual time=0.000..0.000 rows=0 loops=10000)
                                         Cache Key: supplier_1.s_nationkey
                                         Cache Mode: logical
                                         Hits: 6158  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                         Worker 0:  Hits: 3792  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                         ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=50)
                                               Index Cond: (n_nationkey = supplier_1.s_nationkey)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 1
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..22.39 rows=80 width=14) (actual time=0.003..0.055 rows=80 loops=411)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=10070.12..10096.78 rows=10667 width=36) (actual time=605.288..605.318 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize HashAggregate  (cost=9536.78..10016.78 rows=10667 width=36) (actual time=595.569..605.149 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $3)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Gather  (cost=7277.90..9395.60 rows=18824 width=36) (actual time=549.925..559.138 rows=31862 loops=1)
                     Workers Planned: 1
                     Workers Launched: 1
                     ->  Partial HashAggregate  (cost=6277.90..6513.20 rows=18824 width=36) (actual time=544.426..551.644 rows=15931 loops=2)
                           Group Key: partsupp.ps_partkey
                           Batches: 1  Memory Usage: 6929kB
                           Worker 0:  Batches: 1  Memory Usage: 6929kB
                           ->  Nested Loop  (cost=0.86..6089.66 rows=18824 width=14) (actual time=0.875..527.529 rows=16440 loops=2)
                                 ->  Nested Loop  (cost=0.43..640.26 rows=235 width=4) (actual time=0.253..3.510 rows=206 loops=2)
                                       ->  Parallel Index Only Scan using q2_idx_3 on supplier  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.083..1.730 rows=5000 loops=2)
                                             Heap Fetches: 0
                                       ->  Memoize  (cost=0.15..0.17 rows=1 width=4) (actual time=0.000..0.000 rows=0 loops=10000)
                                             Cache Key: supplier.s_nationkey
                                             Cache Mode: logical
                                             Hits: 5313  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                             Worker 0:  Hits: 4637  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                             ->  Index Scan using nation_pkey on nation  (cost=0.14..0.16 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=50)
                                                   Index Cond: (n_nationkey = supplier.s_nationkey)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..22.39 rows=80 width=18) (actual time=0.071..2.530 rows=80 loops=411)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 17.671 ms
 Execution Time: 606.057 ms
(54 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17301.09..17301.09 rows=1 width=36) (actual time=86.401..86.539 rows=1 loops=1)
   InitPlan 1 (returns $3)
     ->  Finalize Aggregate  (cost=7230.96..7230.97 rows=1 width=32) (actual time=20.786..20.893 rows=1 loops=1)
           ->  Gather  (cost=7230.84..7230.95 rows=1 width=32) (actual time=20.551..20.881 rows=2 loops=1)
                 Workers Planned: 1
                 Workers Launched: 1
                 ->  Partial Aggregate  (cost=6230.84..6230.85 rows=1 width=32) (actual time=18.918..18.920 rows=1 loops=2)
                       ->  Nested Loop  (cost=0.86..6089.66 rows=18824 width=10) (actual time=0.087..14.680 rows=16440 loops=2)
                             ->  Nested Loop  (cost=0.43..640.26 rows=235 width=4) (actual time=0.079..2.278 rows=206 loops=2)
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.023..0.915 rows=5000 loops=2)
                                         Heap Fetches: 0
                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=4) (actual time=0.000..0.000 rows=0 loops=10000)
                                         Cache Key: supplier_1.s_nationkey
                                         Cache Mode: logical
                                         Hits: 6498  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                         Worker 0:  Hits: 3452  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                         ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=50)
                                               Index Cond: (n_nationkey = supplier_1.s_nationkey)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 1
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..22.39 rows=80 width=14) (actual time=0.003..0.051 rows=80 loops=411)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=10070.12..10096.78 rows=10667 width=36) (actual time=86.399..86.430 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize HashAggregate  (cost=9536.78..10016.78 rows=10667 width=36) (actual time=76.500..86.255 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $3)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Gather  (cost=7277.90..9395.60 rows=18824 width=36) (actual time=30.435..40.120 rows=31884 loops=1)
                     Workers Planned: 1
                     Workers Launched: 1
                     ->  Partial HashAggregate  (cost=6277.90..6513.20 rows=18824 width=36) (actual time=28.599..35.798 rows=15942 loops=2)
                           Group Key: partsupp.ps_partkey
                           Batches: 1  Memory Usage: 8977kB
                           Worker 0:  Batches: 1  Memory Usage: 6929kB
                           ->  Nested Loop  (cost=0.86..6089.66 rows=18824 width=14) (actual time=0.083..18.761 rows=16440 loops=2)
                                 ->  Nested Loop  (cost=0.43..640.26 rows=235 width=4) (actual time=0.076..2.372 rows=206 loops=2)
                                       ->  Parallel Index Only Scan using q2_idx_3 on supplier  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.016..0.938 rows=5000 loops=2)
                                             Heap Fetches: 0
                                       ->  Memoize  (cost=0.15..0.17 rows=1 width=4) (actual time=0.000..0.000 rows=0 loops=10000)
                                             Cache Key: supplier.s_nationkey
                                             Cache Mode: logical
                                             Hits: 5029  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                             Worker 0:  Hits: 4921  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                             ->  Index Scan using nation_pkey on nation  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=50)
                                                   Index Cond: (n_nationkey = supplier.s_nationkey)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..22.39 rows=80 width=18) (actual time=0.003..0.070 rows=80 loops=411)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.225 ms
 Execution Time: 87.142 ms
(54 rows)

query 12 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15151.54..31855.23 rows=1 width=27) (actual time=939.892..943.302 rows=1 loops=1)
   ->  GroupAggregate  (cost=15151.54..132077.39 rows=7 width=27) (actual time=939.890..943.301 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=15151.54..131582.82 rows=28257 width=27) (actual time=63.089..932.442 rows=15492 loops=1)
               ->  Gather Merge  (cost=15151.11..18534.46 rows=28257 width=15) (actual time=62.662..74.171 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=14151.06..14168.72 rows=7064 width=15) (actual time=55.182..55.535 rows=4358 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 483kB
                           Worker 0:  Sort Method: quicksort  Memory: 427kB
                           Worker 1:  Sort Method: quicksort  Memory: 418kB
                           Worker 2:  Sort Method: quicksort  Memory: 423kB
                           Worker 3:  Sort Method: quicksort  Memory: 420kB
                           ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..13699.45 rows=7064 width=15) (actual time=0.595..53.989 rows=6191 loops=5)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 15496
                                 Heap Fetches: 0
               ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=20) (actual time=0.054..0.054 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 20.855 ms
 Execution Time: 943.378 ms
(23 rows)

SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15151.54..31855.23 rows=1 width=27) (actual time=74.950..76.486 rows=1 loops=1)
   ->  GroupAggregate  (cost=15151.54..132077.39 rows=7 width=27) (actual time=74.949..76.484 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=15151.54..131582.82 rows=28257 width=27) (actual time=27.652..71.870 rows=15492 loops=1)
               ->  Gather Merge  (cost=15151.11..18534.46 rows=28257 width=15) (actual time=27.613..32.658 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=14151.06..14168.72 rows=7064 width=15) (actual time=23.927..24.160 rows=4203 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 492kB
                           Worker 0:  Sort Method: quicksort  Memory: 463kB
                           Worker 1:  Sort Method: quicksort  Memory: 377kB
                           Worker 2:  Sort Method: quicksort  Memory: 410kB
                           Worker 3:  Sort Method: quicksort  Memory: 429kB
                           ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..13699.45 rows=7064 width=15) (actual time=0.047..22.889 rows=6191 loops=5)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 15496
                                 Heap Fetches: 0
               ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 1.513 ms
 Execution Time: 76.534 ms
(23 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64793.97..64793.97 rows=1 width=16) (actual time=1441.497..1441.501 rows=1 loops=1)
   ->  Sort  (cost=64793.97..64794.47 rows=200 width=16) (actual time=1441.496..1441.499 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64790.97..64792.97 rows=200 width=16) (actual time=1441.471..1441.479 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61040.97..62540.97 rows=150000 width=12) (actual time=1402.255..1424.462 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4953.42..53692.49 rows=1469697 width=8) (actual time=34.902..1053.385 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1469697 width=8) (actual time=0.615..628.877 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=33.964..33.965 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.317..16.571 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 16.270 ms
 Execution Time: 1442.679 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64793.97..64793.97 rows=1 width=16) (actual time=1251.191..1251.194 rows=1 loops=1)
   ->  Sort  (cost=64793.97..64794.47 rows=200 width=16) (actual time=1251.189..1251.192 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64790.97..64792.97 rows=200 width=16) (actual time=1251.164..1251.172 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61040.97..62540.97 rows=150000 width=12) (actual time=1212.325..1234.084 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4953.42..53692.49 rows=1469697 width=8) (actual time=30.206..883.279 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1469697 width=8) (actual time=0.011..483.669 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=29.859..29.860 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.014..13.045 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.837 ms
 Execution Time: 1252.305 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79133.04..79133.05 rows=1 width=32) (actual time=546.480..555.261 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=79133.04..79133.05 rows=1 width=32) (actual time=546.478..555.259 rows=1 loops=1)
         ->  Gather  (cost=79132.58..79132.99 rows=4 width=64) (actual time=546.464..555.248 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=78132.58..78132.59 rows=1 width=64) (actual time=534.034..534.036 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7240.62..77824.33 rows=17614 width=33) (actual time=51.910..518.230 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1266.63..71804.10 rows=17614 width=16) (actual time=21.436..471.810 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8634
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1249.01 rows=70458 width=0) (actual time=14.339..14.339 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=29.843..29.843 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.108..13.302 rows=40000 loops=5)
 Planning Time: 22.883 ms
 Execution Time: 555.324 ms
(18 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79133.04..79133.05 rows=1 width=32) (actual time=105.056..109.189 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=79133.04..79133.05 rows=1 width=32) (actual time=105.054..109.187 rows=1 loops=1)
         ->  Gather  (cost=79132.58..79132.99 rows=4 width=64) (actual time=100.761..109.164 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=78132.58..78132.59 rows=1 width=64) (actual time=96.638..96.641 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7240.62..77824.33 rows=17614 width=33) (actual time=38.853..85.832 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1266.63..71804.10 rows=17614 width=16) (actual time=15.178..53.894 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=9070
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1249.01 rows=70458 width=0) (actual time=8.728..8.729 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=23.057..23.058 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14240kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.011..7.515 rows=40000 loops=5)
 Planning Time: 1.895 ms
 Execution Time: 109.233 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=242604.62..242712.05 rows=1 width=103) (actual time=1294.417..1301.487 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122690.36..122690.37 rows=1 width=32) (actual time=235.475..235.476 rows=1 loops=1)
           ->  HashAggregate  (cost=122441.76..122566.06 rows=9944 width=36) (actual time=232.136..234.910 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4131.88..120141.81 rows=229995 width=16) (actual time=29.962..120.628 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4074.38 rows=229995 width=0) (actual time=19.262..19.262 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119914.26..125285.64 rows=50 width=103) (actual time=1294.415..1301.482 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119913.97..125124.02 rows=50 width=36) (actual time=1293.797..1300.862 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119913.97..124676.54 rows=39776 width=36) (actual time=1033.558..1048.180 rows=41778 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118913.91..118938.77 rows=9944 width=36) (actual time=1020.901..1021.744 rows=8818 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1312kB
                           Worker 0:  Sort Method: quicksort  Memory: 1313kB
                           Worker 1:  Sort Method: quicksort  Memory: 1310kB
                           Worker 2:  Sort Method: quicksort  Memory: 1314kB
                           Worker 3:  Sort Method: quicksort  Memory: 1311kB
                           ->  Partial HashAggregate  (cost=118129.35..118253.65 rows=9944 width=36) (actual time=1014.155..1019.044 rows=9892 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=4131.88..117554.36 rows=57499 width=16) (actual time=40.442..961.687 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13369
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4074.38 rows=229995 width=0) (actual time=36.623..36.623 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.22 rows=1 width=71) (actual time=0.612..0.612 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 18.349 ms
 Execution Time: 1302.133 ms
(42 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=242604.62..242712.05 rows=1 width=103) (actual time=399.761..409.533 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122690.36..122690.37 rows=1 width=32) (actual time=219.714..219.716 rows=1 loops=1)
           ->  HashAggregate  (cost=122441.76..122566.06 rows=9944 width=36) (actual time=216.392..219.150 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4131.88..120141.81 rows=229995 width=16) (actual time=30.118..107.259 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4074.38 rows=229995 width=0) (actual time=19.438..19.438 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119914.26..125285.64 rows=50 width=103) (actual time=399.759..409.529 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119913.97..125124.02 rows=50 width=36) (actual time=399.736..409.497 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119913.97..124676.54 rows=39776 width=36) (actual time=155.521..172.679 rows=41520 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118913.91..118938.77 rows=9944 width=36) (actual time=147.944..148.773 rows=8786 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1313kB
                           Worker 0:  Sort Method: quicksort  Memory: 1318kB
                           Worker 1:  Sort Method: quicksort  Memory: 1294kB
                           Worker 2:  Sort Method: quicksort  Memory: 1286kB
                           Worker 3:  Sort Method: quicksort  Memory: 1320kB
                           ->  Partial HashAggregate  (cost=118129.35..118253.65 rows=9944 width=36) (actual time=140.247..145.297 rows=9828 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=4131.88..117554.36 rows=57499 width=16) (actual time=34.103..104.122 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13420
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4074.38 rows=229995 width=0) (actual time=27.548..27.548 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.22 rows=1 width=71) (actual time=0.019..0.027 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 1.425 ms
 Execution Time: 409.887 ms
(42 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=27758.45..27758.45 rows=1 width=44) (actual time=292.836..293.911 rows=1 loops=1)
   ->  Sort  (cost=27758.45..27798.32 rows=15949 width=44) (actual time=292.835..293.909 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=19860.98..27678.70 rows=15949 width=44) (actual time=215.898..290.812 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=19860.98..26928.91 rows=59030 width=40) (actual time=215.882..270.225 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=18860.92..18897.81 rows=14758 width=40) (actual time=184.359..185.813 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 2386kB
                           Worker 0:  Sort Method: quicksort  Memory: 2328kB
                           Worker 1:  Sort Method: quicksort  Memory: 2453kB
                           Worker 2:  Sort Method: quicksort  Memory: 2327kB
                           Worker 3:  Sort Method: quicksort  Memory: 2230kB
                           ->  Parallel Hash Join  (cost=6684.49..17838.99 rows=14758 width=40) (actual time=38.069..108.537 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..11240.43 rows=100000 width=8) (actual time=7.515..60.181 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.824..6.797 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12298 width=40) (actual time=30.345..30.346 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12298 width=40) (actual time=0.199..27.306 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 19.534 ms
 Execution Time: 294.273 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=27758.45..27758.45 rows=1 width=44) (actual time=249.547..249.968 rows=1 loops=1)
   ->  Sort  (cost=27758.45..27798.32 rows=15949 width=44) (actual time=249.546..249.966 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=19860.98..27678.70 rows=15949 width=44) (actual time=172.404..246.855 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=19860.98..26928.91 rows=59030 width=40) (actual time=172.388..226.226 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=18860.92..18897.81 rows=14758 width=40) (actual time=151.334..152.770 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 2447kB
                           Worker 0:  Sort Method: quicksort  Memory: 2342kB
                           Worker 1:  Sort Method: quicksort  Memory: 2323kB
                           Worker 2:  Sort Method: quicksort  Memory: 2496kB
                           Worker 3:  Sort Method: quicksort  Memory: 2116kB
                           ->  Parallel Hash Join  (cost=6684.49..17838.99 rows=14758 width=40) (actual time=18.597..75.780 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..11240.43 rows=100000 width=8) (actual time=2.885..42.569 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.091..2.695 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12298 width=40) (actual time=15.529..15.530 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12298 width=40) (actual time=0.016..11.483 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 1.060 ms
 Execution Time: 250.023 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=176260.32..176260.34 rows=1 width=32) (actual time=2378.810..2384.273 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=176260.32..176260.34 rows=1 width=32) (actual time=2378.809..2384.271 rows=1 loops=1)
         ->  Gather  (cost=176260.10..176260.31 rows=2 width=32) (actual time=2376.755..2384.259 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=175260.10..175260.11 rows=1 width=32) (actual time=2344.680..2344.681 rows=1 loops=3)
                     ->  Nested Loop  (cost=5352.91..175257.84 rows=903 width=8) (actual time=390.808..2344.594 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=5352.47..175009.84 rows=90 width=40) (actual time=390.495..2315.184 rows=69 loops=3)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=5352.04..5352.27 rows=93 width=4) (actual time=26.828..26.861 rows=69 loops=3)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 25kB
                                       Worker 0:  Sort Method: quicksort  Memory: 25kB
                                       Worker 1:  Sort Method: quicksort  Memory: 25kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=93 width=4) (actual time=0.497..26.808 rows=69 loops=3)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 66597
                                 ->  GroupAggregate  (cost=0.43..169170.32 rows=194446 width=36) (actual time=0.756..2274.532 rows=197131 loops=3)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136248.83 rows=6000960 width=9) (actual time=0.712..1460.378 rows=5915238 loops=3)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.63 rows=10 width=17) (actual time=0.388..0.421 rows=3 loops=208)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 21.589 ms
 Execution Time: 2384.604 ms
(27 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=176260.32..176260.34 rows=1 width=32) (actual time=2060.331..2060.415 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=176260.32..176260.34 rows=1 width=32) (actual time=2060.329..2060.413 rows=1 loops=1)
         ->  Gather  (cost=176260.10..176260.31 rows=2 width=32) (actual time=2060.319..2060.406 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=175260.10..175260.11 rows=1 width=32) (actual time=2051.925..2051.926 rows=1 loops=3)
                     ->  Nested Loop  (cost=5352.91..175257.84 rows=903 width=8) (actual time=192.423..2051.879 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=5352.47..175009.84 rows=90 width=40) (actual time=192.403..2051.174 rows=69 loops=3)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=5352.04..5352.27 rows=93 width=4) (actual time=10.337..10.352 rows=69 loops=3)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 25kB
                                       Worker 0:  Sort Method: quicksort  Memory: 25kB
                                       Worker 1:  Sort Method: quicksort  Memory: 25kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=93 width=4) (actual time=0.056..10.321 rows=69 loops=3)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 66597
                                 ->  GroupAggregate  (cost=0.43..169170.32 rows=194446 width=36) (actual time=0.064..2029.627 rows=198926 loops=3)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136248.83 rows=6000960 width=9) (actual time=0.030..1240.914 rows=5968847 loops=3)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.63 rows=10 width=17) (actual time=0.008..0.009 rows=3 loops=208)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 2.100 ms
 Execution Time: 2060.480 ms
(27 rows)

query 18 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=695303.24..695303.49 rows=100 width=71) (actual time=3292.741..3292.748 rows=9 loops=1)
   ->  Sort  (cost=695303.24..700304.84 rows=2000640 width=71) (actual time=3292.740..3292.745 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=558664.72..618840.22 rows=2000640 width=71) (actual time=3291.992..3292.694 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=254584.92..433312.12 rows=2000640 width=44) (actual time=2567.432..3291.918 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136220.83 rows=6000960 width=9) (actual time=0.311..529.505 rows=6001215 loops=1)
                           Heap Fetches: 0
                     ->  Hash  (cost=248333.49..248333.49 rows=500080 width=43) (actual time=2372.688..2372.691 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=201952.23..248333.49 rows=500080 width=43) (actual time=2018.939..2372.664 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=194980.23..240048.74 rows=500080 width=24) (actual time=1949.591..2303.305 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.556..276.166 rows=1500000 loops=1)
                                       ->  Hash  (cost=188729.23..188729.23 rows=500080 width=4) (actual time=1849.942..1849.943 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..188729.23 rows=500080 width=4) (actual time=392.492..1849.927 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136220.83 rows=6000960 width=9) (actual time=0.017..710.486 rows=6001215 loops=1)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=69.020..69.021 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.523..43.078 rows=150000 loops=1)
 Planning Time: 23.764 ms
 Execution Time: 3294.470 ms
(31 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=695303.24..695303.49 rows=100 width=71) (actual time=2872.217..2872.224 rows=9 loops=1)
   ->  Sort  (cost=695303.24..700304.84 rows=2000640 width=71) (actual time=2872.216..2872.221 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=558664.72..618840.22 rows=2000640 width=71) (actual time=2871.469..2872.171 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=254584.92..433312.12 rows=2000640 width=44) (actual time=2151.289..2871.398 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136220.83 rows=6000960 width=9) (actual time=0.020..529.395 rows=6001215 loops=1)
                           Heap Fetches: 0
                     ->  Hash  (cost=248333.49..248333.49 rows=500080 width=43) (actual time=1957.629..1957.633 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=201952.23..248333.49 rows=500080 width=43) (actual time=1745.100..1957.609 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=194980.23..240048.74 rows=500080 width=24) (actual time=1701.174..1913.675 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.009..90.520 rows=1500000 loops=1)
                                       ->  Hash  (cost=188729.23..188729.23 rows=500080 width=4) (actual time=1643.553..1643.554 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..188729.23 rows=500080 width=4) (actual time=346.561..1643.542 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136220.83 rows=6000960 width=9) (actual time=0.015..537.689 rows=6001215 loops=1)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=43.555..43.555 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.014..19.511 rows=150000 loops=1)
 Planning Time: 2.389 ms
 Execution Time: 2873.344 ms
(31 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=9352.67..9352.68 rows=1 width=32) (actual time=125.851..129.436 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=9352.67..9352.68 rows=1 width=32) (actual time=125.850..129.434 rows=1 loops=1)
         ->  Gather  (cost=9352.45..9352.66 rows=2 width=32) (actual time=125.776..129.425 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=8352.45..8352.46 rows=1 width=32) (actual time=119.124..119.125 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.56..8352.08 rows=49 width=12) (actual time=4.415..119.046 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=206 width=30) (actual time=0.523..33.502 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.44 rows=1 width=21) (actual time=0.487..0.505 rows=0 loops=507)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning Time: 25.084 ms
 Execution Time: 129.508 ms
(17 rows)

SET
SET
SET


 Limit  (cost=9352.67..9352.68 rows=1 width=32) (actual time=22.656..24.515 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=9352.67..9352.68 rows=1 width=32) (actual time=22.654..24.513 rows=1 loops=1)
         ->  Gather  (cost=9352.45..9352.66 rows=2 width=32) (actual time=22.530..24.504 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=8352.45..8352.46 rows=1 width=32) (actual time=20.042..20.043 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.56..8352.08 rows=49 width=12) (actual time=0.419..20.004 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=206 width=30) (actual time=0.169..17.930 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.44 rows=1 width=21) (actual time=0.011..0.012 rows=0 loops=507)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning Time: 2.820 ms
 Execution Time: 24.768 ms
(17 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=214382.75..214382.76 rows=1 width=51) (actual time=3667.896..3667.996 rows=1 loops=1)
   ->  Sort  (cost=214382.75..214382.76 rows=1 width=51) (actual time=3667.895..3667.994 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=190967.09..214382.74 rows=1 width=51) (actual time=3498.361..3667.793 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.611..3.878 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.244..0.247 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.359..2.880 rows=10000 loops=1)
               ->  Materialize  (cost=190967.09..213927.43 rows=1 width=8) (actual time=6.171..8.135 rows=4340 loops=438)
                     ->  Nested Loop  (cost=190967.09..213927.43 rows=1 width=8) (actual time=2702.811..3493.079 rows=5898 loops=1)
                           ->  Hash Join  (cost=190966.67..208319.54 rows=4879 width=44) (actual time=2702.398..3232.172 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=184959.16..201043.90 rows=483086 width=40) (actual time=2672.668..3159.649 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16257.28..142393.15 rows=905058 width=13) (actual time=128.393..2103.295 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16031.01 rows=905058 width=0) (actual time=108.435..108.435 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=5982.26..5982.26 rows=2020 width=4) (actual time=29.706..29.802 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather Merge  (cost=1000.46..5982.26 rows=2020 width=4) (actual time=24.884..29.407 rows=2187 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=652 width=4) (actual time=0.271..15.045 rows=547 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 49453
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..1.14 rows=1 width=12) (actual time=0.043..0.043 rows=1 loops=5914)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning Time: 28.851 ms
 Execution Time: 3673.263 ms
(42 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=214382.75..214382.76 rows=1 width=51) (actual time=1392.900..1392.996 rows=1 loops=1)
   ->  Sort  (cost=214382.75..214382.76 rows=1 width=51) (actual time=1392.898..1392.994 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=190967.09..214382.74 rows=1 width=51) (actual time=1225.324..1392.836 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.020..1.585 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.014 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.005..0.691 rows=10000 loops=1)
               ->  Materialize  (cost=190967.09..213927.43 rows=1 width=8) (actual time=1.624..2.947 rows=4340 loops=438)
                     ->  Nested Loop  (cost=190967.09..213927.43 rows=1 width=8) (actual time=711.085..1222.167 rows=5898 loops=1)
                           ->  Hash Join  (cost=190966.67..208319.54 rows=4879 width=44) (actual time=711.064..1204.665 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=184959.16..201043.90 rows=483086 width=40) (actual time=698.116..1153.884 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16257.28..142393.15 rows=905058 width=13) (actual time=97.645..310.997 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16031.01 rows=905058 width=0) (actual time=78.386..78.386 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=5982.26..5982.26 rows=2020 width=4) (actual time=12.928..13.021 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather Merge  (cost=1000.46..5982.26 rows=2020 width=4) (actual time=10.204..12.836 rows=2187 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=652 width=4) (actual time=0.046..6.611 rows=547 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 49453
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..1.14 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning Time: 2.323 ms
 Execution Time: 1397.506 ms
(42 rows)

query 21 run 1
SET
SET
SET
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=57516.07..57516.07 rows=1 width=34) (actual time=1882.058..1884.227 rows=100 loops=1)
   ->  Sort  (cost=57516.07..57516.07 rows=1 width=34) (actual time=1882.057..1884.220 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=57516.04..57516.06 rows=1 width=34) (actual time=1881.041..1883.818 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=57516.04..57516.04 rows=1 width=26) (actual time=1881.032..1883.361 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 358kB
                     ->  Nested Loop Semi Join  (cost=29558.94..57516.03 rows=1 width=26) (actual time=445.502..1869.284 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 2768
                           ->  Nested Loop  (cost=29558.51..57513.59 rows=1 width=38) (actual time=444.693..880.831 rows=6909 loops=1)
                                 ->  Gather  (cost=29558.08..57511.23 rows=1 width=34) (actual time=444.222..451.127 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Parallel Hash Right Anti Join  (cost=28558.08..56511.13 rows=1 width=34) (actual time=435.131..437.125 rows=2858 loops=5)
                                             Hash Cond: (l3.l_orderkey = l1.l_orderkey)
                                             Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                             Rows Removed by Join Filter: 31839
                                             ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..25994.83 rows=500080 width=8) (actual time=0.198..111.478 rows=758659 loops=5)
                                                   Heap Fetches: 0
                                             ->  Parallel Hash  (cost=28307.61..28307.61 rows=20003 width=34) (actual time=235.178..235.180 rows=31833 loops=5)
                                                   Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 14400kB
                                                   ->  Hash Join  (cost=237.88..28307.61 rows=20003 width=34) (actual time=1.842..221.052 rows=31833 loops=5)
                                                         Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                         ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..25994.83 rows=500080 width=8) (actual time=0.101..162.569 rows=758659 loops=5)
                                                               Heap Fetches: 0
                                                         ->  Hash  (cost=232.45..232.45 rows=400 width=30) (actual time=1.730..1.732 rows=421 loops=5)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                               ->  Nested Loop  (cost=5.38..232.45 rows=400 width=30) (actual time=0.350..1.653 rows=421 loops=5)
                                                                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.067..0.069 rows=1 loops=5)
                                                                           Filter: (n_name = 'PERU'::bpchar)
                                                                           Rows Removed by Filter: 24
                                                                     ->  Bitmap Heap Scan on supplier  (cost=5.38..227.14 rows=400 width=34) (actual time=0.280..1.532 rows=421 loops=5)
                                                                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                           Heap Blocks: exact=184
                                                                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.190..0.190 rows=421 loops=5)
                                                                                 Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.029..0.029 rows=0 loops=14289)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.142..0.142 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 24.001 ms
 Execution Time: 1884.312 ms
(47 rows)

SET
SET
SET
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=57516.07..57516.07 rows=1 width=34) (actual time=451.705..453.771 rows=100 loops=1)
   ->  Sort  (cost=57516.07..57516.07 rows=1 width=34) (actual time=451.704..453.763 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=57516.04..57516.06 rows=1 width=34) (actual time=450.664..453.360 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=57516.04..57516.04 rows=1 width=26) (actual time=450.644..452.881 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 358kB
                     ->  Nested Loop Semi Join  (cost=29558.94..57516.03 rows=1 width=26) (actual time=381.793..440.696 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 2768
                           ->  Nested Loop  (cost=29558.51..57513.59 rows=1 width=38) (actual time=381.574..420.489 rows=6909 loops=1)
                                 ->  Gather  (cost=29558.08..57511.23 rows=1 width=34) (actual time=381.550..385.236 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Parallel Hash Right Anti Join  (cost=28558.08..56511.13 rows=1 width=34) (actual time=377.048..378.869 rows=2858 loops=5)
                                             Hash Cond: (l3.l_orderkey = l1.l_orderkey)
                                             Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                             Rows Removed by Join Filter: 31839
                                             ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..25994.83 rows=500080 width=8) (actual time=0.017..105.263 rows=758659 loops=5)
                                                   Heap Fetches: 0
                                             ->  Parallel Hash  (cost=28307.61..28307.61 rows=20003 width=34) (actual time=179.989..179.991 rows=31833 loops=5)
                                                   Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 14368kB
                                                   ->  Hash Join  (cost=237.88..28307.61 rows=20003 width=34) (actual time=0.481..166.037 rows=31833 loops=5)
                                                         Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                         ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..25994.83 rows=500080 width=8) (actual time=0.023..109.904 rows=758659 loops=5)
                                                               Heap Fetches: 0
                                                         ->  Hash  (cost=232.45..232.45 rows=400 width=30) (actual time=0.449..0.451 rows=421 loops=5)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                               ->  Nested Loop  (cost=5.38..232.45 rows=400 width=30) (actual time=0.058..0.389 rows=421 loops=5)
                                                                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.015 rows=1 loops=5)
                                                                           Filter: (n_name = 'PERU'::bpchar)
                                                                           Rows Removed by Filter: 24
                                                                     ->  Bitmap Heap Scan on supplier  (cost=5.38..227.14 rows=400 width=34) (actual time=0.041..0.328 rows=421 loops=5)
                                                                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                           Heap Blocks: exact=184
                                                                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.021..0.021 rows=421 loops=5)
                                                                                 Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=14289)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 3.294 ms
 Execution Time: 453.840 ms
(47 rows)

query 22 run 1
SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.59..12517.26 rows=1 width=72) (actual time=194.159..196.086 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.84..6242.85 rows=1 width=32) (actual time=45.690..45.776 rows=1 loops=1)
           ->  Gather  (cost=6242.61..6242.82 rows=2 width=32) (actual time=45.571..45.766 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.61..5242.62 rows=1 width=32) (actual time=36.620..36.620 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1995 width=6) (actual time=0.158..35.308 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7508.28 rows=738 width=72) (actual time=194.158..195.998 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7489.83 rows=738 width=38) (actual time=72.312..195.326 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=71.164..74.756 rows=2746 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=22.853..23.011 rows=1522 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 585kB
                           Worker 0:  Sort Method: quicksort  Memory: 519kB
                           Worker 1:  Sort Method: quicksort  Memory: 517kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.023..20.618 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.00 rows=17 width=4) (actual time=0.043..0.043 rows=1 loops=2746)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 17.185 ms
 Execution Time: 196.163 ms
(30 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.59..12517.26 rows=1 width=72) (actual time=60.944..62.621 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.84..6242.85 rows=1 width=32) (actual time=29.821..29.909 rows=1 loops=1)
           ->  Gather  (cost=6242.61..6242.82 rows=2 width=32) (actual time=29.716..29.897 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.61..5242.62 rows=1 width=32) (actual time=27.417..27.418 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1995 width=6) (actual time=0.014..26.226 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7508.28 rows=738 width=72) (actual time=60.943..62.531 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7489.83 rows=738 width=38) (actual time=54.809..62.279 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=54.779..57.036 rows=2734 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=22.081..22.169 rows=1633 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 610kB
                           Worker 0:  Sort Method: quicksort  Memory: 496kB
                           Worker 1:  Sort Method: quicksort  Memory: 514kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.021..19.918 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.00 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=2734)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 1.355 ms
 Execution Time: 62.688 ms
(30 rows)

