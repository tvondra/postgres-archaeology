query 1 run 1
SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1906064.43..1906064.63 rows=1 width=236) (actual time=21857.932..21858.003 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1906064.43..1906065.67 rows=6 width=236) (actual time=21857.931..21858.002 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Sort  (cost=1906064.43..1906064.49 rows=24 width=236) (actual time=21857.897..21857.968 rows=6 loops=1)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 35kB
               ->  Gather  (cost=1906061.31..1906063.88 rows=24 width=236) (actual time=21856.970..21857.926 rows=20 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=1905061.31..1905061.48 rows=6 width=236) (actual time=21849.796..21849.806 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..1312596.75 rows=14811614 width=25) (actual time=0.991..6007.859 rows=11856890 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 140321
 Planning time: 25.421 ms
 Execution time: 21858.920 ms
(16 rows)

SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1906064.43..1906064.63 rows=1 width=236) (actual time=19143.041..19143.103 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1906064.43..1906065.67 rows=6 width=236) (actual time=19143.041..19143.102 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Sort  (cost=1906064.43..1906064.49 rows=24 width=236) (actual time=19143.008..19143.069 rows=6 loops=1)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 35kB
               ->  Gather  (cost=1906061.31..1906063.88 rows=24 width=236) (actual time=19142.122..19143.022 rows=20 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=1905061.31..1905061.48 rows=6 width=236) (actual time=19138.918..19138.929 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..1312596.75 rows=14811614 width=25) (actual time=0.026..3146.048 rows=11856890 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 140321
 Planning time: 0.921 ms
 Execution time: 19143.179 ms
(16 rows)

query 2 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=528677.34..528677.34 rows=1 width=192) (actual time=30056.453..30056.466 rows=100 loops=1)
   ->  Sort  (cost=528677.34..528677.34 rows=1 width=192) (actual time=30056.452..30056.459 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Nested Loop  (cost=55.33..528677.33 rows=1 width=192) (actual time=31.428..30053.605 rows=4737 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.008..0.014 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.004 rows=25 loops=1)
               ->  Materialize  (cost=55.33..528674.63 rows=1 width=170) (actual time=5.191..6009.994 rows=4737 loops=5)
                     ->  Nested Loop  (cost=55.33..528674.62 rows=1 width=170) (actual time=25.952..30041.138 rows=4737 loops=1)
                           Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
                           Rows Removed by Join Filter: 236714834
                           ->  Nested Loop  (cost=55.33..524203.62 rows=1 width=34) (actual time=2.564..1314.575 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..54690.58 rows=8255 width=30) (actual time=0.645..276.082 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=54.78..56.87 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=54.34..54.35 rows=1 width=32) (actual time=0.124..0.124 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.54..54.33 rows=4 width=6) (actual time=0.110..0.120 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.54..53.03 rows=19 width=10) (actual time=0.092..0.118 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.97..51.41 rows=19 width=10) (actual time=0.090..0.115 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.77 rows=19 width=10) (actual time=0.080..0.081 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.54..2.56 rows=1 width=8) (actual time=0.008..0.008 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.020..0.020 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.005..0.011 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..2.538 rows=49972 loops=4737)
 Planning time: 29.873 ms
 Execution time: 30057.199 ms
(50 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=528677.34..528677.34 rows=1 width=192) (actual time=29117.442..29117.455 rows=100 loops=1)
   ->  Sort  (cost=528677.34..528677.34 rows=1 width=192) (actual time=29117.441..29117.448 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Nested Loop  (cost=55.33..528677.33 rows=1 width=192) (actual time=14.128..29114.780 rows=4737 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.008..0.014 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.004 rows=25 loops=1)
               ->  Materialize  (cost=55.33..528674.63 rows=1 width=170) (actual time=2.171..5822.252 rows=4737 loops=5)
                     ->  Nested Loop  (cost=55.33..528674.62 rows=1 width=170) (actual time=10.853..29102.857 rows=4737 loops=1)
                           Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
                           Rows Removed by Join Filter: 236714834
                           ->  Nested Loop  (cost=55.33..524203.62 rows=1 width=34) (actual time=0.084..317.448 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..54690.58 rows=8255 width=30) (actual time=0.021..84.257 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=54.78..56.87 rows=1 width=14) (actual time=0.001..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=54.34..54.35 rows=1 width=32) (actual time=0.025..0.025 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.54..54.33 rows=4 width=6) (actual time=0.017..0.021 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.54..53.03 rows=19 width=10) (actual time=0.010..0.019 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.97..51.41 rows=19 width=10) (actual time=0.008..0.017 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.77 rows=19 width=10) (actual time=0.004..0.005 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.54..2.56 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.009..0.009 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.005 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..2.572 rows=49972 loops=4737)
 Planning time: 2.040 ms
 Execution time: 29117.549 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2620596.14..2620596.16 rows=10 width=44) (actual time=15513.046..15516.722 rows=10 loops=1)
   ->  Sort  (cost=2620596.14..2628429.76 rows=3133451 width=44) (actual time=15513.045..15516.720 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=2077821.87..2552883.39 rows=3133451 width=44) (actual time=15307.432..15494.393 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=2077821.87..2474547.10 rows=3133452 width=44) (actual time=15307.416..15400.889 rows=118446 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=2076821.81..2100322.70 rows=783363 width=44) (actual time=15251.437..15298.995 rows=23689 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=2076821.81..2078780.22 rows=783363 width=24) (actual time=15251.410..15255.673 rows=60306 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 6261kB
                                 ->  Hash Join  (cost=551538.69..1988655.73 rows=783363 width=24) (actual time=5496.002..15230.301 rows=60306 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..1312596.75 rows=8110043 width=16) (actual time=0.119..8038.251 rows=6506846 loops=5)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 5490365
                                       ->  Hash  (cost=526355.41..526355.41 rows=1448742 width=12) (actual time=5489.216..5489.217 rows=1451805 loops=5)
                                             Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                                             ->  Hash Join  (cost=58410.71..526355.41 rows=1448742 width=12) (actual time=619.558..5161.604 rows=1451805 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Seq Scan on orders  (cost=0.00..448750.76 rows=7311955 width=16) (actual time=1.039..2665.315 rows=7239437 loops=5)
                                                         Filter: (o_orderdate < '1995-03-07'::date)
                                                         Rows Removed by Filter: 7760563
                                                   ->  Hash  (cost=54695.93..54695.93 rows=297183 width=4) (actual time=617.494..617.495 rows=300276 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                                         ->  Seq Scan on customer  (cost=0.00..54695.93 rows=297183 width=4) (actual time=0.033..564.564 rows=300276 loops=5)
                                                               Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                               Rows Removed by Filter: 1199724
 Planning time: 32.630 ms
 Execution time: 15517.582 ms
(33 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2620596.14..2620596.16 rows=10 width=44) (actual time=10016.256..10020.817 rows=10 loops=1)
   ->  Sort  (cost=2620596.14..2628429.76 rows=3133451 width=44) (actual time=10016.255..10020.814 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=2077821.87..2552883.39 rows=3133451 width=44) (actual time=9813.069..9998.624 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=2077821.87..2474547.10 rows=3133452 width=44) (actual time=9813.062..9905.658 rows=118413 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=2076821.81..2100322.70 rows=783363 width=44) (actual time=9725.459..9772.230 rows=23683 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=2076821.81..2078780.22 rows=783363 width=24) (actual time=9725.443..9729.579 rows=60306 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 6055kB
                                 ->  Hash Join  (cost=551538.69..1988655.73 rows=783363 width=24) (actual time=5043.907..9704.956 rows=60306 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..1312596.75 rows=8110043 width=16) (actual time=0.052..2807.768 rows=6506846 loops=5)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 5490365
                                       ->  Hash  (cost=526355.41..526355.41 rows=1448742 width=12) (actual time=5038.687..5038.688 rows=1451805 loops=5)
                                             Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                                             ->  Hash Join  (cost=58410.71..526355.41 rows=1448742 width=12) (actual time=349.061..4722.403 rows=1451805 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Seq Scan on orders  (cost=0.00..448750.76 rows=7311955 width=16) (actual time=0.030..2478.248 rows=7239437 loops=5)
                                                         Filter: (o_orderdate < '1995-03-07'::date)
                                                         Rows Removed by Filter: 7760563
                                                   ->  Hash  (cost=54695.93..54695.93 rows=297183 width=4) (actual time=348.114..348.114 rows=300276 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                                         ->  Seq Scan on customer  (cost=0.00..54695.93 rows=297183 width=4) (actual time=0.032..287.748 rows=300276 loops=5)
                                                               Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                               Rows Removed by Filter: 1199724
 Planning time: 1.479 ms
 Execution time: 10020.958 ms
(33 rows)

query 4 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=600848.54..600848.58 rows=1 width=24) (actual time=5197.435..5237.614 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=600848.54..600848.74 rows=5 width=24) (actual time=5197.435..5237.613 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Sort  (cost=600848.54..600848.59 rows=20 width=24) (actual time=5197.429..5237.607 rows=6 loops=1)
               Sort Key: orders.o_orderpriority
               Sort Method: quicksort  Memory: 26kB
               ->  Gather  (cost=600846.06..600848.11 rows=20 width=24) (actual time=5193.962..5237.575 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=599846.06..599846.11 rows=5 width=24) (actual time=5186.098..5186.099 rows=5 loops=5)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=9005.62..599130.98 rows=143017 width=16) (actual time=153.564..5131.044 rows=102764 loops=5)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=9005.05..272418.65 rows=143040 width=20) (actual time=152.050..3937.692 rows=112085 loops=5)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=46237
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8862.01 rows=572158 width=0) (actual time=106.605..106.605 rows=560424 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Only Scan using q21_idx_2 on lineitem  (cost=0.56..2.56 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=560424)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
 Planning time: 26.302 ms
 Execution time: 5238.445 ms
(22 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=600848.54..600848.58 rows=1 width=24) (actual time=1151.278..1188.008 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=600848.54..600848.74 rows=5 width=24) (actual time=1151.277..1188.006 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Sort  (cost=600848.54..600848.59 rows=20 width=24) (actual time=1151.270..1187.999 rows=6 loops=1)
               Sort Key: orders.o_orderpriority
               Sort Method: quicksort  Memory: 26kB
               ->  Gather  (cost=600846.06..600848.11 rows=20 width=24) (actual time=1145.516..1187.962 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=599846.06..599846.11 rows=5 width=24) (actual time=1141.208..1141.210 rows=5 loops=5)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=9005.62..599130.98 rows=143017 width=16) (actual time=149.275..1104.986 rows=102764 loops=5)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=9005.05..272418.65 rows=143040 width=20) (actual time=149.225..659.499 rows=112085 loops=5)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=48669
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8862.01 rows=572158 width=0) (actual time=100.009..100.010 rows=560424 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Only Scan using q21_idx_2 on lineitem  (cost=0.56..2.56 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=560424)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
 Planning time: 1.954 ms
 Execution time: 1188.331 ms
(22 rows)

query 5 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=680637.10..680637.10 rows=1 width=58) (actual time=8140.423..8184.288 rows=1 loops=1)
   ->  Sort  (cost=680637.10..680637.16 rows=25 width=58) (actual time=8140.422..8184.287 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=680398.34..680636.97 rows=25 width=58) (actual time=8131.109..8184.272 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=680398.34..680635.91 rows=100 width=58) (actual time=8127.085..8184.233 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=679398.28..679623.94 rows=25 width=58) (actual time=8113.599..8119.346 rows=5 loops=5)
                           Group Key: nation.n_name
                           ->  Sort  (cost=679398.28..679443.35 rows=18028 width=38) (actual time=8112.346..8113.031 rows=14407 loops=5)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 1515kB
                                 ->  Hash Join  (cost=103507.52..678123.89 rows=18028 width=38) (actual time=1084.814..8101.738 rows=14407 loops=5)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=98786.52..671036.85 rows=450673 width=50) (actual time=1040.133..7961.543 rows=363065 loops=5)
                                             ->  Hash Join  (cost=98785.96..371745.11 rows=112686 width=38) (actual time=1039.349..5748.785 rows=90680 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=35463.01..305182.45 rows=563429 width=8) (actual time=339.135..4891.904 rows=455328 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=52626
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..34899.58 rows=2253715 width=0) (actual time=282.563..282.563 rows=2276638 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Hash  (cost=59573.16..59573.16 rows=299983 width=38) (actual time=698.388..698.390 rows=299436 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                                         ->  Hash Join  (cost=2.51..59573.16 rows=299983 width=38) (actual time=0.103..633.925 rows=299436 loops=5)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Seq Scan on customer  (cost=0.00..50946.14 rows=1499914 width=8) (actual time=0.046..435.040 rows=1500000 loops=5)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.042..0.044 rows=5 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.036..0.041 rows=5 loops=5)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.009..0.010 rows=25 loops=5)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=5)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.022..0.023 rows=4 loops=453399)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=42.861..42.861 rows=100000 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.035..23.612 rows=100000 loops=5)
 Planning time: 39.033 ms
 Execution time: 8184.980 ms
(47 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=680637.10..680637.10 rows=1 width=58) (actual time=2421.602..2467.243 rows=1 loops=1)
   ->  Sort  (cost=680637.10..680637.16 rows=25 width=58) (actual time=2421.601..2467.241 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=680398.34..680636.97 rows=25 width=58) (actual time=2410.601..2467.226 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=680398.34..680635.91 rows=100 width=58) (actual time=2407.544..2467.183 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=679398.28..679623.94 rows=25 width=58) (actual time=2398.956..2404.181 rows=5 loops=5)
                           Group Key: nation.n_name
                           ->  Sort  (cost=679398.28..679443.35 rows=18028 width=38) (actual time=2397.683..2398.420 rows=14407 loops=5)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 1522kB
                                 ->  Hash Join  (cost=103507.52..678123.89 rows=18028 width=38) (actual time=807.925..2389.210 rows=14407 loops=5)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=98786.52..671036.85 rows=450673 width=50) (actual time=759.680..2243.665 rows=363065 loops=5)
                                             ->  Hash Join  (cost=98785.96..371745.11 rows=112686 width=38) (actual time=759.598..1339.696 rows=90680 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=35463.01..305182.45 rows=563429 width=8) (actual time=300.831..748.829 rows=455328 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=53049
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..34899.58 rows=2253715 width=0) (actual time=260.344..260.344 rows=2276638 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Hash  (cost=59573.16..59573.16 rows=299983 width=38) (actual time=457.639..457.641 rows=299436 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                                         ->  Hash Join  (cost=2.51..59573.16 rows=299983 width=38) (actual time=0.086..385.703 rows=299436 loops=5)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Seq Scan on customer  (cost=0.00..50946.14 rows=1499914 width=8) (actual time=0.035..112.266 rows=1500000 loops=5)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.039..0.041 rows=5 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.033..0.039 rows=5 loops=5)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.016..0.018 rows=25 loops=5)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=5)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.008..0.009 rows=4 loops=453399)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=47.733..47.734 rows=100000 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.025..22.566 rows=100000 loops=5)
 Planning time: 5.112 ms
 Execution time: 2467.410 ms
(47 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1167829.28..1167829.29 rows=1 width=32) (actual time=10832.702..10878.233 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1167829.28..1167829.29 rows=1 width=32) (actual time=10832.701..10878.231 rows=1 loops=1)
         ->  Gather  (cost=1167828.85..1167829.26 rows=4 width=32) (actual time=10830.342..10878.216 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1166828.85..1166828.86 rows=1 width=32) (actual time=10821.847..10821.848 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=237985.68..1165297.54 rows=306261 width=12) (actual time=1379.810..10678.072 rows=238912 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Rows Removed by Index Recheck: 2744818
                           Heap Blocks: exact=80089 lossy=53703
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..237679.42 rows=1225043 width=0) (actual time=1289.625..1289.625 rows=1194558 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 21.456 ms
 Execution time: 10878.269 ms
(14 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1167829.28..1167829.29 rows=1 width=32) (actual time=3275.457..3321.326 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1167829.28..1167829.29 rows=1 width=32) (actual time=3275.456..3321.325 rows=1 loops=1)
         ->  Gather  (cost=1167828.85..1167829.26 rows=4 width=32) (actual time=3270.802..3321.309 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1166828.85..1166828.86 rows=1 width=32) (actual time=3266.670..3266.671 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=237985.68..1165297.54 rows=306261 width=12) (actual time=1248.142..3168.255 rows=238912 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Rows Removed by Index Recheck: 2744818
                           Heap Blocks: exact=84938 lossy=57383
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..237679.42 rows=1225043 width=0) (actual time=1152.865..1152.866 rows=1194558 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 1.229 ms
 Execution time: 3321.363 ms
(14 rows)

query 7 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1767569.53..1767570.12 rows=1 width=92) (actual time=15634.931..15676.300 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1767569.53..1773465.92 rows=10032 width=92) (actual time=15634.930..15676.299 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=1767569.53..1772788.76 rows=40128 width=92) (actual time=15633.342..15676.286 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=1766569.47..1767009.07 rows=10032 width=92) (actual time=15618.532..15622.846 rows=4 loops=5)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=1766569.47..1766607.19 rows=15088 width=72) (actual time=15617.019..15617.566 rows=10411 loops=5)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 1994kB
                           ->  Hash Join  (cost=60682.16..1765522.28 rows=15088 width=72) (actual time=677.344..15605.128 rows=11559 loops=5)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 11632
                                 ->  Nested Loop  (cost=57052.76..1759877.79 rows=362552 width=46) (actual time=638.212..15469.450 rows=289625 loops=5)
                                       ->  Hash Join  (cost=57052.19..372877.67 rows=299972 width=30) (actual time=636.592..2401.700 rows=238235 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..298764.55 rows=3749655 width=8) (actual time=0.076..990.241 rows=3000000 loops=5)
                                             ->  Hash  (cost=55552.28..55552.28 rows=119993 width=30) (actual time=636.139..636.140 rows=119622 loops=5)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                                   ->  Hash Join  (cost=1.40..55552.28 rows=119993 width=30) (actual time=0.039..611.275 rows=119622 loops=5)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50946.14 rows=1499914 width=8) (actual time=0.021..431.712 rows=1500000 loops=5)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.011..0.011 rows=2 loops=5)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.009 rows=2 loops=5)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..4.61 rows=1 width=24) (actual time=0.054..0.054 rows=1 loops=1191175)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 3
                                 ->  Hash  (cost=3529.40..3529.40 rows=8000 width=30) (actual time=35.128..35.129 rows=7981 loops=5)
                                       Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                       ->  Hash Join  (cost=1.40..3529.40 rows=8000 width=30) (actual time=0.031..33.820 rows=7981 loops=5)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.014..22.022 rows=100000 loops=5)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.014 rows=2 loops=5)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.012 rows=2 loops=5)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning time: 37.791 ms
 Execution time: 15677.203 ms
(45 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1767569.53..1767570.12 rows=1 width=92) (actual time=4322.419..4365.526 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1767569.53..1773465.92 rows=10032 width=92) (actual time=4322.418..4365.524 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=1767569.53..1772788.76 rows=40128 width=92) (actual time=4320.687..4365.508 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=1766569.47..1767009.07 rows=10032 width=92) (actual time=4310.045..4314.019 rows=4 loops=5)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=1766569.47..1766607.19 rows=15088 width=72) (actual time=4308.054..4308.608 rows=10389 loops=5)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 2054kB
                           ->  Hash Join  (cost=60682.16..1765522.28 rows=15088 width=72) (actual time=519.205..4299.202 rows=11559 loops=5)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 11632
                                 ->  Nested Loop  (cost=57052.76..1759877.79 rows=362552 width=46) (actual time=479.938..4173.280 rows=289625 loops=5)
                                       ->  Hash Join  (cost=57052.19..372877.67 rows=299972 width=30) (actual time=479.068..1599.113 rows=238235 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..298764.55 rows=3749655 width=8) (actual time=0.028..385.159 rows=3000000 loops=5)
                                             ->  Hash  (cost=55552.28..55552.28 rows=119993 width=30) (actual time=478.612..478.613 rows=119622 loops=5)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                                   ->  Hash Join  (cost=1.40..55552.28 rows=119993 width=30) (actual time=0.031..452.730 rows=119622 loops=5)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50946.14 rows=1499914 width=8) (actual time=0.017..258.821 rows=1500000 loops=5)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.009..0.010 rows=2 loops=5)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.008 rows=2 loops=5)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..4.61 rows=1 width=24) (actual time=0.010..0.010 rows=1 loops=1191175)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 3
                                 ->  Hash  (cost=3529.40..3529.40 rows=8000 width=30) (actual time=38.989..38.990 rows=7981 loops=5)
                                       Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                       ->  Hash Join  (cost=1.40..3529.40 rows=8000 width=30) (actual time=0.031..37.667 rows=7981 loops=5)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.013..22.212 rows=100000 loops=5)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.014..0.014 rows=2 loops=5)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.011..0.012 rows=2 loops=5)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning time: 4.262 ms
 Execution time: 4365.651 ms
(45 rows)

query 8 run 1
SET
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=555838.78..555839.40 rows=1 width=40) (actual time=7419.910..7433.667 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=555838.78..557342.60 rows=2406 width=40) (actual time=7419.909..7433.666 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=555838.78..557168.16 rows=9624 width=72) (actual time=7418.746..7433.648 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=554838.72..555021.79 rows=2406 width=72) (actual time=7361.902..7363.048 rows=2 loops=5)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=554838.72..554853.71 rows=5998 width=46) (actual time=7360.757..7360.957 rows=4768 loops=5)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 537kB
                           ->  Hash Join  (cost=551214.42..554462.33 rows=5998 width=46) (actual time=7262.263..7359.930 rows=4768 loops=5)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Hash Join  (cost=551212.85..554412.37 rows=5998 width=20) (actual time=7262.209..7358.314 rows=4768 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Merge Join  (cost=546741.85..549925.62 rows=5998 width=20) (actual time=7220.791..7315.229 rows=4768 loops=5)
                                             Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                             ->  Sort  (cost=407297.92..407860.25 rows=224931 width=8) (actual time=2700.407..2707.344 rows=182072 loops=5)
                                                   Sort Key: orders.o_orderkey
                                                   Sort Method: quicksort  Memory: 14067kB
                                                   ->  Hash Join  (cost=63322.94..387302.54 rows=224931 width=8) (actual time=682.430..2673.925 rows=182072 loops=5)
                                                         Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..317512.83 rows=1124656 width=12) (actual time=0.083..1782.378 rows=911503 loops=5)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 2088497
                                                         ->  Hash  (cost=59573.16..59573.16 rows=299983 width=4) (actual time=681.141..681.144 rows=299436 loops=5)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                               ->  Hash Join  (cost=2.51..59573.16 rows=299983 width=4) (actual time=0.070..630.296 rows=299436 loops=5)
                                                                     Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                                     ->  Seq Scan on customer  (cost=0.00..50946.14 rows=1499914 width=8) (actual time=0.035..436.980 rows=1500000 loops=5)
                                                                     ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.023..0.026 rows=5 loops=5)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.018..0.024 rows=5 loops=5)
                                                                                 Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                                 ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.004 rows=25 loops=5)
                                                                                 ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=5)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=5)
                                                                                             Filter: (r_name = 'AMERICA'::bpchar)
                                                                                             Rows Removed by Filter: 4
                                             ->  Sort  (cost=139443.69..140443.47 rows=399912 width=20) (actual time=4520.364..4561.729 rows=389457 loops=5)
                                                   Sort Key: lineitem.l_orderkey
                                                   Sort Method: external sort  Disk: 14112kB
                                                   ->  Nested Loop  (cost=1.12..102233.23 rows=399912 width=20) (actual time=2.514..4243.536 rows=389521 loops=5)
                                                         ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..54313.10 rows=13333 width=4) (actual time=1.216..180.015 rows=13011 loops=5)
                                                               Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.21 rows=38 width=24) (actual time=0.251..0.308 rows=30 loops=65055)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                       ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=41.289..41.289 rows=100000 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.011..22.878 rows=100000 loops=5)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.027..0.028 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.020..0.023 rows=25 loops=5)
 Planning time: 45.392 ms
 Execution time: 7435.846 ms
(58 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=555838.78..555839.40 rows=1 width=40) (actual time=2047.466..2059.948 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=555838.78..557342.60 rows=2406 width=40) (actual time=2047.466..2059.947 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=555838.78..557168.16 rows=9624 width=72) (actual time=2046.365..2059.929 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=554838.72..555021.79 rows=2406 width=72) (actual time=1973.234..1974.397 rows=2 loops=5)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=554838.72..554853.71 rows=5998 width=46) (actual time=1972.063..1972.263 rows=4768 loops=5)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 539kB
                           ->  Hash Join  (cost=551214.42..554462.33 rows=5998 width=46) (actual time=1879.618..1971.213 rows=4768 loops=5)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Hash Join  (cost=551212.85..554412.37 rows=5998 width=20) (actual time=1879.568..1969.553 rows=4768 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Merge Join  (cost=546741.85..549925.62 rows=5998 width=20) (actual time=1835.355..1923.638 rows=4768 loops=5)
                                             Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                             ->  Sort  (cost=407297.92..407860.25 rows=224931 width=8) (actual time=1261.226..1268.272 rows=182072 loops=5)
                                                   Sort Key: orders.o_orderkey
                                                   Sort Method: quicksort  Memory: 14054kB
                                                   ->  Hash Join  (cost=63322.94..387302.54 rows=224931 width=8) (actual time=444.658..1226.350 rows=182072 loops=5)
                                                         Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..317512.83 rows=1124656 width=12) (actual time=0.055..544.977 rows=911503 loops=5)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 2088497
                                                         ->  Hash  (cost=59573.16..59573.16 rows=299983 width=4) (actual time=443.907..443.909 rows=299436 loops=5)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                               ->  Hash Join  (cost=2.51..59573.16 rows=299983 width=4) (actual time=0.057..384.801 rows=299436 loops=5)
                                                                     Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                                     ->  Seq Scan on customer  (cost=0.00..50946.14 rows=1499914 width=8) (actual time=0.027..115.742 rows=1500000 loops=5)
                                                                     ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.021..0.022 rows=5 loops=5)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.015..0.020 rows=5 loops=5)
                                                                                 Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                                 ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.004 rows=25 loops=5)
                                                                                 ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=5)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=5)
                                                                                             Filter: (r_name = 'AMERICA'::bpchar)
                                                                                             Rows Removed by Filter: 4
                                             ->  Sort  (cost=139443.69..140443.47 rows=399912 width=20) (actual time=572.497..611.770 rows=389169 loops=5)
                                                   Sort Key: lineitem.l_orderkey
                                                   Sort Method: external sort  Disk: 14112kB
                                                   ->  Nested Loop  (cost=1.12..102233.23 rows=399912 width=20) (actual time=0.070..314.231 rows=389521 loops=5)
                                                         ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..54313.10 rows=13333 width=4) (actual time=0.048..91.406 rows=13011 loops=5)
                                                               Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.21 rows=38 width=24) (actual time=0.005..0.014 rows=30 loops=65055)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                       ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=44.081..44.081 rows=100000 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.011..22.248 rows=100000 loops=5)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.026..0.026 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.018..0.022 rows=25 loops=5)
 Planning time: 4.454 ms
 Execution time: 2062.113 ms
(58 rows)

query 9 run 1
SET
SET
SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1206585.63..1206585.63 rows=1 width=66) (actual time=17477.673..17494.764 rows=1 loops=1)
   ->  Sort  (cost=1206585.63..1206736.00 rows=60150 width=66) (actual time=17477.672..17494.762 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize HashAggregate  (cost=1205232.25..1206284.88 rows=60150 width=66) (actual time=17477.137..17494.670 rows=175 loops=1)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Gather  (cost=1177713.63..1202826.25 rows=240600 width=66) (actual time=17183.673..17493.314 rows=875 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=1176713.63..1177766.25 rows=60150 width=66) (actual time=17305.651..17306.193 rows=175 loops=5)
                           Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
                           ->  Hash Join  (cost=661802.67..1160808.44 rows=908868 width=57) (actual time=5636.280..16629.818 rows=649638 loops=5)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Hash Join  (cost=661801.11..1153472.31 rows=908868 width=31) (actual time=5636.051..16370.455 rows=649638 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Hash Join  (cost=4475.14..422745.56 rows=908868 width=31) (actual time=45.447..8078.778 rows=649638 loops=5)
                                             Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                             ->  Merge Join  (cost=4.14..415888.68 rows=908868 width=35) (actual time=4.426..7882.861 rows=649638 loops=5)
                                                   Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                                   Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                                   Rows Removed by Join Filter: 974756
                                                   ->  Nested Loop  (cost=1.12..154623.92 rows=908868 width=33) (actual time=4.100..6208.272 rows=649638 loops=5)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.55..45731.71 rows=30302 width=4) (actual time=0.520..169.416 rows=21662 loops=5)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 378338
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.21 rows=38 width=29) (actual time=0.236..0.275 rows=30 loops=108312)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..181632.60 rows=8001478 width=14) (actual time=0.116..1068.643 rows=8908791 loops=5)
                                                         Heap Fetches: 0
                                             ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=40.747..40.747 rows=100000 loops=5)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                                   ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.020..22.712 rows=100000 loops=5)
                                       ->  Hash  (cost=411254.21..411254.21 rows=14998621 width=8) (actual time=5580.813..5580.813 rows=15000000 loops=5)
                                             Buckets: 1048576  Batches: 32  Memory Usage: 26512kB
                                             ->  Seq Scan on orders  (cost=0.00..411254.21 rows=14998621 width=8) (actual time=0.049..2920.781 rows=15000000 loops=5)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.032..0.033 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.024..0.027 rows=25 loops=5)
 Planning time: 45.707 ms
 Execution time: 17496.485 ms
(42 rows)

SET
SET
SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1206585.63..1206585.63 rows=1 width=66) (actual time=11786.479..11801.383 rows=1 loops=1)
   ->  Sort  (cost=1206585.63..1206736.00 rows=60150 width=66) (actual time=11786.478..11801.381 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize HashAggregate  (cost=1205232.25..1206284.88 rows=60150 width=66) (actual time=11785.936..11801.286 rows=175 loops=1)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Gather  (cost=1177713.63..1202826.25 rows=240600 width=66) (actual time=10846.084..11799.874 rows=875 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=1176713.63..1177766.25 rows=60150 width=66) (actual time=11471.465..11471.985 rows=175 loops=5)
                           Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
                           ->  Hash Join  (cost=661802.67..1160808.44 rows=908868 width=57) (actual time=5472.451..10836.271 rows=649638 loops=5)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Hash Join  (cost=661801.11..1153472.31 rows=908868 width=31) (actual time=5472.386..10591.153 rows=649638 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Hash Join  (cost=4475.14..422745.56 rows=908868 width=31) (actual time=42.227..2536.806 rows=649638 loops=5)
                                             Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                             ->  Merge Join  (cost=4.14..415888.68 rows=908868 width=35) (actual time=1.050..2307.729 rows=649638 loops=5)
                                                   Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                                   Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                                   Rows Removed by Join Filter: 974756
                                                   ->  Nested Loop  (cost=1.12..154623.92 rows=908868 width=33) (actual time=0.060..539.834 rows=649638 loops=5)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.55..45731.71 rows=30302 width=4) (actual time=0.028..103.518 rows=21662 loops=5)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 378338
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.21 rows=38 width=29) (actual time=0.005..0.016 rows=30 loops=108312)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..181632.60 rows=8001478 width=14) (actual time=0.021..1039.277 rows=8907152 loops=5)
                                                         Heap Fetches: 0
                                             ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=40.905..40.906 rows=100000 loops=5)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                                   ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.025..19.513 rows=100000 loops=5)
                                       ->  Hash  (cost=411254.21..411254.21 rows=14998621 width=8) (actual time=5428.002..5428.002 rows=15000000 loops=5)
                                             Buckets: 1048576  Batches: 32  Memory Usage: 26512kB
                                             ->  Seq Scan on orders  (cost=0.00..411254.21 rows=14998621 width=8) (actual time=0.044..2746.095 rows=15000000 loops=5)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.029..0.030 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.021..0.024 rows=25 loops=5)
 Planning time: 5.750 ms
 Execution time: 11802.577 ms
(42 rows)

query 10 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=896045.94..896045.99 rows=20 width=201) (actual time=13404.567..13465.734 rows=20 loops=1)
   ->  Sort  (cost=896045.94..897508.58 rows=585055 width=201) (actual time=13404.566..13465.731 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  Finalize GroupAggregate  (cost=793606.02..880477.84 rows=585055 width=201) (actual time=12615.774..13355.866 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather Merge  (cost=793606.02..867314.09 rows=585056 width=201) (actual time=12615.749..12984.910 rows=381205 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=792605.96..796628.22 rows=146264 width=201) (actual time=12589.917..12778.013 rows=76241 loops=5)
                           Group Key: customer.c_custkey, nation.n_name
                           ->  Sort  (cost=792605.96..792971.62 rows=146264 width=181) (actual time=12589.903..12620.949 rows=229080 loops=5)
                                 Sort Key: customer.c_custkey, nation.n_name
                                 Sort Method: external sort  Disk: 45376kB
                                 ->  Hash Join  (cost=336458.81..780057.82 rows=146264 width=181) (actual time=5490.271..12340.213 rows=229080 loops=5)
                                       Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=336457.25..779607.22 rows=146264 width=159) (actual time=5490.211..12256.776 rows=229080 loops=5)
                                             ->  Merge Join  (cost=336456.68..397270.44 rows=148424 width=151) (actual time=5488.904..5827.675 rows=114632 loops=5)
                                                   Merge Cond: (customer.c_custkey = orders.o_custkey)
                                                   ->  Parallel Index Scan using customer_pkey on customer  (cost=0.43..55429.78 rows=374978 width=147) (actual time=1.168..152.306 rows=299999 loops=5)
                                                   ->  Sort  (cost=336450.69..337934.93 rows=593695 width=8) (actual time=5487.690..5554.507 rows=572827 loops=5)
                                                         Sort Key: orders.o_custkey
                                                         Sort Method: external sort  Disk: 12352kB
                                                         ->  Bitmap Heap Scan on orders  (cost=9343.81..279517.23 rows=593695 width=8) (actual time=208.969..5115.672 rows=573160 loops=5)
                                                               Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                               Heap Blocks: exact=233346
                                                               ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..9195.39 rows=593695 width=0) (actual time=149.373..149.373 rows=573160 loops=5)
                                                                     Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..2.57 rows=1 width=16) (actual time=0.054..0.055 rows=2 loops=573160)
                                                   Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.032..0.032 rows=25 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.015..0.018 rows=25 loops=5)
 Planning time: 32.794 ms
 Execution time: 13474.561 ms
(36 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=896045.94..896045.99 rows=20 width=201) (actual time=4590.336..4645.654 rows=20 loops=1)
   ->  Sort  (cost=896045.94..897508.58 rows=585055 width=201) (actual time=4590.335..4645.651 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  Finalize GroupAggregate  (cost=793606.02..880477.84 rows=585055 width=201) (actual time=3810.379..4536.245 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather Merge  (cost=793606.02..867314.09 rows=585056 width=201) (actual time=3810.354..4166.884 rows=381205 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=792605.96..796628.22 rows=146264 width=201) (actual time=3787.834..3974.979 rows=76241 loops=5)
                           Group Key: customer.c_custkey, nation.n_name
                           ->  Sort  (cost=792605.96..792971.62 rows=146264 width=181) (actual time=3787.816..3818.815 rows=229080 loops=5)
                                 Sort Key: customer.c_custkey, nation.n_name
                                 Sort Method: external sort  Disk: 42832kB
                                 ->  Hash Join  (cost=336458.81..780057.82 rows=146264 width=181) (actual time=2181.133..3533.056 rows=229080 loops=5)
                                       Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=336457.25..779607.22 rows=146264 width=159) (actual time=2181.058..3454.176 rows=229080 loops=5)
                                             ->  Merge Join  (cost=336456.68..397270.44 rows=148424 width=151) (actual time=2180.968..2469.195 rows=114632 loops=5)
                                                   Merge Cond: (customer.c_custkey = orders.o_custkey)
                                                   ->  Parallel Index Scan using customer_pkey on customer  (cost=0.43..55429.78 rows=374978 width=147) (actual time=0.042..103.007 rows=299999 loops=5)
                                                   ->  Sort  (cost=336450.69..337934.93 rows=593695 width=8) (actual time=2180.883..2251.457 rows=572798 loops=5)
                                                         Sort Key: orders.o_custkey
                                                         Sort Method: external sort  Disk: 12352kB
                                                         ->  Bitmap Heap Scan on orders  (cost=9343.81..279517.23 rows=593695 width=8) (actual time=220.812..1838.370 rows=573160 loops=5)
                                                               Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                               Heap Blocks: exact=233346
                                                               ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..9195.39 rows=593695 width=0) (actual time=165.854..165.854 rows=573160 loops=5)
                                                                     Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..2.57 rows=1 width=16) (actual time=0.008..0.008 rows=2 loops=573160)
                                                   Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.037..0.037 rows=25 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.022..0.026 rows=25 loops=5)
 Planning time: 3.056 ms
 Execution time: 4653.375 ms
(36 rows)

query 11 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=442691.16..442691.16 rows=1 width=36) (actual time=3777.786..3777.949 rows=0 loops=1)
   InitPlan 1 (returns $3)
     ->  Finalize Aggregate  (cost=184608.64..184608.65 rows=1 width=32) (actual time=170.087..170.196 rows=1 loops=1)
           ->  Gather  (cost=184608.21..184608.62 rows=4 width=32) (actual time=170.074..170.187 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=183608.21..183608.22 rows=1 width=32) (actual time=163.302..163.303 rows=1 loops=5)
                       ->  Nested Loop  (cost=1.11..183008.09 rows=80015 width=10) (actual time=0.099..141.216 rows=64160 loops=5)
                             ->  Nested Loop  (cost=0.68..33545.04 rows=1000 width=4) (actual time=0.075..36.297 rows=802 loops=5)
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.54..4596.54 rows=25000 width=8) (actual time=0.026..8.887 rows=20000 loops=5)
                                         Heap Fetches: 0
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..1.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=100000)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
                                         Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                         Rows Removed by Filter: 1
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..148.67 rows=79 width=14) (actual time=0.009..0.121 rows=80 loops=4010)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=258082.51..258882.66 rows=320059 width=36) (actual time=3777.785..3777.839 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=245280.15..256482.22 rows=320059 width=36) (actual time=3777.774..3777.829 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $3)
               Rows Removed by Filter: 301833
               ->  Sort  (cost=245280.15..246080.30 rows=320059 width=14) (actual time=3384.885..3408.062 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 25961kB
                     ->  Gather  (cost=1001.11..216013.99 rows=320059 width=14) (actual time=0.827..3282.636 rows=320800 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Nested Loop  (cost=1.11..183008.09 rows=80015 width=14) (actual time=0.615..3277.704 rows=64160 loops=5)
                                 ->  Nested Loop  (cost=0.68..33545.04 rows=1000 width=4) (actual time=0.303..36.368 rows=802 loops=5)
                                       ->  Parallel Index Only Scan using q2_idx_3 on supplier  (cost=0.54..4596.54 rows=25000 width=8) (actual time=0.230..11.841 rows=20000 loops=5)
                                             Heap Fetches: 0
                                       ->  Index Scan using nation_pkey on nation  (cost=0.14..1.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=100000)
                                             Index Cond: (n_nationkey = supplier.s_nationkey)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..148.67 rows=79 width=18) (actual time=0.344..4.019 rows=80 loops=4010)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 16.384 ms
 Execution time: 3778.770 ms
(42 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=442691.16..442691.16 rows=1 width=36) (actual time=623.805..623.958 rows=0 loops=1)
   InitPlan 1 (returns $3)
     ->  Finalize Aggregate  (cost=184608.64..184608.65 rows=1 width=32) (actual time=168.586..168.689 rows=1 loops=1)
           ->  Gather  (cost=184608.21..184608.62 rows=4 width=32) (actual time=164.416..168.673 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=183608.21..183608.22 rows=1 width=32) (actual time=160.873..160.874 rows=1 loops=5)
                       ->  Nested Loop  (cost=1.11..183008.09 rows=80015 width=10) (actual time=0.097..135.973 rows=64160 loops=5)
                             ->  Nested Loop  (cost=0.68..33545.04 rows=1000 width=4) (actual time=0.072..29.629 rows=802 loops=5)
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.54..4596.54 rows=25000 width=8) (actual time=0.030..8.575 rows=20000 loops=5)
                                         Heap Fetches: 0
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..1.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=100000)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
                                         Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                         Rows Removed by Filter: 1
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..148.67 rows=79 width=14) (actual time=0.007..0.119 rows=80 loops=4010)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=258082.51..258882.66 rows=320059 width=36) (actual time=623.804..623.853 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=245280.15..256482.22 rows=320059 width=36) (actual time=623.792..623.841 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $3)
               Rows Removed by Filter: 301833
               ->  Sort  (cost=245280.15..246080.30 rows=320059 width=14) (actual time=235.773..259.321 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 25961kB
                     ->  Gather  (cost=1001.11..216013.99 rows=320059 width=14) (actual time=0.469..154.105 rows=320800 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Nested Loop  (cost=1.11..183008.09 rows=80015 width=14) (actual time=0.097..134.815 rows=64160 loops=5)
                                 ->  Nested Loop  (cost=0.68..33545.04 rows=1000 width=4) (actual time=0.074..34.215 rows=802 loops=5)
                                       ->  Parallel Index Only Scan using q2_idx_3 on supplier  (cost=0.54..4596.54 rows=25000 width=8) (actual time=0.027..6.699 rows=20000 loops=5)
                                             Heap Fetches: 0
                                       ->  Index Scan using nation_pkey on nation  (cost=0.14..1.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=100000)
                                             Index Cond: (n_nationkey = supplier.s_nationkey)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..148.67 rows=79 width=18) (actual time=0.007..0.113 rows=80 loops=4010)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 1.469 ms
 Execution time: 624.288 ms
(42 rows)

query 12 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=457864.35..457864.40 rows=1 width=27) (actual time=3424.260..3444.501 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=457864.35..457864.70 rows=7 width=27) (actual time=3424.259..3444.499 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=457864.35..457864.42 rows=28 width=27) (actual time=3424.252..3444.492 rows=6 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 25kB
               ->  Gather  (cost=457860.81..457863.68 rows=28 width=27) (actual time=3418.212..3444.462 rows=10 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=456860.81..456860.88 rows=7 width=27) (actual time=3410.189..3410.190 rows=2 loops=5)
                           Group Key: lineitem.l_shipmode
                           ->  Nested Loop  (cost=0.99..455590.69 rows=72578 width=27) (actual time=0.456..3361.627 rows=62252 loops=5)
                                 ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.56..135762.16 rows=72578 width=15) (actual time=0.401..467.902 rows=62252 loops=5)
                                       Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                       Rows Removed by Filter: 155618
                                       Heap Fetches: 0
                                 ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=20) (actual time=0.046..0.046 rows=1 loops=311258)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 25.895 ms
 Execution time: 3445.237 ms
(21 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=457864.35..457864.40 rows=1 width=27) (actual time=471.435..500.602 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=457864.35..457864.70 rows=7 width=27) (actual time=471.434..500.600 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=457864.35..457864.42 rows=28 width=27) (actual time=471.429..500.594 rows=6 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 25kB
               ->  Gather  (cost=457860.81..457863.68 rows=28 width=27) (actual time=471.398..500.570 rows=10 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=456860.81..456860.88 rows=7 width=27) (actual time=464.736..464.737 rows=2 loops=5)
                           Group Key: lineitem.l_shipmode
                           ->  Nested Loop  (cost=0.99..455590.69 rows=72578 width=27) (actual time=0.057..436.377 rows=62252 loops=5)
                                 ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.56..135762.16 rows=72578 width=15) (actual time=0.037..234.075 rows=62252 loops=5)
                                       Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                       Rows Removed by Filter: 155618
                                       Heap Fetches: 0
                                 ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=311258)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 1.689 ms
 Execution time: 500.663 ms
(21 rows)

query 13 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2750441.79..2750441.79 rows=1 width=16) (actual time=19518.510..19518.512 rows=1 loops=1)
   ->  Sort  (cost=2750441.79..2750442.29 rows=200 width=16) (actual time=19518.509..19518.510 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2750438.79..2750440.79 rows=200 width=16) (actual time=19518.488..19518.495 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  GroupAggregate  (cost=2600462.53..2727940.08 rows=1499914 width=12) (actual time=15698.850..19335.156 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Sort  (cost=2600462.53..2637955.33 rows=14997122 width=8) (actual time=15698.840..17682.066 rows=15337604 loops=1)
                           Sort Key: customer.c_custkey
                           Sort Method: external merge  Disk: 268424kB
                           ->  Hash Right Join  (cost=55340.06..666484.38 rows=14997122 width=8) (actual time=340.361..11094.216 rows=15337604 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..448750.76 rows=14997122 width=8) (actual time=0.454..5277.980 rows=14837583 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                       Rows Removed by Filter: 162417
                                 ->  Hash  (cost=30731.14..30731.14 rows=1499914 width=4) (actual time=338.232..338.232 rows=1500000 loops=1)
                                       Buckets: 1048576  Batches: 4  Memory Usage: 21380kB
                                       ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30731.14 rows=1499914 width=4) (actual time=0.709..160.480 rows=1500000 loops=1)
                                             Heap Fetches: 0
 Planning time: 19.713 ms
 Execution time: 19556.877 ms
(22 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2750441.79..2750441.79 rows=1 width=16) (actual time=18962.925..18962.927 rows=1 loops=1)
   ->  Sort  (cost=2750441.79..2750442.29 rows=200 width=16) (actual time=18962.924..18962.926 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2750438.79..2750440.79 rows=200 width=16) (actual time=18962.905..18962.912 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  GroupAggregate  (cost=2600462.53..2727940.08 rows=1499914 width=12) (actual time=15148.201..18776.908 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Sort  (cost=2600462.53..2637955.33 rows=14997122 width=8) (actual time=15148.191..17122.693 rows=15337604 loops=1)
                           Sort Key: customer.c_custkey
                           Sort Method: external merge  Disk: 268424kB
                           ->  Hash Right Join  (cost=55340.06..666484.38 rows=14997122 width=8) (actual time=302.143..10551.943 rows=15337604 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..448750.76 rows=14997122 width=8) (actual time=0.032..4803.680 rows=14837583 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                       Rows Removed by Filter: 162417
                                 ->  Hash  (cost=30731.14..30731.14 rows=1499914 width=4) (actual time=300.744..300.744 rows=1500000 loops=1)
                                       Buckets: 1048576  Batches: 4  Memory Usage: 21380kB
                                       ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30731.14 rows=1499914 width=4) (actual time=0.044..127.739 rows=1500000 loops=1)
                                             Heap Fetches: 0
 Planning time: 0.670 ms
 Execution time: 19002.353 ms
(22 rows)

query 14 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=883100.18..883100.19 rows=1 width=32) (actual time=6353.825..6383.746 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=883100.18..883100.19 rows=1 width=32) (actual time=6353.824..6383.745 rows=1 loops=1)
         ->  Gather  (cost=883099.72..883100.13 rows=4 width=64) (actual time=6328.022..6383.724 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=882099.72..882099.73 rows=1 width=64) (actual time=6250.988..6250.990 rows=1 loops=5)
                     ->  Hash Join  (cost=113760.52..878661.49 rows=196470 width=33) (actual time=1260.394..6148.829 rows=154588 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=14109.86..762903.10 rows=196470 width=16) (actual time=283.798..4737.611 rows=154588 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=83727
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..13913.39 rows=785882 width=0) (actual time=185.846..185.846 rows=772942 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Hash  (cost=60979.96..60979.96 rows=1999896 width=25) (actual time=973.460..973.461 rows=2000000 loops=5)
                                 Buckets: 524288  Batches: 8  Memory Usage: 18555kB
                                 ->  Seq Scan on part  (cost=0.00..60979.96 rows=1999896 width=25) (actual time=0.041..643.727 rows=2000000 loops=5)
 Planning time: 28.136 ms
 Execution time: 6384.592 ms
(18 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=883100.18..883100.19 rows=1 width=32) (actual time=2573.382..2603.935 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=883100.18..883100.19 rows=1 width=32) (actual time=2573.381..2603.933 rows=1 loops=1)
         ->  Gather  (cost=883099.72..883100.13 rows=4 width=64) (actual time=2455.116..2603.893 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=882099.72..882099.73 rows=1 width=64) (actual time=2500.831..2500.833 rows=1 loops=5)
                     ->  Hash Join  (cost=113760.52..878661.49 rows=196470 width=33) (actual time=1031.311..2411.064 rows=154588 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=14109.86..762903.10 rows=196470 width=16) (actual time=274.376..1252.418 rows=154588 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=101198
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..13913.39 rows=785882 width=0) (actual time=171.827..171.828 rows=772942 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Hash  (cost=60979.96..60979.96 rows=1999896 width=25) (actual time=754.855..754.856 rows=2000000 loops=5)
                                 Buckets: 524288  Batches: 8  Memory Usage: 18555kB
                                 ->  Seq Scan on part  (cost=0.00..60979.96 rows=1999896 width=25) (actual time=0.032..360.397 rows=2000000 loops=5)
 Planning time: 1.732 ms
 Execution time: 2604.029 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2692098.22..2692098.76 rows=1 width=103) (actual time=19823.516..19823.519 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1225040.33..1225040.34 rows=1 width=32) (actual time=6308.945..6308.947 rows=1 loops=1)
           ->  HashAggregate  (cost=1222576.71..1223808.52 rows=98545 width=36) (actual time=6264.814..6302.039 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=40722.26..1199892.13 rows=2268458 width=16) (actual time=349.304..4781.359 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 13223651
                       Heap Blocks: exact=401153 lossy=267105
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40155.15 rows=2268458 width=0) (actual time=276.637..276.637 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1467057.87..1520646.47 rows=98545 width=103) (actual time=19823.515..19823.516 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = lineitem.l_suppkey)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4274.29 rows=100000 width=71) (actual time=0.589..17.592 rows=69998 loops=1)
         ->  GroupAggregate  (cost=1467057.58..1513904.91 rows=98545 width=36) (actual time=19802.003..19802.004 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 69997
               ->  Sort  (cost=1467057.58..1472728.72 rows=2268458 width=16) (actual time=12797.861..12951.783 rows=1585450 loops=1)
                     Sort Key: lineitem.l_suppkey
                     Sort Method: external merge  Disk: 60920kB
                     ->  Bitmap Heap Scan on lineitem  (cost=40722.26..1199892.13 rows=2268458 width=16) (actual time=407.223..11831.446 rows=2265714 loops=1)
                           Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                           Rows Removed by Index Recheck: 13223651
                           Heap Blocks: exact=401153 lossy=267105
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40155.15 rows=2268458 width=0) (actual time=333.884..333.884 rows=2265714 loops=1)
                                 Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 22.248 ms
 Execution time: 19830.816 ms
(29 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2692098.22..2692098.76 rows=1 width=103) (actual time=13156.292..13156.295 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1225040.33..1225040.34 rows=1 width=32) (actual time=6308.938..6308.939 rows=1 loops=1)
           ->  HashAggregate  (cost=1222576.71..1223808.52 rows=98545 width=36) (actual time=6264.834..6302.057 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=40722.26..1199892.13 rows=2268458 width=16) (actual time=348.615..4789.259 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 13223651
                       Heap Blocks: exact=401153 lossy=267105
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40155.15 rows=2268458 width=0) (actual time=276.121..276.121 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1467057.87..1520646.47 rows=98545 width=103) (actual time=13156.291..13156.292 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = lineitem.l_suppkey)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4274.29 rows=100000 width=71) (actual time=0.036..10.924 rows=69998 loops=1)
         ->  GroupAggregate  (cost=1467057.58..1513904.91 rows=98545 width=36) (actual time=13141.571..13141.572 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 69997
               ->  Sort  (cost=1467057.58..1472728.72 rows=2268458 width=16) (actual time=6137.890..6291.854 rows=1585450 loops=1)
                     Sort Key: lineitem.l_suppkey
                     Sort Method: external merge  Disk: 60920kB
                     ->  Bitmap Heap Scan on lineitem  (cost=40722.26..1199892.13 rows=2268458 width=16) (actual time=372.030..5333.703 rows=2265714 loops=1)
                           Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                           Rows Removed by Index Recheck: 13223651
                           Heap Blocks: exact=401153 lossy=267105
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40155.15 rows=2268458 width=0) (actual time=298.793..298.793 rows=2265714 loops=1)
                                 Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 1.879 ms
 Execution time: 13166.386 ms
(29 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=348511.03..348511.03 rows=1 width=44) (actual time=5171.377..5171.461 rows=1 loops=1)
   ->  Sort  (cost=348511.03..348895.51 rows=153793 width=44) (actual time=5171.376..5171.460 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=338772.02..347742.06 rows=153793 width=44) (actual time=4508.719..5164.534 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=338772.02..340258.44 rows=594569 width=40) (actual time=4508.670..4855.340 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Gather  (cost=99165.03..270133.44 rows=594569 width=40) (actual time=945.074..1661.130 rows=1186319 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Hash Join  (cost=98165.03..209676.54 rows=148642 width=40) (actual time=937.859..1668.133 rows=237264 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..112357.47 rows=1000185 width=8) (actual time=33.591..581.972 rows=1599104 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 896
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.364..33.086 rows=56 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 99944
                                 ->  Hash  (cost=90978.40..90978.40 rows=297214 width=40) (actual time=902.294..902.294 rows=296733 loops=5)
                                       Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                       ->  Seq Scan on part  (cost=0.00..90978.40 rows=297214 width=40) (actual time=0.064..834.430 rows=296733 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 1703267
 Planning time: 21.313 ms
 Execution time: 5180.231 ms
(29 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=348511.03..348511.03 rows=1 width=44) (actual time=4831.089..4831.174 rows=1 loops=1)
   ->  Sort  (cost=348511.03..348895.51 rows=153793 width=44) (actual time=4831.088..4831.172 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=338772.02..347742.06 rows=153793 width=44) (actual time=4171.757..4824.247 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=338772.02..340258.44 rows=594569 width=40) (actual time=4171.707..4517.425 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Gather  (cost=99165.03..270133.44 rows=594569 width=40) (actual time=694.972..1299.859 rows=1186319 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Hash Join  (cost=98165.03..209676.54 rows=148642 width=40) (actual time=664.551..1258.761 rows=237264 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..112357.47 rows=1000185 width=8) (actual time=31.211..428.171 rows=1599104 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 896
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.087..31.153 rows=56 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 99944
                                 ->  Hash  (cost=90978.40..90978.40 rows=297214 width=40) (actual time=632.605..632.606 rows=296733 loops=5)
                                       Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                       ->  Seq Scan on part  (cost=0.00..90978.40 rows=297214 width=40) (actual time=0.037..556.998 rows=296733 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 1703267
 Planning time: 0.888 ms
 Execution time: 4839.558 ms
(29 rows)

query 17 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1756030.91..1756030.93 rows=1 width=32) (actual time=29598.569..29631.580 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1756030.91..1756030.93 rows=1 width=32) (actual time=29598.568..29631.579 rows=1 loops=1)
         ->  Gather  (cost=1756030.48..1756030.89 rows=4 width=32) (actual time=29532.579..29631.561 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1755030.48..1755030.49 rows=1 width=32) (actual time=29520.368..29520.370 rows=1 loops=5)
                     ->  Nested Loop  (cost=48504.26..1755020.55 rows=3973 width=8) (actual time=889.212..29519.911 rows=1064 loops=5)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=48503.69..1753740.53 rows=398 width=40) (actual time=885.105..28206.720 rows=399 loops=5)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=48503.13..48504.38 rows=502 width=4) (actual time=282.521..282.772 rows=399 loops=5)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 43kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..48480.61 rows=502 width=4) (actual time=0.803..282.223 rows=399 loops=5)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 399601
                                 ->  GroupAggregate  (cost=0.56..1685421.67 rows=1584740 width=36) (actual time=2.819..27735.922 rows=1994803 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361724.56 rows=59985200 width=9) (actual time=1.486..17308.991 rows=59829951 loops=5)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.05 rows=13 width=17) (actual time=3.137..3.284 rows=3 loops=1996)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning time: 26.544 ms
 Execution time: 29632.436 ms
(25 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1756030.91..1756030.93 rows=1 width=32) (actual time=28671.878..28699.649 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1756030.91..1756030.93 rows=1 width=32) (actual time=28671.877..28699.647 rows=1 loops=1)
         ->  Gather  (cost=1756030.48..1756030.89 rows=4 width=32) (actual time=28583.985..28699.632 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1755030.48..1755030.49 rows=1 width=32) (actual time=28466.238..28466.240 rows=1 loops=5)
                     ->  Nested Loop  (cost=48504.26..1755020.55 rows=3973 width=8) (actual time=526.015..28465.915 rows=1064 loops=5)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=48503.69..1753740.53 rows=398 width=40) (actual time=525.966..28448.018 rows=399 loops=5)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=48503.13..48504.38 rows=502 width=4) (actual time=143.345..143.547 rows=399 loops=5)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 45kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..48480.61 rows=502 width=4) (actual time=0.329..143.159 rows=399 loops=5)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 399601
                                 ->  GroupAggregate  (cost=0.56..1685421.67 rows=1584740 width=36) (actual time=0.891..28108.716 rows=1983314 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361724.56 rows=59985200 width=9) (actual time=0.852..17306.045 rows=59485310 loops=5)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.05 rows=13 width=17) (actual time=0.041..0.042 rows=3 loops=1996)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning time: 1.765 ms
 Execution time: 28699.715 ms
(25 rows)

query 18 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17501012.51..17501012.76 rows=100 width=71) (actual time=29784.938..29818.326 rows=99 loops=1)
   ->  Sort  (cost=17501012.51..17650952.30 rows=59975917 width=71) (actual time=29784.937..29818.319 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  Finalize GroupAggregate  (cost=6378243.65..15208776.09 rows=59975917 width=71) (actual time=29784.668..29818.225 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=6378243.65..13859317.97 rows=59975916 width=71) (actual time=29784.659..29818.130 rows=101 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=6377243.59..6714608.12 rows=14993979 width=71) (actual time=29597.947..29597.996 rows=20 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=6377243.59..6414728.54 rows=14993979 width=44) (actual time=29597.927..29597.937 rows=139 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 36kB
                                 ->  Hash Join  (cost=78862.72..4260660.23 rows=14993979 width=44) (actual time=6492.990..29597.868 rows=139 loops=5)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Merge Join  (cost=378.65..3929031.86 rows=14993979 width=25) (actual time=1097.496..28785.808 rows=139 loops=5)
                                             Merge Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Merge Join  (cost=1.13..3135847.38 rows=14996300 width=13) (actual time=936.144..24805.624 rows=139 loops=5)
                                                   Merge Cond: (lineitem.l_orderkey = lineitem_1.l_orderkey)
                                                   ->  Parallel Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..911835.56 rows=14996300 width=9) (actual time=0.800..1323.091 rows=11983287 loops=5)
                                                         Heap Fetches: 0
                                                   ->  GroupAggregate  (cost=0.56..1849104.31 rows=14996300 width=4) (actual time=485.548..22839.341 rows=99 loops=5)
                                                         Group Key: lineitem_1.l_orderkey
                                                         Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                         Rows Removed by Filter: 14999901
                                                         ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361724.56 rows=59985200 width=9) (actual time=0.018..7146.386 rows=59986052 loops=5)
                                                               Heap Fetches: 0
                                             ->  Index Scan using orders_pkey on orders  (cost=0.43..568510.75 rows=14998621 width=20) (actual time=0.312..2917.975 rows=14752370 loops=5)
                                       ->  Hash  (cost=50946.14..50946.14 rows=1499914 width=23) (actual time=686.330..686.330 rows=1500000 loops=5)
                                             Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                                             ->  Seq Scan on customer  (cost=0.00..50946.14 rows=1499914 width=23) (actual time=0.024..383.363 rows=1500000 loops=5)
 Planning time: 34.875 ms
 Execution time: 29819.051 ms
(34 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17501012.51..17501012.76 rows=100 width=71) (actual time=29149.317..29149.415 rows=99 loops=1)
   ->  Sort  (cost=17501012.51..17650952.30 rows=59975917 width=71) (actual time=29149.316..29149.408 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  Finalize GroupAggregate  (cost=6378243.65..15208776.09 rows=59975917 width=71) (actual time=29149.094..29149.329 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=6378243.65..13859317.97 rows=59975916 width=71) (actual time=29149.088..29149.245 rows=101 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=6377243.59..6714608.12 rows=14993979 width=71) (actual time=29044.255..29044.299 rows=20 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=6377243.59..6414728.54 rows=14993979 width=44) (actual time=29044.234..29044.242 rows=139 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 33kB
                                 ->  Hash Join  (cost=78862.72..4260660.23 rows=14993979 width=44) (actual time=3731.638..29044.170 rows=139 loops=5)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Merge Join  (cost=378.65..3929031.86 rows=14993979 width=25) (actual time=1044.316..28233.516 rows=139 loops=5)
                                             Merge Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Merge Join  (cost=1.13..3135847.38 rows=14996300 width=13) (actual time=907.244..24504.796 rows=139 loops=5)
                                                   Merge Cond: (lineitem.l_orderkey = lineitem_1.l_orderkey)
                                                   ->  Parallel Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..911835.56 rows=14996300 width=9) (actual time=0.027..1395.896 rows=11983287 loops=5)
                                                         Heap Fetches: 0
                                                   ->  GroupAggregate  (cost=0.56..1849104.31 rows=14996300 width=4) (actual time=484.907..22460.300 rows=99 loops=5)
                                                         Group Key: lineitem_1.l_orderkey
                                                         Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                         Rows Removed by Filter: 14999901
                                                         ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361724.56 rows=59985200 width=9) (actual time=0.022..6845.005 rows=59986052 loops=5)
                                                               Heap Fetches: 0
                                             ->  Index Scan using orders_pkey on orders  (cost=0.43..568510.75 rows=14998621 width=20) (actual time=0.016..2652.228 rows=14677197 loops=5)
                                       ->  Hash  (cost=50946.14..50946.14 rows=1499914 width=23) (actual time=640.238..640.238 rows=1500000 loops=5)
                                             Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                                             ->  Seq Scan on customer  (cost=0.00..50946.14 rows=1499914 width=23) (actual time=0.024..307.505 rows=1500000 loops=5)
 Planning time: 2.627 ms
 Execution time: 29149.534 ms
(34 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=67698.61..67698.62 rows=1 width=32) (actual time=883.385..885.798 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=67698.61..67698.62 rows=1 width=32) (actual time=883.384..885.796 rows=1 loops=1)
         ->  Gather  (cost=67698.18..67698.59 rows=4 width=32) (actual time=883.370..885.787 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=66698.18..66698.19 rows=1 width=32) (actual time=874.171..874.171 rows=1 loops=5)
                     ->  Nested Loop  (cost=0.69..66696.07 rows=280 width=12) (actual time=7.071..873.737 rows=213 loops=5)
                           ->  Parallel Seq Scan on part  (cost=0.00..62229.90 rows=1176 width=30) (actual time=0.516..214.838 rows=956 loops=5)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 399044
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.69..3.79 rows=1 width=21) (actual time=0.662..0.688 rows=0 loops=4781)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning time: 31.169 ms
 Execution time: 886.573 ms
(17 rows)

SET
SET
SET


 Limit  (cost=67698.61..67698.62 rows=1 width=32) (actual time=148.137..152.852 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=67698.61..67698.62 rows=1 width=32) (actual time=148.136..152.850 rows=1 loops=1)
         ->  Gather  (cost=67698.18..67698.59 rows=4 width=32) (actual time=145.437..152.835 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=66698.18..66698.19 rows=1 width=32) (actual time=141.218..141.219 rows=1 loops=5)
                     ->  Nested Loop  (cost=0.69..66696.07 rows=280 width=12) (actual time=0.923..141.035 rows=213 loops=5)
                           ->  Parallel Seq Scan on part  (cost=0.00..62229.90 rows=1176 width=30) (actual time=0.100..124.069 rows=956 loops=5)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 399044
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.69..3.79 rows=1 width=21) (actual time=0.015..0.016 rows=0 loops=4781)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning time: 3.304 ms
 Execution time: 152.913 ms
(17 rows)

query 20 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2915298.88..2915298.89 rows=1 width=51) (actual time=52248.497..52248.616 rows=1 loops=1)
   ->  Sort  (cost=2915298.88..2915298.89 rows=1 width=51) (actual time=52248.496..52248.615 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2608395.96..2915298.87 rows=1 width=51) (actual time=29107.925..52246.875 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182006332
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.257..24.305 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.247..16.677 rows=100000 loops=1)
               ->  Materialize  (cost=2608395.96..2910646.57 rows=3 width=8) (actual time=6.737..10.312 rows=44446 loops=4095)
                     ->  Gather  (cost=2608395.96..2910646.55 rows=3 width=8) (actual time=27587.749..35956.987 rows=59002 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Merge Join  (cost=2607395.96..2909646.25 rows=1 width=8) (actual time=27601.865..35899.847 rows=11800 loops=5)
                                 Merge Cond: (partsupp.ps_partkey = lineitem.l_partkey)
                                 Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Join Filter: 23485
                                 ->  Nested Loop  (cost=0.98..60024.99 rows=20206 width=16) (actual time=0.365..183.608 rows=17374 loops=5)
                                       ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.55..45731.71 rows=5050 width=4) (actual time=0.187..67.766 rows=4344 loops=5)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 395656
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.64 rows=19 width=12) (actual time=0.025..0.026 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
                                 ->  Materialize  (cost=2607394.98..2833399.53 rows=4867119 width=40) (actual time=27598.842..35177.358 rows=5436804 loops=5)
                                       ->  GroupAggregate  (cost=2607394.98..2772560.54 rows=4867119 width=40) (actual time=27598.839..34313.402 rows=5422189 loops=5)
                                             Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                             ->  Sort  (cost=2607394.98..2630434.67 rows=9215878 width=13) (actual time=27598.829..29604.668 rows=9079047 loops=5)
                                                   Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                                   Sort Method: external merge  Disk: 205344kB
                                                   ->  Bitmap Heap Scan on lineitem  (cost=165435.31..1428816.48 rows=9215878 width=13) (actual time=1763.494..23195.654 rows=9123688 loops=5)
                                                         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                         Rows Removed by Index Recheck: 23164080
                                                         Heap Blocks: exact=518099 lossy=530696
                                                         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..163131.35 rows=9215878 width=0) (actual time=1578.135..1578.135 rows=9123688 loops=5)
                                                               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Planning time: 30.150 ms
 Execution time: 52273.088 ms
(44 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2915298.88..2915298.89 rows=1 width=51) (actual time=39978.379..39978.543 rows=1 loops=1)
   ->  Sort  (cost=2915298.88..2915298.89 rows=1 width=51) (actual time=39978.378..39978.541 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2608395.96..2915298.87 rows=1 width=51) (actual time=17121.834..39976.842 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 181997703
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.018..20.795 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.010..13.179 rows=100000 loops=1)
               ->  Materialize  (cost=2608395.96..2910646.57 rows=3 width=8) (actual time=3.809..7.302 rows=44444 loops=4095)
                     ->  Gather  (cost=2608395.96..2910646.55 rows=3 width=8) (actual time=15599.137..23860.803 rows=59002 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Merge Join  (cost=2607395.96..2909646.25 rows=1 width=8) (actual time=15543.699..23771.147 rows=11800 loops=5)
                                 Merge Cond: (partsupp.ps_partkey = lineitem.l_partkey)
                                 Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Join Filter: 23485
                                 ->  Nested Loop  (cost=0.98..60024.99 rows=20206 width=16) (actual time=0.087..89.254 rows=17374 loops=5)
                                       ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.55..45731.71 rows=5050 width=4) (actual time=0.055..58.006 rows=4344 loops=5)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 395656
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.64 rows=19 width=12) (actual time=0.005..0.006 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
                                 ->  Materialize  (cost=2607394.98..2833399.53 rows=4867119 width=40) (actual time=15541.764..23131.622 rows=5439120 loops=5)
                                       ->  GroupAggregate  (cost=2607394.98..2772560.54 rows=4867119 width=40) (actual time=15541.762..22268.825 rows=5424504 loops=5)
                                             Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                             ->  Sort  (cost=2607394.98..2630434.67 rows=9215878 width=13) (actual time=15541.753..17537.456 rows=9082909 loops=5)
                                                   Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                                   Sort Method: external merge  Disk: 205344kB
                                                   ->  Bitmap Heap Scan on lineitem  (cost=165435.31..1428816.48 rows=9215878 width=13) (actual time=1717.241..11230.914 rows=9123688 loops=5)
                                                         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                         Rows Removed by Index Recheck: 23164080
                                                         Heap Blocks: exact=518099 lossy=530696
                                                         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..163131.35 rows=9215878 width=0) (actual time=1547.214..1547.214 rows=9123688 loops=5)
                                                               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Planning time: 2.770 ms
 Execution time: 40004.712 ms
(44 rows)

query 21 run 1
SET
SET
SET
                                                                                                  QUERY PLAN                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=818862.13..818862.14 rows=1 width=34) (actual time=5843.410..5843.526 rows=100 loops=1)
   ->  Sort  (cost=818862.13..818862.14 rows=1 width=34) (actual time=5843.409..5843.519 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=818862.10..818862.12 rows=1 width=34) (actual time=5836.174..5842.317 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=818862.10..818862.11 rows=1 width=26) (actual time=5836.165..5837.810 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Anti Join  (cost=3359.44..818862.09 rows=1 width=26) (actual time=45.698..5657.984 rows=39281 loops=1)
                           ->  Nested Loop  (cost=3358.88..818859.50 rows=1 width=34) (actual time=45.688..4313.559 rows=704306 loops=1)
                                 ->  Gather  (cost=3358.44..818857.06 rows=1 width=38) (actual time=45.219..1530.953 rows=1460326 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Semi Join  (cost=2358.44..817856.96 rows=1 width=38) (actual time=37.868..4650.543 rows=292065 loops=5)
                                             ->  Hash Join  (cost=2357.88..282681.77 rows=199951 width=34) (actual time=37.803..2590.513 rows=302853 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..259579.57 rows=4998767 width=8) (actual time=0.298..1719.189 rows=7585870 loops=5)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=2307.31..2307.31 rows=4000 width=30) (actual time=37.428..37.429 rows=3991 loops=5)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                         ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=30) (actual time=0.979..36.322 rows=3991 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.016..0.018 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=55.29..2266.00 rows=4000 width=34) (actual time=0.961..35.410 rows=3991 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=1865
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=0.766..0.766 rows=3991 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.64 rows=4 width=8) (actual time=0.006..0.006 rows=1 loops=1514267)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: (l_suppkey <> l1.l_suppkey)
                                                   Rows Removed by Filter: 0
                                                   Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=1460326)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..2.58 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=704306)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning time: 30.468 ms
 Execution time: 5844.409 ms
(45 rows)

SET
SET
SET
                                                                                                  QUERY PLAN                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=818862.13..818862.14 rows=1 width=34) (actual time=4481.574..4481.688 rows=100 loops=1)
   ->  Sort  (cost=818862.13..818862.14 rows=1 width=34) (actual time=4481.573..4481.681 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=818862.10..818862.12 rows=1 width=34) (actual time=4474.247..4480.476 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=818862.10..818862.11 rows=1 width=26) (actual time=4474.238..4475.954 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Anti Join  (cost=3359.44..818862.09 rows=1 width=26) (actual time=22.506..4305.158 rows=39281 loops=1)
                           ->  Nested Loop  (cost=3358.88..818859.50 rows=1 width=34) (actual time=22.498..2946.374 rows=704306 loops=1)
                                 ->  Gather  (cost=3358.44..818857.06 rows=1 width=38) (actual time=22.452..433.737 rows=1460326 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Semi Join  (cost=2358.44..817856.96 rows=1 width=38) (actual time=13.239..3291.510 rows=292065 loops=5)
                                             ->  Hash Join  (cost=2357.88..282681.77 rows=199951 width=34) (actual time=13.198..2032.292 rows=302853 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..259579.57 rows=4998767 width=8) (actual time=0.050..1245.974 rows=7585870 loops=5)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=2307.31..2307.31 rows=4000 width=30) (actual time=13.061..13.063 rows=3991 loops=5)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                         ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=30) (actual time=0.647..12.322 rows=3991 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.014..0.017 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=55.29..2266.00 rows=4000 width=34) (actual time=0.630..11.747 rows=3991 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=1865
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=0.431..0.431 rows=3991 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.64 rows=4 width=8) (actual time=0.004..0.004 rows=1 loops=1514267)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: (l_suppkey <> l1.l_suppkey)
                                                   Rows Removed by Filter: 0
                                                   Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.45 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=1460326)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..2.58 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=704306)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning time: 3.490 ms
 Execution time: 4481.785 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=133944.78..133944.80 rows=1 width=72) (actual time=1622.565..1622.659 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=46820.46..46820.47 rows=1 width=32) (actual time=341.970..342.062 rows=1 loops=1)
           ->  Gather  (cost=46820.03..46820.44 rows=4 width=32) (actual time=338.746..342.044 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=45820.03..45820.04 rows=1 width=32) (actual time=330.422..330.422 rows=1 loops=5)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..45790.19 rows=11936 width=6) (actual time=0.024..320.733 rows=76485 loops=5)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 223515
   ->  GroupAggregate  (cost=87124.31..87318.76 rows=7071 width=72) (actual time=1622.564..1622.565 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=87124.31..87141.98 rows=7071 width=38) (actual time=1620.776..1621.115 rows=9006 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..86672.20 rows=7071 width=38) (actual time=342.049..1599.240 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75319.74 rows=17499 width=26) (actual time=342.001..895.563 rows=191129 loops=1)
                           Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.64 rows=17 width=4) (actual time=0.003..0.003 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 17.962 ms
 Execution time: 1623.440 ms
(24 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=133944.78..133944.80 rows=1 width=72) (actual time=1113.373..1113.469 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=46820.46..46820.47 rows=1 width=32) (actual time=221.338..221.432 rows=1 loops=1)
           ->  Gather  (cost=46820.03..46820.44 rows=4 width=32) (actual time=217.324..221.410 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=45820.03..45820.04 rows=1 width=32) (actual time=212.432..212.433 rows=1 loops=5)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..45790.19 rows=11936 width=6) (actual time=0.015..201.068 rows=76485 loops=5)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 223515
   ->  GroupAggregate  (cost=87124.31..87318.76 rows=7071 width=72) (actual time=1113.373..1113.373 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=87124.31..87141.98 rows=7071 width=38) (actual time=1111.620..1111.945 rows=9006 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..86672.20 rows=7071 width=38) (actual time=221.393..1094.559 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75319.74 rows=17499 width=26) (actual time=221.367..736.798 rows=191129 loops=1)
                           Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.64 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 0.714 ms
 Execution time: 1113.526 ms
(24 rows)

