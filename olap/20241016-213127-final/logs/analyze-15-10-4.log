query 1 run 1
SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1831876.79..1831877.42 rows=1 width=236) (actual time=21735.118..21735.869 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1831876.79..1831880.60 rows=6 width=236) (actual time=21735.117..21735.867 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=1831876.79..1831879.66 rows=24 width=236) (actual time=21735.094..21735.846 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=1830876.73..1830876.74 rows=6 width=236) (actual time=21726.969..21726.970 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=1830876.52..1830876.65 rows=6 width=236) (actual time=21726.944..21726.950 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 32kB
                           Worker 0:  Batches: 1  Memory Usage: 32kB
                           Worker 1:  Batches: 1  Memory Usage: 32kB
                           Worker 2:  Batches: 1  Memory Usage: 32kB
                           Worker 3:  Batches: 1  Memory Usage: 32kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..1312592.18 rows=14808124 width=25) (actual time=1.045..4573.953 rows=11856890 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 140321
 Planning Time: 23.274 ms
 Execution Time: 21736.877 ms
(25 rows)

SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1831876.79..1831877.42 rows=1 width=236) (actual time=20909.857..20909.926 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1831876.79..1831880.60 rows=6 width=236) (actual time=20909.855..20909.925 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=1831876.79..1831879.66 rows=24 width=236) (actual time=20909.825..20909.898 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=1830876.73..1830876.74 rows=6 width=236) (actual time=20905.181..20905.182 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=1830876.52..1830876.65 rows=6 width=236) (actual time=20905.156..20905.161 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 32kB
                           Worker 0:  Batches: 1  Memory Usage: 32kB
                           Worker 1:  Batches: 1  Memory Usage: 32kB
                           Worker 2:  Batches: 1  Memory Usage: 32kB
                           Worker 3:  Batches: 1  Memory Usage: 32kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..1312592.18 rows=14808124 width=25) (actual time=0.027..3012.194 rows=11856890 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 140321
 Planning Time: 1.348 ms
 Execution Time: 20910.021 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=536433.87..536433.88 rows=1 width=192) (actual time=31076.538..31076.552 rows=100 loops=1)
   ->  Sort  (cost=536433.87..536433.88 rows=1 width=192) (actual time=31076.537..31076.545 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Nested Loop  (cost=50.37..536433.86 rows=1 width=192) (actual time=31.996..31073.375 rows=4737 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.296..0.302 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.161..0.162 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.132..0.135 rows=25 loops=1)
               ->  Materialize  (cost=50.37..536431.16 rows=1 width=170) (actual time=5.244..6213.677 rows=4737 loops=5)
                     ->  Nested Loop  (cost=50.37..536431.16 rows=1 width=170) (actual time=26.215..31057.176 rows=4737 loops=1)
                           Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
                           Rows Removed by Join Filter: 236714834
                           ->  Nested Loop  (cost=50.37..531960.16 rows=1 width=34) (actual time=2.058..1226.585 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..54345.37 rows=9181 width=30) (actual time=0.247..270.902 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=49.94..52.01 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=49.50..49.51 rows=1 width=32) (actual time=0.113..0.113 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.41..49.49 rows=4 width=6) (actual time=0.100..0.109 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.41..48.20 rows=18 width=10) (actual time=0.084..0.106 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.85..46.58 rows=18 width=10) (actual time=0.082..0.104 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.75 rows=18 width=10) (actual time=0.074..0.076 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.42..2.43 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.009..0.010 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..2.679 rows=49972 loops=4737)
 Planning Time: 25.613 ms
 Execution Time: 31076.869 ms
(50 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=536433.87..536433.88 rows=1 width=192) (actual time=29877.257..29877.271 rows=100 loops=1)
   ->  Sort  (cost=536433.87..536433.88 rows=1 width=192) (actual time=29877.256..29877.264 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Nested Loop  (cost=50.37..536433.86 rows=1 width=192) (actual time=14.316..29874.074 rows=4737 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.014..0.020 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.004 rows=25 loops=1)
               ->  Materialize  (cost=50.37..536431.16 rows=1 width=170) (actual time=2.200..5973.904 rows=4737 loops=5)
                     ->  Nested Loop  (cost=50.37..536431.16 rows=1 width=170) (actual time=10.995..29859.491 rows=4737 loops=1)
                           Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
                           Rows Removed by Join Filter: 236714834
                           ->  Nested Loop  (cost=50.37..531960.16 rows=1 width=34) (actual time=0.059..319.057 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..54345.37 rows=9181 width=30) (actual time=0.007..84.980 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=49.94..52.01 rows=1 width=14) (actual time=0.001..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=49.50..49.51 rows=1 width=32) (actual time=0.024..0.024 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.41..49.49 rows=4 width=6) (actual time=0.017..0.021 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.41..48.20 rows=18 width=10) (actual time=0.009..0.018 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.85..46.58 rows=18 width=10) (actual time=0.008..0.016 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.75 rows=18 width=10) (actual time=0.004..0.005 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.42..2.43 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.009..0.010 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.004 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..2.650 rows=49972 loops=4737)
 Planning Time: 2.583 ms
 Execution Time: 29877.365 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2328694.63..2328694.66 rows=10 width=44) (actual time=9396.852..9407.541 rows=10 loops=1)
   ->  Sort  (cost=2328694.63..2336608.82 rows=3165673 width=44) (actual time=9396.850..9407.538 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=1794188.85..2260285.58 rows=3165673 width=44) (actual time=9150.203..9382.868 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=1794188.85..2173229.57 rows=3165673 width=24) (actual time=9150.188..9205.800 rows=301530 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1793188.79..1795167.34 rows=791418 width=24) (actual time=9140.493..9143.402 rows=60306 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 5666kB
                           Worker 0:  Sort Method: quicksort  Memory: 5608kB
                           Worker 1:  Sort Method: quicksort  Memory: 5634kB
                           Worker 2:  Sort Method: quicksort  Memory: 5704kB
                           Worker 3:  Sort Method: quicksort  Memory: 5687kB
                           ->  Parallel Hash Join  (cost=359038.03..1704058.25 rows=791418 width=24) (actual time=2222.591..9123.895 rows=60306 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..1312592.18 rows=8119869 width=16) (actual time=0.604..6080.457 rows=6506846 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 5490365
                                 ->  Parallel Hash  (cost=354469.63..354469.63 rows=365472 width=12) (actual time=2218.603..2218.765 rows=290361 loops=5)
                                       Buckets: 2097152  Batches: 1  Memory Usage: 84608kB
                                       ->  Parallel Hash Join  (cost=41580.92..354469.63 rows=365472 width=12) (actual time=268.998..2112.904 rows=290361 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..308139.37 rows=1809267 width=16) (actual time=0.471..1488.538 rows=1447887 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 1552113
                                             ->  Parallel Hash  (cost=40634.12..40634.12 rows=75744 width=4) (actual time=267.953..267.953 rows=60055 loops=5)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 15904kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..40634.12 rows=75744 width=4) (actual time=0.400..247.577 rows=60055 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 239945
 Planning Time: 31.743 ms
 Execution Time: 9407.908 ms
(35 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2328694.63..2328694.66 rows=10 width=44) (actual time=4777.189..4787.540 rows=10 loops=1)
   ->  Sort  (cost=2328694.63..2336608.82 rows=3165673 width=44) (actual time=4777.187..4787.537 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=1794188.85..2260285.58 rows=3165673 width=44) (actual time=4541.604..4763.445 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=1794188.85..2173229.57 rows=3165673 width=24) (actual time=4541.591..4594.742 rows=301530 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1793188.79..1795167.34 rows=791418 width=24) (actual time=4535.417..4538.369 rows=60306 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 5626kB
                           Worker 0:  Sort Method: quicksort  Memory: 5579kB
                           Worker 1:  Sort Method: quicksort  Memory: 5718kB
                           Worker 2:  Sort Method: quicksort  Memory: 5771kB
                           Worker 3:  Sort Method: quicksort  Memory: 5605kB
                           ->  Parallel Hash Join  (cost=359038.03..1704058.25 rows=791418 width=24) (actual time=1107.864..4519.220 rows=60306 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..1312592.18 rows=8119869 width=16) (actual time=0.035..2447.653 rows=6506846 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 5490365
                                 ->  Parallel Hash  (cost=354469.63..354469.63 rows=365472 width=12) (actual time=1105.237..1105.394 rows=290361 loops=5)
                                       Buckets: 2097152  Batches: 1  Memory Usage: 84576kB
                                       ->  Parallel Hash Join  (cost=41580.92..354469.63 rows=365472 width=12) (actual time=90.634..982.548 rows=290361 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..308139.37 rows=1809267 width=16) (actual time=0.049..490.474 rows=1447887 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 1552113
                                             ->  Parallel Hash  (cost=40634.12..40634.12 rows=75744 width=4) (actual time=89.973..89.974 rows=60055 loops=5)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 15936kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..40634.12 rows=75744 width=4) (actual time=0.021..63.077 rows=60055 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 239945
 Planning Time: 1.780 ms
 Execution Time: 4787.613 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=282700.80..534521.22 rows=1 width=24) (actual time=9474.878..9501.678 rows=1 loops=1)
   ->  GroupAggregate  (cost=282700.80..1541802.94 rows=5 width=24) (actual time=9474.877..9501.676 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=282700.80..1539046.31 rows=551316 width=16) (actual time=4203.371..9457.330 rows=103030 loops=1)
               ->  Gather Merge  (cost=282700.36..348724.79 rows=551423 width=20) (actual time=4202.077..4294.669 rows=112213 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=281700.30..282044.94 rows=137856 width=20) (actual time=4189.604..4192.614 rows=23380 loops=5)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 9998kB
                           Worker 0:  Sort Method: quicksort  Memory: 10091kB
                           Worker 1:  Sort Method: quicksort  Memory: 10102kB
                           Worker 2:  Sort Method: quicksort  Memory: 10091kB
                           Worker 3:  Sort Method: quicksort  Memory: 10107kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=6596.52..269932.36 rows=137856 width=20) (actual time=130.982..4139.680 rows=112085 loops=5)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=45945
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6458.67 rows=551423 width=0) (actual time=87.367..87.367 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.44..2.44 rows=1 width=4) (actual time=0.045..0.045 rows=1 loops=112213)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Heap Fetches: 0
 Planning Time: 25.601 ms
 Execution Time: 9502.265 ms
(24 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=282700.80..534521.22 rows=1 width=24) (actual time=1162.404..1190.604 rows=1 loops=1)
   ->  GroupAggregate  (cost=282700.80..1541802.94 rows=5 width=24) (actual time=1162.403..1190.602 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=282700.80..1539046.31 rows=551316 width=16) (actual time=714.722..1172.483 rows=103030 loops=1)
               ->  Gather Merge  (cost=282700.36..348724.79 rows=551423 width=20) (actual time=714.677..773.163 rows=112213 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=281700.30..282044.94 rows=137856 width=20) (actual time=705.131..707.215 rows=23457 loops=5)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 9386kB
                           Worker 0:  Sort Method: quicksort  Memory: 10749kB
                           Worker 1:  Sort Method: quicksort  Memory: 9353kB
                           Worker 2:  Sort Method: quicksort  Memory: 9657kB
                           Worker 3:  Sort Method: quicksort  Memory: 11245kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=6596.52..269932.36 rows=137856 width=20) (actual time=127.950..664.150 rows=112085 loops=5)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=41851
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6458.67 rows=551423 width=0) (actual time=82.171..82.171 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.44..2.44 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=112213)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Heap Fetches: 0
 Planning Time: 1.983 ms
 Execution Time: 1190.899 ms
(24 rows)

query 5 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=651979.20..651979.20 rows=1 width=58) (actual time=7606.857..7649.830 rows=1 loops=1)
   ->  Sort  (cost=651979.20..651979.26 rows=25 width=58) (actual time=7606.856..7649.827 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=651738.93..651979.08 rows=25 width=58) (actual time=7598.386..7649.809 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=651738.93..651978.01 rows=100 width=58) (actual time=7596.859..7649.779 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=650738.87..650966.04 rows=25 width=58) (actual time=7580.619..7588.014 rows=5 loops=5)
                           Group Key: nation.n_name
                           ->  Sort  (cost=650738.87..650784.24 rows=18149 width=38) (actual time=7579.170..7580.680 rows=14407 loops=5)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 1500kB
                                 Worker 0:  Sort Method: quicksort  Memory: 1518kB
                                 Worker 1:  Sort Method: quicksort  Memory: 1519kB
                                 Worker 2:  Sort Method: quicksort  Memory: 1506kB
                                 Worker 3:  Sort Method: quicksort  Memory: 1507kB
                                 ->  Parallel Hash Join  (cost=73618.60..649455.05 rows=18149 width=38) (actual time=549.379..7567.284 rows=14407 loops=5)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=69927.00..643381.87 rows=453635 width=50) (actual time=530.122..7428.986 rows=363065 loops=5)
                                             ->  Parallel Hash Join  (cost=69926.44..342112.15 rows=113431 width=38) (actual time=528.154..5157.955 rows=90680 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=27133.73..296909.03 rows=567154 width=8) (actual time=258.413..4680.279 rows=455328 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=51802
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..26566.58 rows=2268614 width=0) (actual time=202.294..202.294 rows=2276638 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=41855.28..41855.28 rows=74994 width=38) (actual time=268.921..268.924 rows=59887 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 25280kB
                                                         ->  Hash Join  (cost=2.51..41855.28 rows=74994 width=38) (actual time=0.796..243.616 rows=59887 loops=5)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..39696.70 rows=374970 width=8) (actual time=0.389..203.764 rows=300000 loops=5)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.394..0.396 rows=5 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.388..0.394 rows=5 loops=5)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.214..0.216 rows=25 loops=5)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.167..0.167 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.163..0.164 rows=1 loops=5)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.023..0.024 rows=4 loops=453399)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=17.177..17.177 rows=20000 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 5024kB
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.077..10.951 rows=20000 loops=5)
 Planning Time: 38.504 ms
 Execution Time: 7650.283 ms
(51 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=651979.20..651979.20 rows=1 width=58) (actual time=2080.795..2120.227 rows=1 loops=1)
   ->  Sort  (cost=651979.20..651979.26 rows=25 width=58) (actual time=2080.794..2120.225 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=651738.93..651979.08 rows=25 width=58) (actual time=2072.170..2120.206 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=651738.93..651978.01 rows=100 width=58) (actual time=2070.565..2120.170 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=650738.87..650966.04 rows=25 width=58) (actual time=2055.537..2062.341 rows=5 loops=5)
                           Group Key: nation.n_name
                           ->  Sort  (cost=650738.87..650784.24 rows=18149 width=38) (actual time=2053.442..2054.191 rows=14407 loops=5)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 1501kB
                                 Worker 0:  Sort Method: quicksort  Memory: 1416kB
                                 Worker 1:  Sort Method: quicksort  Memory: 1389kB
                                 Worker 2:  Sort Method: quicksort  Memory: 1607kB
                                 Worker 3:  Sort Method: quicksort  Memory: 1637kB
                                 ->  Parallel Hash Join  (cost=73618.60..649455.05 rows=18149 width=38) (actual time=418.695..2044.681 rows=14407 loops=5)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=69927.00..643381.87 rows=453635 width=50) (actual time=401.034..1916.353 rows=363065 loops=5)
                                             ->  Parallel Hash Join  (cost=69926.44..342112.15 rows=113431 width=38) (actual time=400.979..1003.463 rows=90680 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=27133.73..296909.03 rows=567154 width=8) (actual time=246.882..680.303 rows=455328 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=51847
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..26566.58 rows=2268614 width=0) (actual time=191.086..191.086 rows=2276638 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=41855.28..41855.28 rows=74994 width=38) (actual time=152.676..152.679 rows=59887 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 25280kB
                                                         ->  Hash Join  (cost=2.51..41855.28 rows=74994 width=38) (actual time=0.084..124.263 rows=59887 loops=5)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..39696.70 rows=374970 width=8) (actual time=0.032..86.931 rows=300000 loops=5)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.042..0.044 rows=5 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.036..0.042 rows=5 loops=5)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.019..0.020 rows=25 loops=5)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=5)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.009..0.009 rows=4 loops=453399)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=16.891..16.891 rows=20000 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 5056kB
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.032..8.522 rows=20000 loops=5)
 Planning Time: 6.156 ms
 Execution Time: 2120.340 ms
(51 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1368062.01..1368062.02 rows=1 width=32) (actual time=10716.016..10765.310 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1368062.01..1368062.02 rows=1 width=32) (actual time=10716.014..10765.308 rows=1 loops=1)
         ->  Gather  (cost=1368061.58..1368061.99 rows=4 width=32) (actual time=10716.002..10765.298 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1367061.58..1367061.59 rows=1 width=32) (actual time=10706.116..10706.117 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=230044.37..1365573.57 rows=297602 width=12) (actual time=1413.296..10549.823 rows=238912 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Rows Removed by Index Recheck: 2744818
                           Heap Blocks: exact=79512 lossy=53604
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..229746.77 rows=1190410 width=0) (actual time=1328.698..1328.699 rows=1194558 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 18.948 ms
 Execution Time: 10766.451 ms
(14 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1368062.01..1368062.02 rows=1 width=32) (actual time=3238.886..3280.337 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1368062.01..1368062.02 rows=1 width=32) (actual time=3238.885..3280.335 rows=1 loops=1)
         ->  Gather  (cost=1368061.58..1368061.99 rows=4 width=32) (actual time=3238.870..3280.323 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1367061.58..1367061.59 rows=1 width=32) (actual time=3231.877..3231.878 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=230044.37..1365573.57 rows=297602 width=12) (actual time=1241.855..3111.452 rows=238912 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Rows Removed by Index Recheck: 2744818
                           Heap Blocks: exact=83617 lossy=56529
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..229746.77 rows=1190410 width=0) (actual time=1154.410..1154.410 rows=1194558 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 1.409 ms
 Execution Time: 3280.394 ms
(14 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1419910.43..1420951.43 rows=1 width=116) (actual time=31035.856..31041.288 rows=1 loops=1)
   ->  GroupAggregate  (cost=1419910.43..11859155.34 rows=10028 width=116) (actual time=31035.855..31041.286 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=1419910.43..11858105.42 rows=59967 width=96) (actual time=7080.499..31011.346 rows=14421 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 349046
               ->  Nested Loop  (cost=1419910.00..8207465.17 rows=1499181 width=76) (actual time=7068.222..26103.703 rows=363467 loops=1)
                     ->  Gather Merge  (cost=1419909.56..1599413.46 rows=1499181 width=76) (actual time=7067.450..7534.629 rows=363467 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=1418909.50..1419846.49 rows=374795 width=76) (actual time=7047.320..7087.842 rows=73112 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: external merge  Disk: 27008kB
                                 Worker 0:  Sort Method: external merge  Disk: 26984kB
                                 Worker 1:  Sort Method: external merge  Disk: 27712kB
                                 Worker 2:  Sort Method: external merge  Disk: 26000kB
                                 Worker 3:  Sort Method: external merge  Disk: 26248kB
                                 ->  Parallel Hash Join  (cost=3140.96..1372313.97 rows=374795 width=76) (actual time=15.554..6755.080 rows=291139 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..1350082.01 rows=4503019 width=24) (actual time=0.432..6125.528 rows=3646065 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 8351145
                                       ->  Parallel Hash  (cost=3079.76..3079.76 rows=4896 width=60) (actual time=14.794..14.797 rows=1596 loops=5)
                                             Buckets: 16384  Batches: 1  Memory Usage: 960kB
                                             ->  Hash Join  (cost=2.87..3079.76 rows=4896 width=60) (actual time=0.342..13.814 rows=1596 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.157..11.135 rows=20000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.176..0.178 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.168..0.175 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.154..0.157 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=8) (actual time=0.050..0.050 rows=1 loops=363467)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Only Scan using q10_idx_1 on customer  (cost=0.43..2.42 rows=1 width=8) (actual time=0.013..0.013 rows=1 loops=363467)
                     Index Cond: (c_custkey = orders.o_custkey)
                     Heap Fetches: 0
 Planning Time: 33.135 ms
 Execution Time: 31045.367 ms
(46 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1419910.43..1420951.43 rows=1 width=116) (actual time=5622.716..5628.301 rows=1 loops=1)
   ->  GroupAggregate  (cost=1419910.43..11859155.34 rows=10028 width=116) (actual time=5622.715..5628.299 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=1419910.43..11858105.42 rows=59967 width=96) (actual time=3547.186..5613.729 rows=14421 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 349028
               ->  Nested Loop  (cost=1419910.00..8207465.17 rows=1499181 width=76) (actual time=3547.043..4725.702 rows=363449 loops=1)
                     ->  Gather Merge  (cost=1419909.56..1599413.46 rows=1499181 width=76) (actual time=3546.989..3780.463 rows=363449 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=1418909.50..1419846.49 rows=374795 width=76) (actual time=3526.598..3554.433 rows=73081 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: external merge  Disk: 27544kB
                                 Worker 0:  Sort Method: external merge  Disk: 25744kB
                                 Worker 1:  Sort Method: external merge  Disk: 27480kB
                                 Worker 2:  Sort Method: external merge  Disk: 26816kB
                                 Worker 3:  Sort Method: external merge  Disk: 26368kB
                                 ->  Parallel Hash Join  (cost=3140.96..1372313.97 rows=374795 width=76) (actual time=14.160..3214.175 rows=291139 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..1350082.01 rows=4503019 width=24) (actual time=1.468..2528.084 rows=3646065 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 8351145
                                       ->  Parallel Hash  (cost=3079.76..3079.76 rows=4896 width=60) (actual time=11.882..11.885 rows=1596 loops=5)
                                             Buckets: 16384  Batches: 1  Memory Usage: 960kB
                                             ->  Hash Join  (cost=2.87..3079.76 rows=4896 width=60) (actual time=0.063..10.904 rows=1596 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.026..7.846 rows=20000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.030..0.032 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.023..0.029 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.013 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=363449)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Only Scan using q10_idx_1 on customer  (cost=0.43..2.42 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=363449)
                     Index Cond: (c_custkey = orders.o_custkey)
                     Heap Fetches: 0
 Planning Time: 4.840 ms
 Execution Time: 5632.058 ms
(46 rows)

query 8 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=385019.60..385174.13 rows=1 width=64) (actual time=6629.832..6637.602 rows=1 loops=1)
   ->  GroupAggregate  (cost=385019.60..756808.91 rows=2406 width=64) (actual time=6629.831..6637.600 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=385019.60..756277.15 rows=24182 width=70) (actual time=3006.418..6619.611 rows=11818 loops=1)
               ->  Nested Loop  (cost=385019.45..755596.45 rows=24182 width=20) (actual time=3006.400..6601.166 rows=11818 loops=1)
                     ->  Nested Loop  (cost=385019.04..697278.64 rows=24182 width=20) (actual time=3006.015..6409.311 rows=11818 loops=1)
                           Join Filter: (n1.n_regionkey = region.r_regionkey)
                           Rows Removed by Join Filter: 47509
                           ->  Nested Loop  (cost=385019.04..695463.91 rows=120911 width=24) (actual time=3003.775..6380.047 rows=59327 loops=1)
                                 ->  Nested Loop  (cost=385018.89..692479.01 rows=120911 width=24) (actual time=3003.411..6316.172 rows=59327 loops=1)
                                       ->  Gather Merge  (cost=385018.46..399495.70 rows=120911 width=24) (actual time=3002.809..3051.087 rows=59327 loops=1)
                                             Workers Planned: 4
                                             Workers Launched: 4
                                             ->  Sort  (cost=384018.40..384093.97 rows=30228 width=24) (actual time=2993.436..2994.602 rows=12608 loops=5)
                                                   Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                                   Sort Method: quicksort  Memory: 2625kB
                                                   Worker 0:  Sort Method: quicksort  Memory: 2538kB
                                                   Worker 1:  Sort Method: quicksort  Memory: 2532kB
                                                   Worker 2:  Sort Method: quicksort  Memory: 2576kB
                                                   Worker 3:  Sort Method: quicksort  Memory: 2606kB
                                                   ->  Parallel Hash Join  (cost=59890.55..381768.90 rows=30228 width=24) (actual time=1125.561..2979.254 rows=23719 loops=5)
                                                         Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..317513.65 rows=1143769 width=12) (actual time=0.388..1619.714 rows=911503 loops=5)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 2088497
                                                         ->  Parallel Hash  (cost=58651.82..58651.82 rows=99098 width=20) (actual time=1124.324..1124.325 rows=77904 loops=5)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 25536kB
                                                               ->  Nested Loop  (cost=0.56..58651.82 rows=99098 width=20) (actual time=0.853..1095.053 rows=77904 loops=5)
                                                                     ->  Parallel Seq Scan on part  (cost=0.00..47231.18 rows=3304 width=4) (actual time=0.405..143.321 rows=2602 loops=5)
                                                                           Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                           Rows Removed by Filter: 397398
                                                                     ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.13 rows=33 width=24) (actual time=0.297..0.361 rows=30 loops=13011)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                       ->  Index Only Scan using q10_idx_1 on customer  (cost=0.43..2.42 rows=1 width=8) (actual time=0.054..0.054 rows=1 loops=59327)
                                             Index Cond: (c_custkey = orders.o_custkey)
                                             Heap Fetches: 0
                                 ->  Memoize  (cost=0.15..1.17 rows=1 width=8) (actual time=0.000..0.000 rows=1 loops=59327)
                                       Cache Key: customer.c_nationkey
                                       Cache Mode: logical
                                       Hits: 59302  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 3kB
                                       ->  Index Scan using nation_pkey on nation n1  (cost=0.14..1.16 rows=1 width=8) (actual time=0.017..0.017 rows=1 loops=25)
                                             Index Cond: (n_nationkey = customer.c_nationkey)
                           ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=59327)
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.318..0.319 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                     ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.42..2.41 rows=1 width=8) (actual time=0.016..0.016 rows=1 loops=11818)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Heap Fetches: 0
               ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=11818)
                     Cache Key: supplier.s_nationkey
                     Cache Mode: logical
                     Hits: 11793  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                     ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.003..0.003 rows=1 loops=25)
                           Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 42.477 ms
 Execution Time: 6638.003 ms
(58 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=385019.60..385174.13 rows=1 width=64) (actual time=1182.788..1192.212 rows=1 loops=1)
   ->  GroupAggregate  (cost=385019.60..756808.91 rows=2406 width=64) (actual time=1182.787..1192.211 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=385019.60..756277.15 rows=24182 width=70) (actual time=931.182..1183.438 rows=11818 loops=1)
               ->  Nested Loop  (cost=385019.45..755596.45 rows=24182 width=20) (actual time=931.176..1174.354 rows=11818 loops=1)
                     ->  Nested Loop  (cost=385019.04..697278.64 rows=24182 width=20) (actual time=931.163..1148.179 rows=11818 loops=1)
                           Join Filter: (n1.n_regionkey = region.r_regionkey)
                           Rows Removed by Join Filter: 47507
                           ->  Nested Loop  (cost=385019.04..695463.91 rows=120911 width=24) (actual time=931.115..1131.783 rows=59325 loops=1)
                                 ->  Nested Loop  (cost=385018.89..692479.01 rows=120911 width=24) (actual time=931.102..1103.208 rows=59325 loops=1)
                                       ->  Gather Merge  (cost=385018.46..399495.70 rows=120911 width=24) (actual time=931.064..960.610 rows=59325 loops=1)
                                             Workers Planned: 4
                                             Workers Launched: 4
                                             ->  Sort  (cost=384018.40..384093.97 rows=30228 width=24) (actual time=923.772..924.556 rows=12649 loops=5)
                                                   Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                                   Sort Method: quicksort  Memory: 2622kB
                                                   Worker 0:  Sort Method: quicksort  Memory: 2471kB
                                                   Worker 1:  Sort Method: quicksort  Memory: 2588kB
                                                   Worker 2:  Sort Method: quicksort  Memory: 2526kB
                                                   Worker 3:  Sort Method: quicksort  Memory: 2670kB
                                                   ->  Parallel Hash Join  (cost=59890.55..381768.90 rows=30228 width=24) (actual time=152.072..909.971 rows=23719 loops=5)
                                                         Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..317513.65 rows=1143769 width=12) (actual time=0.414..487.181 rows=911503 loops=5)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 2088497
                                                         ->  Parallel Hash  (cost=58651.82..58651.82 rows=99098 width=20) (actual time=151.021..151.023 rows=77904 loops=5)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 25536kB
                                                               ->  Nested Loop  (cost=0.56..58651.82 rows=99098 width=20) (actual time=0.065..112.668 rows=77904 loops=5)
                                                                     ->  Parallel Seq Scan on part  (cost=0.00..47231.18 rows=3304 width=4) (actual time=0.030..66.917 rows=2602 loops=5)
                                                                           Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                           Rows Removed by Filter: 397398
                                                                     ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.13 rows=33 width=24) (actual time=0.005..0.014 rows=30 loops=13011)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                       ->  Index Only Scan using q10_idx_1 on customer  (cost=0.43..2.42 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=59325)
                                             Index Cond: (c_custkey = orders.o_custkey)
                                             Heap Fetches: 0
                                 ->  Memoize  (cost=0.15..1.17 rows=1 width=8) (actual time=0.000..0.000 rows=1 loops=59325)
                                       Cache Key: customer.c_nationkey
                                       Cache Mode: logical
                                       Hits: 59300  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 3kB
                                       ->  Index Scan using nation_pkey on nation n1  (cost=0.14..1.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=25)
                                             Index Cond: (n_nationkey = customer.c_nationkey)
                           ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=59325)
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                     ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.42..2.41 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=11818)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Heap Fetches: 0
               ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=11818)
                     Cache Key: supplier.s_nationkey
                     Cache Mode: logical
                     Hits: 11793  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                     ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=25)
                           Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 6.212 ms
 Execution Time: 1192.326 ms
(58 rows)

query 9 run 1
SET
SET
SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=600828.57..600984.80 rows=1 width=90) (actual time=10423.312..10491.604 rows=1 loops=1)
   ->  GroupAggregate  (cost=600828.57..9997925.54 rows=60150 width=90) (actual time=10423.310..10491.601 rows=1 loops=1)
         Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=600828.57..9933403.95 rows=3635391 width=81) (actual time=9160.031..10465.747 rows=11401 loops=1)
               Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Gather Merge  (cost=600828.14..1036110.37 rows=3635391 width=63) (actual time=9159.086..9244.991 rows=11401 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=599828.08..602100.20 rows=908848 width=63) (actual time=9104.200..9106.025 rows=2765 loops=5)
                           Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
                           Sort Method: external merge  Disk: 53968kB
                           Worker 0:  Sort Method: external merge  Disk: 51328kB
                           Worker 1:  Sort Method: external merge  Disk: 50248kB
                           Worker 2:  Sort Method: external merge  Disk: 51504kB
                           Worker 3:  Sort Method: external merge  Disk: 50216kB
                           ->  Hash Join  (cost=167582.05..485470.85 rows=908848 width=63) (actual time=5296.439..7918.185 rows=649638 loops=5)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=167580.49..482679.12 rows=908848 width=41) (actual time=5296.320..7669.833 rows=649638 loops=5)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..298765.10 rows=3749710 width=8) (actual time=0.669..1079.516 rows=3000000 loops=5)
                                       ->  Parallel Hash  (cost=156219.89..156219.89 rows=908848 width=41) (actual time=5291.641..5291.644 rows=649638 loops=5)
                                             Buckets: 4194304  Batches: 1  Memory Usage: 286688kB
                                             ->  Parallel Hash Join  (cost=3545.53..156219.89 rows=908848 width=41) (actual time=23.145..4947.106 rows=649638 loops=5)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.99..150289.53 rows=908848 width=33) (actual time=1.354..4735.622 rows=649638 loops=5)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.43..45556.89 rows=30304 width=4) (actual time=0.223..166.786 rows=21662 loops=5)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 378338
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.13 rows=33 width=29) (actual time=0.177..0.207 rows=30 loops=108312)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=21.544..21.545 rows=20000 loops=5)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 5024kB
                                                         ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.358..15.793 rows=20000 loops=5)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.053..0.053 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.044..0.047 rows=25 loops=5)
               ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..2.43 rows=1 width=14) (actual time=0.105..0.105 rows=1 loops=11401)
                     Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                     Heap Fetches: 0
 Planning Time: 45.846 ms
 Execution Time: 10498.874 ms
(43 rows)

SET
SET
SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=600828.57..600984.80 rows=1 width=90) (actual time=4506.499..4575.713 rows=1 loops=1)
   ->  GroupAggregate  (cost=600828.57..9997925.54 rows=60150 width=90) (actual time=4506.498..4575.711 rows=1 loops=1)
         Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=600828.57..9933403.95 rows=3635391 width=81) (actual time=4454.003..4565.958 rows=11401 loops=1)
               Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Gather Merge  (cost=600828.14..1036110.37 rows=3635391 width=63) (actual time=4453.952..4529.683 rows=11401 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=599828.08..602100.20 rows=908848 width=63) (actual time=4398.647..4399.923 rows=2746 loops=5)
                           Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
                           Sort Method: external merge  Disk: 49712kB
                           Worker 0:  Sort Method: external merge  Disk: 49632kB
                           Worker 1:  Sort Method: external merge  Disk: 54256kB
                           Worker 2:  Sort Method: external merge  Disk: 51144kB
                           Worker 3:  Sort Method: external merge  Disk: 52520kB
                           ->  Hash Join  (cost=167582.05..485470.85 rows=908848 width=63) (actual time=1120.517..3157.635 rows=649638 loops=5)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=167580.49..482679.12 rows=908848 width=41) (actual time=1120.427..2886.222 rows=649638 loops=5)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..298765.10 rows=3749710 width=8) (actual time=0.055..390.824 rows=3000000 loops=5)
                                       ->  Parallel Hash  (cost=156219.89..156219.89 rows=908848 width=41) (actual time=1115.429..1115.446 rows=649638 loops=5)
                                             Buckets: 4194304  Batches: 1  Memory Usage: 286688kB
                                             ->  Parallel Hash Join  (cost=3545.53..156219.89 rows=908848 width=41) (actual time=11.136..743.401 rows=649638 loops=5)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.99..150289.53 rows=908848 width=33) (actual time=0.097..542.910 rows=649638 loops=5)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.43..45556.89 rows=30304 width=4) (actual time=0.068..161.596 rows=21662 loops=5)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 378338
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.13 rows=33 width=29) (actual time=0.005..0.014 rows=30 loops=108312)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=10.196..10.197 rows=20000 loops=5)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 5024kB
                                                         ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.016..3.630 rows=20000 loops=5)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.021..0.021 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.012..0.015 rows=25 loops=5)
               ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..2.43 rows=1 width=14) (actual time=0.003..0.003 rows=1 loops=11401)
                     Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                     Heap Fetches: 0
 Planning Time: 7.885 ms
 Execution Time: 4583.410 ms
(43 rows)

query 10 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=790071.06..790071.11 rows=20 width=201) (actual time=8101.214..8144.758 rows=20 loops=1)
   ->  Sort  (cost=790071.06..791462.41 rows=556538 width=201) (actual time=8101.213..8144.754 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=694711.46..775261.78 rows=556538 width=201) (actual time=6968.323..8006.791 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather Merge  (cost=694711.46..761348.33 rows=556538 width=181) (actual time=6968.303..7236.158 rows=1145402 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=693711.40..694059.24 rows=139134 width=181) (actual time=6950.302..6976.861 rows=229080 loops=5)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 42352kB
                           Worker 0:  Sort Method: external merge  Disk: 45248kB
                           Worker 1:  Sort Method: external merge  Disk: 36256kB
                           Worker 2:  Sort Method: external merge  Disk: 44704kB
                           Worker 3:  Sort Method: external merge  Disk: 49976kB
                           ->  Hash Join  (cost=638541.15..681825.10 rows=139134 width=181) (actual time=6466.005..6814.210 rows=229080 loops=5)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=638539.59..681396.40 rows=139134 width=159) (actual time=6465.893..6756.000 rows=229080 loops=5)
                                       Hash Cond: (customer.c_custkey = orders.o_custkey)
                                       ->  Parallel Seq Scan on customer  (cost=0.00..39696.70 rows=374970 width=147) (actual time=0.368..139.479 rows=300000 loops=5)
                                       ->  Parallel Hash  (cost=636800.41..636800.41 rows=139134 width=16) (actual time=6464.362..6464.364 rows=229080 loops=5)
                                             Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 85184kB
                                             ->  Nested Loop  (cost=6809.76..636800.41 rows=139134 width=16) (actual time=137.817..6328.124 rows=229080 loops=5)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=6809.20..270211.86 rows=142311 width=8) (actual time=135.029..4239.303 rows=114632 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=46458
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6666.89 rows=569245 width=0) (actual time=86.995..86.995 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..2.57 rows=1 width=16) (actual time=0.017..0.017 rows=2 loops=573160)
                                                         Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.049..0.050 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.041..0.044 rows=25 loops=5)
 Planning Time: 33.402 ms
 Execution Time: 8150.676 ms
(37 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=790071.06..790071.11 rows=20 width=201) (actual time=3229.359..3280.441 rows=20 loops=1)
   ->  Sort  (cost=790071.06..791462.41 rows=556538 width=201) (actual time=3229.357..3280.437 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=694711.46..775261.78 rows=556538 width=201) (actual time=2079.843..3141.168 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather Merge  (cost=694711.46..761348.33 rows=556538 width=181) (actual time=2079.823..2359.925 rows=1145402 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=693711.40..694059.24 rows=139134 width=181) (actual time=2061.334..2089.021 rows=229080 loops=5)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 50528kB
                           Worker 0:  Sort Method: external merge  Disk: 39816kB
                           Worker 1:  Sort Method: external merge  Disk: 49920kB
                           Worker 2:  Sort Method: external merge  Disk: 36568kB
                           Worker 3:  Sort Method: external merge  Disk: 41696kB
                           ->  Hash Join  (cost=638541.15..681825.10 rows=139134 width=181) (actual time=1632.343..1929.484 rows=229080 loops=5)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=638539.59..681396.40 rows=139134 width=159) (actual time=1632.257..1871.995 rows=229080 loops=5)
                                       Hash Cond: (customer.c_custkey = orders.o_custkey)
                                       ->  Parallel Seq Scan on customer  (cost=0.00..39696.70 rows=374970 width=147) (actual time=0.029..65.347 rows=300000 loops=5)
                                       ->  Parallel Hash  (cost=636800.41..636800.41 rows=139134 width=16) (actual time=1630.379..1630.381 rows=229080 loops=5)
                                             Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 85216kB
                                             ->  Nested Loop  (cost=6809.76..636800.41 rows=139134 width=16) (actual time=131.372..1514.851 rows=229080 loops=5)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=6809.20..270211.86 rows=142311 width=8) (actual time=131.295..502.550 rows=114632 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=47928
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6666.89 rows=569245 width=0) (actual time=82.209..82.209 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..2.57 rows=1 width=16) (actual time=0.008..0.008 rows=2 loops=573160)
                                                         Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.019..0.019 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.013 rows=25 loops=5)
 Planning Time: 2.963 ms
 Execution Time: 3287.503 ms
(37 rows)

query 11 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=467695.56..467695.56 rows=1 width=36) (actual time=1952.748..1952.881 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Finalize Aggregate  (cost=207465.02..207465.04 rows=1 width=32) (actual time=466.927..467.007 rows=1 loops=1)
           ->  Gather  (cost=207464.59..207465.00 rows=4 width=32) (actual time=466.839..466.997 rows=4 loops=1)
                 Workers Planned: 4
                 Workers Launched: 3
                 ->  Partial Aggregate  (cost=206464.59..206464.60 rows=1 width=32) (actual time=464.184..464.186 rows=1 loops=4)
                       ->  Hash Join  (cost=2341.31..205864.56 rows=80004 width=10) (actual time=4.704..435.817 rows=80200 loops=4)
                             Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                             ->  Parallel Seq Scan on partsupp partsupp_1  (cost=0.00..195222.88 rows=2000088 width=14) (actual time=0.311..208.746 rows=2000000 loops=4)
                             ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=4.314..4.315 rows=4010 loops=4)
                                   Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                   ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=0.715..3.803 rows=4010 loops=4)
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.016..0.018 rows=1 loops=4)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                                         ->  Bitmap Heap Scan on supplier supplier_1  (cost=39.29..2250.00 rows=4000 width=8) (actual time=0.696..3.347 rows=4010 loops=4)
                                               Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                               Heap Blocks: exact=1869
                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.472..0.472 rows=4010 loops=4)
                                                     Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=260230.52..260497.20 rows=106671 width=36) (actual time=1952.747..1952.799 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=213380.06..259697.17 rows=106671 width=36) (actual time=1952.739..1952.792 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 301833
               ->  Gather Merge  (cost=213380.06..251696.82 rows=320014 width=14) (actual time=1232.701..1278.939 rows=320800 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=212380.00..212580.01 rows=80004 width=14) (actual time=1224.337..1227.237 rows=64160 loops=5)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: quicksort  Memory: 4940kB
                           Worker 0:  Sort Method: quicksort  Memory: 6842kB
                           Worker 1:  Sort Method: quicksort  Memory: 4996kB
                           Worker 2:  Sort Method: quicksort  Memory: 5046kB
                           Worker 3:  Sort Method: quicksort  Memory: 4939kB
                           ->  Hash Join  (cost=2341.31..205864.56 rows=80004 width=14) (actual time=36.160..1213.334 rows=64160 loops=5)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Parallel Seq Scan on partsupp  (cost=0.00..195222.88 rows=2000088 width=18) (actual time=0.541..964.418 rows=1600000 loops=5)
                                 ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=35.507..35.508 rows=4010 loops=5)
                                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                       ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=1.264..34.409 rows=4010 loops=5)
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.211..0.214 rows=1 loops=5)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 24
                                             ->  Bitmap Heap Scan on supplier  (cost=39.29..2250.00 rows=4000 width=8) (actual time=1.048..33.483 rows=4010 loops=5)
                                                   Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                   Heap Blocks: exact=1869
                                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.677..0.677 rows=4010 loops=5)
                                                         Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 18.528 ms
 Execution Time: 1953.387 ms
(54 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=467695.56..467695.56 rows=1 width=36) (actual time=1170.754..1170.891 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Finalize Aggregate  (cost=207465.02..207465.04 rows=1 width=32) (actual time=463.913..463.997 rows=1 loops=1)
           ->  Gather  (cost=207464.59..207465.00 rows=4 width=32) (actual time=463.784..463.986 rows=4 loops=1)
                 Workers Planned: 4
                 Workers Launched: 3
                 ->  Partial Aggregate  (cost=206464.59..206464.60 rows=1 width=32) (actual time=461.075..461.077 rows=1 loops=4)
                       ->  Hash Join  (cost=2341.31..205864.56 rows=80004 width=10) (actual time=4.721..432.652 rows=80200 loops=4)
                             Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                             ->  Parallel Seq Scan on partsupp partsupp_1  (cost=0.00..195222.88 rows=2000088 width=14) (actual time=0.032..208.183 rows=2000000 loops=4)
                             ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=4.625..4.626 rows=4010 loops=4)
                                   Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                   ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=0.836..4.111 rows=4010 loops=4)
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.015 rows=1 loops=4)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                                         ->  Bitmap Heap Scan on supplier supplier_1  (cost=39.29..2250.00 rows=4000 width=8) (actual time=0.821..3.659 rows=4010 loops=4)
                                               Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                               Heap Blocks: exact=1869
                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.598..0.598 rows=4010 loops=4)
                                                     Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=260230.52..260497.20 rows=106671 width=36) (actual time=1170.753..1170.806 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=213380.06..259697.17 rows=106671 width=36) (actual time=1170.746..1170.799 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 301833
               ->  Gather Merge  (cost=213380.06..251696.82 rows=320014 width=14) (actual time=453.371..499.779 rows=320800 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=212380.00..212580.01 rows=80004 width=14) (actual time=449.044..451.975 rows=64160 loops=5)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: quicksort  Memory: 5019kB
                           Worker 0:  Sort Method: quicksort  Memory: 7035kB
                           Worker 1:  Sort Method: quicksort  Memory: 6669kB
                           Worker 2:  Sort Method: quicksort  Memory: 4886kB
                           Worker 3:  Sort Method: quicksort  Memory: 4690kB
                           ->  Hash Join  (cost=2341.31..205864.56 rows=80004 width=14) (actual time=6.964..434.865 rows=64160 loops=5)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Parallel Seq Scan on partsupp  (cost=0.00..195222.88 rows=2000088 width=18) (actual time=0.030..205.404 rows=1600000 loops=5)
                                 ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=6.852..6.854 rows=4010 loops=5)
                                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                       ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=0.709..6.331 rows=4010 loops=5)
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.016 rows=1 loops=5)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 24
                                             ->  Bitmap Heap Scan on supplier  (cost=39.29..2250.00 rows=4000 width=8) (actual time=0.692..5.874 rows=4010 loops=5)
                                                   Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                   Heap Blocks: exact=1869
                                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.468..0.468 rows=4010 loops=5)
                                                         Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 1.480 ms
 Execution Time: 1170.977 ms
(54 rows)

query 12 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=142577.71..329142.79 rows=1 width=27) (actual time=10301.029..10304.961 rows=1 loops=1)
   ->  GroupAggregate  (cost=142577.71..1448533.21 rows=7 width=27) (actual time=10301.028..10304.959 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=142577.71..1443503.52 rows=287407 width=27) (actual time=634.237..10196.065 rows=155572 loops=1)
               ->  Gather Merge  (cost=142577.28..176989.85 rows=287407 width=15) (actual time=633.498..727.244 rows=155572 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=141577.22..141756.85 rows=71852 width=15) (actual time=623.976..627.302 rows=32170 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 5054kB
                           Worker 0:  Sort Method: quicksort  Memory: 4953kB
                           Worker 1:  Sort Method: quicksort  Memory: 4855kB
                           Worker 2:  Sort Method: quicksort  Memory: 4865kB
                           Worker 3:  Sort Method: quicksort  Memory: 4977kB
                           ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.43..135781.37 rows=71852 width=15) (actual time=0.115..610.687 rows=62252 loops=5)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 155618
                                 Heap Fetches: 0
               ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=20) (actual time=0.060..0.060 rows=1 loops=155572)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 25.112 ms
 Execution Time: 10305.330 ms
(23 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=142577.71..329142.79 rows=1 width=27) (actual time=718.750..724.387 rows=1 loops=1)
   ->  GroupAggregate  (cost=142577.71..1448533.21 rows=7 width=27) (actual time=718.749..724.385 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=142577.71..1443503.52 rows=287407 width=27) (actual time=223.547..677.985 rows=155572 loops=1)
               ->  Gather Merge  (cost=142577.28..176989.85 rows=287407 width=15) (actual time=223.495..268.308 rows=155572 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=141577.22..141756.85 rows=71852 width=15) (actual time=217.953..220.119 rows=32214 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 7067kB
                           Worker 0:  Sort Method: quicksort  Memory: 6734kB
                           Worker 1:  Sort Method: quicksort  Memory: 4244kB
                           Worker 2:  Sort Method: quicksort  Memory: 6886kB
                           Worker 3:  Sort Method: quicksort  Memory: 4381kB
                           ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.43..135781.37 rows=71852 width=15) (actual time=0.620..206.014 rows=62252 loops=5)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 155618
                                 Heap Fetches: 0
               ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=155572)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 1.701 ms
 Execution Time: 724.458 ms
(23 rows)

query 13 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1412668.60..1412668.60 rows=1 width=16) (actual time=17189.427..17189.430 rows=1 loops=1)
   ->  Sort  (cost=1412668.60..1412669.10 rows=200 width=16) (actual time=17189.425..17189.428 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1412665.60..1412667.60 rows=200 width=16) (actual time=17189.398..17189.406 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1260357.43..1390167.41 rows=1499879 width=12) (actual time=14921.283..17021.305 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 216328kB
                     ->  Hash Right Join  (cost=55338.10..663339.26 rows=14695832 width=8) (actual time=367.187..10983.795 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448753.49 rows=14695832 width=8) (actual time=0.574..5126.069 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=30730.61..30730.61 rows=1499879 width=4) (actual time=363.992..363.993 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 2  Memory Usage: 42747kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30730.61 rows=1499879 width=4) (actual time=0.325..161.085 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 15.796 ms
 Execution Time: 17223.033 ms
(21 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1412668.60..1412668.60 rows=1 width=16) (actual time=16539.373..16539.376 rows=1 loops=1)
   ->  Sort  (cost=1412668.60..1412669.10 rows=200 width=16) (actual time=16539.372..16539.374 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1412665.60..1412667.60 rows=200 width=16) (actual time=16539.338..16539.352 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1260357.43..1390167.41 rows=1499879 width=12) (actual time=14274.357..16366.850 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 216328kB
                     ->  Hash Right Join  (cost=55338.10..663339.26 rows=14695832 width=8) (actual time=330.088..10389.808 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448753.49 rows=14695832 width=8) (actual time=0.033..4676.757 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=30730.61..30730.61 rows=1499879 width=4) (actual time=327.533..327.533 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 2  Memory Usage: 42747kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30730.61 rows=1499879 width=4) (actual time=0.026..128.687 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.870 ms
 Execution Time: 16573.086 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=914111.16..914111.18 rows=1 width=32) (actual time=5404.665..5459.136 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=914111.16..914111.18 rows=1 width=32) (actual time=5404.663..5459.133 rows=1 loops=1)
         ->  Gather  (cost=914110.71..914111.12 rows=4 width=64) (actual time=5398.570..5459.110 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=913110.71..913110.72 rows=1 width=64) (actual time=5391.218..5391.221 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=65566.43..909863.16 rows=185574 width=33) (actual time=693.184..5235.538 rows=154588 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=13335.11..857144.71 rows=185574 width=16) (actual time=289.809..4666.738 rows=154588 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=84782
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..13149.54 rows=742297 width=0) (actual time=190.758..190.758 rows=772942 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=45981.14..45981.14 rows=500014 width=25) (actual time=401.118..401.118 rows=400000 loops=5)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 137280kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..45981.14 rows=500014 width=25) (actual time=0.440..266.331 rows=400000 loops=5)
 Planning Time: 26.100 ms
 Execution Time: 5459.473 ms
(18 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=914111.16..914111.18 rows=1 width=32) (actual time=1698.484..1741.562 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=914111.16..914111.18 rows=1 width=32) (actual time=1698.483..1741.560 rows=1 loops=1)
         ->  Gather  (cost=914110.71..914111.12 rows=4 width=64) (actual time=1693.780..1741.535 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=913110.71..913110.72 rows=1 width=64) (actual time=1688.632..1688.634 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=65566.43..909863.16 rows=185574 width=33) (actual time=548.335..1584.201 rows=154588 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=13335.11..857144.71 rows=185574 width=16) (actual time=270.666..1174.438 rows=154588 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=85203
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..13149.54 rows=742297 width=0) (actual time=172.193..172.193 rows=772942 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=45981.14..45981.14 rows=500014 width=25) (actual time=275.529..275.529 rows=400000 loops=5)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 137344kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..45981.14 rows=500014 width=25) (actual time=0.040..130.462 rows=400000 loops=5)
 Planning Time: 1.995 ms
 Execution Time: 1741.617 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2750338.94..2750446.88 rows=1 width=103) (actual time=13410.782..13471.432 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=1393544.36..1393544.37 rows=1 width=32) (actual time=2949.810..2959.666 rows=1 loops=1)
           ->  Finalize HashAggregate  (cost=1391074.86..1392309.61 rows=98780 width=36) (actual time=2909.883..2953.708 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 68625kB
                 ->  Gather  (cost=1347364.71..1388111.46 rows=395120 width=36) (actual time=2565.086..2648.979 rows=398562 loops=1)
                       Workers Planned: 4
                       Workers Launched: 3
                       ->  Partial HashAggregate  (cost=1346364.71..1347599.46 rows=98780 width=36) (actual time=2560.354..2608.042 rows=99640 loops=4)
                             Group Key: lineitem_1.l_suppkey
                             Batches: 1  Memory Usage: 44049kB
                             Worker 0:  Batches: 1  Memory Usage: 47121kB
                             Worker 1:  Batches: 1  Memory Usage: 44049kB
                             Worker 2:  Batches: 1  Memory Usage: 44049kB
                             ->  Parallel Bitmap Heap Scan on lineitem lineitem_1  (cost=40991.65..1340659.57 rows=570514 width=16) (actual time=437.745..2053.311 rows=566428 loops=4)
                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                   Rows Removed by Index Recheck: 3305913
                                   Heap Blocks: exact=109059 lossy=72519
                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40421.14 rows=2282057 width=0) (actual time=348.478..348.479 rows=2265714 loops=1)
                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=1356794.57..1410119.00 rows=494 width=103) (actual time=13410.780..13461.574 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=1356794.27..1408548.92 rows=494 width=36) (actual time=13410.214..13461.006 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $1)
               Rows Removed by Filter: 69997
               ->  Gather Merge  (cost=1356794.27..1404103.82 rows=395120 width=36) (actual time=10253.636..10368.522 rows=346216 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1355794.22..1356041.17 rows=98780 width=36) (actual time=10223.176..10231.306 rows=69700 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 13892kB
                           Worker 0:  Sort Method: quicksort  Memory: 13887kB
                           Worker 1:  Sort Method: quicksort  Memory: 13883kB
                           Worker 2:  Sort Method: quicksort  Memory: 13902kB
                           Worker 3:  Sort Method: quicksort  Memory: 13889kB
                           ->  Partial HashAggregate  (cost=1346364.71..1347599.46 rows=98780 width=36) (actual time=10135.646..10197.483 rows=98911 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 44049kB
                                 Worker 0:  Batches: 1  Memory Usage: 47121kB
                                 Worker 1:  Batches: 1  Memory Usage: 44049kB
                                 Worker 2:  Batches: 1  Memory Usage: 44049kB
                                 Worker 3:  Batches: 1  Memory Usage: 44049kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=40991.65..1340659.57 rows=570514 width=16) (actual time=491.603..9591.308 rows=453143 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Rows Removed by Index Recheck: 2644730
                                       Heap Blocks: exact=80911 lossy=54277
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40421.14 rows=2282057 width=0) (actual time=405.471..405.471 rows=2265714 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.17 rows=1 width=71) (actual time=0.560..0.560 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 23.046 ms
 Execution Time: 13474.174 ms
(53 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2750338.94..2750446.88 rows=1 width=103) (actual time=6009.197..6067.713 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=1393544.36..1393544.37 rows=1 width=32) (actual time=2952.912..2962.808 rows=1 loops=1)
           ->  Finalize HashAggregate  (cost=1391074.86..1392309.61 rows=98780 width=36) (actual time=2913.127..2956.829 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 68625kB
                 ->  Gather  (cost=1347364.71..1388111.46 rows=395120 width=36) (actual time=2566.591..2652.000 rows=398686 loops=1)
                       Workers Planned: 4
                       Workers Launched: 3
                       ->  Partial HashAggregate  (cost=1346364.71..1347599.46 rows=98780 width=36) (actual time=2562.162..2610.389 rows=99672 loops=4)
                             Group Key: lineitem_1.l_suppkey
                             Batches: 1  Memory Usage: 44049kB
                             Worker 0:  Batches: 1  Memory Usage: 47121kB
                             Worker 1:  Batches: 1  Memory Usage: 44049kB
                             Worker 2:  Batches: 1  Memory Usage: 44049kB
                             ->  Parallel Bitmap Heap Scan on lineitem lineitem_1  (cost=40991.65..1340659.57 rows=570514 width=16) (actual time=439.136..2054.294 rows=566428 loops=4)
                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                   Rows Removed by Index Recheck: 3305913
                                   Heap Blocks: exact=109229 lossy=72956
                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40421.14 rows=2282057 width=0) (actual time=349.353..349.354 rows=2265714 loops=1)
                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=1356794.57..1410119.00 rows=494 width=103) (actual time=6009.195..6057.814 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=1356794.27..1408548.92 rows=494 width=36) (actual time=6009.137..6057.755 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $1)
               Rows Removed by Filter: 69997
               ->  Gather Merge  (cost=1356794.27..1404103.82 rows=395120 width=36) (actual time=2848.462..2962.231 rows=346088 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1355794.22..1356041.17 rows=98780 width=36) (actual time=2819.691..2827.471 rows=69700 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 13919kB
                           Worker 0:  Sort Method: quicksort  Memory: 13861kB
                           Worker 1:  Sort Method: quicksort  Memory: 13949kB
                           Worker 2:  Sort Method: quicksort  Memory: 13860kB
                           Worker 3:  Sort Method: quicksort  Memory: 13849kB
                           ->  Partial HashAggregate  (cost=1346364.71..1347599.46 rows=98780 width=36) (actual time=2731.208..2795.165 rows=98881 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 44049kB
                                 Worker 0:  Batches: 1  Memory Usage: 44049kB
                                 Worker 1:  Batches: 1  Memory Usage: 44049kB
                                 Worker 2:  Batches: 1  Memory Usage: 44049kB
                                 Worker 3:  Batches: 1  Memory Usage: 44049kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=40991.65..1340659.57 rows=570514 width=16) (actual time=454.299..2271.139 rows=453143 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Rows Removed by Index Recheck: 2644730
                                       Heap Blocks: exact=84926 lossy=56529
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40421.14 rows=2282057 width=0) (actual time=366.554..366.555 rows=2265714 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.17 rows=1 width=71) (actual time=0.054..0.054 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 2.081 ms
 Execution Time: 6069.851 ms
(53 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=262618.18..262618.18 rows=1 width=44) (actual time=2488.339..2496.596 rows=1 loops=1)
   ->  Sort  (cost=262618.18..263002.73 rows=153821 width=44) (actual time=2488.338..2496.594 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=183156.76..261849.07 rows=153821 width=44) (actual time=1875.951..2488.995 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=183156.76..254363.79 rows=594707 width=40) (actual time=1875.902..2216.252 rows=1186319 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=182156.71..182528.40 rows=148677 width=40) (actual time=1816.731..1836.483 rows=237264 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 24140kB
                           Worker 0:  Sort Method: quicksort  Memory: 26014kB
                           Worker 1:  Sort Method: quicksort  Memory: 26051kB
                           Worker 2:  Sort Method: quicksort  Memory: 26694kB
                           Worker 3:  Sort Method: quicksort  Memory: 25620kB
                           ->  Parallel Hash Join  (cost=57882.03..169384.00 rows=148677 width=40) (actual time=350.870..1092.545 rows=237264 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..112348.30 rows=1000044 width=8) (actual time=46.102..590.130 rows=1599104 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 896
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.725..45.387 rows=56 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 99944
                                 ->  Parallel Hash  (cost=53481.36..53481.36 rows=74337 width=40) (actual time=304.072..304.073 rows=59347 loops=5)
                                       Buckets: 524288  Batches: 1  Memory Usage: 26368kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..53481.36 rows=74337 width=40) (actual time=0.118..278.887 rows=59347 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 340653
 Planning Time: 20.806 ms
 Execution Time: 2496.900 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=262618.18..262618.18 rows=1 width=44) (actual time=2199.467..2202.997 rows=1 loops=1)
   ->  Sort  (cost=262618.18..263002.73 rows=153821 width=44) (actual time=2199.466..2202.995 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=183156.76..261849.07 rows=153821 width=44) (actual time=1582.484..2195.443 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=183156.76..254363.79 rows=594707 width=40) (actual time=1582.435..1923.287 rows=1186319 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=182156.71..182528.40 rows=148677 width=40) (actual time=1529.440..1549.370 rows=237264 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 26312kB
                           Worker 0:  Sort Method: quicksort  Memory: 25464kB
                           Worker 1:  Sort Method: quicksort  Memory: 28867kB
                           Worker 2:  Sort Method: quicksort  Memory: 22718kB
                           Worker 3:  Sort Method: quicksort  Memory: 26268kB
                           ->  Parallel Hash Join  (cost=57882.03..169384.00 rows=148677 width=40) (actual time=186.443..803.456 rows=237264 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..112348.30 rows=1000044 width=8) (actual time=25.981..446.765 rows=1599104 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 896
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.084..25.840 rows=56 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 99944
                                 ->  Parallel Hash  (cost=53481.36..53481.36 rows=74337 width=40) (actual time=159.779..159.779 rows=59347 loops=5)
                                       Buckets: 524288  Batches: 1  Memory Usage: 26368kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..53481.36 rows=74337 width=40) (actual time=0.020..133.055 rows=59347 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 340653
 Planning Time: 1.117 ms
 Execution Time: 2203.074 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1762147.58..1762147.59 rows=1 width=32) (actual time=29737.627..29737.728 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1762147.58..1762147.59 rows=1 width=32) (actual time=29737.625..29737.726 rows=1 loops=1)
         ->  Gather  (cost=1762147.15..1762147.56 rows=4 width=32) (actual time=29737.604..29737.709 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1761147.15..1761147.16 rows=1 width=32) (actual time=29669.769..29669.770 rows=1 loops=5)
                     ->  Nested Loop  (cost=48505.64..1761135.53 rows=4644 width=8) (actual time=808.407..29669.318 rows=1064 loops=5)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=48505.08..1759687.35 rows=464 width=40) (actual time=804.772..28487.581 rows=399 loops=5)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=48504.51..48505.81 rows=517 width=4) (actual time=282.562..282.806 rows=399 loops=5)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 25kB
                                       Worker 0:  Sort Method: quicksort  Memory: 25kB
                                       Worker 1:  Sort Method: quicksort  Memory: 25kB
                                       Worker 2:  Sort Method: quicksort  Memory: 25kB
                                       Worker 3:  Sort Method: quicksort  Memory: 25kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..48481.21 rows=517 width=4) (actual time=0.740..282.420 rows=399 loops=5)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 399601
                                 ->  GroupAggregate  (cost=0.56..1688710.91 rows=1797175 width=36) (actual time=1.903..28047.861 rows=1997619 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361834.60 rows=59983736 width=9) (actual time=0.988..18206.958 rows=59914480 loops=5)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.98 rows=11 width=17) (actual time=2.844..2.957 rows=3 loops=1996)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 31.459 ms
 Execution Time: 29738.079 ms
(29 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1762147.58..1762147.59 rows=1 width=32) (actual time=29042.846..29042.945 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1762147.58..1762147.59 rows=1 width=32) (actual time=29042.845..29042.943 rows=1 loops=1)
         ->  Gather  (cost=1762147.15..1762147.56 rows=4 width=32) (actual time=29042.834..29042.936 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1761147.15..1761147.16 rows=1 width=32) (actual time=28600.622..28600.623 rows=1 loops=5)
                     ->  Nested Loop  (cost=48505.64..1761135.53 rows=4644 width=8) (actual time=603.666..28600.308 rows=1064 loops=5)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=48505.08..1759687.35 rows=464 width=40) (actual time=603.609..28584.297 rows=399 loops=5)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=48504.51..48505.81 rows=517 width=4) (actual time=139.322..139.483 rows=399 loops=5)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 25kB
                                       Worker 0:  Sort Method: quicksort  Memory: 25kB
                                       Worker 1:  Sort Method: quicksort  Memory: 25kB
                                       Worker 2:  Sort Method: quicksort  Memory: 25kB
                                       Worker 3:  Sort Method: quicksort  Memory: 25kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..48481.21 rows=517 width=4) (actual time=0.317..139.259 rows=399 loops=5)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 399601
                                 ->  GroupAggregate  (cost=0.56..1688710.91 rows=1797175 width=36) (actual time=0.082..28274.681 rows=1987278 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361834.60 rows=59983736 width=9) (actual time=0.047..18120.269 rows=59604452 loops=5)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.98 rows=11 width=17) (actual time=0.036..0.038 rows=3 loops=1996)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 2.580 ms
 Execution Time: 29043.012 ms
(29 rows)

query 18 run 1
SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=7359493.88..7359494.13 rows=100 width=71) (actual time=30693.045..30693.058 rows=99 loops=1)
   ->  Sort  (cost=7359493.88..7409470.64 rows=19990707 width=71) (actual time=30693.043..30693.050 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=5994180.45..6595463.43 rows=19990707 width=71) (actual time=30692.176..30692.950 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 128  Batches: 1  Memory Usage: 6225kB
               ->  Hash Join  (cost=78557.49..4741637.71 rows=19990707 width=44) (actual time=2286.372..30691.756 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=74.21..4328577.68 rows=19990707 width=25) (actual time=671.549..29925.300 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..2604902.93 rows=4998645 width=24) (actual time=509.138..22202.193 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..568514.02 rows=14998839 width=20) (actual time=1.554..3277.856 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..1886422.30 rows=4998645 width=4) (actual time=398.249..18020.217 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361564.60 rows=59983736 width=9) (actual time=0.530..6636.748 rows=59986052 loops=1)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361564.60 rows=59983736 width=9) (actual time=0.015..5237.656 rows=59916431 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=50945.79..50945.79 rows=1499879 width=23) (actual time=686.068..686.068 rows=1500000 loops=1)
                           Buckets: 1048576  Batches: 2  Memory Usage: 49242kB
                           ->  Seq Scan on customer  (cost=0.00..50945.79 rows=1499879 width=23) (actual time=0.741..415.482 rows=1500000 loops=1)
 Planning Time: 30.625 ms
 Execution Time: 30694.896 ms
(27 rows)

SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=7359493.88..7359494.13 rows=100 width=71) (actual time=29206.742..29206.755 rows=99 loops=1)
   ->  Sort  (cost=7359493.88..7409470.64 rows=19990707 width=71) (actual time=29206.740..29206.747 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=5994180.45..6595463.43 rows=19990707 width=71) (actual time=29205.873..29206.644 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 128  Batches: 1  Memory Usage: 6225kB
               ->  Hash Join  (cost=78557.49..4741637.71 rows=19990707 width=44) (actual time=2040.338..29205.473 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=74.21..4328577.68 rows=19990707 width=25) (actual time=619.258..28573.969 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..2604902.93 rows=4998645 width=24) (actual time=456.357..20842.620 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..568514.02 rows=14998839 width=20) (actual time=0.049..2517.022 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..1886422.30 rows=4998645 width=4) (actual time=376.757..17447.323 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361564.60 rows=59983736 width=9) (actual time=0.035..6164.399 rows=59986052 loops=1)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361564.60 rows=59983736 width=9) (actual time=0.014..5225.496 rows=59916431 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=50945.79..50945.79 rows=1499879 width=23) (actual time=551.482..551.482 rows=1500000 loops=1)
                           Buckets: 1048576  Batches: 2  Memory Usage: 49242kB
                           ->  Seq Scan on customer  (cost=0.00..50945.79 rows=1499879 width=23) (actual time=0.031..288.235 rows=1500000 loops=1)
 Planning Time: 2.744 ms
 Execution Time: 29207.992 ms
(27 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=67553.10..67553.11 rows=1 width=32) (actual time=853.523..854.256 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=67553.10..67553.11 rows=1 width=32) (actual time=853.521..854.254 rows=1 loops=1)
         ->  Gather  (cost=67552.67..67553.08 rows=4 width=32) (actual time=849.302..854.226 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=66552.67..66552.68 rows=1 width=32) (actual time=839.223..839.224 rows=1 loops=5)
                     ->  Nested Loop  (cost=0.56..66550.48 rows=292 width=12) (actual time=9.666..838.821 rows=213 loops=5)
                           ->  Parallel Seq Scan on part  (cost=0.00..62231.61 rows=1242 width=30) (actual time=0.604..206.440 rows=956 loops=5)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 399044
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.47 rows=1 width=21) (actual time=0.636..0.660 rows=0 loops=4781)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning Time: 26.818 ms
 Execution Time: 854.967 ms
(17 rows)

SET
SET
SET


 Limit  (cost=67553.10..67553.11 rows=1 width=32) (actual time=159.320..161.835 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=67553.10..67553.11 rows=1 width=32) (actual time=159.319..161.833 rows=1 loops=1)
         ->  Gather  (cost=67552.67..67553.08 rows=4 width=32) (actual time=154.842..161.816 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=66552.67..66552.68 rows=1 width=32) (actual time=151.256..151.257 rows=1 loops=5)
                     ->  Nested Loop  (cost=0.56..66550.48 rows=292 width=12) (actual time=0.716..151.061 rows=213 loops=5)
                           ->  Parallel Seq Scan on part  (cost=0.00..62231.61 rows=1242 width=30) (actual time=0.113..135.998 rows=956 loops=5)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 399044
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.47 rows=1 width=21) (actual time=0.013..0.015 rows=0 loops=4781)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning Time: 2.985 ms
 Execution Time: 161.886 ms
(17 rows)

query 20 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2520282.28..2764647.32 rows=1 width=51) (actual time=16894.000..16895.305 rows=1 loops=1)
   ->  Nested Loop Semi Join  (cost=2520282.28..2764647.32 rows=1 width=51) (actual time=16893.999..16895.303 rows=1 loops=1)
         Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
         Rows Removed by Join Filter: 13802
         ->  Gather Merge  (cost=4122.93..4578.81 rows=4000 width=55) (actual time=27.331..28.571 rows=1 loops=1)
               Workers Planned: 1
               Workers Launched: 1
               ->  Sort  (cost=3122.92..3128.80 rows=2353 width=55) (actual time=20.238..20.255 rows=392 loops=2)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 351kB
                     Worker 0:  Sort Method: quicksort  Memory: 192kB
                     ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=55) (actual time=0.320..18.933 rows=2048 loops=2)
                           Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                           ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=59) (actual time=0.168..13.872 rows=50000 loops=2)
                           ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.098..0.098 rows=1 loops=2)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.092..0.094 rows=1 loops=2)
                                       Filter: (n_name = 'IRAQ'::bpchar)
                                       Rows Removed by Filter: 24
         ->  Materialize  (cost=2516159.35..2759888.51 rows=3 width=8) (actual time=15122.998..16865.546 rows=13803 loops=1)
               ->  Hash Join  (cost=2516159.35..2759888.50 rows=3 width=8) (actual time=15122.995..16861.487 rows=13803 loops=1)
                     Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                     Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                     Rows Removed by Join Filter: 27
                     ->  HashAggregate  (cost=2446151.69..2605740.92 rows=4807988 width=40) (actual time=14583.885..16109.237 rows=1277698 loops=1)
                           Group Key: lineitem.l_partkey, lineitem.l_suppkey
                           Planned Partitions: 32  Batches: 61  Memory Usage: 65809kB  Disk Usage: 358200kB
                           ->  Seq Scan on lineitem  (cost=0.00..2024899.04 rows=8956867 width=13) (actual time=0.450..10559.597 rows=9123688 loops=1)
                                 Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 Rows Removed by Filter: 50862364
                     ->  Hash  (cost=68795.46..68795.46 rows=80813 width=16) (actual time=538.790..538.853 rows=86872 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 5097kB
                           ->  Gather  (cost=1000.86..68795.46 rows=80813 width=16) (actual time=0.311..520.734 rows=86872 loops=1)
                                 Workers Planned: 4
                                 Workers Launched: 4
                                 ->  Nested Loop  (cost=0.86..59714.16 rows=20203 width=16) (actual time=0.158..526.730 rows=17374 loops=5)
                                       ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.43..45556.89 rows=5051 width=4) (actual time=0.115..204.870 rows=4344 loops=5)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 395656
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.62 rows=18 width=12) (actual time=0.072..0.073 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 35.685 ms
 Execution Time: 16943.766 ms
(45 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2520282.28..2764647.32 rows=1 width=51) (actual time=14164.249..14165.555 rows=1 loops=1)
   ->  Nested Loop Semi Join  (cost=2520282.28..2764647.32 rows=1 width=51) (actual time=14164.247..14165.553 rows=1 loops=1)
         Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
         Rows Removed by Join Filter: 13802
         ->  Gather Merge  (cost=4122.93..4578.81 rows=4000 width=55) (actual time=13.024..14.273 rows=1 loops=1)
               Workers Planned: 1
               Workers Launched: 1
               ->  Sort  (cost=3122.92..3128.80 rows=2353 width=55) (actual time=11.236..11.253 rows=392 loops=2)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 324kB
                     Worker 0:  Sort Method: quicksort  Memory: 219kB
                     ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=55) (actual time=0.076..10.048 rows=2048 loops=2)
                           Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                           ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=59) (actual time=0.012..3.348 rows=50000 loops=2)
                           ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=2)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=2)
                                       Filter: (n_name = 'IRAQ'::bpchar)
                                       Rows Removed by Filter: 24
         ->  Materialize  (cost=2516159.35..2759888.51 rows=3 width=8) (actual time=12389.665..14150.105 rows=13803 loops=1)
               ->  Hash Join  (cost=2516159.35..2759888.50 rows=3 width=8) (actual time=12389.661..14146.889 rows=13803 loops=1)
                     Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                     Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                     Rows Removed by Join Filter: 27
                     ->  HashAggregate  (cost=2446151.69..2605740.92 rows=4807988 width=40) (actual time=12278.548..13824.798 rows=1277698 loops=1)
                           Group Key: lineitem.l_partkey, lineitem.l_suppkey
                           Planned Partitions: 32  Batches: 61  Memory Usage: 65809kB  Disk Usage: 358200kB
                           ->  Seq Scan on lineitem  (cost=0.00..2024899.04 rows=8956867 width=13) (actual time=0.044..8446.579 rows=9123688 loops=1)
                                 Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 Rows Removed by Filter: 50862364
                     ->  Hash  (cost=68795.46..68795.46 rows=80813 width=16) (actual time=110.810..110.866 rows=86872 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 5097kB
                           ->  Gather  (cost=1000.86..68795.46 rows=80813 width=16) (actual time=0.331..95.168 rows=86872 loops=1)
                                 Workers Planned: 4
                                 Workers Launched: 4
                                 ->  Nested Loop  (cost=0.86..59714.16 rows=20203 width=16) (actual time=0.074..96.175 rows=17374 loops=5)
                                       ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.43..45556.89 rows=5051 width=4) (actual time=0.049..77.845 rows=4344 loops=5)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 395656
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.62 rows=18 width=12) (actual time=0.003..0.004 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 2.738 ms
 Execution Time: 14213.363 ms
(45 rows)

query 21 run 1
SET
SET
SET
                                                                                                  QUERY PLAN                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=649419.37..649419.37 rows=1 width=34) (actual time=17996.823..18222.983 rows=100 loops=1)
   ->  Sort  (cost=649419.37..649419.37 rows=1 width=34) (actual time=17996.821..18222.974 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=649419.34..649419.36 rows=1 width=34) (actual time=17989.472..18221.749 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=649419.34..649419.34 rows=1 width=26) (actual time=17989.463..18217.174 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4298kB
                     ->  Nested Loop Semi Join  (cost=345687.10..649419.33 rows=1 width=26) (actual time=5003.072..18032.208 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 27756
                           ->  Nested Loop  (cost=345686.53..649416.68 rows=1 width=38) (actual time=5002.748..8799.514 rows=65960 loops=1)
                                 ->  Gather  (cost=345686.10..649414.23 rows=1 width=34) (actual time=5002.524..5268.287 rows=134155 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Parallel Hash Anti Join  (cost=344686.10..648414.13 rows=1 width=34) (actual time=4964.503..5618.259 rows=26831 loops=5)
                                             Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                             Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                             Rows Removed by Join Filter: 109326
                                             ->  Parallel Hash Join  (cost=3021.13..282597.57 rows=199946 width=34) (actual time=26.710..1778.278 rows=302853 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..259655.91 rows=4998645 width=8) (actual time=0.038..1026.512 rows=7585870 loops=5)
                                                         Heap Fetches: 0
                                                   ->  Parallel Hash  (cost=2991.15..2991.15 rows=2353 width=30) (actual time=26.549..26.551 rows=798 loops=5)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 352kB
                                                         ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=30) (actual time=0.771..26.179 rows=798 loops=5)
                                                               Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=34) (actual time=0.511..23.647 rows=20000 loops=5)
                                                               ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.237..0.238 rows=1 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.233..0.234 rows=1 loops=5)
                                                                           Filter: (n_name = 'PERU'::bpchar)
                                                                           Rows Removed by Filter: 24
                                             ->  Parallel Hash  (cost=259655.91..259655.91 rows=4998645 width=8) (actual time=2959.275..2959.276 rows=7585870 loops=5)
                                                   Buckets: 2097152  Batches: 32  Memory Usage: 62880kB
                                                   ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..259655.91 rows=4998645 width=8) (actual time=0.983..1805.972 rows=7585870 loops=5)
                                                         Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.45 rows=1 width=4) (actual time=0.025..0.025 rows=0 loops=134155)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.139..0.139 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 29.799 ms
 Execution Time: 18223.348 ms
(46 rows)

SET
SET
SET
                                                                                                  QUERY PLAN                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=649419.37..649419.37 rows=1 width=34) (actual time=5951.929..6166.076 rows=100 loops=1)
   ->  Sort  (cost=649419.37..649419.37 rows=1 width=34) (actual time=5951.927..6166.067 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=649419.34..649419.36 rows=1 width=34) (actual time=5944.570..6164.855 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=649419.34..649419.34 rows=1 width=26) (actual time=5944.558..6160.268 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4298kB
                     ->  Nested Loop Semi Join  (cost=345687.10..649419.33 rows=1 width=26) (actual time=4377.558..5997.889 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 27756
                           ->  Nested Loop  (cost=345686.53..649416.68 rows=1 width=38) (actual time=4377.544..5746.016 rows=65960 loops=1)
                                 ->  Gather  (cost=345686.10..649414.23 rows=1 width=34) (actual time=4377.481..5309.014 rows=134155 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Parallel Hash Anti Join  (cost=344686.10..648414.13 rows=1 width=34) (actual time=4336.786..5185.910 rows=26831 loops=5)
                                             Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                             Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                             Rows Removed by Join Filter: 109327
                                             ->  Parallel Hash Join  (cost=3021.13..282597.57 rows=199946 width=34) (actual time=6.324..1732.151 rows=302853 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..259655.91 rows=4998645 width=8) (actual time=0.033..1019.800 rows=7585870 loops=5)
                                                         Heap Fetches: 0
                                                   ->  Parallel Hash  (cost=2991.15..2991.15 rows=2353 width=30) (actual time=6.149..6.150 rows=798 loops=5)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 384kB
                                                         ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=30) (actual time=0.061..5.173 rows=798 loops=5)
                                                               Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=34) (actual time=0.007..2.306 rows=20000 loops=5)
                                                               ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.033..0.034 rows=1 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.030..0.031 rows=1 loops=5)
                                                                           Filter: (n_name = 'PERU'::bpchar)
                                                                           Rows Removed by Filter: 24
                                             ->  Parallel Hash  (cost=259655.91..259655.91 rows=4998645 width=8) (actual time=2379.844..2379.845 rows=7585870 loops=5)
                                                   Buckets: 2097152  Batches: 32  Memory Usage: 62880kB
                                                   ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..259655.91 rows=4998645 width=8) (actual time=0.079..1185.410 rows=7585870 loops=5)
                                                         Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=134155)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 4.060 ms
 Execution Time: 6166.172 ms
(46 rows)

query 22 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=93875.37..93877.15 rows=1 width=72) (actual time=1567.849..1573.245 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=46820.33..46820.34 rows=1 width=32) (actual time=295.460..295.552 rows=1 loops=1)
           ->  Gather  (cost=46819.90..46820.31 rows=4 width=32) (actual time=292.097..295.534 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=45819.90..45819.91 rows=1 width=32) (actual time=283.089..283.090 rows=1 loops=5)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..45789.96 rows=11976 width=6) (actual time=0.112..274.980 rows=76485 loops=5)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 223515
   ->  GroupAggregate  (cost=47055.03..60480.89 rows=7541 width=72) (actual time=1567.848..1573.150 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=47055.03..60292.37 rows=7541 width=38) (actual time=474.941..1566.753 rows=9006 loops=1)
               ->  Gather Merge  (cost=47054.59..49149.83 rows=17499 width=26) (actual time=473.626..496.802 rows=27132 loops=1)
                     Workers Planned: 4
                     Params Evaluated: $1
                     Workers Launched: 4
                     ->  Sort  (cost=46054.54..46065.47 rows=4375 width=26) (actual time=172.540..173.328 rows=6321 loops=5)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 5014kB
                           Worker 0:  Sort Method: quicksort  Memory: 2384kB
                           Worker 1:  Sort Method: quicksort  Memory: 2413kB
                           Worker 2:  Sort Method: quicksort  Memory: 4881kB
                           Worker 3:  Sort Method: quicksort  Memory: 4894kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..45789.96 rows=4375 width=26) (actual time=0.016..157.925 rows=38226 loops=5)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 261774
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.65 rows=18 width=4) (actual time=0.039..0.039 rows=1 loops=27132)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 16.109 ms
 Execution Time: 1573.316 ms
(32 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=93875.37..93877.15 rows=1 width=72) (actual time=453.897..458.356 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=46820.33..46820.34 rows=1 width=32) (actual time=213.809..213.896 rows=1 loops=1)
           ->  Gather  (cost=46819.90..46820.31 rows=4 width=32) (actual time=210.259..213.872 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=45819.90..45819.91 rows=1 width=32) (actual time=205.800..205.801 rows=1 loops=5)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..45789.96 rows=11976 width=6) (actual time=0.015..195.377 rows=76485 loops=5)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 223515
   ->  GroupAggregate  (cost=47055.03..60480.89 rows=7541 width=72) (actual time=453.896..458.267 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=47055.03..60292.37 rows=7541 width=38) (actual time=388.688..456.138 rows=9006 loops=1)
               ->  Gather Merge  (cost=47054.59..49149.83 rows=17499 width=26) (actual time=388.580..400.492 rows=27133 loops=1)
                     Workers Planned: 4
                     Params Evaluated: $1
                     Workers Launched: 4
                     ->  Sort  (cost=46054.54..46065.47 rows=4375 width=26) (actual time=169.961..170.542 rows=6262 loops=5)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 5161kB
                           Worker 0:  Sort Method: quicksort  Memory: 2381kB
                           Worker 1:  Sort Method: quicksort  Memory: 4821kB
                           Worker 2:  Sort Method: quicksort  Memory: 2359kB
                           Worker 3:  Sort Method: quicksort  Memory: 4862kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..45789.96 rows=4375 width=26) (actual time=0.016..154.918 rows=38226 loops=5)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 261774
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.65 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=27133)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 0.929 ms
 Execution Time: 458.417 ms
(32 rows)

