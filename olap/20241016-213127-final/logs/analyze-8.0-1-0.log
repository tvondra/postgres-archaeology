query 1 run 1
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=381254.24..381254.24 rows=1 width=51) (actual time=22759.862..22759.863 rows=1 loops=1)
   ->  Sort  (cost=381254.24..381254.25 rows=6 width=51) (actual time=22759.862..22759.862 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=381253.95..381254.16 rows=6 width=51) (actual time=22759.803..22759.809 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..233004.05 rows=5929996 width=51) (actual time=0.440..2390.979 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 22760.593 ms
(7 rows)

SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=381254.24..381254.24 rows=1 width=51) (actual time=21723.868..21723.868 rows=1 loops=1)
   ->  Sort  (cost=381254.24..381254.25 rows=6 width=51) (actual time=21723.867..21723.867 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=381253.95..381254.16 rows=6 width=51) (actual time=21723.823..21723.828 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..233004.05 rows=5929996 width=51) (actual time=0.008..1708.742 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 21723.952 ms
(7 rows)

query 2 run 1
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=8187.74..8187.74 rows=1 width=215) (actual time=447.516..447.527 rows=100 loops=1)
   ->  Sort  (cost=8187.74..8187.74 rows=1 width=215) (actual time=447.515..447.521 rows=100 loops=1)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         ->  Nested Loop  (cost=0.00..8187.73 rows=1 width=215) (actual time=3.909..446.712 rows=489 loops=1)
               Join Filter: ("outer".n_regionkey = "inner".r_regionkey)
               ->  Nested Loop  (cost=0.00..8186.65 rows=1 width=219) (actual time=3.907..445.465 rows=489 loops=1)
                     Join Filter: ("outer".s_nationkey = "inner".n_nationkey)
                     ->  Nested Loop  (cost=0.00..8185.09 rows=1 width=190) (actual time=3.903..441.456 rows=489 loops=1)
                           ->  Nested Loop  (cost=0.00..8182.06 rows=1 width=37) (actual time=3.900..439.842 rows=489 loops=1)
                                 Join Filter: ("inner".ps_supplycost = (subplan))
                                 ->  Seq Scan on part  (cost=0.00..8108.00 rows=1 width=33) (actual time=0.514..74.427 rows=799 loops=1)
                                       Filter: ((p_size = 16) AND ((p_type)::text ~~ '%NICKEL'::text))
                                 ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.07 rows=4 width=19) (actual time=0.260..0.262 rows=4 loops=799)
                                       Index Cond: ("outer".p_partkey = partsupp.ps_partkey)
                                 SubPlan
                                   ->  Aggregate  (cost=17.73..17.73 rows=1 width=11) (actual time=0.047..0.048 rows=1 loops=3196)
                                         ->  Nested Loop  (cost=15.20..17.73 rows=1 width=11) (actual time=0.042..0.046 rows=1 loops=3196)
                                               Join Filter: ("inner".n_regionkey = "outer".r_regionkey)
                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=3196)
                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                               ->  Hash Join  (cost=15.20..16.61 rows=4 width=15) (actual time=0.036..0.041 rows=4 loops=3196)
                                                     Hash Cond: ("outer".n_nationkey = "inner".s_nationkey)
                                                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8) (actual time=0.000..0.004 rows=25 loops=3196)
                                                     ->  Hash  (cost=15.19..15.19 rows=4 width=15) (actual time=0.031..0.031 rows=0 loops=3196)
                                                           ->  Nested Loop  (cost=0.00..15.19 rows=4 width=15) (actual time=0.008..0.030 rows=4 loops=3196)
                                                                 ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.07 rows=4 width=15) (actual time=0.002..0.009 rows=4 loops=3196)
                                                                       Index Cond: ($0 = ps_partkey)
                                                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.02 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=12784)
                                                                       Index Cond: (supplier.s_suppkey = "outer".ps_suppkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.02 rows=1 width=161) (actual time=0.001..0.002 rows=1 loops=489)
                                 Index Cond: (supplier.s_suppkey = "outer".ps_suppkey)
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37) (actual time=0.000..0.003 rows=25 loops=489)
               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=489)
                     Filter: (r_name = 'AMERICA'::bpchar)
 Total runtime: 447.804 ms
(35 rows)

SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=8187.74..8187.74 rows=1 width=215) (actual time=129.663..129.671 rows=100 loops=1)
   ->  Sort  (cost=8187.74..8187.74 rows=1 width=215) (actual time=129.663..129.666 rows=100 loops=1)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         ->  Nested Loop  (cost=0.00..8187.73 rows=1 width=215) (actual time=0.166..129.249 rows=489 loops=1)
               Join Filter: ("outer".n_regionkey = "inner".r_regionkey)
               ->  Nested Loop  (cost=0.00..8186.65 rows=1 width=219) (actual time=0.163..128.196 rows=489 loops=1)
                     Join Filter: ("outer".s_nationkey = "inner".n_nationkey)
                     ->  Nested Loop  (cost=0.00..8185.09 rows=1 width=190) (actual time=0.160..124.986 rows=489 loops=1)
                           ->  Nested Loop  (cost=0.00..8182.06 rows=1 width=37) (actual time=0.158..123.826 rows=489 loops=1)
                                 Join Filter: ("inner".ps_supplycost = (subplan))
                                 ->  Seq Scan on part  (cost=0.00..8108.00 rows=1 width=33) (actual time=0.015..52.212 rows=799 loops=1)
                                       Filter: ((p_size = 16) AND ((p_type)::text ~~ '%NICKEL'::text))
                                 ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.07 rows=4 width=19) (actual time=0.005..0.006 rows=4 loops=799)
                                       Index Cond: ("outer".p_partkey = partsupp.ps_partkey)
                                 SubPlan
                                   ->  Aggregate  (cost=17.73..17.73 rows=1 width=11) (actual time=0.020..0.020 rows=1 loops=3196)
                                         ->  Nested Loop  (cost=15.20..17.73 rows=1 width=11) (actual time=0.017..0.019 rows=1 loops=3196)
                                               Join Filter: ("inner".n_regionkey = "outer".r_regionkey)
                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=3196)
                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                               ->  Hash Join  (cost=15.20..16.61 rows=4 width=15) (actual time=0.013..0.017 rows=4 loops=3196)
                                                     Hash Cond: ("outer".n_nationkey = "inner".s_nationkey)
                                                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8) (actual time=0.000..0.003 rows=25 loops=3196)
                                                     ->  Hash  (cost=15.19..15.19 rows=4 width=15) (actual time=0.010..0.010 rows=0 loops=3196)
                                                           ->  Nested Loop  (cost=0.00..15.19 rows=4 width=15) (actual time=0.003..0.009 rows=4 loops=3196)
                                                                 ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.07 rows=4 width=15) (actual time=0.001..0.002 rows=4 loops=3196)
                                                                       Index Cond: ($0 = ps_partkey)
                                                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.02 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=12784)
                                                                       Index Cond: (supplier.s_suppkey = "outer".ps_suppkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.02 rows=1 width=161) (actual time=0.001..0.001 rows=1 loops=489)
                                 Index Cond: (supplier.s_suppkey = "outer".ps_suppkey)
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37) (actual time=0.000..0.003 rows=25 loops=489)
               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.000..0.001 rows=1 loops=489)
                     Filter: (r_name = 'AMERICA'::bpchar)
 Total runtime: 129.745 ms
(35 rows)

query 3 run 1
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=457357.89..457357.92 rows=10 width=34) (actual time=4291.104..4291.104 rows=10 loops=1)
   ->  Sort  (cost=457357.89..458132.90 rows=310004 width=34) (actual time=4291.103..4291.103 rows=10 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))), orders.o_orderdate
         ->  GroupAggregate  (cost=417394.77..423594.85 rows=310004 width=34) (actual time=4251.368..4273.707 rows=11612 loops=1)
               ->  Sort  (cost=417394.77..418169.78 rows=310004 width=34) (actual time=4251.350..4254.101 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Merge Join  (cost=91348.11..383631.73 rows=310004 width=34) (actual time=1144.902..4220.973 rows=30533 loops=1)
                           Merge Cond: ("outer".l_orderkey = "inner".o_orderkey)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..279464.67 rows=3267614 width=26) (actual time=0.984..2717.945 rows=3261872 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Sort  (cost=91348.11..91703.90 rows=142313 width=12) (actual time=1143.030..1169.314 rows=164984 loops=1)
                                 Sort Key: orders.o_orderkey
                                 ->  Hash Join  (cost=6314.14..77497.96 rows=142313 width=12) (actual time=68.906..1005.550 rows=146063 loops=1)
                                       Hash Cond: ("outer".o_custkey = "inner".c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..50635.76 rows=710262 width=16) (actual time=0.318..501.279 rows=722275 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=6092.00..6092.00 rows=30055 width=4) (actual time=68.495..68.495 rows=0 loops=1)
                                             ->  Seq Scan on customer  (cost=0.00..6092.00 rows=30055 width=4) (actual time=0.379..64.386 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 4292.551 ms
(20 rows)

SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=457357.89..457357.92 rows=10 width=34) (actual time=3309.959..3309.959 rows=10 loops=1)
   ->  Sort  (cost=457357.89..458132.90 rows=310004 width=34) (actual time=3309.958..3309.958 rows=10 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))), orders.o_orderdate
         ->  GroupAggregate  (cost=417394.77..423594.85 rows=310004 width=34) (actual time=3271.150..3293.462 rows=11612 loops=1)
               ->  Sort  (cost=417394.77..418169.78 rows=310004 width=34) (actual time=3271.134..3274.019 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Merge Join  (cost=91348.11..383631.73 rows=310004 width=34) (actual time=950.376..3242.124 rows=30533 loops=1)
                           Merge Cond: ("outer".l_orderkey = "inner".o_orderkey)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..279464.67 rows=3267614 width=26) (actual time=0.017..1945.307 rows=3261872 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Sort  (cost=91348.11..91703.90 rows=142313 width=12) (actual time=950.111..971.385 rows=164984 loops=1)
                                 Sort Key: orders.o_orderkey
                                 ->  Hash Join  (cost=6314.14..77497.96 rows=142313 width=12) (actual time=47.691..816.038 rows=146063 loops=1)
                                       Hash Cond: ("outer".o_custkey = "inner".c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..50635.76 rows=710262 width=16) (actual time=0.009..366.886 rows=722275 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=6092.00..6092.00 rows=30055 width=4) (actual time=47.604..47.604 rows=0 loops=1)
                                             ->  Seq Scan on customer  (cost=0.00..6092.00 rows=30055 width=4) (actual time=0.008..43.817 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 3311.714 ms
(20 rows)

query 4 run 1
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=92547.23..92547.23 rows=1 width=19) (actual time=10619.224..10619.224 rows=1 loops=1)
   ->  Sort  (cost=92547.23..92547.23 rows=1 width=19) (actual time=10619.222..10619.222 rows=1 loops=1)
         Sort Key: o_orderpriority
         ->  HashAggregate  (cost=92547.22..92547.22 rows=1 width=19) (actual time=10619.182..10619.183 rows=5 loops=1)
               ->  Index Scan using idx_orders_orderdate on orders  (cost=0.00..92406.80 rows=28084 width=19) (actual time=2.493..10541.874 rows=51398 loops=1)
                     Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     SubPlan
                       ->  Index Scan using q4_idx_1 on lineitem  (cost=0.00..3.14 rows=7 width=152) (actual time=0.141..0.141 rows=1 loops=55973)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
 Total runtime: 10619.901 ms
(12 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=92547.23..92547.23 rows=1 width=19) (actual time=385.350..385.350 rows=1 loops=1)
   ->  Sort  (cost=92547.23..92547.23 rows=1 width=19) (actual time=385.349..385.349 rows=1 loops=1)
         Sort Key: o_orderpriority
         ->  HashAggregate  (cost=92547.22..92547.22 rows=1 width=19) (actual time=385.312..385.314 rows=5 loops=1)
               ->  Index Scan using idx_orders_orderdate on orders  (cost=0.00..92406.80 rows=28084 width=19) (actual time=0.051..367.381 rows=51398 loops=1)
                     Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     SubPlan
                       ->  Index Scan using q4_idx_1 on lineitem  (cost=0.00..3.14 rows=7 width=152) (actual time=0.005..0.005 rows=1 loops=55973)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
 Total runtime: 385.424 ms
(12 rows)

query 5 run 1
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233275.97..233275.98 rows=1 width=51) (actual time=5654.717..5654.717 rows=1 loops=1)
   ->  Sort  (cost=233275.97..233276.04 rows=25 width=51) (actual time=5654.716..5654.716 rows=1 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  HashAggregate  (cost=233275.21..233275.39 rows=25 width=51) (actual time=5654.686..5654.688 rows=5 loops=1)
               ->  Hash Join  (cost=7546.50..233239.14 rows=7214 width=51) (actual time=91.639..5639.776 rows=7540 loops=1)
                     Hash Cond: (("outer".c_nationkey = "inner".s_nationkey) AND ("outer".l_suppkey = "inner".s_suppkey))
                     ->  Nested Loop  (cost=7137.50..229150.68 rows=180366 width=63) (actual time=82.187..5509.615 rows=182435 loops=1)
                           ->  Hash Join  (cost=7137.50..65596.49 rows=45088 width=41) (actual time=81.176..1151.490 rows=45297 loops=1)
                                 Hash Cond: ("outer".o_custkey = "inner".c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..54385.92 rows=225439 width=8) (actual time=0.449..743.723 rows=226645 loops=1)
                                       Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=6769.50..6769.50 rows=30000 width=41) (actual time=80.645..80.645 rows=0 loops=1)
                                       ->  Hash Join  (cost=2.50..6769.50 rows=30000 width=41) (actual time=1.234..75.842 rows=29952 loops=1)
                                             Hash Cond: ("outer".c_nationkey = "inner".n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8) (actual time=0.575..52.944 rows=150000 loops=1)
                                             ->  Hash  (cost=2.49..2.49 rows=5 width=33) (actual time=0.646..0.646 rows=0 loops=1)
                                                   ->  Hash Join  (cost=1.06..2.49 rows=5 width=33) (actual time=0.629..0.642 rows=5 loops=1)
                                                         Hash Cond: ("outer".n_regionkey = "inner".r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37) (actual time=0.245..0.253 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.371..0.371 rows=0 loops=1)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.368..0.369 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.36 rows=21 width=30) (actual time=0.085..0.094 rows=4 loops=45297)
                                 Index Cond: (lineitem.l_orderkey = "outer".o_orderkey)
                     ->  Hash  (cost=359.00..359.00 rows=10000 width=8) (actual time=6.631..6.631 rows=0 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8) (actual time=0.293..5.521 rows=10000 loops=1)
 Total runtime: 5655.073 ms
(27 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233275.97..233275.98 rows=1 width=51) (actual time=1129.131..1129.131 rows=1 loops=1)
   ->  Sort  (cost=233275.97..233276.04 rows=25 width=51) (actual time=1129.129..1129.129 rows=1 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  HashAggregate  (cost=233275.21..233275.39 rows=25 width=51) (actual time=1129.114..1129.116 rows=5 loops=1)
               ->  Hash Join  (cost=7546.50..233239.14 rows=7214 width=51) (actual time=63.070..1122.033 rows=7540 loops=1)
                     Hash Cond: (("outer".c_nationkey = "inner".s_nationkey) AND ("outer".l_suppkey = "inner".s_suppkey))
                     ->  Nested Loop  (cost=7137.50..229150.68 rows=180366 width=63) (actual time=58.303..1037.035 rows=182435 loops=1)
                           ->  Hash Join  (cost=7137.50..65596.49 rows=45088 width=41) (actual time=58.277..720.196 rows=45297 loops=1)
                                 Hash Cond: ("outer".o_custkey = "inner".c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..54385.92 rows=225439 width=8) (actual time=0.009..447.201 rows=226645 loops=1)
                                       Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=6769.50..6769.50 rows=30000 width=41) (actual time=58.200..58.200 rows=0 loops=1)
                                       ->  Hash Join  (cost=2.50..6769.50 rows=30000 width=41) (actual time=0.040..53.748 rows=29952 loops=1)
                                             Hash Cond: ("outer".c_nationkey = "inner".n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8) (actual time=0.003..32.018 rows=150000 loops=1)
                                             ->  Hash  (cost=2.49..2.49 rows=5 width=33) (actual time=0.030..0.030 rows=0 loops=1)
                                                   ->  Hash Join  (cost=1.06..2.49 rows=5 width=33) (actual time=0.022..0.030 rows=5 loops=1)
                                                         Hash Cond: ("outer".n_regionkey = "inner".r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37) (actual time=0.002..0.009 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.013..0.013 rows=0 loops=1)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.010..0.013 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.36 rows=21 width=30) (actual time=0.004..0.005 rows=4 loops=45297)
                                 Index Cond: (lineitem.l_orderkey = "outer".o_orderkey)
                     ->  Hash  (cost=359.00..359.00 rows=10000 width=8) (actual time=4.331..4.331 rows=0 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8) (actual time=0.006..3.202 rows=10000 loops=1)
 Total runtime: 1129.224 ms
(27 rows)

query 6 run 1
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=215328.72..215328.72 rows=1 width=22) (actual time=12078.373..12078.374 rows=1 loops=1)
   ->  Aggregate  (cost=215328.72..215328.72 rows=1 width=22) (actual time=12078.372..12078.372 rows=1 loops=1)
         ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..215036.77 rows=116777 width=22) (actual time=1.425..11903.610 rows=119208 loops=1)
               Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 12078.400 ms
(5 rows)

SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=215328.72..215328.72 rows=1 width=22) (actual time=405.277..405.277 rows=1 loops=1)
   ->  Aggregate  (cost=215328.72..215328.72 rows=1 width=22) (actual time=405.277..405.277 rows=1 loops=1)
         ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..215036.77 rows=116777 width=22) (actual time=0.029..352.751 rows=119208 loops=1)
               Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 405.306 ms
(5 rows)

query 7 run 1
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=358024.43..358024.45 rows=1 width=84) (actual time=4406.603..4406.603 rows=1 loops=1)
   ->  GroupAggregate  (cost=358024.43..358170.83 rows=5856 width=84) (actual time=4406.603..4406.603 rows=1 loops=1)
         ->  Sort  (cost=358024.43..358039.07 rows=5856 width=84) (actual time=4405.673..4405.733 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=283427.37..357657.97 rows=5856 width=84) (actual time=3350.122..4381.016 rows=5729 loops=1)
                     Hash Cond: (("outer".o_custkey = "inner".c_custkey) AND ("outer".n_nationkey = "inner".c_nationkey))
                     ->  Merge Join  (cost=276227.37..340669.19 rows=146398 width=92) (actual time=3256.690..4086.016 rows=144718 loops=1)
                           Merge Cond: ("outer".o_orderkey = "inner".l_orderkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..58501.92 rows=1500061 width=8) (actual time=1.181..526.997 rows=1499997 loops=1)
                           ->  Sort  (cost=276227.37..276593.37 rows=146398 width=92) (actual time=3255.492..3277.325 rows=144718 loops=1)
                                 Sort Key: lineitem.l_orderkey
                                 ->  Hash Join  (cost=440.28..259068.45 rows=146398 width=92) (actual time=6.645..2900.708 rows=144718 loops=1)
                                       Hash Cond: ("outer".l_suppkey = "inner".s_suppkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..248005.86 rows=1831433 width=34) (actual time=0.500..2601.094 rows=1828450 loops=1)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=438.28..438.28 rows=800 width=66) (actual time=6.106..6.106 rows=0 loops=1)
                                             ->  Hash Join  (cost=21.28..438.28 rows=800 width=66) (actual time=0.734..6.015 rows=794 loops=1)
                                                   Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8) (actual time=0.299..4.478 rows=10000 loops=1)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=66) (actual time=0.425..0.425 rows=0 loops=1)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=66) (actual time=0.371..0.424 rows=2 loops=1)
                                                               Join Filter: ((("outer".n_name = 'PERU'::bpchar) AND ("inner".n_name = 'MOROCCO'::bpchar)) OR (("outer".n_name = 'MOROCCO'::bpchar) AND ("inner".n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=33) (actual time=0.210..0.211 rows=25 loops=1)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=33) (actual time=0.000..0.002 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33) (actual time=0.004..0.015 rows=25 loops=1)
                     ->  Hash  (cost=5717.00..5717.00 rows=150000 width=8) (actual time=90.102..90.102 rows=0 loops=1)
                           ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8) (actual time=0.419..67.773 rows=150000 loops=1)
 Total runtime: 4409.434 ms
(28 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=358024.43..358024.45 rows=1 width=84) (actual time=3440.599..3440.600 rows=1 loops=1)
   ->  GroupAggregate  (cost=358024.43..358170.83 rows=5856 width=84) (actual time=3440.598..3440.598 rows=1 loops=1)
         ->  Sort  (cost=358024.43..358039.07 rows=5856 width=84) (actual time=3439.668..3439.709 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=283427.37..357657.97 rows=5856 width=84) (actual time=2553.470..3415.239 rows=5729 loops=1)
                     Hash Cond: (("outer".o_custkey = "inner".c_custkey) AND ("outer".n_nationkey = "inner".c_nationkey))
                     ->  Merge Join  (cost=276227.37..340669.19 rows=146398 width=92) (actual time=2482.804..3145.156 rows=144718 loops=1)
                           Merge Cond: ("outer".o_orderkey = "inner".l_orderkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..58501.92 rows=1500061 width=8) (actual time=0.012..369.793 rows=1499997 loops=1)
                           ->  Sort  (cost=276227.37..276593.37 rows=146398 width=92) (actual time=2482.767..2503.122 rows=144718 loops=1)
                                 Sort Key: lineitem.l_orderkey
                                 ->  Hash Join  (cost=440.28..259068.45 rows=146398 width=92) (actual time=3.302..2149.439 rows=144718 loops=1)
                                       Hash Cond: ("outer".l_suppkey = "inner".s_suppkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..248005.86 rows=1831433 width=34) (actual time=0.004..1891.498 rows=1828450 loops=1)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=438.28..438.28 rows=800 width=66) (actual time=3.280..3.280 rows=0 loops=1)
                                             ->  Hash Join  (cost=21.28..438.28 rows=800 width=66) (actual time=0.165..3.198 rows=794 loops=1)
                                                   Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8) (actual time=0.002..1.955 rows=10000 loops=1)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=66) (actual time=0.158..0.158 rows=0 loops=1)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=66) (actual time=0.105..0.156 rows=2 loops=1)
                                                               Join Filter: ((("outer".n_name = 'PERU'::bpchar) AND ("inner".n_name = 'MOROCCO'::bpchar)) OR (("outer".n_name = 'MOROCCO'::bpchar) AND ("inner".n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=33) (actual time=0.003..0.006 rows=25 loops=1)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=33) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33) (actual time=0.001..0.009 rows=25 loops=1)
                     ->  Hash  (cost=5717.00..5717.00 rows=150000 width=8) (actual time=68.752..68.752 rows=0 loops=1)
                           ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8) (actual time=0.007..47.614 rows=150000 loops=1)
 Total runtime: 3443.319 ms
(28 rows)

query 8 run 1
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170587.12..170587.12 rows=1 width=55) (actual time=7263.528..7263.528 rows=1 loops=1)
   ->  Sort  (cost=170587.12..170588.96 rows=738 width=55) (actual time=7263.526..7263.526 rows=1 loops=1)
         Sort Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  HashAggregate  (cost=170533.51..170551.96 rows=738 width=55) (actual time=7263.502..7263.504 rows=2 loops=1)
               ->  Hash Join  (cost=71201.91..170515.10 rows=2455 width=55) (actual time=926.138..7259.513 rows=2485 loops=1)
                     Hash Cond: ("outer".l_orderkey = "inner".o_orderkey)
                     ->  Hash Join  (cost=385.31..95996.56 rows=40025 width=55) (actual time=9.533..6289.600 rows=39694 loops=1)
                           Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                           ->  Hash Join  (cost=384.00..95394.87 rows=40025 width=30) (actual time=9.506..6256.872 rows=39694 loops=1)
                                 Hash Cond: ("outer".l_suppkey = "inner".s_suppkey)
                                 ->  Nested Loop  (cost=0.00..94210.36 rows=40025 width=30) (actual time=3.249..6198.493 rows=39694 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..7608.00 rows=1334 width=4) (actual time=1.328..95.363 rows=1320 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using q19_idx_1 on lineitem  (cost=0.00..64.53 rows=31 width=34) (actual time=0.447..4.589 rows=30 loops=1320)
                                             Index Cond: ("outer".p_partkey = lineitem.l_partkey)
                                 ->  Hash  (cost=359.00..359.00 rows=10000 width=8) (actual time=6.247..6.247 rows=0 loops=1)
                                       ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8) (actual time=0.353..5.358 rows=10000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=33) (actual time=0.015..0.015 rows=0 loops=1)
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33) (actual time=0.007..0.013 rows=25 loops=1)
                     ->  Hash  (cost=70136.58..70136.58 rows=92005 width=8) (actual time=903.614..903.614 rows=0 loops=1)
                           ->  Hash Join  (cost=6991.50..70136.58 rows=92005 width=8) (actual time=75.648..889.216 rows=91179 loops=1)
                                 Hash Cond: ("outer".o_custkey = "inner".c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..54385.92 rows=460023 width=12) (actual time=0.314..546.581 rows=457263 loops=1)
                                       Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                 ->  Hash  (cost=6769.50..6769.50 rows=30000 width=4) (actual time=75.045..75.045 rows=0 loops=1)
                                       ->  Hash Join  (cost=2.50..6769.50 rows=30000 width=4) (actual time=1.107..71.379 rows=29952 loops=1)
                                             Hash Cond: ("outer".c_nationkey = "inner".n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8) (actual time=0.519..51.914 rows=150000 loops=1)
                                             ->  Hash  (cost=2.49..2.49 rows=5 width=4) (actual time=0.578..0.578 rows=0 loops=1)
                                                   ->  Hash Join  (cost=1.06..2.49 rows=5 width=4) (actual time=0.562..0.573 rows=5 loops=1)
                                                         Hash Cond: ("outer".n_regionkey = "inner".r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.201..0.207 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.352..0.352 rows=0 loops=1)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.350..0.351 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
 Total runtime: 7263.926 ms
(36 rows)

SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170587.12..170587.12 rows=1 width=55) (actual time=968.928..968.928 rows=1 loops=1)
   ->  Sort  (cost=170587.12..170588.96 rows=738 width=55) (actual time=968.928..968.928 rows=1 loops=1)
         Sort Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  HashAggregate  (cost=170533.51..170551.96 rows=738 width=55) (actual time=968.912..968.914 rows=2 loops=1)
               ->  Hash Join  (cost=71201.91..170515.10 rows=2455 width=55) (actual time=713.874..966.579 rows=2485 loops=1)
                     Hash Cond: ("outer".l_orderkey = "inner".o_orderkey)
                     ->  Hash Join  (cost=385.31..95996.56 rows=40025 width=55) (actual time=3.782..207.242 rows=39694 loops=1)
                           Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                           ->  Hash Join  (cost=384.00..95394.87 rows=40025 width=30) (actual time=3.757..191.319 rows=39694 loops=1)
                                 Hash Cond: ("outer".l_suppkey = "inner".s_suppkey)
                                 ->  Nested Loop  (cost=0.00..94210.36 rows=40025 width=30) (actual time=0.097..166.440 rows=39694 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..7608.00 rows=1334 width=4) (actual time=0.070..51.167 rows=1320 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using q19_idx_1 on lineitem  (cost=0.00..64.53 rows=31 width=34) (actual time=0.008..0.077 rows=30 loops=1320)
                                             Index Cond: ("outer".p_partkey = lineitem.l_partkey)
                                 ->  Hash  (cost=359.00..359.00 rows=10000 width=8) (actual time=3.653..3.653 rows=0 loops=1)
                                       ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8) (actual time=0.010..2.883 rows=10000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=33) (actual time=0.014..0.014 rows=0 loops=1)
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33) (actual time=0.006..0.012 rows=25 loops=1)
                     ->  Hash  (cost=70136.58..70136.58 rows=92005 width=8) (actual time=709.668..709.668 rows=0 loops=1)
                           ->  Hash Join  (cost=6991.50..70136.58 rows=92005 width=8) (actual time=53.993..696.179 rows=91179 loops=1)
                                 Hash Cond: ("outer".o_custkey = "inner".c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..54385.92 rows=460023 width=12) (actual time=0.008..407.002 rows=457263 loops=1)
                                       Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                 ->  Hash  (cost=6769.50..6769.50 rows=30000 width=4) (actual time=53.694..53.694 rows=0 loops=1)
                                       ->  Hash Join  (cost=2.50..6769.50 rows=30000 width=4) (actual time=0.044..50.310 rows=29952 loops=1)
                                             Hash Cond: ("outer".c_nationkey = "inner".n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8) (actual time=0.003..31.558 rows=150000 loops=1)
                                             ->  Hash  (cost=2.49..2.49 rows=5 width=4) (actual time=0.035..0.035 rows=0 loops=1)
                                                   ->  Hash Join  (cost=1.06..2.49 rows=5 width=4) (actual time=0.026..0.034 rows=5 loops=1)
                                                         Hash Cond: ("outer".n_regionkey = "inner".r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.010 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.016..0.016 rows=0 loops=1)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
 Total runtime: 969.026 ms
(36 rows)

query 9 run 1
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=38523.44..38523.46 rows=1 width=76) (actual time=27807.668..27807.669 rows=1 loops=1)
   ->  GroupAggregate  (cost=38523.44..38523.99 rows=20 width=76) (actual time=27807.668..27807.668 rows=1 loops=1)
         ->  Sort  (cost=38523.44..38523.49 rows=20 width=76) (actual time=27806.407..27806.555 rows=1210 loops=1)
               Sort Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=0.00..38523.00 rows=20 width=76) (actual time=5.990..25079.068 rows=325928 loops=1)
                     ->  Nested Loop  (cost=0.00..38462.30 rows=20 width=76) (actual time=4.569..20147.475 rows=325928 loops=1)
                           Join Filter: ("outer".s_nationkey = "inner".n_nationkey)
                           ->  Nested Loop  (cost=0.00..38431.05 rows=20 width=51) (actual time=4.284..17410.900 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=0.00..38370.45 rows=20 width=55) (actual time=3.380..16443.230 rows=325928 loops=1)
                                       ->  Nested Loop  (cost=0.00..12602.98 rows=6386 width=23) (actual time=1.392..397.047 rows=43520 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..7608.00 rows=1601 width=4) (actual time=0.463..160.659 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.07 rows=4 width=19) (actual time=0.017..0.019 rows=4 loops=10880)
                                                   Index Cond: ("outer".p_partkey = partsupp.ps_partkey)
                                       ->  Index Scan using q9_idx_1 on lineitem  (cost=0.00..4.02 rows=1 width=44) (actual time=0.066..0.362 rows=7 loops=43520)
                                             Index Cond: (("outer".p_partkey = lineitem.l_partkey) AND ("outer".ps_suppkey = lineitem.l_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.02 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=325928)
                                       Index Cond: ("outer".ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33) (actual time=0.000..0.004 rows=25 loops=325928)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.02 rows=1 width=8) (actual time=0.013..0.014 rows=1 loops=325928)
                           Index Cond: (orders.o_orderkey = "outer".l_orderkey)
 Total runtime: 27813.916 ms
(22 rows)

SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=38523.44..38523.46 rows=1 width=76) (actual time=7347.091..7347.091 rows=1 loops=1)
   ->  GroupAggregate  (cost=38523.44..38523.99 rows=20 width=76) (actual time=7347.091..7347.091 rows=1 loops=1)
         ->  Sort  (cost=38523.44..38523.49 rows=20 width=76) (actual time=7345.824..7346.031 rows=1210 loops=1)
               Sort Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=0.00..38523.00 rows=20 width=76) (actual time=0.149..5133.431 rows=325928 loops=1)
                     ->  Nested Loop  (cost=0.00..38462.30 rows=20 width=76) (actual time=0.121..3760.701 rows=325928 loops=1)
                           Join Filter: ("outer".s_nationkey = "inner".n_nationkey)
                           ->  Nested Loop  (cost=0.00..38431.05 rows=20 width=51) (actual time=0.108..1690.065 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=0.00..38370.45 rows=20 width=55) (actual time=0.085..1092.307 rows=325928 loops=1)
                                       ->  Nested Loop  (cost=0.00..12602.98 rows=6386 width=23) (actual time=0.050..195.247 rows=43520 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..7608.00 rows=1601 width=4) (actual time=0.019..121.850 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.07 rows=4 width=19) (actual time=0.004..0.005 rows=4 loops=10880)
                                                   Index Cond: ("outer".p_partkey = partsupp.ps_partkey)
                                       ->  Index Scan using q9_idx_1 on lineitem  (cost=0.00..4.02 rows=1 width=44) (actual time=0.004..0.017 rows=7 loops=43520)
                                             Index Cond: (("outer".p_partkey = lineitem.l_partkey) AND ("outer".ps_suppkey = lineitem.l_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.02 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                       Index Cond: ("outer".ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33) (actual time=0.000..0.003 rows=25 loops=325928)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.02 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=325928)
                           Index Cond: (orders.o_orderkey = "outer".l_orderkey)
 Total runtime: 7352.560 ms
(22 rows)

query 10 run 1
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=285884.42..285884.47 rows=20 width=212) (actual time=12655.432..12655.435 rows=20 loops=1)
   ->  Sort  (cost=285884.42..286028.68 rows=57705 width=212) (actual time=12655.430..12655.432 rows=20 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  GroupAggregate  (cost=276085.91..277817.06 rows=57705 width=212) (actual time=12425.177..12558.500 rows=38076 loops=1)
               ->  Sort  (cost=276085.91..276230.17 rows=57705 width=212) (actual time=12425.157..12442.683 rows=114347 loops=1)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Nested Loop  (cost=58915.98..268018.55 rows=57705 width=212) (actual time=615.488..11255.434 rows=114347 loops=1)
                           ->  Hash Join  (cost=58915.98..67891.04 rows=57303 width=194) (actual time=613.298..946.188 rows=57111 loops=1)
                                 Hash Cond: ("outer".c_nationkey = "inner".n_nationkey)
                                 ->  Merge Join  (cost=58914.66..67030.18 rows=57303 width=169) (actual time=613.044..867.780 rows=57111 loops=1)
                                       Merge Cond: ("outer".c_custkey = "inner".o_custkey)
                                       ->  Index Scan using customer_pkey on customer  (cost=0.00..6881.00 rows=150000 width=165) (actual time=1.546..108.897 rows=150000 loops=1)
                                       ->  Sort  (cost=58914.66..59057.92 rows=57303 width=8) (actual time=611.480..634.846 rows=57111 loops=1)
                                             Sort Key: orders.o_custkey
                                             ->  Seq Scan on orders  (cost=0.00..54385.92 rows=57303 width=8) (actual time=0.285..547.657 rows=57111 loops=1)
                                                   Filter: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=33) (actual time=0.241..0.241 rows=0 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33) (actual time=0.221..0.232 rows=25 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.42 rows=6 width=26) (actual time=0.164..0.177 rows=2 loops=57111)
                                 Index Cond: (lineitem.l_orderkey = "outer".o_orderkey)
                                 Filter: (l_returnflag = 'R'::bpchar)
 Total runtime: 12661.371 ms
(22 rows)

SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=285884.42..285884.47 rows=20 width=212) (actual time=1987.568..1987.571 rows=20 loops=1)
   ->  Sort  (cost=285884.42..286028.68 rows=57705 width=212) (actual time=1987.566..1987.567 rows=20 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  GroupAggregate  (cost=276085.91..277817.06 rows=57705 width=212) (actual time=1757.899..1891.057 rows=38076 loops=1)
               ->  Sort  (cost=276085.91..276230.17 rows=57705 width=212) (actual time=1757.880..1774.907 rows=114347 loops=1)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Nested Loop  (cost=58915.98..268018.55 rows=57705 width=212) (actual time=464.690..1086.338 rows=114347 loops=1)
                           ->  Hash Join  (cost=58915.98..67891.04 rows=57303 width=194) (actual time=464.636..620.402 rows=57111 loops=1)
                                 Hash Cond: ("outer".c_nationkey = "inner".n_nationkey)
                                 ->  Merge Join  (cost=58914.66..67030.18 rows=57303 width=169) (actual time=464.606..584.025 rows=57111 loops=1)
                                       Merge Cond: ("outer".c_custkey = "inner".o_custkey)
                                       ->  Index Scan using customer_pkey on customer  (cost=0.00..6881.00 rows=150000 width=165) (actual time=0.014..50.459 rows=150000 loops=1)
                                       ->  Sort  (cost=58914.66..59057.92 rows=57303 width=8) (actual time=464.567..473.355 rows=57111 loops=1)
                                             Sort Key: orders.o_custkey
                                             ->  Seq Scan on orders  (cost=0.00..54385.92 rows=57303 width=8) (actual time=0.012..409.379 rows=57111 loops=1)
                                                   Filter: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=33) (actual time=0.015..0.015 rows=0 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33) (actual time=0.005..0.009 rows=25 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.42 rows=6 width=26) (actual time=0.006..0.007 rows=2 loops=57111)
                                 Index Cond: (lineitem.l_orderkey = "outer".o_orderkey)
                                 Filter: (l_returnflag = 'R'::bpchar)
 Total runtime: 1992.933 ms
(22 rows)

query 11 run 1
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=69093.69..69093.69 rows=1 width=19) (actual time=530.302..530.303 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=31752.32..31752.32 rows=1 width=15) (actual time=175.992..175.992 rows=1 loops=1)
           ->  Hash Join  (cost=415.31..31672.31 rows=32000 width=15) (actual time=2.178..162.371 rows=32880 loops=1)
                 Hash Cond: ("outer".ps_suppkey = "inner".s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..26937.00 rows=800000 width=19) (actual time=0.000..101.438 rows=800000 loops=1)
                 ->  Hash  (cost=414.31..414.31 rows=400 width=4) (actual time=2.165..2.165 rows=0 loops=1)
                       ->  Hash Join  (cost=1.31..414.31 rows=400 width=4) (actual time=0.036..2.133 rows=411 loops=1)
                             Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                             ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8) (actual time=0.001..1.245 rows=10000 loops=1)
                             ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.013..0.013 rows=0 loops=1)
                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                         Filter: (n_name = 'SAUDI ARABIA'::bpchar)
   ->  Sort  (cost=37341.37..37421.37 rows=32000 width=19) (actual time=530.302..530.302 rows=1 loops=1)
         Sort Key: sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))
         ->  GroupAggregate  (cost=34066.84..34946.84 rows=32000 width=19) (actual time=511.223..529.316 rows=839 loops=1)
               Filter: (sum((ps_supplycost * (ps_availqty)::numeric)) > $0)
               ->  Sort  (cost=34066.84..34146.84 rows=32000 width=19) (actual time=335.208..337.980 rows=32880 loops=1)
                     Sort Key: partsupp.ps_partkey
                     ->  Hash Join  (cost=415.31..31672.31 rows=32000 width=19) (actual time=6.557..312.185 rows=32880 loops=1)
                           Hash Cond: ("outer".ps_suppkey = "inner".s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..26937.00 rows=800000 width=23) (actual time=0.687..239.252 rows=800000 loops=1)
                           ->  Hash  (cost=414.31..414.31 rows=400 width=4) (actual time=5.842..5.842 rows=0 loops=1)
                                 ->  Hash Join  (cost=1.31..414.31 rows=400 width=4) (actual time=0.618..5.783 rows=411 loops=1)
                                       Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8) (actual time=0.310..4.635 rows=10000 loops=1)
                                       ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.209..0.209 rows=0 loops=1)
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.205..0.207 rows=1 loops=1)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
 Total runtime: 530.675 ms
(30 rows)

SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=69093.69..69093.69 rows=1 width=19) (actual time=440.420..440.420 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=31752.32..31752.32 rows=1 width=15) (actual time=176.368..176.368 rows=1 loops=1)
           ->  Hash Join  (cost=415.31..31672.31 rows=32000 width=15) (actual time=2.185..162.692 rows=32880 loops=1)
                 Hash Cond: ("outer".ps_suppkey = "inner".s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..26937.00 rows=800000 width=19) (actual time=0.000..101.379 rows=800000 loops=1)
                 ->  Hash  (cost=414.31..414.31 rows=400 width=4) (actual time=2.171..2.171 rows=0 loops=1)
                       ->  Hash Join  (cost=1.31..414.31 rows=400 width=4) (actual time=0.034..2.133 rows=411 loops=1)
                             Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                             ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8) (actual time=0.001..1.264 rows=10000 loops=1)
                             ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.012..0.012 rows=0 loops=1)
                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                         Filter: (n_name = 'SAUDI ARABIA'::bpchar)
   ->  Sort  (cost=37341.37..37421.37 rows=32000 width=19) (actual time=440.420..440.420 rows=1 loops=1)
         Sort Key: sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))
         ->  GroupAggregate  (cost=34066.84..34946.84 rows=32000 width=19) (actual time=421.714..439.753 rows=839 loops=1)
               Filter: (sum((ps_supplycost * (ps_availqty)::numeric)) > $0)
               ->  Sort  (cost=34066.84..34146.84 rows=32000 width=19) (actual time=245.322..248.156 rows=32880 loops=1)
                     Sort Key: partsupp.ps_partkey
                     ->  Hash Join  (cost=415.31..31672.31 rows=32000 width=19) (actual time=3.304..222.680 rows=32880 loops=1)
                           Hash Cond: ("outer".ps_suppkey = "inner".s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..26937.00 rows=800000 width=23) (actual time=0.003..156.672 rows=800000 loops=1)
                           ->  Hash  (cost=414.31..414.31 rows=400 width=4) (actual time=3.286..3.286 rows=0 loops=1)
                                 ->  Hash Join  (cost=1.31..414.31 rows=400 width=4) (actual time=0.043..3.252 rows=411 loops=1)
                                       Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8) (actual time=0.004..2.267 rows=10000 loops=1)
                                       ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.015..0.015 rows=0 loops=1)
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=1)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
 Total runtime: 440.782 ms
(30 rows)

query 12 run 1
SET
                                                                                                                          QUERY PLAN                                                                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=180960.28..180960.29 rows=1 width=33) (actual time=3591.095..3591.096 rows=1 loops=1)
   ->  Sort  (cost=180960.28..180960.29 rows=1 width=33) (actual time=3591.093..3591.093 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=180960.26..180960.27 rows=1 width=33) (actual time=3591.043..3591.044 rows=2 loops=1)
               ->  Merge Join  (cost=0.00..180755.07 rows=27358 width=33) (actual time=3.323..3566.722 rows=30953 loops=1)
                     Merge Cond: ("outer".o_orderkey = "inner".l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..58501.92 rows=1500061 width=23) (actual time=0.951..516.297 rows=1499957 loops=1)
                     ->  Index Scan using q4_idx_1 on lineitem  (cost=0.00..118167.26 rows=27358 width=18) (actual time=2.315..2899.457 rows=30953 loops=1)
                           Filter: (((l_shipmode = 'SHIP'::bpchar) OR (l_shipmode = 'REG AIR'::bpchar)) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 3591.730 ms
(10 rows)

SET
                                                                                                                          QUERY PLAN                                                                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=180960.28..180960.29 rows=1 width=33) (actual time=2663.901..2663.901 rows=1 loops=1)
   ->  Sort  (cost=180960.28..180960.29 rows=1 width=33) (actual time=2663.900..2663.900 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=180960.26..180960.27 rows=1 width=33) (actual time=2663.867..2663.867 rows=2 loops=1)
               ->  Merge Join  (cost=0.00..180755.07 rows=27358 width=33) (actual time=0.167..2644.645 rows=30953 loops=1)
                     Merge Cond: ("outer".o_orderkey = "inner".l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..58501.92 rows=1500061 width=23) (actual time=0.019..362.969 rows=1499957 loops=1)
                     ->  Index Scan using q4_idx_1 on lineitem  (cost=0.00..118167.26 rows=27358 width=18) (actual time=0.119..2142.053 rows=30953 loops=1)
                           Filter: (((l_shipmode = 'SHIP'::bpchar) OR (l_shipmode = 'REG AIR'::bpchar)) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 2663.984 ms
(10 rows)

query 13 run 1
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=275170.18..275170.19 rows=1 width=8) (actual time=4052.310..4052.311 rows=1 loops=1)
   ->  Sort  (cost=275170.18..275170.68 rows=200 width=8) (actual time=4052.308..4052.308 rows=1 loops=1)
         Sort Key: count(*), c_count
         ->  HashAggregate  (cost=275162.04..275162.54 rows=200 width=8) (actual time=4052.263..4052.269 rows=42 loops=1)
               ->  Subquery Scan c_orders  (cost=235280.58..274412.04 rows=150000 width=8) (actual time=3230.947..4029.664 rows=150000 loops=1)
                     ->  GroupAggregate  (cost=235280.58..272912.04 rows=150000 width=8) (actual time=3230.946..4006.609 rows=150000 loops=1)
                           ->  Merge Left Join  (cost=235280.58..265036.73 rows=1500061 width=8) (actual time=3230.933..3798.874 rows=1533923 loops=1)
                                 Merge Cond: ("outer".c_custkey = "inner".o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.00..6881.00 rows=150000 width=4) (actual time=1.547..70.099 rows=150000 loops=1)
                                 ->  Sort  (cost=235280.58..239030.74 rows=1500061 width=8) (actual time=3229.375..3371.261 rows=1483918 loops=1)
                                       Sort Key: orders.o_custkey
                                       ->  Seq Scan on orders  (cost=0.00..50635.76 rows=1500061 width=8) (actual time=0.305..1415.608 rows=1483918 loops=1)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 4062.398 ms
(14 rows)

SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=275170.18..275170.19 rows=1 width=8) (actual time=3872.494..3872.494 rows=1 loops=1)
   ->  Sort  (cost=275170.18..275170.68 rows=200 width=8) (actual time=3872.493..3872.493 rows=1 loops=1)
         Sort Key: count(*), c_count
         ->  HashAggregate  (cost=275162.04..275162.54 rows=200 width=8) (actual time=3872.468..3872.474 rows=42 loops=1)
               ->  Subquery Scan c_orders  (cost=235280.58..274412.04 rows=150000 width=8) (actual time=3080.253..3851.066 rows=150000 loops=1)
                     ->  GroupAggregate  (cost=235280.58..272912.04 rows=150000 width=8) (actual time=3080.252..3828.212 rows=150000 loops=1)
                           ->  Merge Left Join  (cost=235280.58..265036.73 rows=1500061 width=8) (actual time=3080.229..3621.449 rows=1533923 loops=1)
                                 Merge Cond: ("outer".c_custkey = "inner".o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.00..6881.00 rows=150000 width=4) (actual time=0.017..47.902 rows=150000 loops=1)
                                 ->  Sort  (cost=235280.58..239030.74 rows=1500061 width=8) (actual time=3080.203..3218.323 rows=1483918 loops=1)
                                       Sort Key: orders.o_custkey
                                       ->  Seq Scan on orders  (cost=0.00..50635.76 rows=1500061 width=8) (actual time=0.007..1338.120 rows=1483918 loops=1)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 3881.496 ms
(14 rows)

query 14 run 1
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=151569.95..151569.97 rows=1 width=46) (actual time=7875.803..7875.803 rows=1 loops=1)
   ->  Aggregate  (cost=151569.95..151569.97 rows=1 width=46) (actual time=7875.801..7875.801 rows=1 loops=1)
         ->  Merge Join  (cost=140958.40..151206.58 rows=72673 width=46) (actual time=7668.776..7820.577 rows=77317 loops=1)
               Merge Cond: ("outer".p_partkey = "inner".l_partkey)
               ->  Index Scan using part_pkey on part  (cost=0.00..8659.00 rows=200000 width=28) (actual time=1.607..81.064 rows=200000 loops=1)
               ->  Sort  (cost=140958.40..141140.08 rows=72673 width=26) (actual time=7667.151..7675.800 rows=77317 loops=1)
                     Sort Key: lineitem.l_partkey
                     ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..133954.03 rows=72673 width=26) (actual time=1.238..7460.439 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
 Total runtime: 7876.684 ms
(10 rows)

SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=151569.95..151569.97 rows=1 width=46) (actual time=452.524..452.524 rows=1 loops=1)
   ->  Aggregate  (cost=151569.95..151569.97 rows=1 width=46) (actual time=452.522..452.522 rows=1 loops=1)
         ->  Merge Join  (cost=140958.40..151206.58 rows=72673 width=46) (actual time=274.413..398.521 rows=77317 loops=1)
               Merge Cond: ("outer".p_partkey = "inner".l_partkey)
               ->  Index Scan using part_pkey on part  (cost=0.00..8659.00 rows=200000 width=28) (actual time=0.016..52.986 rows=200000 loops=1)
               ->  Sort  (cost=140958.40..141140.08 rows=72673 width=26) (actual time=274.369..282.570 rows=77317 loops=1)
                     Sort Key: lineitem.l_partkey
                     ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..133954.03 rows=72673 width=26) (actual time=0.028..155.565 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
 Total runtime: 453.314 ms
(10 rows)

query 15 run 1
SET
CREATE VIEW
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=498859.69..498860.94 rows=1 width=112) (actual time=4242.659..4242.659 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=249139.01..249139.01 rows=1 width=32) (actual time=1567.441..1567.441 rows=1 loops=1)
           ->  Subquery Scan revenue0  (cost=249131.51..249138.07 rows=375 width=32) (actual time=1562.083..1566.324 rows=10000 loops=1)
                 ->  HashAggregate  (cost=249131.51..249134.32 rows=375 width=26) (actual time=1562.082..1564.835 rows=10000 loops=1)
                       ->  Seq Scan on lineitem  (cost=0.00..248005.86 rows=225130 width=26) (actual time=0.003..1396.942 rows=225954 loops=1)
                             Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=249720.68..250190.31 rows=375 width=112) (actual time=4242.658..4242.658 rows=1 loops=1)
         Merge Cond: ("outer".s_suppkey = "inner".supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..439.00 rows=10000 width=80) (actual time=0.840..5.405 rows=8449 loops=1)
         ->  Sort  (cost=249720.68..249721.62 rows=375 width=36) (actual time=4236.498..4236.498 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=249694.33..249704.65 rows=375 width=36) (actual time=4236.025..4236.462 rows=1 loops=1)
                     ->  HashAggregate  (cost=249694.33..249700.90 rows=375 width=26) (actual time=4236.024..4236.461 rows=1 loops=1)
                           Filter: (sum((l_extendedprice * (1::numeric - l_discount))) = $0)
                           ->  Seq Scan on lineitem  (cost=0.00..248005.86 rows=225130 width=26) (actual time=0.552..2462.929 rows=225954 loops=1)
                                 Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 4243.411 ms
(18 rows)

DROP VIEW
SET
CREATE VIEW
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=498859.69..498860.94 rows=1 width=112) (actual time=3545.404..3545.405 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=249139.01..249139.01 rows=1 width=32) (actual time=1568.278..1568.278 rows=1 loops=1)
           ->  Subquery Scan revenue0  (cost=249131.51..249138.07 rows=375 width=32) (actual time=1562.967..1567.250 rows=10000 loops=1)
                 ->  HashAggregate  (cost=249131.51..249134.32 rows=375 width=26) (actual time=1562.965..1565.723 rows=10000 loops=1)
                       ->  Seq Scan on lineitem  (cost=0.00..248005.86 rows=225130 width=26) (actual time=0.003..1399.006 rows=225954 loops=1)
                             Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=249720.68..250190.31 rows=375 width=112) (actual time=3545.403..3545.403 rows=1 loops=1)
         Merge Cond: ("outer".s_suppkey = "inner".supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..439.00 rows=10000 width=80) (actual time=0.014..2.298 rows=8449 loops=1)
         ->  Sort  (cost=249720.68..249721.62 rows=375 width=36) (actual time=3542.381..3542.381 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=249694.33..249704.65 rows=375 width=36) (actual time=3541.923..3542.369 rows=1 loops=1)
                     ->  HashAggregate  (cost=249694.33..249700.90 rows=375 width=26) (actual time=3541.922..3542.367 rows=1 loops=1)
                           Filter: (sum((l_extendedprice * (1::numeric - l_discount))) = $0)
                           ->  Seq Scan on lineitem  (cost=0.00..248005.86 rows=225130 width=26) (actual time=0.004..1796.418 rows=225954 loops=1)
                                 Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 3545.500 ms
(18 rows)

DROP VIEW
query 16 run 1
SET
                                                                                                                             QUERY PLAN                                                                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=57215.94..57215.94 rows=1 width=46) (actual time=2028.858..2028.858 rows=1 loops=1)
   ->  Sort  (cost=57215.94..57222.99 rows=2820 width=46) (actual time=2028.856..2028.856 rows=1 loops=1)
         Sort Key: count(DISTINCT partsupp.ps_suppkey), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=56344.40..57054.33 rows=2820 width=46) (actual time=1914.343..1972.241 rows=18220 loops=1)
               ->  Sort  (cost=56344.40..56484.98 rows=56230 width=46) (actual time=1914.323..1925.600 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Merge Join  (cost=384.00..50807.81 rows=56230 width=46) (actual time=13.732..758.393 rows=117930 loops=1)
                           Merge Cond: ("outer".p_partkey = "inner".ps_partkey)
                           ->  Index Scan using part_pkey on part  (cost=0.00..13659.00 rows=28194 width=46) (actual time=1.319..199.779 rows=29492 loops=1)
                                 Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND ((p_size = 12) OR (p_size = 32) OR (p_size = 36) OR (p_size = 26) OR (p_size = 40) OR (p_size = 34) OR (p_size = 49) OR (p_size = 9)))
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=384.00..35517.00 rows=400000 width=8) (actual time=12.392..443.568 rows=799673 loops=1)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..384.00 rows=1 width=4) (actual time=1.752..11.385 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
 Total runtime: 2030.959 ms
(16 rows)

SET
                                                                                                                             QUERY PLAN                                                                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=57215.94..57215.94 rows=1 width=46) (actual time=1888.786..1888.786 rows=1 loops=1)
   ->  Sort  (cost=57215.94..57222.99 rows=2820 width=46) (actual time=1888.785..1888.785 rows=1 loops=1)
         Sort Key: count(DISTINCT partsupp.ps_suppkey), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=56344.40..57054.33 rows=2820 width=46) (actual time=1773.258..1831.795 rows=18220 loops=1)
               ->  Sort  (cost=56344.40..56484.98 rows=56230 width=46) (actual time=1773.239..1784.702 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Merge Join  (cost=384.00..50807.81 rows=56230 width=46) (actual time=8.074..635.505 rows=117930 loops=1)
                           Merge Cond: ("outer".p_partkey = "inner".ps_partkey)
                           ->  Index Scan using part_pkey on part  (cost=0.00..13659.00 rows=28194 width=46) (actual time=0.030..176.142 rows=29492 loops=1)
                                 Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND ((p_size = 12) OR (p_size = 32) OR (p_size = 36) OR (p_size = 26) OR (p_size = 40) OR (p_size = 34) OR (p_size = 49) OR (p_size = 9)))
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=384.00..35517.00 rows=400000 width=8) (actual time=8.023..346.836 rows=799673 loops=1)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..384.00 rows=1 width=4) (actual time=0.309..7.999 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
 Total runtime: 1890.617 ms
(16 rows)

query 17 run 1
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1149725.02..1149725.02 rows=1 width=13) (actual time=19081.552..19081.552 rows=1 loops=1)
   ->  Aggregate  (cost=1149725.02..1149725.02 rows=1 width=13) (actual time=19081.551..19081.551 rows=1 loops=1)
         ->  Nested Loop  (cost=1096282.82..1149719.92 rows=2041 width=13) (actual time=14873.057..19081.095 rows=592 loops=1)
               ->  Merge Join  (cost=1096282.82..1144747.31 rows=204 width=40) (actual time=14872.328..19009.941 rows=208 loops=1)
                     Merge Cond: ("outer".agg_partkey = "inner".p_partkey)
                     ->  Subquery Scan part_agg  (cost=1088166.90..1136134.61 rows=197485 width=36) (actual time=14787.875..18918.575 rows=199276 loops=1)
                           ->  GroupAggregate  (cost=1088166.90..1134159.76 rows=197485 width=14) (actual time=14787.873..18878.119 rows=199276 loops=1)
                                 ->  Sort  (cost=1088166.90..1103168.71 rows=6000724 width=14) (actual time=14787.836..15546.779 rows=5979358 loops=1)
                                       Sort Key: l_partkey
                                       ->  Seq Scan on lineitem  (cost=0.00..218002.24 rows=6000724 width=14) (actual time=0.449..2097.176 rows=6001215 loops=1)
                     ->  Sort  (cost=8115.92..8116.43 rows=206 width=4) (actual time=71.643..71.718 rows=208 loops=1)
                           Sort Key: part.p_partkey
                           ->  Seq Scan on part  (cost=0.00..8108.00 rows=206 width=4) (actual time=1.423..71.577 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using q17_idx_1 on lineitem  (cost=0.00..24.21 rows=11 width=27) (actual time=0.332..0.339 rows=3 loops=208)
                     Index Cond: (("outer".agg_partkey = lineitem.l_partkey) AND (lineitem.l_quantity < "outer".avg_quantity))
 Total runtime: 19256.680 ms
(17 rows)

SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1149725.02..1149725.02 rows=1 width=13) (actual time=18462.684..18462.684 rows=1 loops=1)
   ->  Aggregate  (cost=1149725.02..1149725.02 rows=1 width=13) (actual time=18462.684..18462.684 rows=1 loops=1)
         ->  Nested Loop  (cost=1096282.82..1149719.92 rows=2041 width=13) (actual time=14316.283..18462.521 rows=592 loops=1)
               ->  Merge Join  (cost=1096282.82..1144747.31 rows=204 width=40) (actual time=14316.259..18458.689 rows=208 loops=1)
                     Merge Cond: ("outer".agg_partkey = "inner".p_partkey)
                     ->  Subquery Scan part_agg  (cost=1088166.90..1136134.61 rows=197485 width=36) (actual time=14254.096..18389.864 rows=199276 loops=1)
                           ->  GroupAggregate  (cost=1088166.90..1134159.76 rows=197485 width=14) (actual time=14254.094..18348.547 rows=199276 loops=1)
                                 ->  Sort  (cost=1088166.90..1103168.71 rows=6000724 width=14) (actual time=14254.058..15021.332 rows=5979358 loops=1)
                                       Sort Key: l_partkey
                                       ->  Seq Scan on lineitem  (cost=0.00..218002.24 rows=6000724 width=14) (actual time=0.003..1509.316 rows=6001215 loops=1)
                     ->  Sort  (cost=8115.92..8116.43 rows=206 width=4) (actual time=49.373..49.394 rows=208 loops=1)
                           Sort Key: part.p_partkey
                           ->  Seq Scan on part  (cost=0.00..8108.00 rows=206 width=4) (actual time=0.182..49.329 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using q17_idx_1 on lineitem  (cost=0.00..24.21 rows=11 width=27) (actual time=0.014..0.017 rows=3 loops=208)
                     Index Cond: (("outer".agg_partkey = lineitem.l_partkey) AND (lineitem.l_quantity < "outer".avg_quantity))
 Total runtime: 18638.752 ms
(17 rows)

query 18 run 1
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1105622.28..1105622.53 rows=100 width=57) (actual time=5575.842..5575.844 rows=9 loops=1)
   ->  Sort  (cost=1105622.28..1108527.14 rows=1161945 width=57) (actual time=5575.841..5575.841 rows=9 loops=1)
         Sort Key: orders.o_totalprice, orders.o_orderdate
         ->  GroupAggregate  (cost=901454.41..924693.31 rows=1161945 width=57) (actual time=5575.497..5575.525 rows=9 loops=1)
               ->  Sort  (cost=901454.41..904359.27 rows=1161945 width=57) (actual time=5575.486..5575.488 rows=63 loops=1)
                     Sort Key: customer.c_name, customer.c_custkey, orders.o_orderkey, orders.o_orderdate, orders.o_totalprice
                     ->  Merge Join  (cost=423632.18..720525.44 rows=1161945 width=57) (actual time=4685.459..5575.287 rows=63 loops=1)
                           Merge Cond: ("outer".l_orderkey = "inner".o_orderkey)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..264462.86 rows=6000724 width=14) (actual time=0.991..864.008 rows=4807580 loops=1)
                           ->  Sort  (cost=423632.18..424358.34 rows=290463 width=51) (actual time=4368.165..4368.169 rows=57 loops=1)
                                 Sort Key: orders.o_orderkey
                                 ->  Hash Join  (cost=307796.89..390976.95 rows=290463 width=51) (actual time=2859.182..4368.153 rows=9 loops=1)
                                       Hash Cond: ("outer".o_custkey = "inner".c_custkey)
                                       ->  Merge IN Join  (cost=300532.89..370739.37 rows=290463 width=29) (actual time=944.118..4267.478 rows=9 loops=1)
                                             Merge Cond: ("outer".o_orderkey = "inner".l_orderkey)
                                             ->  Index Scan using orders_pkey on orders  (cost=0.00..58501.92 rows=1500061 width=25) (actual time=1.029..415.074 rows=1201687 loops=1)
                                             ->  Materialize  (cost=300532.89..304856.52 rows=290463 width=4) (actual time=803.578..3762.355 rows=9 loops=1)
                                                   ->  Subquery Scan "IN_subquery"  (cost=0.00..298823.42 rows=290463 width=4) (actual time=803.575..3762.343 rows=9 loops=1)
                                                         ->  GroupAggregate  (cost=0.00..295918.79 rows=290463 width=14) (actual time=803.574..3762.333 rows=9 loops=1)
                                                               Filter: (sum(l_quantity) > 313::numeric)
                                                               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..264462.86 rows=6000724 width=14) (actual time=0.007..2337.146 rows=6001215 loops=1)
                                       ->  Hash  (cost=5717.00..5717.00 rows=150000 width=26) (actual time=89.538..89.538 rows=0 loops=1)
                                             ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=26) (actual time=0.386..66.869 rows=150000 loops=1)
 Total runtime: 5575.902 ms
(24 rows)

SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1105622.28..1105622.53 rows=100 width=57) (actual time=4603.474..4603.475 rows=9 loops=1)
   ->  Sort  (cost=1105622.28..1108527.14 rows=1161945 width=57) (actual time=4603.472..4603.472 rows=9 loops=1)
         Sort Key: orders.o_totalprice, orders.o_orderdate
         ->  GroupAggregate  (cost=901454.41..924693.31 rows=1161945 width=57) (actual time=4603.407..4603.435 rows=9 loops=1)
               ->  Sort  (cost=901454.41..904359.27 rows=1161945 width=57) (actual time=4603.396..4603.398 rows=63 loops=1)
                     Sort Key: customer.c_name, customer.c_custkey, orders.o_orderkey, orders.o_orderdate, orders.o_totalprice
                     ->  Merge Join  (cost=423632.18..720525.44 rows=1161945 width=57) (actual time=3710.813..4603.212 rows=63 loops=1)
                           Merge Cond: ("outer".l_orderkey = "inner".o_orderkey)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..264462.86 rows=6000724 width=14) (actual time=0.023..868.087 rows=4807580 loops=1)
                           ->  Sort  (cost=423632.18..424358.34 rows=290463 width=51) (actual time=3390.693..3390.697 rows=57 loops=1)
                                 Sort Key: orders.o_orderkey
                                 ->  Hash Join  (cost=307796.89..390976.95 rows=290463 width=51) (actual time=2205.292..3390.685 rows=9 loops=1)
                                       Hash Cond: ("outer".o_custkey = "inner".c_custkey)
                                       ->  Merge IN Join  (cost=300532.89..370739.37 rows=290463 width=29) (actual time=717.070..3311.353 rows=9 loops=1)
                                             Merge Cond: ("outer".o_orderkey = "inner".l_orderkey)
                                             ->  Index Scan using orders_pkey on orders  (cost=0.00..58501.92 rows=1500061 width=25) (actual time=0.011..286.265 rows=1201687 loops=1)
                                             ->  Materialize  (cost=300532.89..304856.52 rows=290463 width=4) (actual time=618.891..2937.766 rows=9 loops=1)
                                                   ->  Subquery Scan "IN_subquery"  (cost=0.00..298823.42 rows=290463 width=4) (actual time=618.889..2937.755 rows=9 loops=1)
                                                         ->  GroupAggregate  (cost=0.00..295918.79 rows=290463 width=14) (actual time=618.887..2937.747 rows=9 loops=1)
                                                               Filter: (sum(l_quantity) > 313::numeric)
                                                               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..264462.86 rows=6000724 width=14) (actual time=0.003..1548.740 rows=6001215 loops=1)
                                       ->  Hash  (cost=5717.00..5717.00 rows=150000 width=26) (actual time=68.587..68.587 rows=0 loops=1)
                                             ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=26) (actual time=0.007..46.278 rows=150000 loops=1)
 Total runtime: 4603.536 ms
(24 rows)

query 19 run 1
SET


 Limit  (cost=296420.27..296420.28 rows=1 width=22) (actual time=3486.179..3486.179 rows=1 loops=1)
   ->  Aggregate  (cost=296420.27..296420.28 rows=1 width=22) (actual time=3486.177..3486.177 rows=1 loops=1)
         ->  Hash Join  (cost=9866.00..296420.00 rows=109 width=22) (actual time=688.934..3486.033 rows=111 loops=1)
               Hash Cond: ("outer".l_partkey = "inner".p_partkey)
               Join Filter: ((("inner".p_brand = 'Brand#24'::bpchar) AND (("inner".p_container = 'SM CASE'::bpchar) OR ("inner".p_container = 'SM BOX'::bpchar) OR ("inner".p_container = 'SM PACK'::bpchar) OR ("inner".p_container = 'SM PKG'::bpchar)) AND ("outer".l_quantity >= 10::numeric) AND ("outer".l_quantity <= 20::numeric) AND ("inner".p_size <= 5)) OR (("inner".p_brand = 'Brand#43'::bpchar) AND (("inner".p_container = 'MED BAG'::bpchar) OR ("inner".p_container = 'MED BOX'::bpchar) OR ("inner".p_container = 'MED PKG'::bpchar) OR ("inner".p_container = 'MED PACK'::bpchar)) AND ("outer".l_quantity >= 10::numeric) AND ("outer".l_quantity <= 20::numeric) AND ("inner".p_size <= 10)) OR (("inner".p_brand = 'Brand#44'::bpchar) AND (("inner".p_container = 'LG CASE'::bpchar) OR ("inner".p_container = 'LG BOX'::bpchar) OR ("inner".p_container = 'LG PACK'::bpchar) OR ("inner".p_container = 'LG PKG'::bpchar)) AND ("outer".l_quantity >= 20::numeric) AND ("outer".l_quantity <= 30::numeric) AND ("inner".p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..263007.67 rows=212403 width=36) (actual time=0.766..3008.005 rows=214377 loops=1)
                     Filter: (((l_shipmode = 'AIR'::bpchar) OR (l_shipmode = 'AIR REG'::bpchar)) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
               ->  Hash  (cost=7608.00..7608.00 rows=200000 width=36) (actual time=143.266..143.266 rows=0 loops=1)
                     ->  Seq Scan on part  (cost=0.00..7608.00 rows=200000 width=36) (actual time=0.506..113.368 rows=200000 loops=1)
                           Filter: (p_size >= 1)
 Total runtime: 3486.217 ms
(11 rows)

SET


 Limit  (cost=296420.27..296420.28 rows=1 width=22) (actual time=2765.285..2765.285 rows=1 loops=1)
   ->  Aggregate  (cost=296420.27..296420.28 rows=1 width=22) (actual time=2765.285..2765.285 rows=1 loops=1)
         ->  Hash Join  (cost=9866.00..296420.00 rows=109 width=22) (actual time=537.175..2765.131 rows=111 loops=1)
               Hash Cond: ("outer".l_partkey = "inner".p_partkey)
               Join Filter: ((("inner".p_brand = 'Brand#24'::bpchar) AND (("inner".p_container = 'SM CASE'::bpchar) OR ("inner".p_container = 'SM BOX'::bpchar) OR ("inner".p_container = 'SM PACK'::bpchar) OR ("inner".p_container = 'SM PKG'::bpchar)) AND ("outer".l_quantity >= 10::numeric) AND ("outer".l_quantity <= 20::numeric) AND ("inner".p_size <= 5)) OR (("inner".p_brand = 'Brand#43'::bpchar) AND (("inner".p_container = 'MED BAG'::bpchar) OR ("inner".p_container = 'MED BOX'::bpchar) OR ("inner".p_container = 'MED PKG'::bpchar) OR ("inner".p_container = 'MED PACK'::bpchar)) AND ("outer".l_quantity >= 10::numeric) AND ("outer".l_quantity <= 20::numeric) AND ("inner".p_size <= 10)) OR (("inner".p_brand = 'Brand#44'::bpchar) AND (("inner".p_container = 'LG CASE'::bpchar) OR ("inner".p_container = 'LG BOX'::bpchar) OR ("inner".p_container = 'LG PACK'::bpchar) OR ("inner".p_container = 'LG PKG'::bpchar)) AND ("outer".l_quantity >= 20::numeric) AND ("outer".l_quantity <= 30::numeric) AND ("inner".p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..263007.67 rows=212403 width=36) (actual time=0.016..2327.730 rows=214377 loops=1)
                     Filter: (((l_shipmode = 'AIR'::bpchar) OR (l_shipmode = 'AIR REG'::bpchar)) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
               ->  Hash  (cost=7608.00..7608.00 rows=200000 width=36) (actual time=120.497..120.497 rows=0 loops=1)
                     ->  Seq Scan on part  (cost=0.00..7608.00 rows=200000 width=36) (actual time=0.009..90.849 rows=200000 loops=1)
                           Filter: (p_size >= 1)
 Total runtime: 2765.323 ms
(11 rows)

query 20 run 1
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=386632.11..386632.12 rows=1 width=57) (actual time=5556.265..5556.266 rows=1 loops=1)
   ->  Sort  (cost=386632.11..386632.12 rows=1 width=57) (actual time=5556.264..5556.264 rows=1 loops=1)
         Sort Key: supplier.s_name
         ->  Hash Join  (cost=386631.64..386632.10 rows=1 width=57) (actual time=5554.404..5555.791 rows=196 loops=1)
               Hash Cond: ("outer".ps_suppkey = "inner".s_suppkey)
               ->  HashAggregate  (cost=386216.32..386216.32 rows=1 width=8) (actual time=5548.349..5549.327 rows=4421 loops=1)
                     ->  Nested Loop  (cost=372531.23..386216.32 rows=1 width=8) (actual time=4352.593..5544.462 rows=5898 loops=1)
                           Join Filter: (("outer".agg_suppkey = "inner".ps_suppkey) AND (("inner".ps_availqty)::numeric > "outer".agg_quantity))
                           ->  Merge Join  (cost=372531.23..383324.70 rows=918 width=44) (actual time=4351.171..5022.851 rows=5914 loops=1)
                                 Merge Cond: ("outer".agg_partkey = "inner".p_partkey)
                                 ->  Subquery Scan agg_lineitem  (cost=364808.51..375353.55 rows=91696 width=40) (actual time=4277.540..4897.050 rows=544645 loops=1)
                                       ->  GroupAggregate  (cost=364808.51..374436.59 rows=91696 width=18) (actual time=4277.538..4782.781 rows=544645 loops=1)
                                             ->  Sort  (cost=364808.51..367100.91 rows=916960 width=18) (actual time=4277.522..4410.268 rows=913097 loops=1)
                                                   Sort Key: l_partkey, l_suppkey
                                                   ->  Seq Scan on lineitem  (cost=0.00..248005.86 rows=916960 width=18) (actual time=0.441..2523.904 rows=913487 loops=1)
                                                         Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Sort  (cost=7722.72..7727.72 rows=2001 width=4) (actual time=73.236..74.082 rows=5939 loops=1)
                                       Sort Key: part.p_partkey
                                       ->  HashAggregate  (cost=7613.00..7613.00 rows=2001 width=4) (actual time=71.255..72.690 rows=2187 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..7608.00 rows=2001 width=4) (actual time=0.825..70.657 rows=2187 loops=1)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.07 rows=4 width=12) (actual time=0.077..0.086 rows=4 loops=5914)
                                 Index Cond: (partsupp.ps_partkey = "outer".p_partkey)
               ->  Hash  (cost=414.31..414.31 rows=400 width=61) (actual time=6.033..6.033 rows=0 loops=1)
                     ->  Hash Join  (cost=1.31..414.31 rows=400 width=61) (actual time=0.522..5.979 rows=438 loops=1)
                           Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                           ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=65) (actual time=0.304..4.797 rows=10000 loops=1)
                           ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.208..0.208 rows=0 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.201..0.207 rows=1 loops=1)
                                       Filter: (n_name = 'IRAQ'::bpchar)
 Total runtime: 5582.133 ms
(31 rows)

SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=386632.11..386632.12 rows=1 width=57) (actual time=4240.403..4240.403 rows=1 loops=1)
   ->  Sort  (cost=386632.11..386632.12 rows=1 width=57) (actual time=4240.403..4240.403 rows=1 loops=1)
         Sort Key: supplier.s_name
         ->  Hash Join  (cost=386631.64..386632.10 rows=1 width=57) (actual time=4238.553..4239.931 rows=196 loops=1)
               Hash Cond: ("outer".ps_suppkey = "inner".s_suppkey)
               ->  HashAggregate  (cost=386216.32..386216.32 rows=1 width=8) (actual time=4235.103..4236.068 rows=4421 loops=1)
                     ->  Nested Loop  (cost=372531.23..386216.32 rows=1 width=8) (actual time=3579.333..4233.238 rows=5898 loops=1)
                           Join Filter: (("outer".agg_suppkey = "inner".ps_suppkey) AND (("inner".ps_availqty)::numeric > "outer".agg_quantity))
                           ->  Merge Join  (cost=372531.23..383324.70 rows=918 width=44) (actual time=3579.306..4203.589 rows=5914 loops=1)
                                 Merge Cond: ("outer".agg_partkey = "inner".p_partkey)
                                 ->  Subquery Scan agg_lineitem  (cost=364808.51..375353.55 rows=91696 width=40) (actual time=3525.585..4103.571 rows=544645 loops=1)
                                       ->  GroupAggregate  (cost=364808.51..374436.59 rows=91696 width=18) (actual time=3525.583..3994.799 rows=544645 loops=1)
                                             ->  Sort  (cost=364808.51..367100.91 rows=916960 width=18) (actual time=3525.567..3644.233 rows=913097 loops=1)
                                                   Sort Key: l_partkey, l_suppkey
                                                   ->  Seq Scan on lineitem  (cost=0.00..248005.86 rows=916960 width=18) (actual time=0.006..1893.003 rows=913487 loops=1)
                                                         Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Sort  (cost=7722.72..7727.72 rows=2001 width=4) (actual time=53.323..53.664 rows=5939 loops=1)
                                       Sort Key: part.p_partkey
                                       ->  HashAggregate  (cost=7613.00..7613.00 rows=2001 width=4) (actual time=51.357..52.753 rows=2187 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..7608.00 rows=2001 width=4) (actual time=0.048..50.912 rows=2187 loops=1)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.07 rows=4 width=12) (actual time=0.003..0.004 rows=4 loops=5914)
                                 Index Cond: (partsupp.ps_partkey = "outer".p_partkey)
               ->  Hash  (cost=414.31..414.31 rows=400 width=61) (actual time=3.437..3.437 rows=0 loops=1)
                     ->  Hash Join  (cost=1.31..414.31 rows=400 width=61) (actual time=0.025..3.388 rows=438 loops=1)
                           Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                           ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=65) (actual time=0.004..2.385 rows=10000 loops=1)
                           ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.014..0.014 rows=0 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                                       Filter: (n_name = 'IRAQ'::bpchar)
 Total runtime: 4264.726 ms
(31 rows)

query 21 run 1
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3032100.98..3032101.23 rows=100 width=29) (actual time=14735.345..14735.354 rows=100 loops=1)
   ->  Sort  (cost=3032100.98..3032124.88 rows=9561 width=29) (actual time=14735.343..14735.346 rows=100 loops=1)
         Sort Key: count(*), supplier.s_name
         ->  HashAggregate  (cost=3031444.96..3031468.86 rows=9561 width=29) (actual time=14734.387..14734.521 rows=421 loops=1)
               ->  Hash Join  (cost=385.31..3031397.15 rows=9561 width=29) (actual time=13.844..14730.600 rows=4227 loops=1)
                     Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                     ->  Hash Join  (cost=384.00..3030105.25 rows=238997 width=33) (actual time=9.701..14718.797 rows=98833 loops=1)
                           Hash Cond: ("outer".l_suppkey = "inner".s_suppkey)
                           ->  Merge Join  (cost=0.00..3024343.81 rows=238997 width=4) (actual time=3.063..14620.485 rows=98833 loops=1)
                                 Merge Cond: ("outer".l_orderkey = "inner".o_orderkey)
                                 ->  Index Scan using q21_idx_2 on lineitem l1  (cost=0.00..2956665.64 rows=500061 width=8) (actual time=1.895..13776.011 rows=202092 loops=1)
                                       Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                       SubPlan
                                         ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..3.47 rows=7 width=152) (actual time=0.001..0.001 rows=1 loops=3657708)
                                               Index Cond: (l_orderkey = $0)
                                               Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                         ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..3.42 rows=21 width=152) (actual time=0.001..0.001 rows=1 loops=3793296)
                                               Index Cond: (l_orderkey = $0)
                                               Filter: (l_suppkey <> $1)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..62252.07 rows=716930 width=4) (actual time=1.154..628.589 rows=729422 loops=1)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                           ->  Hash  (cost=359.00..359.00 rows=10000 width=37) (actual time=6.629..6.629 rows=0 loops=1)
                                 ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=37) (actual time=0.281..5.547 rows=10000 loops=1)
                     ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.200..0.200 rows=0 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.195..0.198 rows=1 loops=1)
                                 Filter: (n_name = 'PERU'::bpchar)
 Total runtime: 14737.136 ms
(27 rows)

SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3032100.98..3032101.23 rows=100 width=29) (actual time=13405.631..13405.641 rows=100 loops=1)
   ->  Sort  (cost=3032100.98..3032124.88 rows=9561 width=29) (actual time=13405.630..13405.635 rows=100 loops=1)
         Sort Key: count(*), supplier.s_name
         ->  HashAggregate  (cost=3031444.96..3031468.86 rows=9561 width=29) (actual time=13404.700..13404.833 rows=421 loops=1)
               ->  Hash Join  (cost=385.31..3031397.15 rows=9561 width=29) (actual time=7.841..13401.909 rows=4227 loops=1)
                     Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                     ->  Hash Join  (cost=384.00..3030105.25 rows=238997 width=33) (actual time=4.729..13391.894 rows=98833 loops=1)
                           Hash Cond: ("outer".l_suppkey = "inner".s_suppkey)
                           ->  Merge Join  (cost=0.00..3024343.81 rows=238997 width=4) (actual time=0.181..13305.455 rows=98833 loops=1)
                                 Merge Cond: ("outer".l_orderkey = "inner".o_orderkey)
                                 ->  Index Scan using q21_idx_2 on lineitem l1  (cost=0.00..2956665.64 rows=500061 width=8) (actual time=0.153..12643.465 rows=202092 loops=1)
                                       Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                       SubPlan
                                         ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..3.47 rows=7 width=152) (actual time=0.001..0.001 rows=1 loops=3657708)
                                               Index Cond: (l_orderkey = $0)
                                               Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                         ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..3.42 rows=21 width=152) (actual time=0.001..0.001 rows=1 loops=3793296)
                                               Index Cond: (l_orderkey = $0)
                                               Filter: (l_suppkey <> $1)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..62252.07 rows=716930 width=4) (actual time=0.019..460.223 rows=729422 loops=1)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                           ->  Hash  (cost=359.00..359.00 rows=10000 width=37) (actual time=4.543..4.543 rows=0 loops=1)
                                 ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=37) (actual time=0.004..3.434 rows=10000 loops=1)
                     ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.015..0.015 rows=0 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.015 rows=1 loops=1)
                                 Filter: (n_name = 'PERU'::bpchar)
 Total runtime: 13405.978 ms
(27 rows)

query 22 run 1
SET
                                                                                                                                                                                                                        QUERY PLAN                                                                                                                                                                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=347176.46..347176.48 rows=1 width=30) (actual time=1416.348..1416.348 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=13978.76..13978.76 rows=1 width=11) (actual time=337.521..337.521 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..13967.00 rows=4703 width=11) (actual time=0.013..315.053 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (("substring"((c_phone)::text, 1, 2) = '21'::text) OR ("substring"((c_phone)::text, 1, 2) = '29'::text) OR ("substring"((c_phone)::text, 1, 2) = '26'::text) OR ("substring"((c_phone)::text, 1, 2) = '34'::text) OR ("substring"((c_phone)::text, 1, 2) = '14'::text) OR ("substring"((c_phone)::text, 1, 2) = '15'::text) OR ("substring"((c_phone)::text, 1, 2) = '17'::text)))
   ->  GroupAggregate  (cost=333197.70..333214.94 rows=862 width=30) (actual time=1416.347..1416.347 rows=1 loops=1)
         ->  Sort  (cost=333197.70..333199.85 rows=862 width=30) (actual time=1416.044..1416.066 rows=952 loops=1)
               Sort Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Seq Scan on customer  (cost=0.00..333155.67 rows=862 width=30) (actual time=338.752..1406.430 rows=6397 loops=1)
                     Filter: ((("substring"((c_phone)::text, 1, 2) = '21'::text) OR ("substring"((c_phone)::text, 1, 2) = '29'::text) OR ("substring"((c_phone)::text, 1, 2) = '26'::text) OR ("substring"((c_phone)::text, 1, 2) = '34'::text) OR ("substring"((c_phone)::text, 1, 2) = '14'::text) OR ("substring"((c_phone)::text, 1, 2) = '15'::text) OR ("substring"((c_phone)::text, 1, 2) = '17'::text)) AND (c_acctbal > $0) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..38.30 rows=18 width=124) (actual time=0.036..0.036 rows=1 loops=19077)
                             Index Cond: (o_custkey = $1)
 Total runtime: 1416.778 ms
(14 rows)

SET
                                                                                                                                                                                                                        QUERY PLAN                                                                                                                                                                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=347176.46..347176.48 rows=1 width=30) (actual time=683.872..683.872 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=13978.76..13978.76 rows=1 width=11) (actual time=317.105..317.106 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..13967.00 rows=4703 width=11) (actual time=0.012..294.512 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (("substring"((c_phone)::text, 1, 2) = '21'::text) OR ("substring"((c_phone)::text, 1, 2) = '29'::text) OR ("substring"((c_phone)::text, 1, 2) = '26'::text) OR ("substring"((c_phone)::text, 1, 2) = '34'::text) OR ("substring"((c_phone)::text, 1, 2) = '14'::text) OR ("substring"((c_phone)::text, 1, 2) = '15'::text) OR ("substring"((c_phone)::text, 1, 2) = '17'::text)))
   ->  GroupAggregate  (cost=333197.70..333214.94 rows=862 width=30) (actual time=683.870..683.870 rows=1 loops=1)
         ->  Sort  (cost=333197.70..333199.85 rows=862 width=30) (actual time=683.566..683.591 rows=952 loops=1)
               Sort Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Seq Scan on customer  (cost=0.00..333155.67 rows=862 width=30) (actual time=317.240..674.724 rows=6397 loops=1)
                     Filter: ((("substring"((c_phone)::text, 1, 2) = '21'::text) OR ("substring"((c_phone)::text, 1, 2) = '29'::text) OR ("substring"((c_phone)::text, 1, 2) = '26'::text) OR ("substring"((c_phone)::text, 1, 2) = '34'::text) OR ("substring"((c_phone)::text, 1, 2) = '14'::text) OR ("substring"((c_phone)::text, 1, 2) = '15'::text) OR ("substring"((c_phone)::text, 1, 2) = '17'::text)) AND (c_acctbal > $0) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..38.30 rows=18 width=124) (actual time=0.003..0.003 rows=1 loops=19077)
                             Index Cond: (o_custkey = $1)
 Total runtime: 683.988 ms
(14 rows)

