query 1 run 1
SET
SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4246658.76..4246658.76 rows=1 width=236) (actual time=70927.949..70927.950 rows=1 loops=1)
   ->  Sort  (cost=4246658.76..4246658.77 rows=6 width=236) (actual time=70927.948..70927.948 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=4246658.56..4246658.73 rows=6 width=236) (actual time=70927.704..70927.712 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..1874930.80 rows=59293194 width=25) (actual time=0.411..11764.918 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning time: 24.283 ms
 Execution time: 70928.047 ms
(11 rows)

SET
SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4246658.76..4246658.76 rows=1 width=236) (actual time=68902.953..68902.954 rows=1 loops=1)
   ->  Sort  (cost=4246658.76..4246658.77 rows=6 width=236) (actual time=68902.952..68902.952 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=4246658.56..4246658.73 rows=6 width=236) (actual time=68902.706..68902.714 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..1874930.80 rows=59293194 width=25) (actual time=0.026..10040.735 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning time: 0.878 ms
 Execution time: 68903.017 ms
(11 rows)

query 2 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=559584.11..559584.11 rows=1 width=192) (actual time=30042.364..30042.377 rows=100 loops=1)
   ->  Sort  (cost=559584.11..559584.11 rows=1 width=192) (actual time=30042.363..30042.369 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Nested Loop  (cost=52.74..559584.10 rows=1 width=192) (actual time=33.016..30039.460 rows=4737 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.008..0.014 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
               ->  Materialize  (cost=52.74..559581.40 rows=1 width=170) (actual time=5.516..6007.172 rows=4737 loops=5)
                     ->  Nested Loop  (cost=52.74..559581.39 rows=1 width=170) (actual time=27.576..30027.218 rows=4737 loops=1)
                           Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
                           Rows Removed by Join Filter: 236714834
                           ->  Nested Loop  (cost=52.74..555110.39 rows=1 width=34) (actual time=3.197..1287.917 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..54723.20 rows=9220 width=30) (actual time=0.669..275.437 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=52.19..54.26 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=51.75..51.76 rows=1 width=32) (actual time=0.121..0.121 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.54..51.74 rows=4 width=6) (actual time=0.107..0.117 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.54..50.45 rows=18 width=10) (actual time=0.088..0.114 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.97..48.83 rows=18 width=10) (actual time=0.087..0.112 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.75 rows=18 width=10) (actual time=0.077..0.078 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.54..2.56 rows=1 width=8) (actual time=0.008..0.008 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.019..0.020 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.005..0.011 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..2.541 rows=49972 loops=4737)
 Planning time: 26.893 ms
 Execution time: 30043.206 ms
(50 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=559584.11..559584.11 rows=1 width=192) (actual time=28696.102..28696.115 rows=100 loops=1)
   ->  Sort  (cost=559584.11..559584.11 rows=1 width=192) (actual time=28696.101..28696.108 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Nested Loop  (cost=52.74..559584.10 rows=1 width=192) (actual time=13.733..28693.298 rows=4737 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.008..0.014 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
               ->  Materialize  (cost=52.74..559581.40 rows=1 width=170) (actual time=2.112..5737.934 rows=4737 loops=5)
                     ->  Nested Loop  (cost=52.74..559581.39 rows=1 width=170) (actual time=10.556..28681.379 rows=4737 loops=1)
                           Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
                           Rows Removed by Join Filter: 236714834
                           ->  Nested Loop  (cost=52.74..555110.39 rows=1 width=34) (actual time=0.084..319.592 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..54723.20 rows=9220 width=30) (actual time=0.021..83.682 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=52.19..54.26 rows=1 width=14) (actual time=0.001..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=51.75..51.76 rows=1 width=32) (actual time=0.025..0.025 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.54..51.74 rows=4 width=6) (actual time=0.017..0.021 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.54..50.45 rows=18 width=10) (actual time=0.010..0.019 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.97..48.83 rows=18 width=10) (actual time=0.008..0.017 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.75 rows=18 width=10) (actual time=0.004..0.005 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.54..2.56 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.008..0.009 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..2.530 rows=49972 loops=4737)
 Planning time: 2.438 ms
 Execution time: 28696.217 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3450297.81..3450297.84 rows=10 width=44) (actual time=22490.490..22490.493 rows=10 loops=1)
   ->  Sort  (cost=3450297.81..3458181.11 rows=3153320 width=44) (actual time=22490.488..22490.491 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=3287556.10..3382155.70 rows=3153320 width=44) (actual time=22310.975..22471.812 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=3287556.10..3295439.40 rows=3153320 width=24) (actual time=22310.946..22323.470 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 31119kB
                     ->  Hash Join  (cost=551917.49..2900987.30 rows=3153320 width=24) (actual time=4377.944..22222.079 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1874930.80 rows=32217284 width=16) (actual time=0.011..11540.359 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 27451823
                           ->  Hash  (cost=526397.24..526397.24 rows=1468100 width=12) (actual time=4374.635..4374.636 rows=1451805 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                                 ->  Hash Join  (cost=58468.94..526397.24 rows=1468100 width=12) (actual time=507.113..4126.228 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..448761.65 rows=7301559 width=16) (actual time=0.011..2227.737 rows=7239437 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 7760563
                                       ->  Hash  (cost=54698.61..54698.61 rows=301626 width=4) (actual time=506.411..506.411 rows=300276 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                             ->  Seq Scan on customer  (cost=0.00..54698.61 rows=301626 width=4) (actual time=0.009..455.056 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 1199724
 Planning time: 31.578 ms
 Execution time: 22491.470 ms
(28 rows)

SET
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3450297.81..3450297.84 rows=10 width=44) (actual time=19574.632..19574.636 rows=10 loops=1)
   ->  Sort  (cost=3450297.81..3458181.11 rows=3153320 width=44) (actual time=19574.631..19574.634 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=3287556.10..3382155.70 rows=3153320 width=44) (actual time=19394.503..19555.947 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=3287556.10..3295439.40 rows=3153320 width=24) (actual time=19394.489..19407.337 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 31119kB
                     ->  Hash Join  (cost=551917.49..2900987.30 rows=3153320 width=24) (actual time=3567.748..19307.447 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1874930.80 rows=32217284 width=16) (actual time=0.010..9587.174 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 27451823
                           ->  Hash  (cost=526397.24..526397.24 rows=1468100 width=12) (actual time=3565.826..3565.827 rows=1451805 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                                 ->  Hash Join  (cost=58468.94..526397.24 rows=1468100 width=12) (actual time=254.407..3333.657 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..448761.65 rows=7301559 width=16) (actual time=0.012..1756.363 rows=7239437 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 7760563
                                       ->  Hash  (cost=54698.61..54698.61 rows=301626 width=4) (actual time=253.648..253.648 rows=300276 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                             ->  Seq Scan on customer  (cost=0.00..54698.61 rows=301626 width=4) (actual time=0.012..209.474 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 1199724
 Planning time: 1.438 ms
 Execution time: 19574.906 ms
(28 rows)

query 4 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=804518.52..804518.53 rows=1 width=24) (actual time=10303.498..10303.499 rows=1 loops=1)
   ->  Sort  (cost=804518.52..804518.54 rows=5 width=24) (actual time=10303.497..10303.498 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=804518.45..804518.50 rows=5 width=24) (actual time=10303.478..10303.479 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Merge Semi Join  (cost=331702.70..801728.32 rows=558026 width=16) (actual time=4889.162..10198.966 rows=513822 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=331701.88..333097.29 rows=558165 width=20) (actual time=4888.319..4957.562 rows=560424 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: external merge  Disk: 16456kB
                           ->  Bitmap Heap Scan on orders  (cost=8783.63..278424.10 rows=558165 width=20) (actual time=124.399..4702.386 rows=560424 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=231887
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8644.09 rows=558165 width=0) (actual time=85.237..85.237 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q21_idx_2 on lineitem  (cost=0.56..409809.68 rows=19994341 width=4) (actual time=0.828..3521.707 rows=37929279 loops=1)
                           Heap Fetches: 0
 Planning time: 28.434 ms
 Execution time: 10306.905 ms
(20 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=804518.52..804518.53 rows=1 width=24) (actual time=6755.878..6755.879 rows=1 loops=1)
   ->  Sort  (cost=804518.52..804518.54 rows=5 width=24) (actual time=6755.877..6755.878 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=804518.45..804518.50 rows=5 width=24) (actual time=6755.859..6755.860 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Merge Semi Join  (cost=331702.70..801728.32 rows=558026 width=16) (actual time=1592.594..6657.077 rows=513822 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=331701.88..333097.29 rows=558165 width=20) (actual time=1592.510..1658.866 rows=560424 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: external merge  Disk: 16456kB
                           ->  Bitmap Heap Scan on orders  (cost=8783.63..278424.10 rows=558165 width=20) (actual time=118.667..1466.039 rows=560424 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=231887
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8644.09 rows=558165 width=0) (actual time=79.478..79.478 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q21_idx_2 on lineitem  (cost=0.56..409809.68 rows=19994341 width=4) (actual time=0.076..3293.748 rows=37929279 loops=1)
                           Heap Fetches: 0
 Planning time: 1.568 ms
 Execution time: 6758.304 ms
(20 rows)

query 5 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1636549.66..1636549.67 rows=1 width=58) (actual time=9877.992..9877.997 rows=1 loops=1)
   ->  Sort  (cost=1636549.66..1636549.73 rows=25 width=58) (actual time=9877.992..9877.996 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=1635653.43..1636549.54 rows=25 width=58) (actual time=9854.420..9877.977 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=1635653.43..1635832.59 rows=71664 width=38) (actual time=9848.480..9851.534 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=103833.19..1629874.10 rows=71664 width=38) (actual time=938.471..9809.178 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=99112.19..1615603.92 rows=1818889 width=50) (actual time=891.800..9390.036 rows=1815327 loops=1)
                                 ->  Hash Join  (cost=99111.63..407568.82 rows=454836 width=38) (actual time=890.672..6114.515 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=35784.76..331165.43 rows=2274178 width=8) (actual time=298.015..4911.136 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=261246
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..35216.21 rows=2274178 width=0) (actual time=254.465..254.465 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59576.54..59576.54 rows=300026 width=38) (actual time=592.205..592.207 rows=299436 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                             ->  Hash Join  (cost=2.51..59576.54 rows=300026 width=38) (actual time=0.037..533.210 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50948.29 rows=1500129 width=8) (actual time=0.009..368.169 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.021..0.022 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.015..0.020 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.004 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.006..0.007 rows=4 loops=453399)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=43.843..43.844 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.004..29.063 rows=100000 loops=1)
 Planning time: 37.854 ms
 Execution time: 9878.947 ms
(42 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1636549.66..1636549.67 rows=1 width=58) (actual time=5068.080..5068.085 rows=1 loops=1)
   ->  Sort  (cost=1636549.66..1636549.73 rows=25 width=58) (actual time=5068.079..5068.083 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=1635653.43..1636549.54 rows=25 width=58) (actual time=5044.987..5068.063 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=1635653.43..1635832.59 rows=71664 width=38) (actual time=5039.229..5042.137 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=103833.19..1629874.10 rows=71664 width=38) (actual time=774.752..5008.322 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=99112.19..1615603.92 rows=1818889 width=50) (actual time=735.918..4617.870 rows=1815327 loops=1)
                                 ->  Hash Join  (cost=99111.63..407568.82 rows=454836 width=38) (actual time=735.855..2639.491 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=35784.76..331165.43 rows=2274178 width=8) (actual time=270.963..1641.050 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=261246
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..35216.21 rows=2274178 width=0) (actual time=227.321..227.321 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59576.54..59576.54 rows=300026 width=38) (actual time=464.530..464.532 rows=299436 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                             ->  Hash Join  (cost=2.51..59576.54 rows=300026 width=38) (actual time=0.034..408.512 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50948.29 rows=1500129 width=8) (actual time=0.007..249.198 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.020..0.022 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.014..0.020 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.003..0.004 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.003..0.004 rows=4 loops=453399)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=38.546..38.546 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.005..22.211 rows=100000 loops=1)
 Planning time: 4.331 ms
 Execution time: 5068.285 ms
(42 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1174490.76..1174490.77 rows=1 width=32) (actual time=13202.850..13202.851 rows=1 loops=1)
   ->  Aggregate  (cost=1174490.76..1174490.77 rows=1 width=32) (actual time=13202.848..13202.849 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=231872.51..1168532.86 rows=1191578 width=12) (actual time=1308.110..12550.267 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 13724091
               Heap Blocks: exact=395900 lossy=267068
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231574.61 rows=1191578 width=0) (actual time=1236.266..1236.266 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 22.429 ms
 Execution time: 13203.632 ms
(10 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1174490.76..1174490.77 rows=1 width=32) (actual time=6669.470..6669.471 rows=1 loops=1)
   ->  Aggregate  (cost=1174490.76..1174490.77 rows=1 width=32) (actual time=6669.469..6669.469 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=231872.51..1168532.86 rows=1191578 width=12) (actual time=1171.643..6268.408 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 13724091
               Heap Blocks: exact=395900 lossy=267068
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231574.61 rows=1191578 width=0) (actual time=1100.325..1100.325 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 1.177 ms
 Execution time: 6669.668 ms
(10 rows)

query 7 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2411786.53..2411786.65 rows=1 width=92) (actual time=32523.583..32523.588 rows=1 loops=1)
   ->  GroupAggregate  (cost=2411786.53..2412999.90 rows=10064 width=92) (actual time=32523.582..32523.587 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=2411786.53..2411934.71 rows=59271 width=72) (actual time=32516.577..32517.293 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=887757.42..2407087.81 rows=59271 width=72) (actual time=7088.592..32489.184 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=327989.14..1806164.51 rows=1424240 width=46) (actual time=2066.105..26613.200 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=324359.74..1720534.71 rows=18068798 width=24) (actual time=2030.458..23697.151 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Index Recheck: 28836540
                                 Heap Blocks: exact=326879 lossy=793187
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..319842.54 rows=18068798 width=0) (actual time=1967.589..1967.589 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=3529.40..3529.40 rows=8000 width=30) (actual time=35.592..35.593 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3529.40 rows=8000 width=30) (actual time=0.015..34.229 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.004..24.675 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.009..0.009 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536565.78..536565.78 rows=1199959 width=30) (actual time=5018.508..5018.509 rows=1191175 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 22152kB
                           ->  Hash Join  (cost=57055.21..536565.78 rows=1199959 width=30) (actual time=532.959..4771.421 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411262.92 rows=14999492 width=8) (actual time=0.022..1669.548 rows=15000000 loops=1)
                                 ->  Hash  (cost=55555.08..55555.08 rows=120010 width=30) (actual time=532.834..532.835 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55555.08 rows=120010 width=30) (actual time=0.019..508.639 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50948.29 rows=1500129 width=8) (actual time=0.003..365.191 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.011..0.011 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.009 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning time: 41.100 ms
 Execution time: 32524.032 ms
(45 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2411786.53..2411786.65 rows=1 width=92) (actual time=18812.671..18812.676 rows=1 loops=1)
   ->  GroupAggregate  (cost=2411786.53..2412999.90 rows=10064 width=92) (actual time=18812.669..18812.674 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=2411786.53..2411934.71 rows=59271 width=72) (actual time=18805.654..18806.392 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=887757.42..2407087.81 rows=59271 width=72) (actual time=5966.239..18782.073 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=327989.14..1806164.51 rows=1424240 width=46) (actual time=1748.074..13889.980 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=324359.74..1720534.71 rows=18068798 width=24) (actual time=1721.215..11716.670 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Index Recheck: 28836540
                                 Heap Blocks: exact=326879 lossy=793187
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..319842.54 rows=18068798 width=0) (actual time=1658.185..1658.185 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=3529.40..3529.40 rows=8000 width=30) (actual time=26.836..26.837 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3529.40 rows=8000 width=30) (actual time=0.016..25.536 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.004..16.044 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.009..0.010 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.007 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536565.78..536565.78 rows=1199959 width=30) (actual time=4216.061..4216.063 rows=1191175 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 22152kB
                           ->  Hash Join  (cost=57055.21..536565.78 rows=1199959 width=30) (actual time=400.424..3980.651 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411262.92 rows=14999492 width=8) (actual time=0.018..1241.596 rows=15000000 loops=1)
                                 ->  Hash  (cost=55555.08..55555.08 rows=120010 width=30) (actual time=400.310..400.311 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55555.08 rows=120010 width=30) (actual time=0.019..377.960 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50948.29 rows=1500129 width=8) (actual time=0.003..239.857 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.011..0.012 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.009 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning time: 3.787 ms
 Execution time: 18813.093 ms
(45 rows)

query 8 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=623014.01..623014.26 rows=1 width=40) (actual time=11542.570..11542.576 rows=1 loops=1)
   ->  GroupAggregate  (cost=623014.01..623608.87 rows=2406 width=40) (actual time=11542.569..11542.575 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=623014.01..623074.09 rows=24032 width=46) (actual time=11537.294..11537.755 rows=11818 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 2631kB
               ->  Hash Join  (cost=510969.60..621265.36 rows=24032 width=46) (actual time=6961.715..11528.660 rows=23842 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=510968.04..621069.86 rows=24032 width=20) (actual time=6961.693..11509.973 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=506497.04..616534.84 rows=24391 width=20) (actual time=6918.314..11455.526 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=1.12..100033.41 rows=399894 width=20) (actual time=4.030..4333.834 rows=389521 loops=1)
                                       ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..54313.22 rows=13333 width=4) (actual time=2.818..206.184 rows=13011 loops=1)
                                             Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.11 rows=32 width=24) (actual time=0.247..0.311 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Heap Fetches: 0
                                 ->  Hash  (cost=491486.21..491486.21 rows=914857 width=8) (actual time=6911.083..6911.086 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 2  Memory Usage: 25982kB
                                       ->  Hash Join  (cost=135301.74..491486.21 rows=914857 width=8) (actual time=1108.826..6706.294 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=71974.88..401857.18 rows=4574287 width=12) (actual time=521.181..5064.348 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=261268
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..70831.30 rows=4574287 width=0) (actual time=477.068..477.068 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59576.54..59576.54 rows=300026 width=4) (actual time=586.923..586.925 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.51..59576.54 rows=300026 width=4) (actual time=0.043..536.165 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50948.29 rows=1500129 width=8) (actual time=0.014..372.592 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.020..0.021 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.015..0.019 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=43.087..43.088 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.004..29.135 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.011..0.011 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.004..0.007 rows=25 loops=1)
 Planning time: 45.959 ms
 Execution time: 11543.526 ms
(51 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=623014.01..623014.26 rows=1 width=40) (actual time=4186.045..4186.051 rows=1 loops=1)
   ->  GroupAggregate  (cost=623014.01..623608.87 rows=2406 width=40) (actual time=4186.044..4186.049 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=623014.01..623074.09 rows=24032 width=46) (actual time=4180.795..4181.250 rows=11818 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 2631kB
               ->  Hash Join  (cost=510969.60..621265.36 rows=24032 width=46) (actual time=3734.157..4176.330 rows=23842 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=510968.04..621069.86 rows=24032 width=20) (actual time=3734.135..4167.896 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=506497.04..616534.84 rows=24391 width=20) (actual time=3697.991..4124.240 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=1.12..100033.41 rows=399894 width=20) (actual time=0.110..288.598 rows=389521 loops=1)
                                       ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..54313.22 rows=13333 width=4) (actual time=0.079..91.069 rows=13011 loops=1)
                                             Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.11 rows=32 width=24) (actual time=0.006..0.012 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Heap Fetches: 0
                                 ->  Hash  (cost=491486.21..491486.21 rows=914857 width=8) (actual time=3696.433..3696.436 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 2  Memory Usage: 25982kB
                                       ->  Hash Join  (cost=135301.74..491486.21 rows=914857 width=8) (actual time=910.118..3529.648 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=71974.88..401857.18 rows=4574287 width=12) (actual time=465.651..2118.331 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=261268
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..70831.30 rows=4574287 width=0) (actual time=421.661..421.661 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59576.54..59576.54 rows=300026 width=4) (actual time=443.691..443.693 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.51..59576.54 rows=300026 width=4) (actual time=0.042..394.574 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50948.29 rows=1500129 width=8) (actual time=0.011..236.757 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.021..0.022 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.016..0.021 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=35.827..35.827 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.004..21.237 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.012..0.012 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.004..0.007 rows=25 loops=1)
 Planning time: 4.460 ms
 Execution time: 4186.310 ms
(51 rows)

query 9 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1925446.90..1925446.90 rows=1 width=66) (actual time=23297.367..23297.371 rows=1 loops=1)
   ->  Sort  (cost=1925446.90..1925597.28 rows=60150 width=66) (actual time=23297.366..23297.370 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1924093.53..1925146.15 rows=60150 width=66) (actual time=23296.859..23297.285 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=1002507.67..1850963.90 rows=4178836 width=57) (actual time=6698.944..20930.040 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=1002506.11..1817239.13 rows=4178836 width=31) (actual time=6698.152..20074.424 rows=3248192 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Hash Join  (cost=345157.54..1033195.12 rows=4178836 width=31) (actual time=2315.717..12614.333 rows=3248192 loops=1)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 ->  Hash Join  (cost=340686.54..1017590.43 rows=4241226 width=35) (actual time=2272.462..11929.317 rows=3248192 loops=1)
                                       Hash Cond: ((lineitem.l_suppkey = partsupp.ps_suppkey) AND (lineitem.l_partkey = partsupp.ps_partkey))
                                       ->  Nested Loop  (cost=1.12..549303.57 rows=4241226 width=33) (actual time=3.364..7306.372 rows=3248192 loops=1)
                                             ->  Index Only Scan using q20_idx_2 on part  (cost=0.55..64481.01 rows=141408 width=4) (actual time=0.325..494.884 rows=108312 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 1891688
                                                   Heap Fetches: 0
                                             ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.11 rows=32 width=29) (actual time=0.044..0.059 rows=30 loops=108312)
                                                   Index Cond: (l_partkey = part.p_partkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=181615.43..181615.43 rows=8000333 width=14) (actual time=2263.566..2263.566 rows=8000000 loops=1)
                                             Buckets: 1048576  Batches: 16  Memory Usage: 31607kB
                                             ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..181615.43 rows=8000333 width=14) (actual time=1.190..1075.051 rows=8000000 loops=1)
                                                   Heap Fetches: 0
                                 ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=43.192..43.192 rows=100000 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.003..29.257 rows=100000 loops=1)
                           ->  Hash  (cost=411262.92..411262.92 rows=14999492 width=8) (actual time=4380.585..4380.585 rows=15000000 loops=1)
                                 Buckets: 1048576  Batches: 32  Memory Usage: 26512kB
                                 ->  Seq Scan on orders  (cost=0.00..411262.92 rows=14999492 width=8) (actual time=0.022..2419.242 rows=15000000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.015..0.016 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.008..0.010 rows=25 loops=1)
 Planning time: 55.394 ms
 Execution time: 23298.902 ms
(37 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1925446.90..1925446.90 rows=1 width=66) (actual time=16852.076..16852.080 rows=1 loops=1)
   ->  Sort  (cost=1925446.90..1925597.28 rows=60150 width=66) (actual time=16852.075..16852.079 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1924093.53..1925146.15 rows=60150 width=66) (actual time=16851.568..16851.990 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=1002507.67..1850963.90 rows=4178836 width=57) (actual time=5887.045..14494.765 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=1002506.11..1817239.13 rows=4178836 width=31) (actual time=5887.010..13629.289 rows=3248192 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Hash Join  (cost=345157.54..1033195.12 rows=4178836 width=31) (actual time=2031.442..6699.555 rows=3248192 loops=1)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 ->  Hash Join  (cost=340686.54..1017590.43 rows=4241226 width=35) (actual time=2003.549..6031.437 rows=3248192 loops=1)
                                       Hash Cond: ((lineitem.l_suppkey = partsupp.ps_suppkey) AND (lineitem.l_partkey = partsupp.ps_partkey))
                                       ->  Nested Loop  (cost=1.12..549303.57 rows=4241226 width=33) (actual time=0.059..1767.608 rows=3248192 loops=1)
                                             ->  Index Only Scan using q20_idx_2 on part  (cost=0.55..64481.01 rows=141408 width=4) (actual time=0.042..362.789 rows=108312 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 1891688
                                                   Heap Fetches: 0
                                             ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.11 rows=32 width=29) (actual time=0.003..0.010 rows=30 loops=108312)
                                                   Index Cond: (l_partkey = part.p_partkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=181615.43..181615.43 rows=8000333 width=14) (actual time=2001.967..2001.968 rows=8000000 loops=1)
                                             Buckets: 1048576  Batches: 16  Memory Usage: 31607kB
                                             ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..181615.43 rows=8000333 width=14) (actual time=0.046..836.459 rows=8000000 loops=1)
                                                   Heap Fetches: 0
                                 ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=27.817..27.818 rows=100000 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.003..14.269 rows=100000 loops=1)
                           ->  Hash  (cost=411262.92..411262.92 rows=14999492 width=8) (actual time=3854.084..3854.084 rows=15000000 loops=1)
                                 Buckets: 1048576  Batches: 32  Memory Usage: 26512kB
                                 ->  Seq Scan on orders  (cost=0.00..411262.92 rows=14999492 width=8) (actual time=0.020..1962.529 rows=15000000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.018..0.019 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.009..0.012 rows=25 loops=1)
 Planning time: 4.947 ms
 Execution time: 16852.900 ms
(37 rows)

query 10 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1785141.86..1785141.91 rows=20 width=201) (actual time=14592.543..14592.549 rows=20 loops=1)
   ->  Sort  (cost=1785141.86..1786604.36 rows=585000 width=201) (actual time=14592.542..14592.546 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=1753487.72..1769575.22 rows=585000 width=201) (actual time=13666.204..14485.924 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Sort  (cost=1753487.72..1754950.22 rows=585000 width=181) (actual time=13666.187..13850.982 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Sort Method: external merge  Disk: 218520kB
                     ->  Hash Join  (cost=388645.09..1660315.35 rows=585000 width=181) (actual time=6007.105..12924.279 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=388643.53..1658517.83 rows=585000 width=159) (actual time=6007.089..12740.800 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=286713.63..1517108.31 rows=585000 width=16) (actual time=5017.965..10956.668 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..1191257.05 rows=14909781 width=16) (actual time=1.295..4293.323 rows=14808183 loops=1)
                                             Index Cond: (l_returnflag = 'R'::bpchar)
                                             Heap Fetches: 0
                                       ->  Hash  (cost=279356.57..279356.57 rows=588520 width=8) (actual time=5015.336..5015.337 rows=573160 loops=1)
                                             Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                             ->  Bitmap Heap Scan on orders  (cost=9260.76..279356.57 rows=588520 width=8) (actual time=123.013..4844.383 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   Heap Blocks: exact=233346
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..9113.64 rows=588520 width=0) (actual time=84.161..84.161 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=50948.29..50948.29 rows=1500129 width=147) (actual time=988.501..988.502 rows=1500000 loops=1)
                                       Buckets: 262144  Batches: 16  Memory Usage: 18791kB
                                       ->  Seq Scan on customer  (cost=0.00..50948.29 rows=1500129 width=147) (actual time=0.005..507.618 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.011..0.011 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.004..0.006 rows=25 loops=1)
 Planning time: 33.195 ms
 Execution time: 14627.839 ms
(33 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1785141.86..1785141.91 rows=20 width=201) (actual time=10490.857..10490.863 rows=20 loops=1)
   ->  Sort  (cost=1785141.86..1786604.36 rows=585000 width=201) (actual time=10490.856..10490.860 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=1753487.72..1769575.22 rows=585000 width=201) (actual time=9560.502..10383.744 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Sort  (cost=1753487.72..1754950.22 rows=585000 width=181) (actual time=9560.485..9746.944 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Sort Method: external merge  Disk: 218520kB
                     ->  Hash Join  (cost=388645.09..1660315.35 rows=585000 width=181) (actual time=2459.175..8818.028 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=388643.53..1658517.83 rows=585000 width=159) (actual time=2459.159..8635.785 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=286713.63..1517108.31 rows=585000 width=16) (actual time=1599.179..6986.765 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..1191257.05 rows=14909781 width=16) (actual time=0.062..3781.618 rows=14808183 loops=1)
                                             Index Cond: (l_returnflag = 'R'::bpchar)
                                             Heap Fetches: 0
                                       ->  Hash  (cost=279356.57..279356.57 rows=588520 width=8) (actual time=1597.790..1597.791 rows=573160 loops=1)
                                             Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                             ->  Bitmap Heap Scan on orders  (cost=9260.76..279356.57 rows=588520 width=8) (actual time=111.765..1470.884 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   Heap Blocks: exact=233346
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..9113.64 rows=588520 width=0) (actual time=72.936..72.936 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=50948.29..50948.29 rows=1500129 width=147) (actual time=859.409..859.409 rows=1500000 loops=1)
                                       Buckets: 262144  Batches: 16  Memory Usage: 18791kB
                                       ->  Seq Scan on customer  (cost=0.00..50948.29 rows=1500129 width=147) (actual time=0.006..382.134 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.011..0.012 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.004..0.006 rows=25 loops=1)
 Planning time: 2.844 ms
 Execution time: 10525.438 ms
(33 rows)

query 11 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=625997.38..625997.38 rows=1 width=36) (actual time=3547.235..3547.239 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293167.66..293167.67 rows=1 width=32) (actual time=1492.684..1492.686 rows=1 loops=1)
           ->  Hash Join  (cost=2357.31..290767.56 rows=320013 width=10) (actual time=2.779..1397.186 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255225.33 rows=8000333 width=14) (actual time=0.035..711.428 rows=8000000 loops=1)
                 ->  Hash  (cost=2307.31..2307.31 rows=4000 width=4) (actual time=2.713..2.714 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=4) (actual time=0.484..2.371 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=55.29..2266.00 rows=4000 width=8) (actual time=0.474..1.964 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=0.297..0.297 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=332829.70..333629.74 rows=320013 width=36) (actual time=3547.234..3547.236 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=320029.18..331229.64 rows=320013 width=36) (actual time=3547.225..3547.227 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Rows Removed by Filter: 301833
               ->  Sort  (cost=320029.18..320829.22 rows=320013 width=14) (actual time=1858.339..1870.563 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 25961kB
                     ->  Hash Join  (cost=2357.31..290767.56 rows=320013 width=14) (actual time=24.069..1811.271 rows=320800 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255225.33 rows=8000333 width=18) (actual time=0.380..1052.412 rows=8000000 loops=1)
                           ->  Hash  (cost=2307.31..2307.31 rows=4000 width=4) (actual time=23.608..23.609 rows=4010 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                 ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=4) (actual time=1.801..22.815 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.015 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 24
                                       ->  Bitmap Heap Scan on supplier  (cost=55.29..2266.00 rows=4000 width=8) (actual time=1.785..22.240 rows=4010 loops=1)
                                             Recheck Cond: (s_nationkey = nation.n_nationkey)
                                             Heap Blocks: exact=1869
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=1.512..1.512 rows=4010 loops=1)
                                                   Index Cond: (s_nationkey = nation.n_nationkey)
 Planning time: 17.816 ms
 Execution time: 3548.242 ms
(43 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=625997.38..625997.38 rows=1 width=36) (actual time=3144.462..3144.466 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293167.66..293167.67 rows=1 width=32) (actual time=1498.513..1498.515 rows=1 loops=1)
           ->  Hash Join  (cost=2357.31..290767.56 rows=320013 width=10) (actual time=2.876..1403.716 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255225.33 rows=8000333 width=14) (actual time=0.033..708.975 rows=8000000 loops=1)
                 ->  Hash  (cost=2307.31..2307.31 rows=4000 width=4) (actual time=2.813..2.814 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=4) (actual time=0.506..2.457 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=55.29..2266.00 rows=4000 width=8) (actual time=0.497..2.023 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=0.310..0.310 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=332829.70..333629.74 rows=320013 width=36) (actual time=3144.461..3144.463 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=320029.18..331229.64 rows=320013 width=36) (actual time=3144.453..3144.455 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Rows Removed by Filter: 301833
               ->  Sort  (cost=320029.18..320829.22 rows=320013 width=14) (actual time=1448.827..1461.039 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 25961kB
                     ->  Hash Join  (cost=2357.31..290767.56 rows=320013 width=14) (actual time=3.505..1404.208 rows=320800 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255225.33 rows=8000333 width=18) (actual time=0.025..715.928 rows=8000000 loops=1)
                           ->  Hash  (cost=2307.31..2307.31 rows=4000 width=4) (actual time=3.455..3.456 rows=4010 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                 ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=4) (actual time=0.488..3.093 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 24
                                       ->  Bitmap Heap Scan on supplier  (cost=55.29..2266.00 rows=4000 width=8) (actual time=0.481..2.710 rows=4010 loops=1)
                                             Recheck Cond: (s_nationkey = nation.n_nationkey)
                                             Heap Blocks: exact=1869
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=0.301..0.301 rows=4010 loops=1)
                                                   Index Cond: (s_nationkey = nation.n_nationkey)
 Planning time: 1.017 ms
 Execution time: 3144.538 ms
(43 rows)

query 12 run 1
SET
SET
SET
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=761712.92..761712.92 rows=1 width=27) (actual time=5587.799..5587.800 rows=1 loops=1)
   ->  Sort  (cost=761712.92..761712.94 rows=7 width=27) (actual time=5587.798..5587.799 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=761712.81..761712.88 rows=7 width=27) (actual time=5587.781..5587.782 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Merge Join  (cost=57.07..756555.35 rows=294712 width=27) (actual time=1.211..5438.992 rows=311258 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..568523.82 rows=14999492 width=20) (actual time=0.289..3615.693 rows=14999967 loops=1)
                     ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.56..146906.12 rows=294712 width=15) (actual time=0.834..832.925 rows=311258 loops=1)
                           Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                           Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                           Rows Removed by Filter: 778088
                           Heap Fetches: 0
 Planning time: 29.129 ms
 Execution time: 5588.429 ms
(16 rows)

SET
SET
SET
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=761712.92..761712.92 rows=1 width=27) (actual time=4430.960..4430.961 rows=1 loops=1)
   ->  Sort  (cost=761712.92..761712.94 rows=7 width=27) (actual time=4430.959..4430.960 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=761712.81..761712.88 rows=7 width=27) (actual time=4430.941..4430.942 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Merge Join  (cost=57.07..756555.35 rows=294712 width=27) (actual time=0.109..4299.284 rows=311258 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..568523.82 rows=14999492 width=20) (actual time=0.024..2643.768 rows=14999967 loops=1)
                     ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.56..146906.12 rows=294712 width=15) (actual time=0.062..702.462 rows=311258 loops=1)
                           Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                           Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                           Rows Removed by Filter: 778088
                           Heap Fetches: 0
 Planning time: 2.178 ms
 Execution time: 4431.050 ms
(16 rows)

query 13 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2727493.80..2727493.80 rows=1 width=16) (actual time=19266.021..19266.023 rows=1 loops=1)
   ->  Sort  (cost=2727493.80..2727494.30 rows=200 width=16) (actual time=19266.020..19266.022 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2727490.80..2727492.80 rows=200 width=16) (actual time=19265.999..19266.006 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  GroupAggregate  (cost=2578627.41..2704988.86 rows=1500129 width=12) (actual time=15718.231..19086.384 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Sort  (cost=2578627.41..2615747.46 rows=14848022 width=8) (actual time=15718.222..17525.860 rows=15337604 loops=1)
                           Sort Key: customer.c_custkey
                           Sort Method: external merge  Disk: 268424kB
                           ->  Hash Right Join  (cost=55345.98..664945.79 rows=14848022 width=8) (actual time=339.560..11106.973 rows=15337604 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..448761.65 rows=14848022 width=8) (actual time=0.366..5286.186 rows=14837583 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                       Rows Removed by Filter: 162417
                                 ->  Hash  (cost=30734.36..30734.36 rows=1500129 width=4) (actual time=337.863..337.863 rows=1500000 loops=1)
                                       Buckets: 1048576  Batches: 4  Memory Usage: 21380kB
                                       ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30734.36 rows=1500129 width=4) (actual time=0.545..161.316 rows=1500000 loops=1)
                                             Heap Fetches: 0
 Planning time: 20.316 ms
 Execution time: 19305.217 ms
(22 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2727493.80..2727493.80 rows=1 width=16) (actual time=18754.229..18754.231 rows=1 loops=1)
   ->  Sort  (cost=2727493.80..2727494.30 rows=200 width=16) (actual time=18754.229..18754.230 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2727490.80..2727492.80 rows=200 width=16) (actual time=18754.209..18754.216 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  GroupAggregate  (cost=2578627.41..2704988.86 rows=1500129 width=12) (actual time=15199.790..18571.548 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Sort  (cost=2578627.41..2615747.46 rows=14848022 width=8) (actual time=15199.780..17007.545 rows=15337604 loops=1)
                           Sort Key: customer.c_custkey
                           Sort Method: external merge  Disk: 268424kB
                           ->  Hash Right Join  (cost=55345.98..664945.79 rows=14848022 width=8) (actual time=302.953..10594.838 rows=15337604 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..448761.65 rows=14848022 width=8) (actual time=0.030..4831.582 rows=14837583 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                       Rows Removed by Filter: 162417
                                 ->  Hash  (cost=30734.36..30734.36 rows=1500129 width=4) (actual time=301.577..301.577 rows=1500000 loops=1)
                                       Buckets: 1048576  Batches: 4  Memory Usage: 21380kB
                                       ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30734.36 rows=1500129 width=4) (actual time=0.045..129.213 rows=1500000 loops=1)
                                             Heap Fetches: 0
 Planning time: 0.614 ms
 Execution time: 18793.906 ms
(22 rows)

query 14 run 1
SET
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=925864.27..925864.28 rows=1 width=32) (actual time=9313.653..9313.655 rows=1 loops=1)
   ->  Aggregate  (cost=925864.27..925864.28 rows=1 width=32) (actual time=9313.652..9313.653 rows=1 loops=1)
         ->  Hash Join  (cost=114316.03..911569.84 rows=816824 width=33) (actual time=1064.138..8914.091 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=14665.01..788124.66 rows=816824 width=16) (actual time=219.199..7299.584 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416569
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14460.81 rows=816824 width=0) (actual time=143.102..143.102 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60980.12..60980.12 rows=1999912 width=25) (actual time=843.881..843.881 rows=2000000 loops=1)
                     Buckets: 524288  Batches: 8  Memory Usage: 18555kB
                     ->  Seq Scan on part  (cost=0.00..60980.12 rows=1999912 width=25) (actual time=0.008..537.974 rows=2000000 loops=1)
 Planning time: 26.270 ms
 Execution time: 9313.892 ms
(14 rows)

SET
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=925864.27..925864.28 rows=1 width=32) (actual time=3934.696..3934.698 rows=1 loops=1)
   ->  Aggregate  (cost=925864.27..925864.28 rows=1 width=32) (actual time=3934.695..3934.696 rows=1 loops=1)
         ->  Hash Join  (cost=114316.03..911569.84 rows=816824 width=33) (actual time=894.462..3603.797 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=14665.01..788124.66 rows=816824 width=16) (actual time=206.377..2344.243 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416569
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14460.81 rows=816824 width=0) (actual time=130.671..130.672 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60980.12..60980.12 rows=1999912 width=25) (actual time=687.645..687.645 rows=2000000 loops=1)
                     Buckets: 524288  Batches: 8  Memory Usage: 18555kB
                     ->  Seq Scan on part  (cost=0.00..60980.12 rows=1999912 width=25) (actual time=0.008..389.748 rows=2000000 loops=1)
 Planning time: 1.590 ms
 Execution time: 3934.925 ms
(14 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2695626.99..2695627.52 rows=1 width=103) (actual time=21550.497..21550.500 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1225853.56..1225853.57 rows=1 width=32) (actual time=6224.505..6224.506 rows=1 loops=1)
           ->  HashAggregate  (cost=1223316.23..1224584.90 rows=101493 width=36) (actual time=6180.648..6217.546 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=41032.33..1200459.87 rows=2285636 width=16) (actual time=347.714..4707.221 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 13223651
                       Heap Blocks: exact=401153 lossy=267105
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40460.93 rows=2285636 width=0) (actual time=275.302..275.302 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1469773.42..1523816.13 rows=101493 width=103) (actual time=21550.496..21550.497 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = lineitem.l_suppkey)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4274.29 rows=100000 width=71) (actual time=0.344..18.099 rows=69998 loops=1)
         ->  GroupAggregate  (cost=1469773.13..1517008.24 rows=101493 width=36) (actual time=21528.496..21528.497 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 69997
               ->  Sort  (cost=1469773.13..1475487.22 rows=2285636 width=16) (actual time=14607.639..14762.532 rows=1585450 loops=1)
                     Sort Key: lineitem.l_suppkey
                     Sort Method: external merge  Disk: 60920kB
                     ->  Bitmap Heap Scan on lineitem  (cost=41032.33..1200459.87 rows=2285636 width=16) (actual time=408.370..13586.781 rows=2265714 loops=1)
                           Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                           Rows Removed by Index Recheck: 13223651
                           Heap Blocks: exact=401153 lossy=267105
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40460.93 rows=2285636 width=0) (actual time=334.638..334.638 rows=2265714 loops=1)
                                 Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 22.500 ms
 Execution time: 21558.821 ms
(29 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2695626.99..2695627.52 rows=1 width=103) (actual time=13051.030..13051.033 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1225853.56..1225853.57 rows=1 width=32) (actual time=6267.224..6267.226 rows=1 loops=1)
           ->  HashAggregate  (cost=1223316.23..1224584.90 rows=101493 width=36) (actual time=6222.949..6260.313 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=41032.33..1200459.87 rows=2285636 width=16) (actual time=348.462..4742.287 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 13223651
                       Heap Blocks: exact=401153 lossy=267105
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40460.93 rows=2285636 width=0) (actual time=275.892..275.892 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1469773.42..1523816.13 rows=101493 width=103) (actual time=13051.029..13051.030 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = lineitem.l_suppkey)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4274.29 rows=100000 width=71) (actual time=0.039..10.695 rows=69998 loops=1)
         ->  GroupAggregate  (cost=1469773.13..1517008.24 rows=101493 width=36) (actual time=13036.542..13036.543 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 69997
               ->  Sort  (cost=1469773.13..1475487.22 rows=2285636 width=16) (actual time=6065.846..6225.608 rows=1585450 loops=1)
                     Sort Key: lineitem.l_suppkey
                     Sort Method: external merge  Disk: 60920kB
                     ->  Bitmap Heap Scan on lineitem  (cost=41032.33..1200459.87 rows=2285636 width=16) (actual time=371.779..5277.191 rows=2265714 loops=1)
                           Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                           Rows Removed by Index Recheck: 13223651
                           Heap Blocks: exact=401153 lossy=267105
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40460.93 rows=2285636 width=0) (actual time=299.074..299.074 rows=2265714 loops=1)
                                 Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 1.824 ms
 Execution time: 13059.495 ms
(29 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=371497.88..371497.89 rows=1 width=44) (actual time=6244.071..6244.073 rows=1 loops=1)
   ->  Sort  (cost=371497.88..371883.44 rows=154222 width=44) (actual time=6244.070..6244.071 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=361702.44..370726.77 rows=154222 width=44) (actual time=5593.890..6238.668 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=361702.44..363198.86 rows=598569 width=40) (actual time=5593.841..5938.775 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Hash Join  (cost=98193.50..292573.78 rows=598569 width=40) (actual time=811.453..2861.367 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3473.96..187353.79 rows=4000166 width=8) (actual time=37.630..1301.072 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=1010 width=4) (actual time=1.142..36.244 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90978.80..90978.80 rows=299259 width=40) (actual time=773.224..773.224 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90978.80 rows=299259 width=40) (actual time=0.013..706.924 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning time: 15.317 ms
 Execution time: 6252.678 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=371497.88..371497.89 rows=1 width=44) (actual time=5741.835..5741.838 rows=1 loops=1)
   ->  Sort  (cost=371497.88..371883.44 rows=154222 width=44) (actual time=5741.834..5741.836 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=361702.44..370726.77 rows=154222 width=44) (actual time=5090.968..5736.549 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=361702.44..363198.86 rows=598569 width=40) (actual time=5090.919..5436.243 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Hash Join  (cost=98193.50..292573.78 rows=598569 width=40) (actual time=500.237..2365.550 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3473.96..187353.79 rows=4000166 width=8) (actual time=20.175..1115.129 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=1010 width=4) (actual time=0.086..20.130 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90978.80..90978.80 rows=299259 width=40) (actual time=479.442..479.442 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90978.80 rows=299259 width=40) (actual time=0.014..422.639 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning time: 0.845 ms
 Execution time: 5750.016 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1790234.81..1790234.82 rows=1 width=32) (actual time=23023.274..23023.276 rows=1 loops=1)
   ->  Aggregate  (cost=1790234.81..1790234.82 rows=1 width=32) (actual time=23023.273..23023.275 rows=1 loops=1)
         ->  Nested Loop  (cost=71090.53..1790187.86 rows=18777 width=8) (actual time=531.343..23020.206 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=71089.96..1784345.20 rows=1878 width=40) (actual time=530.422..21793.177 rows=1996 loops=1)
                     Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Sort  (cost=71089.40..71094.40 rows=2001 width=4) (actual time=521.162..522.301 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 142kB
                           ->  Seq Scan on part  (cost=0.00..70979.68 rows=2001 width=4) (actual time=0.618..520.399 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
                     ->  GroupAggregate  (cost=0.56..1689763.40 rows=1877090 width=36) (actual time=2.367..21109.838 rows=1999332 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361691.92 rows=59983024 width=9) (actual time=1.199..12640.629 rows=59965964 loops=1)
                                 Heap Fetches: 0
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.97 rows=11 width=17) (actual time=0.565..0.612 rows=3 loops=1996)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning time: 25.234 ms
 Execution time: 23024.096 ms
(21 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1790234.81..1790234.82 rows=1 width=32) (actual time=20408.870..20408.871 rows=1 loops=1)
   ->  Aggregate  (cost=1790234.81..1790234.82 rows=1 width=32) (actual time=20408.869..20408.870 rows=1 loops=1)
         ->  Nested Loop  (cost=71090.53..1790187.86 rows=18777 width=8) (actual time=376.408..20407.853 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=71089.96..1784345.20 rows=1878 width=40) (actual time=376.380..20374.858 rows=1996 loops=1)
                     Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Sort  (cost=71089.40..71094.40 rows=2001 width=4) (actual time=369.881..370.374 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 142kB
                           ->  Seq Scan on part  (cost=0.00..70979.68 rows=2001 width=4) (actual time=0.144..369.298 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
                     ->  GroupAggregate  (cost=0.56..1689763.40 rows=1877090 width=36) (actual time=0.092..19852.307 rows=1999332 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361691.92 rows=59983024 width=9) (actual time=0.056..11584.441 rows=59965964 loops=1)
                                 Heap Fetches: 0
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.97 rows=11 width=17) (actual time=0.014..0.015 rows=3 loops=1996)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning time: 1.716 ms
 Execution time: 20408.925 ms
(21 rows)

query 18 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=20029331.33..20029331.58 rows=100 width=71) (actual time=29538.493..29538.505 rows=99 loops=1)
   ->  Sort  (cost=20029331.33..20179251.54 rows=59968084 width=71) (actual time=29538.492..29538.499 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  GroupAggregate  (cost=16388112.39..17737394.28 rows=59968084 width=71) (actual time=29538.253..29538.422 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=16388112.39..16538032.60 rows=59968084 width=44) (actual time=29538.235..29538.263 rows=693 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 79kB
                     ->  Hash Join  (cost=78753.41..6005608.11 rows=59968084 width=44) (actual time=3044.603..29538.024 rows=693 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=263.51..4941033.54 rows=59968084 width=25) (actual time=644.003..28766.563 rows=693 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Join  (cost=1.00..2792481.05 rows=14995756 width=24) (actual time=493.231..21595.811 rows=99 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..568523.82 rows=14999492 width=20) (actual time=0.267..3089.441 rows=14982724 loops=1)
                                       ->  GroupAggregate  (cost=0.56..1849053.99 rows=14995756 width=4) (actual time=389.661..17663.834 rows=99 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 14999901
                                             ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361691.92 rows=59983024 width=9) (actual time=0.704..6064.365 rows=59986052 loops=1)
                                                   Heap Fetches: 0
                                 ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361691.92 rows=59983024 width=9) (actual time=0.014..4712.574 rows=59916431 loops=1)
                                       Heap Fetches: 0
                           ->  Hash  (cost=50948.29..50948.29 rows=1500129 width=23) (actual time=666.814..666.815 rows=1500000 loops=1)
                                 Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                                 ->  Seq Scan on customer  (cost=0.00..50948.29 rows=1500129 width=23) (actual time=0.011..425.371 rows=1500000 loops=1)
 Planning time: 29.867 ms
 Execution time: 29539.501 ms
(29 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=20029331.33..20029331.58 rows=100 width=71) (actual time=28147.066..28147.078 rows=99 loops=1)
   ->  Sort  (cost=20029331.33..20179251.54 rows=59968084 width=71) (actual time=28147.065..28147.071 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  GroupAggregate  (cost=16388112.39..17737394.28 rows=59968084 width=71) (actual time=28146.825..28146.994 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=16388112.39..16538032.60 rows=59968084 width=44) (actual time=28146.807..28146.835 rows=693 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 79kB
                     ->  Hash Join  (cost=78753.41..6005608.11 rows=59968084 width=44) (actual time=2759.144..28146.610 rows=693 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=263.51..4941033.54 rows=59968084 width=25) (actual time=599.364..27509.014 rows=693 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Join  (cost=1.00..2792481.05 rows=14995756 width=24) (actual time=448.255..20339.009 rows=99 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..568523.82 rows=14999492 width=20) (actual time=0.024..2343.893 rows=14982724 loops=1)
                                       ->  GroupAggregate  (cost=0.56..1849053.99 rows=14995756 width=4) (actual time=372.950..17183.976 rows=99 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 14999901
                                             ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361691.92 rows=59983024 width=9) (actual time=0.045..5523.027 rows=59986052 loops=1)
                                                   Heap Fetches: 0
                                 ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361691.92 rows=59983024 width=9) (actual time=0.012..4715.066 rows=59916431 loops=1)
                                       Heap Fetches: 0
                           ->  Hash  (cost=50948.29..50948.29 rows=1500129 width=23) (actual time=533.454..533.454 rows=1500000 loops=1)
                                 Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                                 ->  Seq Scan on customer  (cost=0.00..50948.29 rows=1500129 width=23) (actual time=0.011..299.049 rows=1500000 loops=1)
 Planning time: 2.465 ms
 Execution time: 28147.194 ms
(29 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=142997.31..142997.32 rows=1 width=32) (actual time=3308.744..3308.745 rows=1 loops=1)
   ->  Aggregate  (cost=142997.31..142997.32 rows=1 width=32) (actual time=3308.743..3308.744 rows=1 loops=1)
         ->  Nested Loop  (cost=0.69..142989.26 rows=1073 width=12) (actual time=15.627..3305.887 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125977.26 rows=4735 width=30) (actual time=0.745..845.148 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.69..3.58 rows=1 width=21) (actual time=0.492..0.513 rows=0 loops=4781)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning time: 30.396 ms
 Execution time: 3308.798 ms
(13 rows)

SET
SET
SET


 Limit  (cost=142997.31..142997.32 rows=1 width=32) (actual time=464.052..464.053 rows=1 loops=1)
   ->  Aggregate  (cost=142997.31..142997.32 rows=1 width=32) (actual time=464.052..464.052 rows=1 loops=1)
         ->  Nested Loop  (cost=0.69..142989.26 rows=1073 width=12) (actual time=1.135..463.297 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125977.26 rows=4735 width=30) (actual time=0.194..419.742 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.69..3.58 rows=1 width=21) (actual time=0.008..0.009 rows=0 loops=4781)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning time: 3.360 ms
 Execution time: 464.106 ms
(13 rows)

query 20 run 1
SET
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2936574.22..2936574.23 rows=1 width=51) (actual time=47596.233..47596.236 rows=1 loops=1)
   ->  Sort  (cost=2936574.22..2936574.23 rows=1 width=51) (actual time=47596.232..47596.235 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2568555.49..2936574.21 rows=1 width=51) (actual time=26735.763..47594.482 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.291..23.555 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.281..15.936 rows=100000 loops=1)
               ->  Materialize  (cost=2568555.49..2931921.91 rows=3 width=8) (actual time=6.266..9.159 rows=44445 loops=4095)
                     ->  Merge Join  (cost=2568555.49..2931921.89 rows=3 width=8) (actual time=25657.555..31370.751 rows=59002 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  GroupAggregate  (cost=2568554.51..2730616.73 rows=4814411 width=40) (actual time=25656.543..30585.605 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=2568554.51..2591016.02 rows=8984606 width=13) (actual time=25656.529..27154.816 rows=9123091 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 205344kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=161286.78..1421198.87 rows=8984606 width=13) (actual time=1232.265..22112.025 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Rows Removed by Index Recheck: 23164080
                                             Heap Blocks: exact=518099 lossy=530696
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..159040.62 rows=8984606 width=0) (actual time=1127.409..1127.409 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.98..121303.47 rows=80811 width=16) (actual time=0.694..486.790 rows=237286 loops=1)
                                 ->  Nested Loop  (cost=0.98..121101.44 rows=80811 width=16) (actual time=0.692..465.801 rows=86872 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.55..64481.01 rows=20201 width=4) (actual time=0.345..228.598 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.62 rows=18 width=12) (actual time=0.009..0.010 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning time: 34.960 ms
 Execution time: 47620.439 ms
(41 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2936574.22..2936574.23 rows=1 width=51) (actual time=34122.711..34122.715 rows=1 loops=1)
   ->  Sort  (cost=2936574.22..2936574.23 rows=1 width=51) (actual time=34122.711..34122.714 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2568555.49..2936574.21 rows=1 width=51) (actual time=13555.054..34121.030 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.018..19.749 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.009..12.157 rows=100000 loops=1)
               ->  Materialize  (cost=2568555.49..2931921.91 rows=3 width=8) (actual time=3.057..5.894 rows=44445 loops=4095)
                     ->  Merge Join  (cost=2568555.49..2931921.89 rows=3 width=8) (actual time=12516.864..18046.987 rows=59002 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  GroupAggregate  (cost=2568554.51..2730616.73 rows=4814411 width=40) (actual time=12516.452..17429.780 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=2568554.51..2591016.02 rows=8984606 width=13) (actual time=12516.439..13995.068 rows=9123091 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 205344kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=161286.78..1421198.87 rows=8984606 width=13) (actual time=1085.257..9285.458 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Rows Removed by Index Recheck: 23164080
                                             Heap Blocks: exact=518099 lossy=530696
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..159040.62 rows=8984606 width=0) (actual time=981.056..981.056 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.98..121303.47 rows=80811 width=16) (actual time=0.095..330.750 rows=237286 loops=1)
                                 ->  Nested Loop  (cost=0.98..121101.44 rows=80811 width=16) (actual time=0.093..310.268 rows=86872 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.55..64481.01 rows=20201 width=4) (actual time=0.064..204.190 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.62 rows=18 width=12) (actual time=0.004..0.004 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning time: 2.830 ms
 Execution time: 34149.913 ms
(41 rows)

query 21 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1921063.77..1921063.77 rows=1 width=34) (actual time=15141.506..15141.518 rows=100 loops=1)
   ->  Sort  (cost=1921063.77..1921063.77 rows=1 width=34) (actual time=15141.505..15141.511 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=1921063.74..1921063.76 rows=1 width=34) (actual time=15134.385..15140.349 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=1921063.74..1921063.74 rows=1 width=26) (actual time=15134.378..15135.881 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Anti Join  (cost=2385.96..1921063.73 rows=1 width=26) (actual time=42.725..14972.180 rows=39281 loops=1)
                           ->  Nested Loop Semi Join  (cost=2385.39..1921061.14 rows=1 width=34) (actual time=42.718..13776.841 rows=704306 loops=1)
                                 Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Join Filter: 80163
                                 ->  Hash Join  (cost=2384.83..887376.43 rows=386203 width=38) (actual time=42.702..10784.452 rows=730985 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Merge Join  (cost=27.52..844409.99 rows=9799226 width=12) (actual time=1.171..9156.021 rows=18321400 loops=1)
                                             Merge Cond: (l1.l_orderkey = orders.o_orderkey)
                                             ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..409809.68 rows=19994341 width=8) (actual time=0.746..3886.987 rows=37929347 loops=1)
                                                   Heap Fetches: 0
                                             ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..268271.14 rows=7351251 width=4) (actual time=0.417..1223.806 rows=7309184 loops=1)
                                                   Index Cond: (o_orderstatus = 'F'::bpchar)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=2307.31..2307.31 rows=4000 width=30) (actual time=41.486..41.487 rows=3991 loops=1)
                                             Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                             ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=30) (actual time=1.823..40.209 rows=3991 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.009 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                         Rows Removed by Filter: 24
                                                   ->  Bitmap Heap Scan on supplier  (cost=55.29..2266.00 rows=4000 width=34) (actual time=1.815..39.152 rows=3991 loops=1)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         Heap Blocks: exact=1865
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=1.628..1.628 rows=3991 loops=1)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.004..0.004 rows=1 loops=730985)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..2.58 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=704306)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning time: 31.159 ms
 Execution time: 15142.070 ms
(43 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1921063.77..1921063.77 rows=1 width=34) (actual time=13303.493..13303.505 rows=100 loops=1)
   ->  Sort  (cost=1921063.77..1921063.77 rows=1 width=34) (actual time=13303.492..13303.499 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=1921063.74..1921063.76 rows=1 width=34) (actual time=13296.352..13302.340 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=1921063.74..1921063.74 rows=1 width=26) (actual time=13296.345..13297.864 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Anti Join  (cost=2385.96..1921063.73 rows=1 width=26) (actual time=14.476..13135.305 rows=39281 loops=1)
                           ->  Nested Loop Semi Join  (cost=2385.39..1921061.14 rows=1 width=34) (actual time=14.468..12000.039 rows=704306 loops=1)
                                 Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Join Filter: 80163
                                 ->  Hash Join  (cost=2384.83..887376.43 rows=386203 width=38) (actual time=14.454..10066.701 rows=730985 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Merge Join  (cost=27.52..844409.99 rows=9799226 width=12) (actual time=0.062..8608.744 rows=18321400 loops=1)
                                             Merge Cond: (l1.l_orderkey = orders.o_orderkey)
                                             ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..409809.68 rows=19994341 width=8) (actual time=0.033..3538.992 rows=37929347 loops=1)
                                                   Heap Fetches: 0
                                             ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..268271.14 rows=7351251 width=4) (actual time=0.026..1084.800 rows=7309184 loops=1)
                                                   Index Cond: (o_orderstatus = 'F'::bpchar)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=2307.31..2307.31 rows=4000 width=30) (actual time=14.367..14.369 rows=3991 loops=1)
                                             Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                             ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=30) (actual time=0.560..13.581 rows=3991 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.009 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                         Rows Removed by Filter: 24
                                                   ->  Bitmap Heap Scan on supplier  (cost=55.29..2266.00 rows=4000 width=34) (actual time=0.553..13.007 rows=3991 loops=1)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         Heap Blocks: exact=1865
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=0.371..0.371 rows=3991 loops=1)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=730985)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..2.58 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=704306)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning time: 3.176 ms
 Execution time: 13303.615 ms
(43 rows)

query 22 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=162313.76..162313.78 rows=1 width=72) (actual time=2242.579..2242.581 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75444.43..75444.44 rows=1 width=32) (actual time=976.308..976.309 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75325.39 rows=47615 width=6) (actual time=0.013..934.000 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=86869.32..87086.32 rows=7891 width=72) (actual time=2242.578..2242.578 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=86869.32..86889.05 rows=7891 width=38) (actual time=2240.814..2241.145 rows=9006 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..86358.54 rows=7891 width=38) (actual time=976.356..2218.843 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75325.39 rows=17502 width=26) (actual time=976.335..1515.367 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.66 rows=18 width=4) (actual time=0.003..0.003 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 16.295 ms
 Execution time: 2243.101 ms
(20 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=162313.76..162313.78 rows=1 width=72) (actual time=1592.546..1592.549 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75444.43..75444.44 rows=1 width=32) (actual time=711.161..711.162 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75325.39 rows=47615 width=6) (actual time=0.006..674.026 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=86869.32..87086.32 rows=7891 width=72) (actual time=1592.546..1592.546 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=86869.32..86889.05 rows=7891 width=38) (actual time=1590.782..1591.113 rows=9006 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..86358.54 rows=7891 width=38) (actual time=711.197..1573.056 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75325.39 rows=17502 width=26) (actual time=711.183..1215.810 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.66 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 0.682 ms
 Execution time: 1592.597 ms
(20 rows)

