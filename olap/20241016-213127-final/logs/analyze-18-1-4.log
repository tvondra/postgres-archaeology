query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184196.52..184197.15 rows=1 width=236) (actual time=1816.452..1818.957 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184196.52..184200.33 rows=6 width=236) (actual time=1816.450..1818.955 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184196.52..184199.39 rows=24 width=236) (actual time=1816.427..1818.934 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183196.46..183196.47 rows=6 width=236) (actual time=1807.031..1807.032 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 26kB
                     Worker 0:  Sort Method: quicksort  Memory: 26kB
                     Worker 1:  Sort Method: quicksort  Memory: 26kB
                     Worker 2:  Sort Method: quicksort  Memory: 26kB
                     Worker 3:  Sort Method: quicksort  Memory: 26kB
                     ->  Partial HashAggregate  (cost=183196.24..183196.38 rows=6 width=236) (actual time=1806.995..1807.001 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.92 rows=1482352 width=25) (actual time=0.127..498.377 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 19.061 ms
 Execution Time: 1819.568 ms
(25 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184196.52..184197.15 rows=1 width=236) (actual time=1632.241..1632.415 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184196.52..184200.33 rows=6 width=236) (actual time=1632.240..1632.413 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184196.52..184199.39 rows=24 width=236) (actual time=1632.208..1632.386 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183196.46..183196.47 rows=6 width=236) (actual time=1626.972..1626.973 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 26kB
                     Worker 0:  Sort Method: quicksort  Memory: 26kB
                     Worker 1:  Sort Method: quicksort  Memory: 26kB
                     Worker 2:  Sort Method: quicksort  Memory: 26kB
                     Worker 3:  Sort Method: quicksort  Memory: 26kB
                     ->  Partial HashAggregate  (cost=183196.24..183196.38 rows=6 width=236) (actual time=1626.942..1626.947 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.92 rows=1482352 width=25) (actual time=0.032..254.778 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 1.083 ms
 Execution Time: 1632.484 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18198.53..18198.54 rows=1 width=192) (actual time=169.030..169.043 rows=100 loops=1)
   ->  Sort  (cost=18198.53..18198.54 rows=1 width=192) (actual time=169.029..169.036 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Nested Loop  (cost=14.58..18198.52 rows=1 width=192) (actual time=4.083..168.489 rows=489 loops=1)
               Join Filter: (supplier.s_nationkey = nation.n_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.420..0.426 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.205..0.207 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.209..0.211 rows=25 loops=1)
               ->  Materialize  (cost=14.58..18195.82 rows=1 width=170) (actual time=0.316..33.529 rows=489 loops=5)
                     Storage: Memory  Maximum Storage: 113kB
                     ->  Nested Loop  (cost=14.58..18195.82 rows=1 width=170) (actual time=1.575..166.966 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.30..18194.55 rows=1 width=34) (actual time=1.160..126.850 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5439.92 rows=812 width=30) (actual time=0.268..26.278 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.88..15.70 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.44..13.45 rows=1 width=32) (actual time=0.122..0.122 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.85..13.44 rows=1 width=6) (actual time=0.110..0.120 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..12.33 rows=4 width=10) (actual time=0.091..0.117 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.71..11.71 rows=4 width=10) (actual time=0.088..0.110 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.081..0.083 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..2.30 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.081..0.081 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 26.148 ms
 Execution Time: 169.102 ms
(48 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18198.53..18198.54 rows=1 width=192) (actual time=26.846..26.860 rows=100 loops=1)
   ->  Sort  (cost=18198.53..18198.54 rows=1 width=192) (actual time=26.845..26.852 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Nested Loop  (cost=14.58..18198.52 rows=1 width=192) (actual time=0.179..26.341 rows=489 loops=1)
               Join Filter: (supplier.s_nationkey = nation.n_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.014..0.019 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.005..0.007 rows=25 loops=1)
               ->  Materialize  (cost=14.58..18195.82 rows=1 width=170) (actual time=0.012..5.201 rows=489 loops=5)
                     Storage: Memory  Maximum Storage: 113kB
                     ->  Nested Loop  (cost=14.58..18195.82 rows=1 width=170) (actual time=0.057..25.633 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.30..18194.55 rows=1 width=34) (actual time=0.053..24.425 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5439.92 rows=812 width=30) (actual time=0.008..8.705 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.88..15.70 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.44..13.45 rows=1 width=32) (actual time=0.017..0.017 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.85..13.44 rows=1 width=6) (actual time=0.012..0.016 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..12.33 rows=4 width=10) (actual time=0.006..0.014 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.71..11.71 rows=4 width=10) (actual time=0.004..0.010 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.003..0.003 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..2.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.002..0.002 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 2.040 ms
 Execution Time: 26.907 ms
(48 rows)

query 3 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233628.92..233628.94 rows=10 width=44) (actual time=1227.995..1230.411 rows=10 loops=1)
   ->  Sort  (cost=233628.92..234422.68 rows=317505 width=44) (actual time=1227.994..1230.409 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=180020.02..226767.75 rows=317505 width=44) (actual time=1206.864..1228.245 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180020.02..218036.36 rows=317505 width=24) (actual time=1206.850..1213.558 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=179019.96..179218.40 rows=79376 width=24) (actual time=1196.428..1196.688 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 466kB
                           Worker 0:  Sort Method: quicksort  Memory: 464kB
                           Worker 1:  Sort Method: quicksort  Memory: 467kB
                           Worker 2:  Sort Method: quicksort  Memory: 464kB
                           Worker 3:  Sort Method: quicksort  Memory: 473kB
                           ->  Parallel Hash Join  (cost=37911.08..172560.18 rows=79376 width=24) (actual time=239.765..1194.600 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.92 rows=821111 width=16) (actual time=0.704..888.922 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37326.40..37326.40 rows=46775 width=12) (actual time=237.348..237.350 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                       ->  Parallel Hash Join  (cost=4535.00..37326.40 rows=46775 width=12) (actual time=21.296..228.580 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=233138 width=16) (actual time=0.510..179.210 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12540 width=4) (actual time=20.670..20.670 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1536kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12540 width=4) (actual time=0.110..19.048 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 25.570 ms
 Execution Time: 1231.165 ms
(35 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233628.92..233628.94 rows=10 width=44) (actual time=424.374..425.892 rows=10 loops=1)
   ->  Sort  (cost=233628.92..234422.68 rows=317505 width=44) (actual time=424.373..425.889 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=180020.02..226767.75 rows=317505 width=44) (actual time=403.546..423.757 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180020.02..218036.36 rows=317505 width=24) (actual time=403.532..409.185 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=179019.96..179218.40 rows=79376 width=24) (actual time=398.015..398.274 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 273kB
                           Worker 0:  Sort Method: quicksort  Memory: 545kB
                           Worker 1:  Sort Method: quicksort  Memory: 264kB
                           Worker 2:  Sort Method: quicksort  Memory: 540kB
                           Worker 3:  Sort Method: quicksort  Memory: 520kB
                           ->  Parallel Hash Join  (cost=37911.08..172560.18 rows=79376 width=24) (actual time=93.859..395.784 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.92 rows=821111 width=16) (actual time=0.054..220.756 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37326.40..37326.40 rows=46775 width=12) (actual time=92.148..92.150 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 9024kB
                                       ->  Parallel Hash Join  (cost=4535.00..37326.40 rows=46775 width=12) (actual time=9.427..81.166 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=233138 width=16) (actual time=0.013..44.359 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12540 width=4) (actual time=8.226..8.226 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1536kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12540 width=4) (actual time=0.013..5.811 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 1.870 ms
 Execution Time: 425.962 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29385.11..53205.14 rows=1 width=24) (actual time=978.180..982.902 rows=1 loops=1)
   ->  GroupAggregate  (cost=29385.11..148485.24 rows=5 width=24) (actual time=978.179..982.900 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29385.11..148201.58 rows=56721 width=16) (actual time=425.626..978.730 rows=10479 loops=1)
               ->  Gather Merge  (cost=29384.68..36095.14 rows=56721 width=20) (actual time=424.974..435.948 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28384.64..28430.38 rows=18297 width=20) (actual time=417.104..417.486 rows=3800 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 943kB
                           Worker 0:  Sort Method: quicksort  Memory: 924kB
                           Worker 1:  Sort Method: quicksort  Memory: 923kB
                           Worker 2:  Sort Method: quicksort  Memory: 935kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=683.82..27089.27 rows=18297 width=20) (actual time=4.360..411.267 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5910
                                 Worker 0:  Heap Blocks: exact=5746
                                 Worker 1:  Heap Blocks: exact=5714
                                 Worker 2:  Heap Blocks: exact=5816
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..669.64 rows=56721 width=0) (actual time=6.961..6.962 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.43..2.22 rows=1 width=4) (actual time=0.047..0.047 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Heap Fetches: 0
 Planning Time: 21.432 ms
 Execution Time: 983.710 ms
(26 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29385.11..53205.14 rows=1 width=24) (actual time=64.154..69.480 rows=1 loops=1)
   ->  GroupAggregate  (cost=29385.11..148485.24 rows=5 width=24) (actual time=64.153..69.478 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29385.11..148201.58 rows=56721 width=16) (actual time=33.725..68.153 rows=10479 loops=1)
               ->  Gather Merge  (cost=29384.68..36095.14 rows=56721 width=20) (actual time=33.690..41.564 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28384.64..28430.38 rows=18297 width=20) (actual time=30.330..30.564 rows=3730 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 947kB
                           Worker 0:  Sort Method: quicksort  Memory: 936kB
                           Worker 1:  Sort Method: quicksort  Memory: 902kB
                           Worker 2:  Sort Method: quicksort  Memory: 939kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=683.82..27089.27 rows=18297 width=20) (actual time=5.934..26.680 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=6031
                                 Worker 0:  Heap Blocks: exact=5865
                                 Worker 1:  Heap Blocks: exact=5412
                                 Worker 2:  Heap Blocks: exact=5878
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..669.64 rows=56721 width=0) (actual time=5.248..5.248 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.43..2.22 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Heap Fetches: 0
 Planning Time: 1.754 ms
 Execution Time: 69.534 ms
(26 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=71866.11..71866.11 rows=1 width=58) (actual time=781.932..788.895 rows=1 loops=1)
   ->  Sort  (cost=71866.11..71866.17 rows=25 width=58) (actual time=781.931..788.893 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=71826.11..71865.99 rows=25 width=58) (actual time=781.443..788.882 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=71826.11..71865.09 rows=78 width=58) (actual time=781.278..788.864 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=70826.07..70855.88 rows=25 width=58) (actual time=772.145..772.760 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=70826.07..70831.97 rows=2360 width=38) (actual time=771.204..771.300 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 151kB
                                 Worker 0:  Sort Method: quicksort  Memory: 151kB
                                 Worker 1:  Sort Method: quicksort  Memory: 150kB
                                 Worker 2:  Sort Method: quicksort  Memory: 154kB
                                 ->  Hash Join  (cost=7973.30..70693.86 rows=2360 width=38) (actual time=49.090..769.863 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7500.30..69910.00 rows=59211 width=50) (actual time=45.073..754.392 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7499.87..35080.02 rows=14800 width=38) (actual time=44.526..522.711 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2759.74..30000.72 rows=73999 width=8) (actual time=20.028..474.744 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6535
                                                         Worker 0:  Heap Blocks: exact=6516
                                                         Worker 1:  Heap Blocks: exact=6509
                                                         Worker 2:  Heap Blocks: exact=6567
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2702.39 rows=229396 width=0) (actual time=15.936..15.936 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=24.361..24.364 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.608..21.708 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.130..16.845 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.168..0.170 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.162..0.168 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.082..0.084 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.073..0.073 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.070..0.071 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.43..2.31 rows=4 width=20) (actual time=0.019..0.019 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.832..3.832 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.343..2.515 rows=10000 loops=4)
 Planning Time: 33.239 ms
 Execution Time: 788.981 ms
(53 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=71866.11..71866.11 rows=1 width=58) (actual time=130.051..140.377 rows=1 loops=1)
   ->  Sort  (cost=71866.11..71866.17 rows=25 width=58) (actual time=130.049..140.375 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=71826.11..71865.99 rows=25 width=58) (actual time=129.572..140.364 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=71826.11..71865.09 rows=78 width=58) (actual time=129.383..140.345 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=70826.07..70855.88 rows=25 width=58) (actual time=125.181..125.802 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=70826.07..70831.97 rows=2360 width=38) (actual time=125.018..125.106 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 151kB
                                 Worker 0:  Sort Method: quicksort  Memory: 150kB
                                 Worker 1:  Sort Method: quicksort  Memory: 152kB
                                 Worker 2:  Sort Method: quicksort  Memory: 153kB
                                 ->  Hash Join  (cost=7973.30..70693.86 rows=2360 width=38) (actual time=31.350..124.229 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7500.30..69910.00 rows=59211 width=50) (actual time=28.410..113.409 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7499.87..35080.02 rows=14800 width=38) (actual time=28.380..67.955 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2759.74..30000.72 rows=73999 width=8) (actual time=16.593..42.754 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6501
                                                         Worker 0:  Heap Blocks: exact=6532
                                                         Worker 1:  Heap Blocks: exact=6576
                                                         Worker 2:  Heap Blocks: exact=6518
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2702.39 rows=229396 width=0) (actual time=12.821..12.822 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.647..11.652 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.321..9.376 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.008..3.637 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.055..0.059 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.049..0.057 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.031..0.033 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.43..2.31 rows=4 width=20) (actual time=0.003..0.003 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.810..2.810 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.020..1.488 rows=10000 loops=4)
 Planning Time: 5.171 ms
 Execution Time: 140.452 ms
(53 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=114095.44..114095.45 rows=1 width=32) (actual time=1080.159..1086.985 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=114095.44..114095.45 rows=1 width=32) (actual time=1080.158..1086.983 rows=1 loops=1)
         ->  Gather  (cost=114095.01..114095.42 rows=4 width=32) (actual time=1080.146..1086.973 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=113095.01..113095.02 rows=1 width=32) (actual time=1070.617..1070.618 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=22508.56..112950.68 rows=28864 width=12) (actual time=134.208..1053.223 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=12922
                           Worker 0:  Heap Blocks: exact=13207
                           Worker 1:  Heap Blocks: exact=13419
                           Worker 2:  Heap Blocks: exact=13214
                           Worker 3:  Heap Blocks: exact=13381
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22479.69 rows=115454 width=0) (actual time=130.170..130.170 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 17.780 ms
 Execution Time: 1088.097 ms
(17 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=114095.44..114095.45 rows=1 width=32) (actual time=203.207..205.015 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=114095.44..114095.45 rows=1 width=32) (actual time=203.206..205.013 rows=1 loops=1)
         ->  Gather  (cost=114095.01..114095.42 rows=4 width=32) (actual time=203.184..205.001 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=113095.01..113095.02 rows=1 width=32) (actual time=194.558..194.559 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=22508.56..112950.68 rows=28864 width=12) (actual time=104.905..188.296 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=11942
                           Worker 0:  Heap Blocks: exact=14586
                           Worker 1:  Heap Blocks: exact=12425
                           Worker 2:  Heap Blocks: exact=14810
                           Worker 3:  Heap Blocks: exact=12380
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22479.69 rows=115454 width=0) (actual time=96.993..96.994 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 1.003 ms
 Execution Time: 205.059 ms
(17 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141456.34..141614.95 rows=1 width=116) (actual time=3361.383..3364.596 rows=1 loops=1)
   ->  GroupAggregate  (cost=141456.34..1109621.01 rows=6104 width=116) (actual time=3361.382..3364.594 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141456.34..1109437.89 rows=6104 width=96) (actual time=899.436..3361.805 rows=1359 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 32695
               ->  Nested Loop  (cost=141455.92..769854.06 rows=152600 width=76) (actual time=882.855..2911.623 rows=34054 loops=1)
                     ->  Gather Merge  (cost=141455.49..159727.00 rows=152600 width=76) (actual time=882.049..925.355 rows=34054 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140455.43..140550.81 rows=38150 width=76) (actual time=868.448..869.306 rows=7207 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 3747kB
                                 Worker 0:  Sort Method: quicksort  Memory: 3705kB
                                 Worker 1:  Sort Method: quicksort  Memory: 3670kB
                                 Worker 2:  Sort Method: quicksort  Memory: 3806kB
                                 Worker 3:  Sort Method: quicksort  Memory: 3612kB
                                 ->  Hash Join  (cost=381.77..137552.33 rows=38150 width=76) (actual time=3.134..845.077 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135064.71 rows=459868 width=24) (actual time=0.336..797.886 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.786..2.789 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.302..2.661 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.223..1.534 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.073..0.074 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.067..0.072 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.055..0.057 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.004..0.005 rows=2 loops=10)
                                                                     Storage: Memory  Maximum Storage: 17kB
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=8) (actual time=0.058..0.058 rows=1 loops=34054)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.21 rows=1 width=8) (actual time=0.012..0.012 rows=1 loops=34054)
                     Index Cond: (c_custkey = orders.o_custkey)
                     Heap Fetches: 0
 Planning Time: 30.108 ms
 Execution Time: 3364.947 ms
(47 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141456.34..141614.95 rows=1 width=116) (actual time=490.609..491.981 rows=1 loops=1)
   ->  GroupAggregate  (cost=141456.34..1109621.01 rows=6104 width=116) (actual time=490.608..491.979 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141456.34..1109437.89 rows=6104 width=96) (actual time=316.061..490.882 rows=1359 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 32675
               ->  Nested Loop  (cost=141455.92..769854.06 rows=152600 width=76) (actual time=315.548..417.982 rows=34034 loops=1)
                     ->  Gather Merge  (cost=141455.49..159727.00 rows=152600 width=76) (actual time=315.498..334.219 rows=34034 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140455.43..140550.81 rows=38150 width=76) (actual time=307.518..308.138 rows=7228 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 3731kB
                                 Worker 0:  Sort Method: quicksort  Memory: 3089kB
                                 Worker 1:  Sort Method: quicksort  Memory: 3908kB
                                 Worker 2:  Sort Method: quicksort  Memory: 3953kB
                                 Worker 3:  Sort Method: quicksort  Memory: 3859kB
                                 ->  Hash Join  (cost=381.77..137552.33 rows=38150 width=76) (actual time=2.060..282.611 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135064.71 rows=459868 width=24) (actual time=0.045..236.839 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=1.996..1.999 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.037..1.874 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.007..0.685 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.028..0.029 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.022..0.027 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.011..0.013 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.005 rows=2 loops=10)
                                                                     Storage: Memory  Maximum Storage: 17kB
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34034)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.21 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34034)
                     Index Cond: (c_custkey = orders.o_custkey)
                     Heap Fetches: 0
 Planning Time: 3.869 ms
 Execution Time: 492.071 ms
(47 rows)

query 8 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41782.23..41796.45 rows=1 width=64) (actual time=676.530..682.159 rows=1 loops=1)
   ->  GroupAggregate  (cost=41782.23..76007.80 rows=2406 width=64) (actual time=676.529..682.158 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41782.23..75911.10 rows=2429 width=70) (actual time=306.881..680.410 rows=1235 loops=1)
               ->  Nested Loop  (cost=41782.08..75816.56 rows=2429 width=20) (actual time=306.872..678.376 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41781.79..70769.72 rows=2437 width=20) (actual time=306.705..655.922 rows=1235 loops=1)
                           Join Filter: (n1.n_regionkey = region.r_regionkey)
                           Rows Removed by Join Filter: 4857
                           ->  Nested Loop  (cost=41781.79..70585.91 rows=12183 width=24) (actual time=305.683..652.879 rows=6092 loops=1)
                                 ->  Nested Loop  (cost=41781.65..70259.00 rows=12183 width=24) (actual time=305.472..646.440 rows=6092 loops=1)
                                       ->  Gather Merge  (cost=41781.23..43222.55 rows=12183 width=24) (actual time=305.073..314.741 rows=6092 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Sort  (cost=40781.19..40791.01 rows=3930 width=24) (actual time=297.180..297.358 rows=2158 loops=4)
                                                   Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                                   Sort Method: quicksort  Memory: 255kB
                                                   Worker 0:  Sort Method: quicksort  Memory: 254kB
                                                   Worker 1:  Sort Method: quicksort  Memory: 259kB
                                                   Worker 2:  Sort Method: quicksort  Memory: 256kB
                                                   ->  Parallel Hash Join  (cost=6591.22..40546.56 rows=3930 width=24) (actual time=111.236..295.630 rows=3024 loops=4)
                                                         Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=148389 width=12) (actual time=0.376..163.558 rows=114316 loops=4)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 260684
                                                         ->  Parallel Hash  (cost=6467.07..6467.07 rows=9932 width=20) (actual time=110.574..110.575 rows=9924 loops=4)
                                                               Buckets: 65536  Batches: 1  Memory Usage: 2784kB
                                                               ->  Nested Loop  (cost=0.85..6467.07 rows=9932 width=20) (actual time=0.755..107.043 rows=9924 loops=4)
                                                                     ->  Parallel Index Only Scan using q2_idx_1 on part  (cost=0.42..5391.73 rows=331 width=4) (actual time=0.362..10.514 rows=330 loops=4)
                                                                           Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                                           Heap Fetches: 0
                                                                     ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.43..2.94 rows=31 width=24) (actual time=0.236..0.288 rows=30 loops=1320)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                       ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.22 rows=1 width=8) (actual time=0.054..0.054 rows=1 loops=6092)
                                             Index Cond: (c_custkey = orders.o_custkey)
                                             Heap Fetches: 0
                                 ->  Memoize  (cost=0.15..1.17 rows=1 width=8) (actual time=0.000..0.000 rows=1 loops=6092)
                                       Cache Key: customer.c_nationkey
                                       Cache Mode: logical
                                       Hits: 6067  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 3kB
                                       ->  Index Scan using nation_pkey on nation n1  (cost=0.14..1.16 rows=1 width=8) (actual time=0.011..0.011 rows=1 loops=25)
                                             Index Cond: (n_nationkey = customer.c_nationkey)
                           ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6092)
                                 Storage: Memory  Maximum Storage: 17kB
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.195..0.197 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                     ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.29..2.07 rows=1 width=8) (actual time=0.018..0.018 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Heap Fetches: 0
               ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1235)
                     Cache Key: supplier.s_nationkey
                     Cache Mode: logical
                     Hits: 1210  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                     ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.004..0.004 rows=1 loops=25)
                           Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 36.896 ms
 Execution Time: 682.276 ms
(58 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41782.23..41796.45 rows=1 width=64) (actual time=111.125..115.500 rows=1 loops=1)
   ->  GroupAggregate  (cost=41782.23..76007.80 rows=2406 width=64) (actual time=111.124..115.498 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41782.23..75911.10 rows=2429 width=70) (actual time=87.331..114.705 rows=1235 loops=1)
               ->  Nested Loop  (cost=41782.08..75816.56 rows=2429 width=20) (actual time=87.324..113.796 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41781.79..70769.72 rows=2437 width=20) (actual time=87.315..111.549 rows=1235 loops=1)
                           Join Filter: (n1.n_regionkey = region.r_regionkey)
                           Rows Removed by Join Filter: 4858
                           ->  Nested Loop  (cost=41781.79..70585.91 rows=12183 width=24) (actual time=87.282..109.937 rows=6093 loops=1)
                                 ->  Nested Loop  (cost=41781.65..70259.00 rows=12183 width=24) (actual time=87.272..107.296 rows=6093 loops=1)
                                       ->  Gather Merge  (cost=41781.23..43222.55 rows=12183 width=24) (actual time=87.241..93.535 rows=6093 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Sort  (cost=40781.19..40791.01 rows=3930 width=24) (actual time=83.668..83.775 rows=2159 loops=4)
                                                   Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                                   Sort Method: quicksort  Memory: 256kB
                                                   Worker 0:  Sort Method: quicksort  Memory: 259kB
                                                   Worker 1:  Sort Method: quicksort  Memory: 256kB
                                                   Worker 2:  Sort Method: quicksort  Memory: 253kB
                                                   ->  Parallel Hash Join  (cost=6591.22..40546.56 rows=3930 width=24) (actual time=12.518..82.378 rows=3024 loops=4)
                                                         Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=148389 width=12) (actual time=0.008..52.974 rows=114316 loops=4)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 260684
                                                         ->  Parallel Hash  (cost=6467.07..6467.07 rows=9932 width=20) (actual time=12.364..12.365 rows=9924 loops=4)
                                                               Buckets: 65536  Batches: 1  Memory Usage: 2720kB
                                                               ->  Nested Loop  (cost=0.85..6467.07 rows=9932 width=20) (actual time=0.061..9.850 rows=9924 loops=4)
                                                                     ->  Parallel Index Only Scan using q2_idx_1 on part  (cost=0.42..5391.73 rows=331 width=4) (actual time=0.036..5.750 rows=330 loops=4)
                                                                           Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                                           Heap Fetches: 0
                                                                     ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.43..2.94 rows=31 width=24) (actual time=0.005..0.009 rows=30 loops=1320)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                       ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.22 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=6093)
                                             Index Cond: (c_custkey = orders.o_custkey)
                                             Heap Fetches: 0
                                 ->  Memoize  (cost=0.15..1.17 rows=1 width=8) (actual time=0.000..0.000 rows=1 loops=6093)
                                       Cache Key: customer.c_nationkey
                                       Cache Mode: logical
                                       Hits: 6068  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 3kB
                                       ->  Index Scan using nation_pkey on nation n1  (cost=0.14..1.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=25)
                                             Index Cond: (n_nationkey = customer.c_nationkey)
                           ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6093)
                                 Storage: Memory  Maximum Storage: 17kB
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                     ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.29..2.07 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Heap Fetches: 0
               ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1235)
                     Cache Key: supplier.s_nationkey
                     Cache Mode: logical
                     Hits: 1210  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                     ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=25)
                           Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 5.687 ms
 Execution Time: 115.591 ms
(58 rows)

query 9 run 1
SET
SET
SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=72114.20..72133.46 rows=1 width=90) (actual time=1066.932..1074.116 rows=1 loops=1)
   ->  GroupAggregate  (cost=72114.20..1230724.71 rows=60150 width=90) (actual time=1066.931..1074.113 rows=1 loops=1)
         Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=72114.20..1221363.55 rows=483366 width=81) (actual time=932.731..1071.882 rows=1210 loops=1)
               Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Gather Merge  (cost=72113.77..129299.09 rows=483366 width=63) (actual time=931.890..940.446 rows=1210 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=71113.73..71503.55 rows=155925 width=63) (actual time=918.829..918.918 rows=712 loops=4)
                           Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
                           Sort Method: quicksort  Memory: 9817kB
                           Worker 0:  Sort Method: quicksort  Memory: 10142kB
                           Worker 1:  Sort Method: quicksort  Memory: 10294kB
                           Worker 2:  Sort Method: quicksort  Memory: 10046kB
                           ->  Hash Join  (cost=23899.02..57664.82 rows=155925 width=63) (actual time=550.409..805.423 rows=81482 loops=4)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=23897.46..57184.57 rows=155925 width=41) (actual time=550.267..780.759 rows=81482 loops=4)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.444..119.880 rows=375000 loops=4)
                                       ->  Parallel Hash  (cost=21948.40..21948.40 rows=155925 width=41) (actual time=549.002..549.004 rows=81482 loops=4)
                                             Buckets: 524288  Batches: 1  Memory Usage: 29600kB
                                             ->  Hash Join  (cost=448.85..21948.40 rows=155925 width=41) (actual time=3.865..516.726 rows=81482 loops=4)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.85..21089.57 rows=156439 width=33) (actual time=0.674..493.303 rows=81482 loops=4)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=5214 width=4) (actual time=0.162..16.396 rows=2720 loops=4)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 47280
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.82 rows=31 width=29) (actual time=0.147..0.172 rows=30 loops=10880)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.172..3.173 rows=10000 loops=4)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.082..2.003 rows=10000 loops=4)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.074..0.075 rows=25 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.066..0.069 rows=25 loops=4)
               ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..2.24 rows=1 width=14) (actual time=0.107..0.107 rows=1 loops=1210)
                     Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                     Heap Fetches: 0
 Planning Time: 39.248 ms
 Execution Time: 1074.220 ms
(42 rows)

SET
SET
SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=72114.20..72133.46 rows=1 width=90) (actual time=387.940..394.409 rows=1 loops=1)
   ->  GroupAggregate  (cost=72114.20..1230724.71 rows=60150 width=90) (actual time=387.939..394.407 rows=1 loops=1)
         Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=72114.20..1221363.55 rows=483366 width=81) (actual time=382.812..393.581 rows=1210 loops=1)
               Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Gather Merge  (cost=72113.77..129299.09 rows=483366 width=63) (actual time=382.764..389.803 rows=1210 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=71113.73..71503.55 rows=155925 width=63) (actual time=377.309..377.382 rows=714 loops=4)
                           Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
                           Sort Method: quicksort  Memory: 10010kB
                           Worker 0:  Sort Method: quicksort  Memory: 10099kB
                           Worker 1:  Sort Method: quicksort  Memory: 10094kB
                           Worker 2:  Sort Method: quicksort  Memory: 10096kB
                           ->  Hash Join  (cost=23899.02..57664.82 rows=155925 width=63) (actual time=100.626..264.738 rows=81482 loops=4)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=23897.46..57184.57 rows=155925 width=41) (actual time=100.538..240.476 rows=81482 loops=4)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.008..27.651 rows=375000 loops=4)
                                       ->  Parallel Hash  (cost=21948.40..21948.40 rows=155925 width=41) (actual time=99.770..99.773 rows=81482 loops=4)
                                             Buckets: 524288  Batches: 1  Memory Usage: 29632kB
                                             ->  Hash Join  (cost=448.85..21948.40 rows=155925 width=41) (actual time=2.446..69.266 rows=81482 loops=4)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.85..21089.57 rows=156439 width=33) (actual time=0.050..49.596 rows=81482 loops=4)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=5214 width=4) (actual time=0.027..11.173 rows=2720 loops=4)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 47280
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.82 rows=31 width=29) (actual time=0.005..0.011 rows=30 loops=10880)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.379..2.379 rows=10000 loops=4)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.012..1.243 rows=10000 loops=4)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.025..0.026 rows=25 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.015..0.018 rows=25 loops=4)
               ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..2.24 rows=1 width=14) (actual time=0.003..0.003 rows=1 loops=1210)
                     Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                     Heap Fetches: 0
 Planning Time: 7.051 ms
 Execution Time: 394.493 ms
(42 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=85067.22..85067.27 rows=20 width=202) (actual time=737.384..742.139 rows=20 loops=1)
   ->  Sort  (cost=85067.22..85209.14 rows=56769 width=202) (actual time=737.382..742.136 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=82847.00..83556.61 rows=56769 width=202) (actual time=706.759..730.758 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Gather  (cost=6714.99..82137.39 rows=56769 width=182) (actual time=63.510..619.514 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5714.99..75460.49 rows=18313 width=182) (actual time=53.689..659.488 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5713.43..75402.70 rows=18313 width=160) (actual time=53.604..651.235 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=710.18..70351.38 rows=18313 width=16) (actual time=13.728..593.247 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=709.74..27125.55 rows=18987 width=8) (actual time=12.949..359.284 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=4713
                                             Worker 0:  Heap Blocks: exact=6430
                                             Worker 1:  Heap Blocks: exact=5839
                                             Worker 2:  Heap Blocks: exact=6395
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..695.03 rows=58860 width=0) (actual time=9.283..9.283 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.43..2.27 rows=1 width=16) (actual time=0.015..0.015 rows=2 loops=57111)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=39.429..39.429 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.158..19.248 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.080..0.080 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.070..0.072 rows=25 loops=4)
 Planning Time: 24.786 ms
 Execution Time: 742.480 ms
(34 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=85067.22..85067.27 rows=20 width=202) (actual time=196.303..200.674 rows=20 loops=1)
   ->  Sort  (cost=85067.22..85209.14 rows=56769 width=202) (actual time=196.302..200.671 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=82847.00..83556.61 rows=56769 width=202) (actual time=165.430..189.273 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Gather  (cost=6714.99..82137.39 rows=56769 width=182) (actual time=41.583..93.690 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5714.99..75460.49 rows=18313 width=182) (actual time=38.434..130.516 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5713.43..75402.70 rows=18313 width=160) (actual time=38.402..124.374 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=710.18..70351.38 rows=18313 width=16) (actual time=10.753..83.628 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=709.74..27125.55 rows=18987 width=8) (actual time=10.690..28.163 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=2028
                                             Worker 0:  Heap Blocks: exact=7168
                                             Worker 1:  Heap Blocks: exact=7033
                                             Worker 2:  Heap Blocks: exact=7148
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..695.03 rows=58860 width=0) (actual time=7.279..7.280 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.43..2.27 rows=1 width=16) (actual time=0.003..0.003 rows=2 loops=57111)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=27.217..27.217 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.007..7.532 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.027..0.027 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.016..0.019 rows=25 loops=4)
 Planning Time: 2.025 ms
 Execution Time: 201.002 ms
(34 rows)

query 11 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17533.56..17533.56 rows=1 width=36) (actual time=689.187..689.286 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=7170.47..7170.48 rows=1 width=32) (actual time=25.829..25.925 rows=1 loops=1)
           ->  Gather  (cost=7170.24..7170.45 rows=2 width=32) (actual time=25.723..25.916 rows=2 loops=1)
                 Workers Planned: 1
                 Workers Launched: 1
                 ->  Partial Aggregate  (cost=6170.24..6170.25 rows=1 width=32) (actual time=20.261..20.263 rows=1 loops=2)
                       ->  Nested Loop  (cost=0.71..6029.06 rows=18824 width=10) (actual time=0.105..16.668 rows=16440 loops=2)
                             ->  Nested Loop  (cost=0.29..578.65 rows=235 width=4) (actual time=0.089..2.917 rows=206 loops=2)
                                   Join Filter: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   Rows Removed by Join Filter: 4794
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.024..1.734 rows=5000 loops=2)
                                         Heap Fetches: 0
                                   ->  Materialize  (cost=0.00..1.32 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=10000)
                                         Storage: Memory  Maximum Storage: 17kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.041..0.042 rows=1 loops=2)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..22.39 rows=80 width=14) (actual time=0.004..0.058 rows=80 loops=411)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=10363.08..10389.75 rows=10667 width=36) (actual time=689.185..689.187 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=9829.74..10309.74 rows=10667 width=36) (actual time=678.452..689.028 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.81..9509.74 rows=32000 width=14) (actual time=1.116..623.323 rows=32880 loops=1)
                     ->  Nested Loop  (cost=5.38..232.45 rows=400 width=4) (actual time=0.688..4.258 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.224..0.228 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=5.38..227.14 rows=400 width=8) (actual time=0.460..3.926 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.253..0.253 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..22.39 rows=80 width=18) (actual time=0.046..1.488 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 14.676 ms
 Execution Time: 689.640 ms
(42 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17533.56..17533.56 rows=1 width=36) (actual time=80.747..80.845 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=7170.47..7170.48 rows=1 width=32) (actual time=21.193..21.288 rows=1 loops=1)
           ->  Gather  (cost=7170.24..7170.45 rows=2 width=32) (actual time=21.040..21.280 rows=2 loops=1)
                 Workers Planned: 1
                 Workers Launched: 1
                 ->  Partial Aggregate  (cost=6170.24..6170.25 rows=1 width=32) (actual time=19.211..19.212 rows=1 loops=2)
                       ->  Nested Loop  (cost=0.71..6029.06 rows=18824 width=10) (actual time=0.095..15.666 rows=16440 loops=2)
                             ->  Nested Loop  (cost=0.29..578.65 rows=235 width=4) (actual time=0.079..2.185 rows=206 loops=2)
                                   Join Filter: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   Rows Removed by Join Filter: 4794
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.018..0.953 rows=5000 loops=2)
                                         Heap Fetches: 0
                                   ->  Materialize  (cost=0.00..1.32 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=10000)
                                         Storage: Memory  Maximum Storage: 17kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.041..0.041 rows=1 loops=2)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..22.39 rows=80 width=14) (actual time=0.003..0.057 rows=80 loops=411)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=10363.08..10389.75 rows=10667 width=36) (actual time=80.746..80.748 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=9829.74..10309.74 rows=10667 width=36) (actual time=70.230..80.602 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.81..9509.74 rows=32000 width=14) (actual time=0.059..31.694 rows=32880 loops=1)
                     ->  Nested Loop  (cost=5.38..232.45 rows=400 width=4) (actual time=0.053..0.519 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.015 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=5.38..227.14 rows=400 width=8) (actual time=0.039..0.453 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.019..0.019 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..22.39 rows=80 width=18) (actual time=0.003..0.065 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.224 ms
 Execution Time: 81.196 ms
(42 rows)

query 12 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16401.49..33372.66 rows=1 width=27) (actual time=1083.782..1087.132 rows=1 loops=1)
   ->  GroupAggregate  (cost=16401.49..135199.67 rows=7 width=27) (actual time=1083.781..1087.130 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=16401.49..134697.16 rows=28711 width=27) (actual time=61.279..1076.684 rows=15492 loops=1)
               ->  Gather Merge  (cost=16401.06..19838.77 rows=28711 width=15) (actual time=60.445..72.301 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=15401.01..15418.95 rows=7178 width=15) (actual time=52.476..52.824 rows=4238 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 416kB
                           Worker 0:  Sort Method: quicksort  Memory: 377kB
                           Worker 1:  Sort Method: quicksort  Memory: 367kB
                           Worker 2:  Sort Method: quicksort  Memory: 391kB
                           Worker 3:  Sort Method: quicksort  Memory: 379kB
                           ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..14941.28 rows=7178 width=15) (actual time=0.195..51.399 rows=6191 loops=5)
                                 Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Heap Fetches: 0
               ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=20) (actual time=0.064..0.064 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 22.393 ms
 Execution Time: 1087.200 ms
(21 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16401.49..33372.66 rows=1 width=27) (actual time=87.067..89.385 rows=1 loops=1)
   ->  GroupAggregate  (cost=16401.49..135199.67 rows=7 width=27) (actual time=87.066..89.382 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=16401.49..134697.16 rows=28711 width=27) (actual time=37.311..85.099 rows=15492 loops=1)
               ->  Gather Merge  (cost=16401.06..19838.77 rows=28711 width=15) (actual time=37.288..43.218 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=15401.01..15418.95 rows=7178 width=15) (actual time=33.093..33.304 rows=4199 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 425kB
                           Worker 0:  Sort Method: quicksort  Memory: 404kB
                           Worker 1:  Sort Method: quicksort  Memory: 392kB
                           Worker 2:  Sort Method: quicksort  Memory: 369kB
                           Worker 3:  Sort Method: quicksort  Memory: 340kB
                           ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..14941.28 rows=7178 width=15) (actual time=0.061..32.142 rows=6191 loops=5)
                                 Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Heap Fetches: 0
               ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 1.410 ms
 Execution Time: 89.432 ms
(21 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64909.50..64909.50 rows=1 width=16) (actual time=1389.042..1389.044 rows=1 loops=1)
   ->  Sort  (cost=64909.50..64910.00 rows=200 width=16) (actual time=1389.040..1389.042 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64906.50..64908.50 rows=200 width=16) (actual time=1389.014..1389.021 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61156.50..62656.50 rows=150000 width=12) (actual time=1349.991..1372.404 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4953.42..53732.26 rows=1484848 width=8) (actual time=34.816..1001.903 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484848 width=8) (actual time=0.709..569.867 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=33.751..33.752 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.468..17.075 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 17.065 ms
 Execution Time: 1390.137 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64909.50..64909.50 rows=1 width=16) (actual time=1263.059..1263.062 rows=1 loops=1)
   ->  Sort  (cost=64909.50..64910.00 rows=200 width=16) (actual time=1263.058..1263.060 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64906.50..64908.50 rows=200 width=16) (actual time=1263.032..1263.039 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61156.50..62656.50 rows=150000 width=12) (actual time=1223.822..1246.202 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4953.42..53732.26 rows=1484848 width=8) (actual time=29.849..884.311 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484848 width=8) (actual time=0.014..471.292 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=29.466..29.466 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.016..13.395 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.927 ms
 Execution Time: 1264.174 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=82608.04..82608.06 rows=1 width=32) (actual time=546.876..554.332 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=82608.04..82608.06 rows=1 width=32) (actual time=546.874..554.330 rows=1 loops=1)
         ->  Gather  (cost=82607.59..82608.00 rows=4 width=64) (actual time=546.860..554.318 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=81607.59..81607.60 rows=1 width=64) (actual time=535.198..535.200 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7351.62..81272.44 rows=19151 width=33) (actual time=52.331..520.664 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1377.62..75248.17 rows=19151 width=16) (actual time=20.714..473.688 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8486
                                 Worker 0:  Heap Blocks: exact=8524
                                 Worker 1:  Heap Blocks: exact=7968
                                 Worker 2:  Heap Blocks: exact=8253
                                 Worker 3:  Heap Blocks: exact=8450
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1358.47 rows=76604 width=0) (actual time=13.811..13.811 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=31.238..31.239 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.065..12.654 rows=40000 loops=5)
 Planning Time: 23.680 ms
 Execution Time: 554.379 ms
(22 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=82608.04..82608.06 rows=1 width=32) (actual time=109.888..116.900 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=82608.04..82608.06 rows=1 width=32) (actual time=109.887..116.898 rows=1 loops=1)
         ->  Gather  (cost=82607.59..82608.00 rows=4 width=64) (actual time=107.136..116.879 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=81607.59..81607.60 rows=1 width=64) (actual time=103.101..103.104 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7351.62..81272.44 rows=19151 width=33) (actual time=39.868..96.789 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1377.62..75248.17 rows=19151 width=16) (actual time=14.383..61.980 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8192
                                 Worker 0:  Heap Blocks: exact=8035
                                 Worker 1:  Heap Blocks: exact=7887
                                 Worker 2:  Heap Blocks: exact=8261
                                 Worker 3:  Heap Blocks: exact=9306
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1358.47 rows=76604 width=0) (actual time=7.898..7.898 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=25.167..25.167 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14240kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.008..6.346 rows=40000 loops=5)
 Planning Time: 1.323 ms
 Execution Time: 116.939 ms
(22 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=242468.04..242576.41 rows=1 width=103) (actual time=1280.676..1288.013 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=122598.61..122598.62 rows=1 width=32) (actual time=229.026..229.028 rows=1 loops=1)
           ->  HashAggregate  (cost=122347.78..122473.20 rows=10033 width=36) (actual time=225.754..228.440 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4093.21..120069.95 rows=227783 width=16) (actual time=27.740..121.969 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4036.26 rows=227783 width=0) (actual time=17.266..17.266 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119869.43..125287.44 rows=50 width=103) (actual time=1280.675..1288.009 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119869.14..125125.82 rows=50 width=36) (actual time=1280.096..1287.429 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119869.14..124674.33 rows=40132 width=36) (actual time=1028.480..1043.130 rows=41802 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118869.08..118894.17 rows=10033 width=36) (actual time=1018.135..1018.895 rows=8787 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1236kB
                           Worker 0:  Sort Method: quicksort  Memory: 1234kB
                           Worker 1:  Sort Method: quicksort  Memory: 1234kB
                           Worker 2:  Sort Method: quicksort  Memory: 1235kB
                           Worker 3:  Sort Method: quicksort  Memory: 1235kB
                           ->  Partial HashAggregate  (cost=118076.85..118202.27 rows=10033 width=36) (actual time=1010.550..1015.943 rows=9895 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=4093.21..117507.39 rows=56946 width=16) (actual time=40.413..960.788 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13406
                                       Worker 0:  Heap Blocks: exact=13334
                                       Worker 1:  Heap Blocks: exact=13311
                                       Worker 2:  Heap Blocks: exact=13459
                                       Worker 3:  Heap Blocks: exact=13318
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4036.26 rows=227783 width=0) (actual time=35.934..35.935 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.22 rows=1 width=71) (actual time=0.573..0.573 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 19.280 ms
 Execution Time: 1288.507 ms
(46 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=242468.04..242576.41 rows=1 width=103) (actual time=412.857..423.067 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=122598.61..122598.62 rows=1 width=32) (actual time=218.386..218.387 rows=1 loops=1)
           ->  HashAggregate  (cost=122347.78..122473.20 rows=10033 width=36) (actual time=215.101..217.803 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4093.21..120069.95 rows=227783 width=16) (actual time=27.702..112.064 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4036.26 rows=227783 width=0) (actual time=17.134..17.134 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119869.43..125287.44 rows=50 width=103) (actual time=412.856..423.063 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119869.14..125125.82 rows=50 width=36) (actual time=412.830..423.037 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119869.14..124674.33 rows=40132 width=36) (actual time=171.971..189.396 rows=41796 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118869.08..118894.17 rows=10033 width=36) (actual time=164.217..164.956 rows=8856 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1228kB
                           Worker 0:  Sort Method: quicksort  Memory: 1236kB
                           Worker 1:  Sort Method: quicksort  Memory: 1238kB
                           Worker 2:  Sort Method: quicksort  Memory: 1236kB
                           Worker 3:  Sort Method: quicksort  Memory: 1236kB
                           ->  Partial HashAggregate  (cost=118076.85..118202.27 rows=10033 width=36) (actual time=155.965..161.416 rows=9894 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=4093.21..117507.39 rows=56946 width=16) (actual time=31.991..123.053 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=11837
                                       Worker 0:  Heap Blocks: exact=13751
                                       Worker 1:  Heap Blocks: exact=14087
                                       Worker 2:  Heap Blocks: exact=13946
                                       Worker 3:  Heap Blocks: exact=13207
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4036.26 rows=227783 width=0) (actual time=25.638..25.638 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.22 rows=1 width=71) (actual time=0.021..0.022 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 1.346 ms
 Execution Time: 423.193 ms
(46 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=27876.12..27876.13 rows=1 width=44) (actual time=282.007..283.064 rows=1 loops=1)
   ->  Sort  (cost=27876.12..27916.22 rows=16039 width=44) (actual time=282.006..283.062 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=19877.67..27795.93 rows=16039 width=44) (actual time=206.185..279.823 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=19877.67..27037.56 rows=59798 width=40) (actual time=206.170..261.662 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=18877.61..18914.98 rows=14950 width=40) (actual time=180.502..181.804 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 1914kB
                           Worker 0:  Sort Method: quicksort  Memory: 2148kB
                           Worker 1:  Sort Method: quicksort  Memory: 2027kB
                           Worker 2:  Sort Method: quicksort  Memory: 2391kB
                           Worker 3:  Sort Method: quicksort  Memory: 2322kB
                           ->  Parallel Hash Join  (cost=6686.49..17840.99 rows=14950 width=40) (actual time=36.932..105.454 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..11240.43 rows=100000 width=8) (actual time=6.025..57.459 rows=159936 loops=5)
                                       Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.725..5.274 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12458 width=40) (actual time=30.773..30.774 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12458 width=40) (actual time=0.284..27.910 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 20.104 ms
 Execution Time: 283.149 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=27876.12..27876.13 rows=1 width=44) (actual time=254.838..255.271 rows=1 loops=1)
   ->  Sort  (cost=27876.12..27916.22 rows=16039 width=44) (actual time=254.837..255.270 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=19877.67..27795.93 rows=16039 width=44) (actual time=179.387..252.018 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=19877.67..27037.56 rows=59798 width=40) (actual time=179.372..233.929 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=18877.61..18914.98 rows=14950 width=40) (actual time=151.709..152.979 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 2107kB
                           Worker 0:  Sort Method: quicksort  Memory: 2275kB
                           Worker 1:  Sort Method: quicksort  Memory: 2116kB
                           Worker 2:  Sort Method: quicksort  Memory: 2073kB
                           Worker 3:  Sort Method: quicksort  Memory: 2232kB
                           ->  Parallel Hash Join  (cost=6686.49..17840.99 rows=14950 width=40) (actual time=18.792..76.126 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..11240.43 rows=100000 width=8) (actual time=2.607..43.425 rows=159936 loops=5)
                                       Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.081..2.546 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12458 width=40) (actual time=15.965..15.966 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12458 width=40) (actual time=0.014..13.526 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 1.298 ms
 Execution Time: 255.330 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=176223.11..176223.13 rows=1 width=32) (actual time=2645.307..2647.964 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=176223.11..176223.13 rows=1 width=32) (actual time=2645.306..2647.962 rows=1 loops=1)
         ->  Gather  (cost=176222.89..176223.10 rows=2 width=32) (actual time=2645.295..2647.955 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=175222.89..175222.90 rows=1 width=32) (actual time=2632.573..2632.575 rows=1 loops=3)
                     ->  Nested Loop  (cost=5352.47..175220.89 rows=799 width=8) (actual time=384.828..2632.490 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=5352.04..175000.45 rows=80 width=40) (actual time=384.432..2604.847 rows=69 loops=3)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=5351.61..5351.81 rows=82 width=4) (actual time=22.586..22.617 rows=69 loops=3)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 25kB
                                       Worker 0:  Sort Method: quicksort  Memory: 25kB
                                       Worker 1:  Sort Method: quicksort  Memory: 25kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=82 width=4) (actual time=0.399..22.564 rows=69 loops=3)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 66597
                                 ->  GroupAggregate  (cost=0.43..169163.63 rows=193605 width=36) (actual time=1.089..2567.011 rows=198926 loops=3)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136253.27 rows=6001256 width=9) (actual time=1.055..1726.571 rows=5968847 loops=3)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.63 rows=10 width=17) (actual time=0.364..0.396 rows=3 loops=208)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 23.745 ms
 Execution Time: 2649.226 ms
(27 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=176223.11..176223.13 rows=1 width=32) (actual time=2308.871..2314.165 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=176223.11..176223.13 rows=1 width=32) (actual time=2308.869..2314.162 rows=1 loops=1)
         ->  Gather  (cost=176222.89..176223.10 rows=2 width=32) (actual time=2249.444..2314.148 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=175222.89..175222.90 rows=1 width=32) (actual time=2276.285..2276.287 rows=1 loops=3)
                     ->  Nested Loop  (cost=5352.47..175220.89 rows=799 width=8) (actual time=217.581..2276.251 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=5352.04..175000.45 rows=80 width=40) (actual time=217.563..2275.541 rows=69 loops=3)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=5351.61..5351.81 rows=82 width=4) (actual time=9.784..9.797 rows=69 loops=3)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 25kB
                                       Worker 0:  Sort Method: quicksort  Memory: 25kB
                                       Worker 1:  Sort Method: quicksort  Memory: 25kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=82 width=4) (actual time=0.070..9.767 rows=69 loops=3)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 66597
                                 ->  GroupAggregate  (cost=0.43..169163.63 rows=193605 width=36) (actual time=0.065..2253.030 rows=196194 loops=3)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136253.27 rows=6001256 width=9) (actual time=0.039..1452.203 rows=5887142 loops=3)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.63 rows=10 width=17) (actual time=0.008..0.009 rows=3 loops=208)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 1.946 ms
 Execution Time: 2314.232 ms
(27 rows)

query 18 run 1
SET
SET
SET
                                                                                                    QUERY PLAN                                                                                                     
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=669395.04..669395.29 rows=100 width=71) (actual time=2916.569..2916.574 rows=9 loops=1)
   ->  Sort  (cost=669395.04..674397.14 rows=2000839 width=71) (actual time=2916.567..2916.571 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=306671.35..592924.41 rows=2000839 width=71) (actual time=2781.926..2916.552 rows=9 loops=1)
               Group Key: orders.o_orderkey, customer.c_custkey
               ->  Incremental Sort  (cost=306671.35..552907.63 rows=2000839 width=44) (actual time=2781.915..2916.522 rows=63 loops=1)
                     Sort Key: orders.o_orderkey, customer.c_custkey
                     Presorted Key: orders.o_orderkey
                     Full-sort Groups: 2  Sort Method: quicksort  Average Memory: 27kB  Peak Memory: 27kB
                     ->  Merge Join  (cost=306671.22..480399.24 rows=2000839 width=44) (actual time=2457.523..2916.487 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Sort  (cost=306670.51..307920.78 rows=500105 width=43) (actual time=2293.859..2293.866 rows=9 loops=1)
                                 Sort Key: orders.o_orderkey
                                 Sort Method: quicksort  Memory: 25kB
                                 ->  Hash Join  (cost=201959.57..248340.90 rows=500105 width=43) (actual time=1978.331..2293.838 rows=9 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash Join  (cost=194987.57..240056.09 rows=500105 width=24) (actual time=1915.284..2230.780 rows=9 loops=1)
                                             Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                             ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.592..232.443 rows=1500000 loops=1)
                                             ->  Hash  (cost=188736.26..188736.26 rows=500105 width=4) (actual time=1826.780..1826.781 rows=9 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                                   ->  GroupAggregate  (cost=0.43..188736.26 rows=500105 width=4) (actual time=389.256..1826.767 rows=9 loops=1)
                                                         Group Key: lineitem_1.l_orderkey
                                                         Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                         Rows Removed by Filter: 1499991
                                                         ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136225.27 rows=6001256 width=9) (actual time=0.337..731.038 rows=6001215 loops=1)
                                                               Heap Fetches: 0
                                       ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=62.711..62.712 rows=150000 loops=1)
                                             Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.473..37.444 rows=150000 loops=1)
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136225.27 rows=6001256 width=9) (actual time=0.019..424.372 rows=4807580 loops=1)
                                 Heap Fetches: 0
 Planning Time: 25.833 ms
 Execution Time: 2916.945 ms
(35 rows)

SET
SET
SET
                                                                                                    QUERY PLAN                                                                                                     
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=669395.04..669395.29 rows=100 width=71) (actual time=2548.324..2548.329 rows=9 loops=1)
   ->  Sort  (cost=669395.04..674397.14 rows=2000839 width=71) (actual time=2548.322..2548.326 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=306671.35..592924.41 rows=2000839 width=71) (actual time=2412.498..2548.308 rows=9 loops=1)
               Group Key: orders.o_orderkey, customer.c_custkey
               ->  Incremental Sort  (cost=306671.35..552907.63 rows=2000839 width=44) (actual time=2412.487..2548.279 rows=63 loops=1)
                     Sort Key: orders.o_orderkey, customer.c_custkey
                     Presorted Key: orders.o_orderkey
                     Full-sort Groups: 2  Sort Method: quicksort  Average Memory: 27kB  Peak Memory: 27kB
                     ->  Merge Join  (cost=306671.22..480399.24 rows=2000839 width=44) (actual time=2085.102..2548.245 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Sort  (cost=306670.51..307920.78 rows=500105 width=43) (actual time=1920.049..1920.056 rows=9 loops=1)
                                 Sort Key: orders.o_orderkey
                                 Sort Method: quicksort  Memory: 25kB
                                 ->  Hash Join  (cost=201959.57..248340.90 rows=500105 width=43) (actual time=1716.214..1920.033 rows=9 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash Join  (cost=194987.57..240056.09 rows=500105 width=24) (actual time=1674.552..1878.363 rows=9 loops=1)
                                             Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                             ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.010..84.558 rows=1500000 loops=1)
                                             ->  Hash  (cost=188736.26..188736.26 rows=500105 width=4) (actual time=1616.413..1616.414 rows=9 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                                   ->  GroupAggregate  (cost=0.43..188736.26 rows=500105 width=4) (actual time=340.735..1616.402 rows=9 loops=1)
                                                         Group Key: lineitem_1.l_orderkey
                                                         Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                         Rows Removed by Filter: 1499991
                                                         ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136225.27 rows=6001256 width=9) (actual time=0.018..557.526 rows=6001215 loops=1)
                                                               Heap Fetches: 0
                                       ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=41.313..41.313 rows=150000 loops=1)
                                             Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.010..18.378 rows=150000 loops=1)
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136225.27 rows=6001256 width=9) (actual time=0.015..425.968 rows=4807580 loops=1)
                                 Heap Fetches: 0
 Planning Time: 2.312 ms
 Execution Time: 2548.413 ms
(35 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=9668.94..9668.95 rows=1 width=32) (actual time=106.668..110.135 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=9668.94..9668.95 rows=1 width=32) (actual time=106.666..110.133 rows=1 loops=1)
         ->  Gather  (cost=9668.72..9668.93 rows=2 width=32) (actual time=106.211..110.122 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=8668.72..8668.73 rows=1 width=32) (actual time=99.196..99.196 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.56..8668.38 rows=45 width=12) (actual time=4.387..99.122 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=198 width=30) (actual time=0.914..26.371 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..5.18 rows=1 width=21) (actual time=0.426..0.429 rows=0 loops=507)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 1
                                 Heap Fetches: 0
 Planning Time: 24.904 ms
 Execution Time: 110.984 ms
(17 rows)

SET
SET
SET


 Limit  (cost=9668.94..9668.95 rows=1 width=32) (actual time=22.229..24.022 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=9668.94..9668.95 rows=1 width=32) (actual time=22.228..24.020 rows=1 loops=1)
         ->  Gather  (cost=9668.72..9668.93 rows=2 width=32) (actual time=22.101..24.012 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=8668.72..8668.73 rows=1 width=32) (actual time=19.404..19.405 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.56..8668.38 rows=45 width=12) (actual time=0.344..19.371 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=198 width=30) (actual time=0.106..17.342 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..5.18 rows=1 width=21) (actual time=0.011..0.012 rows=0 loops=507)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 1
                                 Heap Fetches: 0
 Planning Time: 2.946 ms
 Execution Time: 24.066 ms
(17 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=216324.73..216324.74 rows=1 width=51) (actual time=3490.089..3490.182 rows=1 loops=1)
   ->  Sort  (cost=216324.73..216324.74 rows=1 width=51) (actual time=3490.087..3490.180 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=192579.01..216324.72 rows=1 width=51) (actual time=3325.458..3490.016 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.617..3.184 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.257..0.260 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.326..2.193 rows=10000 loops=1)
               ->  Materialize  (cost=192579.01..215869.41 rows=1 width=8) (actual time=5.624..7.732 rows=4340 loops=438)
                     Storage: Memory  Maximum Storage: 249kB
                     ->  Nested Loop  (cost=192579.01..215869.41 rows=1 width=8) (actual time=2463.340..3319.292 rows=5898 loops=1)
                           ->  Hash Join  (cost=192578.58..210208.85 rows=4925 width=44) (actual time=2463.047..3016.201 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=186571.07..202921.23 rows=487649 width=40) (actual time=2432.503..2937.876 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16618.02..143056.44 rows=925228 width=13) (actual time=124.813..1936.837 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16386.71 rows=925228 width=0) (actual time=105.048..105.048 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=5982.26..5982.26 rows=2020 width=4) (actual time=30.523..30.613 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather Merge  (cost=1000.46..5982.26 rows=2020 width=4) (actual time=26.292..30.439 rows=2187 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=652 width=4) (actual time=0.213..15.658 rows=547 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 49453
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..1.14 rows=1 width=12) (actual time=0.050..0.051 rows=1 loops=5914)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning Time: 30.786 ms
 Execution Time: 3494.783 ms
(43 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=216324.73..216324.74 rows=1 width=51) (actual time=1370.470..1370.569 rows=1 loops=1)
   ->  Sort  (cost=216324.73..216324.74 rows=1 width=51) (actual time=1370.469..1370.567 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=192579.01..216324.72 rows=1 width=51) (actual time=1206.730..1370.401 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.038..1.596 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.021..0.024 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.005..0.668 rows=10000 loops=1)
               ->  Materialize  (cost=192579.01..215869.41 rows=1 width=8) (actual time=1.614..2.898 rows=4340 loops=438)
                     Storage: Memory  Maximum Storage: 249kB
                     ->  Nested Loop  (cost=192579.01..215869.41 rows=1 width=8) (actual time=706.735..1203.455 rows=5898 loops=1)
                           ->  Hash Join  (cost=192578.58..210208.85 rows=4925 width=44) (actual time=706.714..1184.663 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=186571.07..202921.23 rows=487649 width=40) (actual time=692.345..1130.586 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16618.02..143056.44 rows=925228 width=13) (actual time=87.809..305.519 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16386.71 rows=925228 width=0) (actual time=68.723..68.723 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=5982.26..5982.26 rows=2020 width=4) (actual time=14.350..14.445 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather Merge  (cost=1000.46..5982.26 rows=2020 width=4) (actual time=10.493..14.266 rows=2187 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=652 width=4) (actual time=0.077..6.840 rows=547 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 49453
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..1.14 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning Time: 2.392 ms
 Execution Time: 1375.168 ms
(43 rows)

query 21 run 1
SET
SET
SET
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=57444.00..57444.01 rows=1 width=34) (actual time=1875.335..1877.450 rows=100 loops=1)
   ->  Sort  (cost=57444.00..57444.01 rows=1 width=34) (actual time=1875.334..1877.442 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=57443.97..57443.99 rows=1 width=34) (actual time=1874.347..1877.037 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=57443.97..57443.98 rows=1 width=26) (actual time=1874.339..1876.610 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 193kB
                     ->  Nested Loop Semi Join  (cost=29522.31..57443.96 rows=1 width=26) (actual time=432.858..1862.626 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 2768
                           ->  Nested Loop  (cost=29521.88..57441.52 rows=1 width=38) (actual time=432.407..881.588 rows=6909 loops=1)
                                 ->  Gather  (cost=29521.45..57439.17 rows=1 width=34) (actual time=432.059..453.651 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Parallel Hash Right Anti Join  (cost=28521.45..56439.07 rows=1 width=34) (actual time=422.600..426.028 rows=2858 loops=5)
                                             Hash Cond: (l3.l_orderkey = l1.l_orderkey)
                                             Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                             Rows Removed by Join Filter: 31839
                                             ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..25959.57 rows=500105 width=8) (actual time=0.191..109.150 rows=758659 loops=5)
                                                   Heap Fetches: 0
                                             ->  Parallel Hash  (cost=28271.80..28271.80 rows=19938 width=34) (actual time=224.232..224.234 rows=31833 loops=5)
                                                   Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 14400kB
                                                   ->  Hash Join  (cost=237.88..28271.80 rows=19938 width=34) (actual time=1.811..209.935 rows=31833 loops=5)
                                                         Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                         ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..25959.57 rows=500105 width=8) (actual time=0.232..152.656 rows=758659 loops=5)
                                                               Heap Fetches: 0
                                                         ->  Hash  (cost=232.45..232.45 rows=400 width=30) (actual time=1.570..1.572 rows=421 loops=5)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                               ->  Nested Loop  (cost=5.38..232.45 rows=400 width=30) (actual time=0.461..1.499 rows=421 loops=5)
                                                                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.138..0.140 rows=1 loops=5)
                                                                           Filter: (n_name = 'PERU'::bpchar)
                                                                           Rows Removed by Filter: 24
                                                                     ->  Bitmap Heap Scan on supplier  (cost=5.38..227.14 rows=400 width=34) (actual time=0.321..1.304 rows=421 loops=5)
                                                                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                           Heap Blocks: exact=184
                                                                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.244..0.244 rows=421 loops=5)
                                                                                 Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.029..0.029 rows=0 loops=14289)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.141..0.141 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 26.910 ms
 Execution Time: 1877.531 ms
(47 rows)

SET
SET
SET
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=57444.00..57444.01 rows=1 width=34) (actual time=462.020..464.167 rows=100 loops=1)
   ->  Sort  (cost=57444.00..57444.01 rows=1 width=34) (actual time=462.019..464.160 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=57443.97..57443.99 rows=1 width=34) (actual time=461.035..463.755 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=57443.97..57443.98 rows=1 width=26) (actual time=461.026..463.329 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 193kB
                     ->  Nested Loop Semi Join  (cost=29522.31..57443.96 rows=1 width=26) (actual time=380.821..451.144 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 2768
                           ->  Nested Loop  (cost=29521.88..57441.52 rows=1 width=38) (actual time=380.807..430.187 rows=6909 loops=1)
                                 ->  Gather  (cost=29521.45..57439.17 rows=1 width=34) (actual time=380.786..393.835 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Parallel Hash Right Anti Join  (cost=28521.45..56439.07 rows=1 width=34) (actual time=376.457..378.436 rows=2858 loops=5)
                                             Hash Cond: (l3.l_orderkey = l1.l_orderkey)
                                             Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                             Rows Removed by Join Filter: 31839
                                             ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..25959.57 rows=500105 width=8) (actual time=0.161..110.296 rows=758659 loops=5)
                                                   Heap Fetches: 0
                                             ->  Parallel Hash  (cost=28271.80..28271.80 rows=19938 width=34) (actual time=180.546..180.548 rows=31833 loops=5)
                                                   Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 14368kB
                                                   ->  Hash Join  (cost=237.88..28271.80 rows=19938 width=34) (actual time=0.441..166.106 rows=31833 loops=5)
                                                         Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                         ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..25959.57 rows=500105 width=8) (actual time=0.026..111.481 rows=758659 loops=5)
                                                               Heap Fetches: 0
                                                         ->  Hash  (cost=232.45..232.45 rows=400 width=30) (actual time=0.407..0.408 rows=421 loops=5)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                               ->  Nested Loop  (cost=5.38..232.45 rows=400 width=30) (actual time=0.071..0.350 rows=421 loops=5)
                                                                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.017..0.018 rows=1 loops=5)
                                                                           Filter: (n_name = 'PERU'::bpchar)
                                                                           Rows Removed by Filter: 24
                                                                     ->  Bitmap Heap Scan on supplier  (cost=5.38..227.14 rows=400 width=34) (actual time=0.052..0.284 rows=421 loops=5)
                                                                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                           Heap Blocks: exact=184
                                                                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.028..0.028 rows=421 loops=5)
                                                                                 Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=14289)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 3.347 ms
 Execution Time: 464.235 ms
(47 rows)

query 22 run 1
SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.57..12517.24 rows=1 width=72) (actual time=165.040..166.919 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=42.884..42.967 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=42.752..42.957 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=33.743..33.743 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1987 width=6) (actual time=0.179..32.479 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7508.47 rows=737 width=72) (actual time=165.039..166.834 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7490.04 rows=737 width=38) (actual time=66.496..166.266 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=66.258..69.609 rows=2735 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=20.704..20.849 rows=1507 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 530kB
                           Worker 0:  Sort Method: quicksort  Memory: 470kB
                           Worker 1:  Sort Method: quicksort  Memory: 472kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.022..18.970 rows=6359 loops=3)
                                 Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.00 rows=17 width=4) (actual time=0.035..0.035 rows=1 loops=2735)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 14.939 ms
 Execution Time: 167.760 ms
(29 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.57..12517.24 rows=1 width=72) (actual time=56.837..58.474 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=27.638..27.726 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=27.515..27.716 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=25.131..25.132 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1987 width=6) (actual time=0.017..23.988 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7508.47 rows=737 width=72) (actual time=56.836..58.384 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7490.04 rows=737 width=38) (actual time=50.354..58.166 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=50.330..52.573 rows=2735 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=19.968..20.044 rows=1544 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 550kB
                           Worker 0:  Sort Method: quicksort  Memory: 459kB
                           Worker 1:  Sort Method: quicksort  Memory: 464kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.020..18.253 rows=6359 loops=3)
                                 Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.00 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=2735)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 0.949 ms
 Execution Time: 58.749 ms
(29 rows)

