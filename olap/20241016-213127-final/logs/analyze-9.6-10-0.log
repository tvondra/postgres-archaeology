query 1 run 1
SET
SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4246703.47..4246703.47 rows=1 width=236) (actual time=99741.872..99741.872 rows=1 loops=1)
   ->  Sort  (cost=4246703.47..4246703.48 rows=6 width=236) (actual time=99741.871..99741.871 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=4246703.27..4246703.44 rows=6 width=236) (actual time=99741.838..99741.844 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..1875021.75 rows=59292038 width=25) (actual time=0.582..12797.855 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning time: 23.348 ms
 Execution time: 99742.903 ms
(11 rows)

SET
SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4246703.47..4246703.47 rows=1 width=236) (actual time=94857.693..94857.693 rows=1 loops=1)
   ->  Sort  (cost=4246703.47..4246703.48 rows=6 width=236) (actual time=94857.692..94857.692 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=4246703.27..4246703.44 rows=6 width=236) (actual time=94857.662..94857.668 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..1875021.75 rows=59292038 width=25) (actual time=0.028..11078.961 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning time: 0.806 ms
 Execution time: 94857.758 ms
(11 rows)

query 2 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=485249.13..485249.14 rows=1 width=192) (actual time=63621.691..63621.703 rows=100 loops=1)
   ->  Sort  (cost=485249.13..485249.14 rows=1 width=192) (actual time=63621.690..63621.697 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Nested Loop  (cost=53.11..485249.12 rows=1 width=192) (actual time=38.640..63618.248 rows=4737 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.010..0.016 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.002 rows=25 loops=1)
               ->  Materialize  (cost=53.11..485246.42 rows=1 width=170) (actual time=5.357..12722.673 rows=4737 loops=5)
                     ->  Nested Loop  (cost=53.11..485246.42 rows=1 width=170) (actual time=26.778..63603.977 rows=4737 loops=1)
                           Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
                           Rows Removed by Join Filter: 473695263
                           ->  Nested Loop  (cost=53.11..480775.42 rows=1 width=34) (actual time=2.431..1261.064 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..54662.43 rows=7798 width=30) (actual time=0.552..293.770 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=52.56..54.63 rows=1 width=14) (actual time=0.001..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=52.11..52.12 rows=1 width=32) (actual time=0.114..0.114 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.54..52.10 rows=4 width=6) (actual time=0.101..0.110 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.54..50.82 rows=18 width=10) (actual time=0.082..0.107 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.97..49.01 rows=18 width=10) (actual time=0.080..0.104 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.75 rows=18 width=10) (actual time=0.070..0.071 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.54..2.56 rows=1 width=8) (actual time=0.007..0.008 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.019..0.019 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.005..0.010 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..4.932 rows=100000 loops=4737)
 Planning time: 23.755 ms
 Execution time: 63621.788 ms
(50 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=485249.13..485249.14 rows=1 width=192) (actual time=63092.538..63092.549 rows=100 loops=1)
   ->  Sort  (cost=485249.13..485249.14 rows=1 width=192) (actual time=63092.538..63092.543 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Nested Loop  (cost=53.11..485249.12 rows=1 width=192) (actual time=18.415..63089.611 rows=4737 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.008..0.014 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
               ->  Materialize  (cost=53.11..485246.42 rows=1 width=170) (actual time=2.253..12617.029 rows=4737 loops=5)
                     ->  Nested Loop  (cost=53.11..485246.42 rows=1 width=170) (actual time=11.263..63076.909 rows=4737 loops=1)
                           Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
                           Rows Removed by Join Filter: 473695263
                           ->  Nested Loop  (cost=53.11..480775.42 rows=1 width=34) (actual time=0.081..356.649 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..54662.43 rows=7798 width=30) (actual time=0.016..88.292 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=52.56..54.63 rows=1 width=14) (actual time=0.001..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=52.11..52.12 rows=1 width=32) (actual time=0.028..0.028 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.54..52.10 rows=4 width=6) (actual time=0.020..0.024 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.54..50.82 rows=18 width=10) (actual time=0.011..0.021 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.97..49.01 rows=18 width=10) (actual time=0.009..0.018 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.75 rows=18 width=10) (actual time=0.005..0.005 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.54..2.56 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.008..0.008 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.004 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..5.103 rows=100000 loops=4737)
 Planning time: 1.933 ms
 Execution time: 63092.638 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3464368.60..3464368.62 rows=10 width=44) (actual time=23372.844..23372.845 rows=10 loops=1)
   ->  Sort  (cost=3464368.60..3472090.59 rows=3088796 width=44) (actual time=23372.844..23372.845 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=3304956.95..3397620.83 rows=3088796 width=44) (actual time=23169.054..23353.951 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=3304956.95..3312678.94 rows=3088796 width=24) (actual time=23169.038..23190.179 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 31119kB
                     ->  Hash Join  (cost=573034.90..2926758.66 rows=3088796 width=24) (actual time=4612.895..23079.260 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1875021.75 rows=32619746 width=16) (actual time=0.011..12251.971 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 27451823
                           ->  Hash  (cost=548343.42..548343.42 rows=1420438 width=12) (actual time=4609.530..4609.530 rows=1451805 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                                 ->  Hash Join  (cost=58400.11..548343.42 rows=1420438 width=12) (actual time=523.379..4367.762 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..448777.65 rows=7189675 width=16) (actual time=0.013..2399.933 rows=7239437 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 7760563
                                       ->  Hash  (cost=54695.95..54695.95 rows=296333 width=4) (actual time=522.758..522.758 rows=300276 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                             ->  Seq Scan on customer  (cost=0.00..54695.95 rows=296333 width=4) (actual time=0.007..472.263 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 1199724
 Planning time: 31.869 ms
 Execution time: 23373.077 ms
(28 rows)

SET
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3464368.60..3464368.62 rows=10 width=44) (actual time=20570.581..20570.583 rows=10 loops=1)
   ->  Sort  (cost=3464368.60..3472090.59 rows=3088796 width=44) (actual time=20570.579..20570.579 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=3304956.95..3397620.83 rows=3088796 width=44) (actual time=20365.976..20551.273 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=3304956.95..3312678.94 rows=3088796 width=24) (actual time=20365.960..20386.478 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 31119kB
                     ->  Hash Join  (cost=573034.90..2926758.66 rows=3088796 width=24) (actual time=3795.945..20277.830 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1875021.75 rows=32619746 width=16) (actual time=0.011..10289.432 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 27451823
                           ->  Hash  (cost=548343.42..548343.42 rows=1420438 width=12) (actual time=3793.977..3793.977 rows=1451805 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                                 ->  Hash Join  (cost=58400.11..548343.42 rows=1420438 width=12) (actual time=274.366..3564.940 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..448777.65 rows=7189675 width=16) (actual time=0.013..1937.005 rows=7239437 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 7760563
                                       ->  Hash  (cost=54695.95..54695.95 rows=296333 width=4) (actual time=273.638..273.638 rows=300276 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                             ->  Seq Scan on customer  (cost=0.00..54695.95 rows=296333 width=4) (actual time=0.010..230.382 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 1199724
 Planning time: 1.355 ms
 Execution time: 20570.892 ms
(28 rows)

query 4 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=807894.19..807894.19 rows=1 width=24) (actual time=10250.430..10250.431 rows=1 loops=1)
   ->  Sort  (cost=807894.19..807894.20 rows=5 width=24) (actual time=10250.429..10250.429 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=807894.11..807894.16 rows=5 width=24) (actual time=10250.409..10250.409 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Merge Semi Join  (cost=334762.80..804990.80 rows=580663 width=16) (actual time=4914.888..10140.025 rows=513822 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=334722.84..336174.80 rows=580787 width=20) (actual time=4913.981..4990.385 rows=560424 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: external merge  Disk: 16432kB
                           ->  Bitmap Heap Scan on orders  (cost=9139.50..279119.31 rows=580787 width=20) (actual time=162.334..4724.399 rows=560424 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=231887
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8994.30 rows=580787 width=0) (actual time=113.478..113.478 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q21_idx_2 on lineitem  (cost=0.56..409630.07 rows=19996767 width=4) (actual time=0.899..3415.499 rows=37929279 loops=1)
                           Heap Fetches: 0
 Planning time: 25.556 ms
 Execution time: 10252.624 ms
(20 rows)

SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=807894.19..807894.19 rows=1 width=24) (actual time=6728.415..6728.415 rows=1 loops=1)
   ->  Sort  (cost=807894.19..807894.20 rows=5 width=24) (actual time=6728.414..6728.414 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=807894.11..807894.16 rows=5 width=24) (actual time=6728.395..6728.396 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Merge Semi Join  (cost=334762.80..804990.80 rows=580663 width=16) (actual time=1631.839..6620.526 rows=513822 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=334722.84..336174.80 rows=580787 width=20) (actual time=1631.757..1704.990 rows=560424 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: external merge  Disk: 16432kB
                           ->  Bitmap Heap Scan on orders  (cost=9139.50..279119.31 rows=580787 width=20) (actual time=161.540..1491.881 rows=560424 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=231887
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8994.30 rows=580787 width=0) (actual time=112.886..112.886 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q21_idx_2 on lineitem  (cost=0.56..409630.07 rows=19996767 width=4) (actual time=0.074..3186.852 rows=37929279 loops=1)
                           Heap Fetches: 0
 Planning time: 1.988 ms
 Execution time: 6730.793 ms
(20 rows)

query 5 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1616721.00..1616721.00 rows=1 width=58) (actual time=10082.057..10082.058 rows=1 loops=1)
   ->  Sort  (cost=1616721.00..1616721.06 rows=25 width=58) (actual time=10082.057..10082.057 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=1615828.00..1616720.87 rows=25 width=58) (actual time=10050.543..10082.037 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=1615828.00..1616006.51 rows=71405 width=38) (actual time=10042.731..10048.055 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=103153.70..1610071.42 rows=71405 width=38) (actual time=1137.998..10007.892 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=98432.70..1591251.49 rows=1784650 width=50) (actual time=1091.087..9586.743 rows=1815327 loops=1)
                                 ->  Hash Join  (cost=98432.13..405999.35 rows=446258 width=38) (actual time=1090.174..6334.063 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=35109.14..329846.46 rows=2231288 width=8) (actual time=498.193..5143.289 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=261246
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..34551.32 rows=2231288 width=0) (actual time=442.357..442.357 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59573.21..59573.21 rows=299983 width=38) (actual time=591.208..591.208 rows=299436 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                             ->  Hash Join  (cost=2.53..59573.21 rows=299983 width=38) (actual time=0.042..531.518 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50946.16 rows=1499916 width=8) (actual time=0.010..367.569 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.022..0.022 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.017..0.020 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.003..0.003 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.006..0.006 rows=4 loops=453399)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=44.707..44.707 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.006..29.727 rows=100000 loops=1)
 Planning time: 38.182 ms
 Execution time: 10082.250 ms
(42 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1616721.00..1616721.00 rows=1 width=58) (actual time=5184.627..5184.628 rows=1 loops=1)
   ->  Sort  (cost=1616721.00..1616721.06 rows=25 width=58) (actual time=5184.625..5184.625 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=1615828.00..1616720.87 rows=25 width=58) (actual time=5153.587..5184.602 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=1615828.00..1616006.51 rows=71405 width=38) (actual time=5145.887..5150.980 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=103153.70..1610071.42 rows=71405 width=38) (actual time=971.981..5117.532 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=98432.70..1591251.49 rows=1784650 width=50) (actual time=932.757..4729.688 rows=1815327 loops=1)
                                 ->  Hash Join  (cost=98432.13..405999.35 rows=446258 width=38) (actual time=932.700..2785.686 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=35109.14..329846.46 rows=2231288 width=8) (actual time=467.558..1795.601 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=261246
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..34551.32 rows=2231288 width=0) (actual time=412.007..412.007 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59573.21..59573.21 rows=299983 width=38) (actual time=464.467..464.468 rows=299436 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                             ->  Hash Join  (cost=2.53..59573.21 rows=299983 width=38) (actual time=0.041..407.429 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50946.16 rows=1499916 width=8) (actual time=0.009..249.518 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.023..0.023 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.017..0.021 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.003..0.006 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.003..0.004 rows=4 loops=453399)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=38.750..38.750 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.006..22.536 rows=100000 loops=1)
 Planning time: 4.000 ms
 Execution time: 5184.838 ms
(42 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1169723.74..1169723.75 rows=1 width=32) (actual time=17463.714..17463.714 rows=1 loops=1)
   ->  Aggregate  (cost=1169723.74..1169723.75 rows=1 width=32) (actual time=17463.713..17463.713 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=227618.14..1163773.18 rows=1190111 width=12) (actual time=1436.385..16569.331 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 21866393
               Heap Blocks: exact=238202 lossy=424766
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..227320.62 rows=1190111 width=0) (actual time=1381.486..1381.486 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 17.843 ms
 Execution time: 17463.769 ms
(10 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1169723.74..1169723.75 rows=1 width=32) (actual time=8893.985..8893.985 rows=1 loops=1)
   ->  Aggregate  (cost=1169723.74..1169723.75 rows=1 width=32) (actual time=8893.984..8893.984 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=227618.14..1163773.18 rows=1190111 width=12) (actual time=1293.095..8411.703 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 21866393
               Heap Blocks: exact=238202 lossy=424766
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..227320.62 rows=1190111 width=0) (actual time=1242.146..1242.146 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 1.069 ms
 Execution time: 8894.024 ms
(10 rows)

query 7 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2419720.80..2419720.93 rows=1 width=92) (actual time=34284.916..34284.917 rows=1 loops=1)
   ->  GroupAggregate  (cost=2419720.80..2420956.27 rows=10040 width=92) (actual time=34284.915..34284.915 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=2419720.80..2419872.20 rows=60558 width=72) (actual time=34275.454..34276.777 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=892291.95..2414910.67 rows=60558 width=72) (actual time=8135.568..34245.968 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=330285.88..1811032.72 rows=1455156 width=46) (actual time=3188.037..28470.566 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=326508.48..1724493.30 rows=18189455 width=24) (actual time=3152.993..25764.387 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Index Recheck: 30957726
                                 Heap Blocks: exact=274040 lossy=846026
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..321961.12 rows=18189455 width=0) (actual time=3093.478..3093.478 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=3677.40..3677.40 rows=8000 width=30) (actual time=34.984..34.984 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3677.40 rows=8000 width=30) (actual time=0.015..33.443 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.003..24.044 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.009..0.009 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.008 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=538801.29..538801.29 rows=1200062 width=30) (actual time=4942.796..4942.796 rows=1191175 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 22152kB
                           ->  Hash Join  (cost=59272.09..538801.29 rows=1200062 width=30) (actual time=522.611..4693.451 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411275.72 rows=15000772 width=8) (actual time=0.019..1636.983 rows=15000000 loops=1)
                                 ->  Hash  (cost=57772.18..57772.18 rows=119993 width=30) (actual time=522.531..522.531 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..57772.18 rows=119993 width=30) (actual time=0.019..498.049 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.16 rows=1499916 width=8) (actual time=0.003..357.115 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.014..0.014 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.013 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning time: 34.908 ms
 Execution time: 34285.077 ms
(45 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2419720.80..2419720.93 rows=1 width=92) (actual time=20836.095..20836.095 rows=1 loops=1)
   ->  GroupAggregate  (cost=2419720.80..2420956.27 rows=10040 width=92) (actual time=20836.094..20836.094 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=2419720.80..2419872.20 rows=60558 width=72) (actual time=20826.692..20828.058 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=892291.95..2414910.67 rows=60558 width=72) (actual time=6969.919..20800.137 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=330285.88..1811032.72 rows=1455156 width=46) (actual time=2803.357..15962.940 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=326508.48..1724493.30 rows=18189455 width=24) (actual time=2776.697..13900.491 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Index Recheck: 30957726
                                 Heap Blocks: exact=274040 lossy=846026
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..321961.12 rows=18189455 width=0) (actual time=2717.289..2717.289 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=3677.40..3677.40 rows=8000 width=30) (actual time=26.630..26.630 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3677.40 rows=8000 width=30) (actual time=0.015..25.092 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.003..15.697 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.009..0.009 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.008 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=538801.29..538801.29 rows=1200062 width=30) (actual time=4164.035..4164.035 rows=1191175 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 22152kB
                           ->  Hash Join  (cost=59272.09..538801.29 rows=1200062 width=30) (actual time=397.419..3931.891 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411275.72 rows=15000772 width=8) (actual time=0.016..1215.086 rows=15000000 loops=1)
                                 ->  Hash  (cost=57772.18..57772.18 rows=119993 width=30) (actual time=397.341..397.341 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..57772.18 rows=119993 width=30) (actual time=0.019..375.169 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.16 rows=1499916 width=8) (actual time=0.002..238.639 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.013 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.011 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning time: 3.456 ms
 Execution time: 20836.246 ms
(45 rows)

query 8 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=621443.27..621443.51 rows=1 width=40) (actual time=11847.723..11847.723 rows=1 loops=1)
   ->  GroupAggregate  (cost=621443.27..622017.42 rows=2406 width=40) (actual time=11847.722..11847.722 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=621443.27..621501.05 rows=23112 width=46) (actual time=11839.919..11840.700 rows=11818 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 2631kB
               ->  Hash Join  (cost=510408.96..619768.07 rows=23112 width=46) (actual time=7330.050..11830.970 rows=23842 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=510407.39..619333.16 rows=23112 width=20) (actual time=7330.018..11811.007 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=505936.39..614544.37 rows=23112 width=20) (actual time=7286.635..11756.519 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=1.12..98933.50 rows=380125 width=20) (actual time=2.744..4262.017 rows=389521 loops=1)
                                       ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..54313.29 rows=13333 width=4) (actual time=1.489..204.289 rows=13011 loops=1)
                                             Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.06 rows=29 width=24) (actual time=0.242..0.305 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Heap Fetches: 0
                                 ->  Hash  (cost=490971.46..490971.46 rows=912065 width=8) (actual time=7280.268..7280.268 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 2  Memory Usage: 25982kB
                                       ->  Hash Join  (cost=135076.75..490971.46 rows=912065 width=8) (actual time=1517.276..7067.503 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=71753.76..401426.62 rows=4560324 width=12) (actual time=930.204..5439.874 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=261268
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..70613.67 rows=4560324 width=0) (actual time=874.615..874.615 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59573.21..59573.21 rows=299983 width=4) (actual time=586.303..586.303 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.53..59573.21 rows=299983 width=4) (actual time=0.046..534.984 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50946.16 rows=1499916 width=8) (actual time=0.011..369.647 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.024..0.025 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.018..0.023 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=43.120..43.120 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.003..29.071 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.011..0.011 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.004..0.007 rows=25 loops=1)
 Planning time: 44.112 ms
 Execution time: 11847.921 ms
(51 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=621443.27..621443.51 rows=1 width=40) (actual time=4606.643..4606.644 rows=1 loops=1)
   ->  GroupAggregate  (cost=621443.27..622017.42 rows=2406 width=40) (actual time=4606.642..4606.642 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=621443.27..621501.05 rows=23112 width=46) (actual time=4598.857..4599.690 rows=11818 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 2631kB
               ->  Hash Join  (cost=510408.96..619768.07 rows=23112 width=46) (actual time=4148.209..4594.115 rows=23842 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=510407.39..619333.16 rows=23112 width=20) (actual time=4148.178..4585.507 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=505936.39..614544.37 rows=23112 width=20) (actual time=4111.832..4541.002 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=1.12..98933.50 rows=380125 width=20) (actual time=0.110..290.204 rows=389521 loops=1)
                                       ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..54313.29 rows=13333 width=4) (actual time=0.080..90.564 rows=13011 loops=1)
                                             Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.06 rows=29 width=24) (actual time=0.006..0.012 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Heap Fetches: 0
                                 ->  Hash  (cost=490971.46..490971.46 rows=912065 width=8) (actual time=4110.212..4110.212 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 2  Memory Usage: 25982kB
                                       ->  Hash Join  (cost=135076.75..490971.46 rows=912065 width=8) (actual time=1312.397..3935.394 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=71753.76..401426.62 rows=4560324 width=12) (actual time=864.202..2522.806 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=261268
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..70613.67 rows=4560324 width=0) (actual time=808.499..808.499 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59573.21..59573.21 rows=299983 width=4) (actual time=447.405..447.405 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.53..59573.21 rows=299983 width=4) (actual time=0.043..398.518 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50946.16 rows=1499916 width=8) (actual time=0.009..238.523 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.024..0.024 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.018..0.023 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.006 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=36.059..36.059 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.004..21.479 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.012..0.012 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.004..0.009 rows=25 loops=1)
 Planning time: 4.549 ms
 Execution time: 4606.821 ms
(51 rows)

query 9 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1585452.19..1585452.19 rows=1 width=66) (actual time=23056.269..23056.269 rows=1 loops=1)
   ->  Sort  (cost=1585452.19..1585602.56 rows=60150 width=66) (actual time=23056.269..23056.269 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1584098.81..1585151.44 rows=60150 width=66) (actual time=23056.080..23056.192 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=663240.35..1543783.10 rows=2303755 width=57) (actual time=4507.457..19962.793 rows=3248192 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     ->  Hash Join  (cost=657392.79..1494740.13 rows=2303755 width=35) (actual time=4447.498..18527.441 rows=3248192 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Merge Join  (cost=10.42..670770.42 rows=2303755 width=35) (actual time=3.481..10660.164 rows=3248192 loops=1)
                                 Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                 Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                 Rows Removed by Join Filter: 9744576
                                 ->  Nested Loop  (cost=1.12..334869.98 rows=2303755 width=33) (actual time=2.741..6803.967 rows=3248192 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.55..64481.17 rows=80805 width=4) (actual time=0.347..501.953 rows=108312 loops=1)
                                             Filter: ((p_name)::text ~~ '%navy%'::text)
                                             Rows Removed by Filter: 1891688
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.06 rows=29 width=29) (actual time=0.040..0.055 rows=30 loops=108312)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..181585.73 rows=7998353 width=14) (actual time=0.728..1987.812 rows=20559501 loops=1)
                                       Heap Fetches: 0
                           ->  Hash  (cost=411275.72..411275.72 rows=15000772 width=8) (actual time=4437.723..4437.723 rows=15000000 loops=1)
                                 Buckets: 1048576  Batches: 32  Memory Usage: 26512kB
                                 ->  Seq Scan on orders  (cost=0.00..411275.72 rows=15000772 width=8) (actual time=0.025..2461.163 rows=15000000 loops=1)
                     ->  Hash  (cost=4597.56..4597.56 rows=100000 width=30) (actual time=58.985..58.985 rows=100000 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 7079kB
                           ->  Hash Join  (cost=1.56..4597.56 rows=100000 width=30) (actual time=0.023..44.007 rows=100000 loops=1)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.006..24.582 rows=100000 loops=1)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.011..0.011 rows=25 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.008 rows=25 loops=1)
 Planning time: 44.944 ms
 Execution time: 23056.435 ms
(37 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1585452.19..1585452.19 rows=1 width=66) (actual time=16999.091..16999.092 rows=1 loops=1)
   ->  Sort  (cost=1585452.19..1585602.56 rows=60150 width=66) (actual time=16999.089..16999.089 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1584098.81..1585151.44 rows=60150 width=66) (actual time=16998.900..16999.001 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=663240.35..1543783.10 rows=2303755 width=57) (actual time=3960.102..13908.614 rows=3248192 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     ->  Hash Join  (cost=657392.79..1494740.13 rows=2303755 width=35) (actual time=3916.111..12529.152 rows=3248192 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Merge Join  (cost=10.42..670770.42 rows=2303755 width=35) (actual time=0.081..5256.139 rows=3248192 loops=1)
                                 Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                 Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                 Rows Removed by Join Filter: 9744576
                                 ->  Nested Loop  (cost=1.12..334869.98 rows=2303755 width=33) (actual time=0.060..1791.416 rows=3248192 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.55..64481.17 rows=80805 width=4) (actual time=0.040..386.473 rows=108312 loops=1)
                                             Filter: ((p_name)::text ~~ '%navy%'::text)
                                             Rows Removed by Filter: 1891688
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.06 rows=29 width=29) (actual time=0.003..0.010 rows=30 loops=108312)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..181585.73 rows=7998353 width=14) (actual time=0.010..1687.026 rows=20559501 loops=1)
                                       Heap Fetches: 0
                           ->  Hash  (cost=411275.72..411275.72 rows=15000772 width=8) (actual time=3914.100..3914.100 rows=15000000 loops=1)
                                 Buckets: 1048576  Batches: 32  Memory Usage: 26512kB
                                 ->  Seq Scan on orders  (cost=0.00..411275.72 rows=15000772 width=8) (actual time=0.018..2000.845 rows=15000000 loops=1)
                     ->  Hash  (cost=4597.56..4597.56 rows=100000 width=30) (actual time=43.709..43.709 rows=100000 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 7079kB
                           ->  Hash Join  (cost=1.56..4597.56 rows=100000 width=30) (actual time=0.023..29.076 rows=100000 loops=1)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.007..6.825 rows=100000 loops=1)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.011..0.011 rows=25 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.008 rows=25 loops=1)
 Planning time: 4.678 ms
 Execution time: 16999.275 ms
(37 rows)

query 10 run 1
SET
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1805774.41..1805774.46 rows=20 width=201) (actual time=14716.720..14716.724 rows=20 loops=1)
   ->  Sort  (cost=1805774.41..1807142.25 rows=547137 width=201) (actual time=14716.719..14716.722 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 30kB
         ->  GroupAggregate  (cost=1776169.02..1791215.29 rows=547137 width=201) (actual time=13602.249..14615.906 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Sort  (cost=1776169.02..1777536.86 rows=547137 width=181) (actual time=13602.228..13921.713 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Sort Method: external merge  Disk: 218216kB
                     ->  Hash Join  (cost=387392.86..1689290.14 rows=547137 width=181) (actual time=6024.960..12904.346 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=387391.30..1681765.45 rows=547137 width=159) (actual time=6024.946..12721.155 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=285471.19..1534753.20 rows=547137 width=16) (actual time=5034.084..10936.621 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..1188830.10 rows=14661629 width=16) (actual time=0.952..4263.149 rows=14808183 loops=1)
                                             Index Cond: (l_returnflag = 'R'::bpchar)
                                             Heap Fetches: 0
                                       ->  Hash  (cost=278473.21..278473.21 rows=559793 width=8) (actual time=5031.804..5031.804 rows=573160 loops=1)
                                             Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                             ->  Bitmap Heap Scan on orders  (cost=8808.31..278473.21 rows=559793 width=8) (actual time=165.980..4868.379 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   Heap Blocks: exact=233346
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8668.36 rows=559793 width=0) (actual time=115.322..115.322 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=50946.16..50946.16 rows=1499916 width=147) (actual time=990.279..990.279 rows=1500000 loops=1)
                                       Buckets: 262144  Batches: 16  Memory Usage: 18791kB
                                       ->  Seq Scan on customer  (cost=0.00..50946.16 rows=1499916 width=147) (actual time=0.003..520.369 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.010..0.010 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.007 rows=25 loops=1)
 Planning time: 32.814 ms
 Execution time: 14747.672 ms
(33 rows)

SET
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1805774.41..1805774.46 rows=20 width=201) (actual time=10556.897..10556.901 rows=20 loops=1)
   ->  Sort  (cost=1805774.41..1807142.25 rows=547137 width=201) (actual time=10556.897..10556.901 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 30kB
         ->  GroupAggregate  (cost=1776169.02..1791215.29 rows=547137 width=201) (actual time=9440.973..10456.053 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Sort  (cost=1776169.02..1777536.86 rows=547137 width=181) (actual time=9440.953..9761.757 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Sort Method: external merge  Disk: 218216kB
                     ->  Hash Join  (cost=387392.86..1689290.14 rows=547137 width=181) (actual time=2444.370..8745.250 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=387391.30..1681765.45 rows=547137 width=159) (actual time=2444.355..8564.459 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=285471.19..1534753.20 rows=547137 width=16) (actual time=1601.992..6938.507 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..1188830.10 rows=14661629 width=16) (actual time=0.060..3739.113 rows=14808183 loops=1)
                                             Index Cond: (l_returnflag = 'R'::bpchar)
                                             Heap Fetches: 0
                                       ->  Hash  (cost=278473.21..278473.21 rows=559793 width=8) (actual time=1600.512..1600.512 rows=573160 loops=1)
                                             Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                             ->  Bitmap Heap Scan on orders  (cost=8808.31..278473.21 rows=559793 width=8) (actual time=154.366..1476.531 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   Heap Blocks: exact=233346
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8668.36 rows=559793 width=0) (actual time=103.370..103.370 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=50946.16..50946.16 rows=1499916 width=147) (actual time=841.870..841.870 rows=1500000 loops=1)
                                       Buckets: 262144  Batches: 16  Memory Usage: 18791kB
                                       ->  Seq Scan on customer  (cost=0.00..50946.16 rows=1499916 width=147) (actual time=0.003..386.533 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.011..0.012 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.007 rows=25 loops=1)
 Planning time: 2.388 ms
 Execution time: 10590.346 ms
(33 rows)

query 11 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=625962.72..625962.72 rows=1 width=36) (actual time=3541.470..3541.470 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293155.51..293155.53 rows=1 width=32) (actual time=1503.320..1503.320 rows=1 loops=1)
           ->  Hash Join  (cost=2357.31..290756.01 rows=319934 width=10) (actual time=2.870..1372.367 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255205.53 rows=7998353 width=14) (actual time=0.035..701.935 rows=8000000 loops=1)
                 ->  Hash  (cost=2307.31..2307.31 rows=4000 width=4) (actual time=2.806..2.806 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=4) (actual time=0.486..2.457 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=55.29..2266.00 rows=4000 width=8) (actual time=0.476..2.024 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=0.298..0.298 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=332807.20..333607.03 rows=319934 width=36) (actual time=3541.469..3541.469 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=320009.84..331207.53 rows=319934 width=36) (actual time=3541.461..3541.461 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Rows Removed by Filter: 301833
               ->  Sort  (cost=320009.84..320809.67 rows=319934 width=14) (actual time=1845.819..1865.482 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 25961kB
                     ->  Hash Join  (cost=2357.31..290756.01 rows=319934 width=14) (actual time=23.894..1800.479 rows=320800 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255205.53 rows=7998353 width=18) (actual time=0.495..1049.439 rows=8000000 loops=1)
                           ->  Hash  (cost=2307.31..2307.31 rows=4000 width=4) (actual time=23.319..23.319 rows=4010 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                 ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=4) (actual time=1.914..22.579 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.010 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 24
                                       ->  Bitmap Heap Scan on supplier  (cost=55.29..2266.00 rows=4000 width=8) (actual time=1.905..21.959 rows=4010 loops=1)
                                             Recheck Cond: (s_nationkey = nation.n_nationkey)
                                             Heap Blocks: exact=1869
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=1.683..1.683 rows=4010 loops=1)
                                                   Index Cond: (s_nationkey = nation.n_nationkey)
 Planning time: 18.840 ms
 Execution time: 3541.538 ms
(43 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=625962.72..625962.72 rows=1 width=36) (actual time=3119.766..3119.766 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293155.51..293155.53 rows=1 width=32) (actual time=1514.307..1514.307 rows=1 loops=1)
           ->  Hash Join  (cost=2357.31..290756.01 rows=319934 width=10) (actual time=2.816..1383.641 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255205.53 rows=7998353 width=14) (actual time=0.031..707.146 rows=8000000 loops=1)
                 ->  Hash  (cost=2307.31..2307.31 rows=4000 width=4) (actual time=2.754..2.754 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=4) (actual time=0.484..2.418 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=55.29..2266.00 rows=4000 width=8) (actual time=0.473..1.976 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=0.296..0.297 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=332807.20..333607.03 rows=319934 width=36) (actual time=3119.765..3119.765 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=320009.84..331207.53 rows=319934 width=36) (actual time=3119.758..3119.758 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Rows Removed by Filter: 301833
               ->  Sort  (cost=320009.84..320809.67 rows=319934 width=14) (actual time=1412.607..1432.277 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 25961kB
                     ->  Hash Join  (cost=2357.31..290756.01 rows=319934 width=14) (actual time=3.552..1369.840 rows=320800 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255205.53 rows=7998353 width=18) (actual time=0.035..699.661 rows=8000000 loops=1)
                           ->  Hash  (cost=2307.31..2307.31 rows=4000 width=4) (actual time=3.493..3.493 rows=4010 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                 ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=4) (actual time=0.494..3.142 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 24
                                       ->  Bitmap Heap Scan on supplier  (cost=55.29..2266.00 rows=4000 width=8) (actual time=0.486..2.735 rows=4010 loops=1)
                                             Recheck Cond: (s_nationkey = nation.n_nationkey)
                                             Heap Blocks: exact=1869
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=0.304..0.304 rows=4010 loops=1)
                                                   Index Cond: (s_nationkey = nation.n_nationkey)
 Planning time: 0.999 ms
 Execution time: 3119.828 ms
(43 rows)

query 12 run 1
SET
SET
SET
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=758426.06..758426.06 rows=1 width=27) (actual time=5593.601..5593.602 rows=1 loops=1)
   ->  Sort  (cost=758426.06..758426.08 rows=7 width=27) (actual time=5593.601..5593.601 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=758425.95..758426.02 rows=7 width=27) (actual time=5593.581..5593.581 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Merge Join  (cost=13.52..753380.14 rows=288332 width=27) (actual time=1.345..5404.705 rows=311258 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..568543.02 rows=15000772 width=20) (actual time=0.312..3595.459 rows=14999967 loops=1)
                     ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.56..143760.62 rows=288332 width=15) (actual time=0.933..837.735 rows=311258 loops=1)
                           Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                           Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                           Rows Removed by Filter: 778088
                           Heap Fetches: 0
 Planning time: 27.541 ms
 Execution time: 5593.865 ms
(16 rows)

SET
SET
SET
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=758426.06..758426.06 rows=1 width=27) (actual time=4450.775..4450.775 rows=1 loops=1)
   ->  Sort  (cost=758426.06..758426.08 rows=7 width=27) (actual time=4450.774..4450.774 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=758425.95..758426.02 rows=7 width=27) (actual time=4450.755..4450.755 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Merge Join  (cost=13.52..753380.14 rows=288332 width=27) (actual time=0.100..4273.584 rows=311258 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..568543.02 rows=15000772 width=20) (actual time=0.025..2625.599 rows=14999967 loops=1)
                     ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.56..143760.62 rows=288332 width=15) (actual time=0.051..709.395 rows=311258 loops=1)
                           Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                           Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                           Rows Removed by Filter: 778088
                           Heap Fetches: 0
 Planning time: 1.607 ms
 Execution time: 4450.849 ms
(16 rows)

query 13 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2720715.32..2720715.32 rows=1 width=16) (actual time=18497.760..18497.761 rows=1 loops=1)
   ->  Sort  (cost=2720715.32..2720715.82 rows=200 width=16) (actual time=18497.760..18497.760 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2720712.32..2720714.32 rows=200 width=16) (actual time=18497.740..18497.747 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  GroupAggregate  (cost=2321454.15..2698213.58 rows=1499916 width=12) (actual time=9637.265..18292.885 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Merge Left Join  (cost=2321454.15..2610481.73 rows=14546537 width=8) (actual time=9637.249..16962.707 rows=15337604 loops=1)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30731.17 rows=1499916 width=4) (actual time=0.500..187.992 rows=1500000 loops=1)
                                 Heap Fetches: 0
                           ->  Materialize  (cost=2321449.20..2394181.88 rows=14546537 width=8) (actual time=9636.743..14892.115 rows=14837583 loops=1)
                                 ->  Sort  (cost=2321449.20..2357815.54 rows=14546537 width=8) (actual time=9636.740..13767.009 rows=14837583 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external merge  Disk: 260704kB
                                       ->  Seq Scan on orders  (cost=0.00..448777.65 rows=14546537 width=8) (actual time=0.291..5147.318 rows=14837583 loops=1)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                             Rows Removed by Filter: 162417
 Planning time: 15.935 ms
 Execution time: 18533.079 ms
(21 rows)

SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2720715.32..2720715.32 rows=1 width=16) (actual time=17985.131..17985.131 rows=1 loops=1)
   ->  Sort  (cost=2720715.32..2720715.82 rows=200 width=16) (actual time=17985.131..17985.131 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2720712.32..2720714.32 rows=200 width=16) (actual time=17985.112..17985.116 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  GroupAggregate  (cost=2321454.15..2698213.58 rows=1499916 width=12) (actual time=9119.044..17779.381 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Merge Left Join  (cost=2321454.15..2610481.73 rows=14546537 width=8) (actual time=9119.028..16464.629 rows=15337604 loops=1)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30731.17 rows=1499916 width=4) (actual time=0.025..147.865 rows=1500000 loops=1)
                                 Heap Fetches: 0
                           ->  Materialize  (cost=2321449.20..2394181.88 rows=14546537 width=8) (actual time=9118.999..14415.864 rows=14837583 loops=1)
                                 ->  Sort  (cost=2321449.20..2357815.54 rows=14546537 width=8) (actual time=9118.996..13275.514 rows=14837583 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external merge  Disk: 260704kB
                                       ->  Seq Scan on orders  (cost=0.00..448777.65 rows=14546537 width=8) (actual time=0.033..4654.411 rows=14837583 loops=1)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                             Rows Removed by Filter: 162417
 Planning time: 0.628 ms
 Execution time: 18021.026 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=881822.30..881822.32 rows=1 width=32) (actual time=9764.107..9764.108 rows=1 loops=1)
   ->  Aggregate  (cost=881822.30..881822.32 rows=1 width=32) (actual time=9764.106..9764.106 rows=1 loops=1)
         ->  Hash Join  (cost=112698.85..869734.54 rows=690729 width=33) (actual time=1158.612..9194.522 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=13047.63..738772.34 rows=726738 width=16) (actual time=282.201..7493.860 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416569
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..12865.95 rows=726738 width=0) (actual time=185.669..185.669 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60980.21..60980.21 rows=1999921 width=25) (actual time=875.023..875.023 rows=2000000 loops=1)
                     Buckets: 524288  Batches: 8  Memory Usage: 18555kB
                     ->  Seq Scan on part  (cost=0.00..60980.21 rows=1999921 width=25) (actual time=0.012..553.290 rows=2000000 loops=1)
 Planning time: 24.936 ms
 Execution time: 9764.202 ms
(14 rows)

SET
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=881822.30..881822.32 rows=1 width=32) (actual time=4229.770..4229.770 rows=1 loops=1)
   ->  Aggregate  (cost=881822.30..881822.32 rows=1 width=32) (actual time=4229.769..4229.769 rows=1 loops=1)
         ->  Hash Join  (cost=112698.85..869734.54 rows=690729 width=33) (actual time=991.102..3743.396 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=13047.63..738772.34 rows=726738 width=16) (actual time=270.457..2402.748 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416569
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..12865.95 rows=726738 width=0) (actual time=174.663..174.663 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60980.21..60980.21 rows=1999921 width=25) (actual time=719.916..719.916 rows=2000000 loops=1)
                     Buckets: 524288  Batches: 8  Memory Usage: 18555kB
                     ->  Seq Scan on part  (cost=0.00..60980.21 rows=1999921 width=25) (actual time=0.007..405.098 rows=2000000 loops=1)
 Planning time: 1.623 ms
 Execution time: 4229.846 ms
(14 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2677318.58..2677319.10 rows=1 width=103) (actual time=22806.911..22806.911 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1220126.50..1220126.51 rows=1 width=32) (actual time=8235.757..8235.758 rows=1 loops=1)
           ->  HashAggregate  (cost=1217629.65..1218878.08 rows=99874 width=36) (actual time=8195.731..8229.134 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=39953.54..1195373.09 rows=2225656 width=16) (actual time=547.453..6275.758 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 21153354
                       Heap Blocks: exact=243444 lossy=424814
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39397.12 rows=2225656 width=0) (actual time=493.916..493.916 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1457192.06..1509974.46 rows=99874 width=103) (actual time=22806.911..22806.911 rows=1 loops=1)
         Merge Cond: (lineitem.l_suppkey = supplier.s_suppkey)
         ->  GroupAggregate  (cost=1457191.77..1503203.00 rows=99874 width=36) (actual time=22783.522..22783.522 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 69997
               ->  Sort  (cost=1457191.77..1462755.91 rows=2225656 width=16) (actual time=13558.293..13860.307 rows=1585450 loops=1)
                     Sort Key: lineitem.l_suppkey
                     Sort Method: external merge  Disk: 60808kB
                     ->  Bitmap Heap Scan on lineitem  (cost=39953.54..1195373.09 rows=2225656 width=16) (actual time=609.383..12661.034 rows=2265714 loops=1)
                           Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                           Rows Removed by Index Recheck: 21153354
                           Heap Blocks: exact=243444 lossy=424814
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39397.12 rows=2225656 width=0) (actual time=555.260..555.260 rows=2265714 loops=1)
                                 Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4274.29 rows=100000 width=71) (actual time=0.537..19.482 rows=69998 loops=1)
 Planning time: 20.560 ms
 Execution time: 22816.500 ms
(29 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2677318.58..2677319.10 rows=1 width=103) (actual time=16837.095..16837.096 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1220126.50..1220126.51 rows=1 width=32) (actual time=8233.378..8233.378 rows=1 loops=1)
           ->  HashAggregate  (cost=1217629.65..1218878.08 rows=99874 width=36) (actual time=8193.564..8226.654 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=39953.54..1195373.09 rows=2225656 width=16) (actual time=539.194..6277.804 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 21153354
                       Heap Blocks: exact=243444 lossy=424814
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39397.12 rows=2225656 width=0) (actual time=485.540..485.540 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1457192.06..1509974.46 rows=99874 width=103) (actual time=16837.093..16837.093 rows=1 loops=1)
         Merge Cond: (lineitem.l_suppkey = supplier.s_suppkey)
         ->  GroupAggregate  (cost=1457191.77..1503203.00 rows=99874 width=36) (actual time=16822.685..16822.685 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 69997
               ->  Sort  (cost=1457191.77..1462755.91 rows=2225656 width=16) (actual time=7597.578..7902.470 rows=1585450 loops=1)
                     Sort Key: lineitem.l_suppkey
                     Sort Method: external merge  Disk: 60808kB
                     ->  Bitmap Heap Scan on lineitem  (cost=39953.54..1195373.09 rows=2225656 width=16) (actual time=564.872..6808.061 rows=2265714 loops=1)
                           Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                           Rows Removed by Index Recheck: 21153354
                           Heap Blocks: exact=243444 lossy=424814
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39397.12 rows=2225656 width=0) (actual time=511.685..511.685 rows=2265714 loops=1)
                                 Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4274.29 rows=100000 width=71) (actual time=0.029..10.685 rows=69998 loops=1)
 Planning time: 1.441 ms
 Execution time: 16846.321 ms
(29 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=380732.72..380732.72 rows=1 width=44) (actual time=6821.769..6821.769 rows=1 loops=1)
   ->  Sort  (cost=380732.72..381116.23 rows=153403 width=44) (actual time=6821.768..6821.768 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=371048.53..379965.71 rows=153403 width=44) (actual time=5886.533..6817.154 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=371048.53..372525.16 rows=590652 width=40) (actual time=5886.472..6514.366 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60496kB
                     ->  Hash Join  (cost=98142.67..302891.28 rows=590652 width=40) (actual time=952.866..3118.667 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..187316.63 rows=3999176 width=8) (actual time=38.644..1408.526 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=1.261..37.941 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90979.02..90979.02 rows=295375 width=40) (actual time=913.603..913.603 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90979.02 rows=295375 width=40) (actual time=0.018..843.780 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning time: 19.587 ms
 Execution time: 6829.584 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=380732.72..380732.72 rows=1 width=44) (actual time=6317.956..6317.956 rows=1 loops=1)
   ->  Sort  (cost=380732.72..381116.23 rows=153403 width=44) (actual time=6317.955..6317.955 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=371048.53..379965.71 rows=153403 width=44) (actual time=5380.413..6313.188 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=371048.53..372525.16 rows=590652 width=40) (actual time=5380.350..6009.525 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60496kB
                     ->  Hash Join  (cost=98142.67..302891.28 rows=590652 width=40) (actual time=641.002..2614.478 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..187316.63 rows=3999176 width=8) (actual time=21.709..1219.740 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.093..21.666 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90979.02..90979.02 rows=295375 width=40) (actual time=618.643..618.643 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90979.02 rows=295375 width=40) (actual time=0.019..559.959 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning time: 0.842 ms
 Execution time: 6326.233 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1796835.63..1796835.65 rows=1 width=32) (actual time=24006.009..24006.009 rows=1 loops=1)
   ->  Aggregate  (cost=1796835.63..1796835.65 rows=1 width=32) (actual time=24006.008..24006.008 rows=1 loops=1)
         ->  Nested Loop  (cost=71083.37..1796788.56 rows=18828 width=8) (actual time=532.009..24002.176 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=71082.80..1790729.47 rows=1981 width=40) (actual time=531.423..22798.476 rows=1996 loops=1)
                     Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=0.56..1693315.26 rows=2104180 width=36) (actual time=1.916..22139.731 rows=1999333 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361801.06 rows=59990300 width=9) (actual time=0.734..12617.908 rows=59965994 loops=1)
                                 Heap Fetches: 0
                     ->  Sort  (cost=71082.24..71086.95 rows=1883 width=4) (actual time=522.155..523.629 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 142kB
                           ->  Seq Scan on part  (cost=0.00..70979.82 rows=1883 width=4) (actual time=0.799..521.365 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.93 rows=10 width=17) (actual time=0.554..0.600 rows=3 loops=1996)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning time: 25.166 ms
 Execution time: 24006.062 ms
(21 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1796835.63..1796835.65 rows=1 width=32) (actual time=21456.306..21456.306 rows=1 loops=1)
   ->  Aggregate  (cost=1796835.63..1796835.65 rows=1 width=32) (actual time=21456.305..21456.305 rows=1 loops=1)
         ->  Nested Loop  (cost=71083.37..1796788.56 rows=18828 width=8) (actual time=373.575..21455.030 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=71082.80..1790729.47 rows=1981 width=40) (actual time=373.546..21422.780 rows=1996 loops=1)
                     Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=0.56..1693315.26 rows=2104180 width=36) (actual time=0.083..20929.846 rows=1999333 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361801.06 rows=59990300 width=9) (actual time=0.049..11563.491 rows=59965994 loops=1)
                                 Heap Fetches: 0
                     ->  Sort  (cost=71082.24..71086.95 rows=1883 width=4) (actual time=366.694..367.264 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 142kB
                           ->  Seq Scan on part  (cost=0.00..70979.82 rows=1883 width=4) (actual time=0.146..366.149 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.93 rows=10 width=17) (actual time=0.014..0.015 rows=3 loops=1996)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning time: 1.941 ms
 Execution time: 21456.356 ms
(21 rows)

query 18 run 1
SET
SET
SET
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=11775833.75..11775834.00 rows=100 width=71) (actual time=30493.176..30493.189 rows=99 loops=1)
   ->  Sort  (cost=11775833.75..11850821.63 rows=29995150 width=71) (actual time=30493.174..30493.179 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  GroupAggregate  (cost=9954549.81..10629440.69 rows=29995150 width=71) (actual time=30492.903..30493.098 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=9954549.81..10029537.69 rows=29995150 width=44) (actual time=30492.885..30492.939 rows=693 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 79kB
                     ->  Hash Join  (cost=78615.23..5570343.25 rows=29995150 width=44) (actual time=3118.905..30492.673 rows=693 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=131.12..4660546.83 rows=29995150 width=25) (actual time=663.052..29718.602 rows=693 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Semi Join  (cost=1.00..2830206.57 rows=7500386 width=24) (actual time=514.943..22670.579 rows=99 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..568543.02 rows=15000772 width=20) (actual time=0.248..3096.076 rows=14982724 loops=1)
                                       ->  Materialize  (cost=0.56..2036691.94 rows=14997575 width=4) (actual time=412.613..18753.455 rows=99 loops=1)
                                             ->  GroupAggregate  (cost=0.56..1849222.25 rows=14997575 width=4) (actual time=412.610..18753.331 rows=99 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 14999901
                                                   ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361801.06 rows=59990300 width=9) (actual time=0.763..6145.357 rows=59986052 loops=1)
                                                         Heap Fetches: 0
                                 ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361801.06 rows=59990300 width=9) (actual time=0.011..4561.892 rows=59916431 loops=1)
                                       Heap Fetches: 0
                           ->  Hash  (cost=50946.16..50946.16 rows=1499916 width=23) (actual time=666.649..666.649 rows=1500000 loops=1)
                                 Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                                 ->  Seq Scan on customer  (cost=0.00..50946.16 rows=1499916 width=23) (actual time=0.010..424.523 rows=1500000 loops=1)
 Planning time: 29.595 ms
 Execution time: 30493.344 ms
(30 rows)

SET
SET
SET
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=11775833.75..11775834.00 rows=100 width=71) (actual time=28246.597..28246.609 rows=99 loops=1)
   ->  Sort  (cost=11775833.75..11850821.63 rows=29995150 width=71) (actual time=28246.597..28246.603 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  GroupAggregate  (cost=9954549.81..10629440.69 rows=29995150 width=71) (actual time=28246.328..28246.522 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=9954549.81..10029537.69 rows=29995150 width=44) (actual time=28246.312..28246.357 rows=693 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 79kB
                     ->  Hash Join  (cost=78615.23..5570343.25 rows=29995150 width=44) (actual time=2767.912..28246.099 rows=693 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=131.12..4660546.83 rows=29995150 width=25) (actual time=599.444..27608.458 rows=693 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Semi Join  (cost=1.00..2830206.57 rows=7500386 width=24) (actual time=451.527..20580.018 rows=99 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..568543.02 rows=15000772 width=20) (actual time=0.023..2354.179 rows=14982724 loops=1)
                                       ->  Materialize  (cost=0.56..2036691.94 rows=14997575 width=4) (actual time=376.620..17418.999 rows=99 loops=1)
                                             ->  GroupAggregate  (cost=0.56..1849222.25 rows=14997575 width=4) (actual time=376.618..17418.888 rows=99 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 14999901
                                                   ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361801.06 rows=59990300 width=9) (actual time=0.051..5570.895 rows=59986052 loops=1)
                                                         Heap Fetches: 0
                                 ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361801.06 rows=59990300 width=9) (actual time=0.010..4497.858 rows=59916431 loops=1)
                                       Heap Fetches: 0
                           ->  Hash  (cost=50946.16..50946.16 rows=1499916 width=23) (actual time=533.666..533.666 rows=1500000 loops=1)
                                 Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                                 ->  Seq Scan on customer  (cost=0.00..50946.16 rows=1499916 width=23) (actual time=0.010..298.802 rows=1500000 loops=1)
 Planning time: 2.648 ms
 Execution time: 28246.734 ms
(30 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=142676.55..142676.56 rows=1 width=32) (actual time=3431.934..3431.935 rows=1 loops=1)
   ->  Aggregate  (cost=142676.55..142676.56 rows=1 width=32) (actual time=3431.933..3431.933 rows=1 loops=1)
         ->  Nested Loop  (cost=0.69..142668.69 rows=1048 width=12) (actual time=15.172..3428.652 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125977.64 rows=4782 width=30) (actual time=0.862..978.517 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.69..3.48 rows=1 width=21) (actual time=0.490..0.511 rows=0 loops=4781)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning time: 25.629 ms
 Execution time: 3431.993 ms
(13 rows)

SET
SET
SET

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=142676.55..142676.56 rows=1 width=32) (actual time=595.331..595.331 rows=1 loops=1)
   ->  Aggregate  (cost=142676.55..142676.56 rows=1 width=32) (actual time=595.330..595.330 rows=1 loops=1)
         ->  Nested Loop  (cost=0.69..142668.69 rows=1048 width=12) (actual time=1.471..594.495 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125977.64 rows=4782 width=30) (actual time=0.287..549.442 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.69..3.48 rows=1 width=21) (actual time=0.008..0.009 rows=0 loops=4781)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning time: 3.460 ms
 Execution time: 595.375 ms
(13 rows)

query 20 run 1
SET
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2986896.77..2986896.77 rows=1 width=51) (actual time=50571.170..50571.170 rows=1 loops=1)
   ->  Sort  (cost=2986896.77..2986901.77 rows=2000 width=51) (actual time=50571.169..50571.169 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2614472.95..2986886.77 rows=2000 width=51) (actual time=27463.938..50569.435 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.440..24.071 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.430..15.694 rows=100000 loops=1)
               ->  Materialize  (cost=2614472.95..2982234.46 rows=3 width=8) (actual time=6.412..9.540 rows=44445 loops=4095)
                     ->  Merge Join  (cost=2614472.95..2982234.45 rows=3 width=8) (actual time=26255.287..33188.145 rows=59002 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  GroupAggregate  (cost=2614471.96..2780202.92 rows=4876716 width=40) (actual time=26254.116..32348.632 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=2614471.96..2637617.02 rows=9258022 width=13) (actual time=26254.100..28981.710 rows=9123091 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 205064kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=166185.29..1430198.62 rows=9258022 width=13) (actual time=1881.331..22809.650 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Rows Removed by Index Recheck: 27869248
                                             Heap Blocks: exact=412819 lossy=635976
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..163870.79 rows=9258022 width=0) (actual time=1787.121..1787.121 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.98..121303.57 rows=80791 width=16) (actual time=0.835..518.034 rows=237286 loops=1)
                                 ->  Nested Loop  (cost=0.98..121101.60 rows=80791 width=16) (actual time=0.833..497.972 rows=86872 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.55..64481.17 rows=20201 width=4) (actual time=0.417..262.867 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.62 rows=18 width=12) (actual time=0.009..0.010 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning time: 32.897 ms
 Execution time: 50598.337 ms
(41 rows)

SET
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2986896.77..2986896.77 rows=1 width=51) (actual time=38631.680..38631.681 rows=1 loops=1)
   ->  Sort  (cost=2986896.77..2986901.77 rows=2000 width=51) (actual time=38631.679..38631.679 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2614472.95..2986886.77 rows=2000 width=51) (actual time=15674.464..38629.954 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.018..20.587 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.009..12.221 rows=100000 loops=1)
               ->  Materialize  (cost=2614472.95..2982234.46 rows=3 width=8) (actual time=3.542..6.625 rows=44445 loops=4095)
                     ->  Merge Join  (cost=2614472.95..2982234.45 rows=3 width=8) (actual time=14504.418..21245.898 rows=59002 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  GroupAggregate  (cost=2614471.96..2780202.92 rows=4876716 width=40) (actual time=14503.990..20561.797 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=2614471.96..2637617.02 rows=9258022 width=13) (actual time=14503.974..17206.039 rows=9123091 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 205064kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=166185.29..1430198.62 rows=9258022 width=13) (actual time=1701.504..11269.171 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Rows Removed by Index Recheck: 27869248
                                             Heap Blocks: exact=412819 lossy=635976
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..163870.79 rows=9258022 width=0) (actual time=1608.070..1608.070 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.98..121303.57 rows=80791 width=16) (actual time=0.096..366.367 rows=237286 loops=1)
                                 ->  Nested Loop  (cost=0.98..121101.60 rows=80791 width=16) (actual time=0.094..346.620 rows=86872 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.55..64481.17 rows=20201 width=4) (actual time=0.066..239.253 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.62 rows=18 width=12) (actual time=0.004..0.004 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning time: 2.895 ms
 Execution time: 38654.888 ms
(41 rows)

query 21 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1920890.66..1920890.66 rows=1 width=34) (actual time=14746.135..14746.147 rows=100 loops=1)
   ->  Sort  (cost=1920890.66..1920890.66 rows=1 width=34) (actual time=14746.134..14746.142 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  GroupAggregate  (cost=1920890.63..1920890.65 rows=1 width=34) (actual time=14738.140..14744.908 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=1920890.63..1920890.63 rows=1 width=26) (actual time=14738.133..14740.297 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Anti Join  (cost=2398.84..1920890.62 rows=1 width=26) (actual time=42.578..14577.586 rows=39281 loops=1)
                           ->  Nested Loop Semi Join  (cost=2398.27..1920886.02 rows=1 width=34) (actual time=42.571..13397.567 rows=704306 loops=1)
                                 Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Join Filter: 80163
                                 ->  Hash Join  (cost=2397.71..884485.18 rows=387217 width=38) (actual time=42.559..10441.208 rows=730985 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Merge Join  (cost=40.40..841954.07 rows=9680435 width=12) (actual time=2.507..8887.727 rows=18321400 loops=1)
                                             Merge Cond: (orders.o_orderkey = l1.l_orderkey)
                                             ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..267386.96 rows=7261874 width=4) (actual time=1.405..1189.294 rows=7309184 loops=1)
                                                   Index Cond: (o_orderstatus = 'F'::bpchar)
                                                   Heap Fetches: 0
                                             ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..409630.07 rows=19996767 width=8) (actual time=1.094..3855.839 rows=37929347 loops=1)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=2307.31..2307.31 rows=4000 width=30) (actual time=40.005..40.005 rows=3991 loops=1)
                                             Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                             ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=30) (actual time=1.809..39.080 rows=3991 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.014..0.018 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                         Rows Removed by Filter: 24
                                                   ->  Bitmap Heap Scan on supplier  (cost=55.29..2266.00 rows=4000 width=34) (actual time=1.791..38.296 rows=3991 loops=1)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         Heap Blocks: exact=1865
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=1.608..1.608 rows=3991 loops=1)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.004..0.004 rows=1 loops=730985)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..2.58 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=704306)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning time: 30.415 ms
 Execution time: 14746.245 ms
(43 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1920890.66..1920890.66 rows=1 width=34) (actual time=12812.366..12812.375 rows=100 loops=1)
   ->  Sort  (cost=1920890.66..1920890.66 rows=1 width=34) (actual time=12812.366..12812.371 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  GroupAggregate  (cost=1920890.63..1920890.65 rows=1 width=34) (actual time=12804.389..12811.099 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=1920890.63..1920890.63 rows=1 width=26) (actual time=12804.383..12806.517 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Anti Join  (cost=2398.84..1920890.62 rows=1 width=26) (actual time=14.588..12646.027 rows=39281 loops=1)
                           ->  Nested Loop Semi Join  (cost=2398.27..1920886.02 rows=1 width=34) (actual time=14.581..11540.577 rows=704306 loops=1)
                                 Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Join Filter: 80163
                                 ->  Hash Join  (cost=2397.71..884485.18 rows=387217 width=38) (actual time=14.567..9652.514 rows=730985 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Merge Join  (cost=40.40..841954.07 rows=9680435 width=12) (actual time=0.066..8264.339 rows=18321400 loops=1)
                                             Merge Cond: (orders.o_orderkey = l1.l_orderkey)
                                             ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..267386.96 rows=7261874 width=4) (actual time=0.029..1043.866 rows=7309184 loops=1)
                                                   Index Cond: (o_orderstatus = 'F'::bpchar)
                                                   Heap Fetches: 0
                                             ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..409630.07 rows=19996767 width=8) (actual time=0.033..3479.239 rows=37929347 loops=1)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=2307.31..2307.31 rows=4000 width=30) (actual time=14.249..14.249 rows=3991 loops=1)
                                             Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                             ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=30) (actual time=0.573..13.487 rows=3991 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.011 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                         Rows Removed by Filter: 24
                                                   ->  Bitmap Heap Scan on supplier  (cost=55.29..2266.00 rows=4000 width=34) (actual time=0.563..12.868 rows=3991 loops=1)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         Heap Blocks: exact=1865
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=0.382..0.382 rows=3991 loops=1)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=730985)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..2.58 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=704306)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning time: 2.886 ms
 Execution time: 12812.483 ms
(43 rows)

query 22 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=162279.70..162279.73 rows=1 width=72) (actual time=2366.618..2366.619 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75438.72..75438.73 rows=1 width=32) (actual time=1062.975..1062.975 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75319.80 rows=47568 width=6) (actual time=0.008..1002.071 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=86840.97..87059.90 rows=7961 width=72) (actual time=2366.618..2366.618 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=86840.97..86860.88 rows=7961 width=38) (actual time=2364.385..2364.847 rows=9006 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..86325.15 rows=7961 width=38) (actual time=1063.023..2342.063 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75319.80 rows=17499 width=26) (actual time=1063.002..1644.439 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.66 rows=18 width=4) (actual time=0.003..0.003 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 16.768 ms
 Execution time: 2366.672 ms
(20 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=162279.70..162279.73 rows=1 width=72) (actual time=1705.947..1705.947 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75438.72..75438.73 rows=1 width=32) (actual time=793.108..793.108 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75319.80 rows=47568 width=6) (actual time=0.008..738.514 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=86840.97..87059.90 rows=7961 width=72) (actual time=1705.947..1705.947 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=86840.97..86860.88 rows=7961 width=38) (actual time=1703.700..1704.130 rows=9006 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..86325.15 rows=7961 width=38) (actual time=793.148..1686.036 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75319.80 rows=17499 width=26) (actual time=793.136..1334.348 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.66 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 0.957 ms
 Execution time: 1705.999 ms
(20 rows)

