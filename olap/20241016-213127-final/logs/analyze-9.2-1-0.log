query 1 run 1
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424671.62..424671.62 rows=1 width=25) (actual time=18211.518..18211.519 rows=1 loops=1)
   ->  Sort  (cost=424671.62..424671.64 rows=6 width=25) (actual time=18211.518..18211.518 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424671.49..424671.59 rows=6 width=25) (actual time=18211.477..18211.482 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..187576.09 rows=5927385 width=25) (actual time=0.242..1326.834 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Total runtime: 18211.615 ms
(9 rows)

SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424671.62..424671.62 rows=1 width=25) (actual time=17921.600..17921.600 rows=1 loops=1)
   ->  Sort  (cost=424671.62..424671.64 rows=6 width=25) (actual time=17921.600..17921.600 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424671.49..424671.59 rows=6 width=25) (actual time=17921.354..17921.359 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..187576.09 rows=5927385 width=25) (actual time=0.022..1129.398 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Total runtime: 17921.660 ms
(9 rows)

query 2 run 1
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=31723.54..31723.55 rows=1 width=192) (actual time=174.135..174.146 rows=100 loops=1)
   ->  Sort  (cost=31723.54..31723.55 rows=1 width=192) (actual time=174.135..174.139 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Nested Loop  (cost=13.76..31723.53 rows=1 width=192) (actual time=9.216..173.684 rows=489 loops=1)
               Join Filter: (public.nation.n_nationkey = public.supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.006..0.012 rows=5 loops=1)
                     Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.000..0.004 rows=25 loops=1)
               ->  Materialize  (cost=13.76..31720.84 rows=1 width=170) (actual time=0.965..34.655 rows=489 loops=5)
                     ->  Nested Loop  (cost=13.76..31720.83 rows=1 width=170) (actual time=4.824..172.822 rows=489 loops=1)
                           ->  Nested Loop  (cost=13.76..31719.58 rows=1 width=34) (actual time=4.137..135.565 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.00..5474.45 rows=885 width=30) (actual time=1.067..26.317 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.76..29.65 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.75..13.76 rows=1 width=6) (actual time=0.134..0.134 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.00..13.75 rows=1 width=6) (actual time=0.121..0.132 rows=1 loops=799)
                                                     Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.00..12.64 rows=4 width=10) (actual time=0.100..0.129 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.00..11.52 rows=4 width=10) (actual time=0.099..0.123 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.00..2.38 rows=4 width=10) (actual time=0.093..0.095 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.00..2.27 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = public.supplier.s_nationkey)
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.75..13.76 rows=1 width=6) (actual time=0.134..0.134 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.00..13.75 rows=1 width=6) (actual time=0.121..0.132 rows=1 loops=799)
                                                     Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.00..12.64 rows=4 width=10) (actual time=0.100..0.129 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.00..11.52 rows=4 width=10) (actual time=0.099..0.123 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.00..2.38 rows=4 width=10) (actual time=0.093..0.095 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.00..2.27 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = public.supplier.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..1.24 rows=1 width=144) (actual time=0.075..0.075 rows=1 loops=489)
                                 Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
 Total runtime: 174.205 ms
(64 rows)

SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=31723.54..31723.55 rows=1 width=192) (actual time=30.170..30.179 rows=100 loops=1)
   ->  Sort  (cost=31723.54..31723.55 rows=1 width=192) (actual time=30.170..30.173 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Nested Loop  (cost=13.76..31723.53 rows=1 width=192) (actual time=0.290..29.807 rows=489 loops=1)
               Join Filter: (public.nation.n_nationkey = public.supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.006..0.012 rows=5 loops=1)
                     Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.000..0.002 rows=25 loops=1)
               ->  Materialize  (cost=13.76..31720.84 rows=1 width=170) (actual time=0.027..5.900 rows=489 loops=5)
                     ->  Nested Loop  (cost=13.76..31720.83 rows=1 width=170) (actual time=0.131..29.268 rows=489 loops=1)
                           ->  Nested Loop  (cost=13.76..31719.58 rows=1 width=34) (actual time=0.116..27.744 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.00..5474.45 rows=885 width=30) (actual time=0.028..11.071 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.76..29.65 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.75..13.76 rows=1 width=6) (actual time=0.019..0.019 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.00..13.75 rows=1 width=6) (actual time=0.014..0.018 rows=1 loops=799)
                                                     Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.00..12.64 rows=4 width=10) (actual time=0.008..0.016 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.00..11.52 rows=4 width=10) (actual time=0.007..0.012 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.00..2.38 rows=4 width=10) (actual time=0.005..0.005 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.00..2.27 rows=1 width=8) (actual time=0.001..0.002 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = public.supplier.s_nationkey)
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.75..13.76 rows=1 width=6) (actual time=0.019..0.019 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.00..13.75 rows=1 width=6) (actual time=0.014..0.018 rows=1 loops=799)
                                                     Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.00..12.64 rows=4 width=10) (actual time=0.008..0.016 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.00..11.52 rows=4 width=10) (actual time=0.007..0.012 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.00..2.38 rows=4 width=10) (actual time=0.005..0.005 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.00..2.27 rows=1 width=8) (actual time=0.001..0.002 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = public.supplier.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..1.24 rows=1 width=144) (actual time=0.002..0.003 rows=1 loops=489)
                                 Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
 Total runtime: 30.235 ms
(64 rows)

query 3 run 1
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=308876.24..308876.26 rows=10 width=24) (actual time=2488.558..2488.559 rows=10 loops=1)
   ->  Sort  (cost=308876.24..309657.50 rows=312505 width=24) (actual time=2488.556..2488.556 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=293529.23..302123.12 rows=312505 width=24) (actual time=2467.476..2486.441 rows=11612 loops=1)
               ->  Sort  (cost=293529.23..294310.49 rows=312505 width=24) (actual time=2467.462..2468.582 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=62008.11..265007.65 rows=312505 width=24) (actual time=649.981..2461.383 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187576.09 rows=3279573 width=16) (actual time=0.003..1127.264 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 2739342
                           ->  Hash  (cost=60221.07..60221.07 rows=142963 width=12) (actual time=649.165..649.165 rows=146063 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 6277kB
                                 ->  Hash Join  (cost=5845.94..60221.07 rows=142963 width=12) (actual time=53.436..623.308 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=716845 width=16) (actual time=0.002..348.620 rows=722275 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 777725
                                       ->  Hash  (cost=5472.00..5472.00 rows=29915 width=4) (actual time=53.420..53.420 rows=30142 loops=1)
                                             Buckets: 4096  Batches: 1  Memory Usage: 1060kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29915 width=4) (actual time=0.001..49.536 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
 Total runtime: 2489.106 ms
(26 rows)

SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=308876.24..308876.26 rows=10 width=24) (actual time=2045.757..2045.759 rows=10 loops=1)
   ->  Sort  (cost=308876.24..309657.50 rows=312505 width=24) (actual time=2045.757..2045.758 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=293529.23..302123.12 rows=312505 width=24) (actual time=2024.742..2043.697 rows=11612 loops=1)
               ->  Sort  (cost=293529.23..294310.49 rows=312505 width=24) (actual time=2024.728..2025.857 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=62008.11..265007.65 rows=312505 width=24) (actual time=467.715..2019.091 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187576.09 rows=3279573 width=16) (actual time=0.003..916.032 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 2739342
                           ->  Hash  (cost=60221.07..60221.07 rows=142963 width=12) (actual time=467.483..467.483 rows=146063 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 6277kB
                                 ->  Hash Join  (cost=5845.94..60221.07 rows=142963 width=12) (actual time=34.099..444.924 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=716845 width=16) (actual time=0.002..261.434 rows=722275 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 777725
                                       ->  Hash  (cost=5472.00..5472.00 rows=29915 width=4) (actual time=34.080..34.080 rows=30142 loops=1)
                                             Buckets: 4096  Batches: 1  Memory Usage: 1060kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29915 width=4) (actual time=0.002..30.745 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
 Total runtime: 2045.815 ms
(26 rows)

query 4 run 1
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=121843.42..121843.43 rows=1 width=16) (actual time=2148.717..2148.718 rows=1 loops=1)
   ->  Sort  (cost=121843.42..121843.43 rows=1 width=16) (actual time=2148.717..2148.717 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=121843.40..121843.41 rows=1 width=16) (actual time=2148.688..2148.690 rows=5 loops=1)
               ->  Merge Semi Join  (cost=32106.11..121570.50 rows=54580 width=16) (actual time=523.531..2132.457 rows=51398 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=32103.85..32240.30 rows=54580 width=20) (actual time=522.973..529.487 rows=55973 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: quicksort  Memory: 5909kB
                           ->  Bitmap Heap Scan on orders  (cost=859.78..27809.48 rows=54580 width=20) (actual time=12.531..508.076 rows=55973 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..846.13 rows=54580 width=0) (actual time=9.547..9.547 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using q4_idx_1 on lineitem  (cost=0.00..83464.97 rows=2000429 width=4) (actual time=0.511..1361.596 rows=3793256 loops=1)
 Total runtime: 2148.791 ms
(16 rows)

SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=121843.42..121843.43 rows=1 width=16) (actual time=1154.129..1154.129 rows=1 loops=1)
   ->  Sort  (cost=121843.42..121843.43 rows=1 width=16) (actual time=1154.129..1154.129 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=121843.40..121843.41 rows=1 width=16) (actual time=1154.102..1154.102 rows=5 loops=1)
               ->  Merge Semi Join  (cost=32106.11..121570.50 rows=54580 width=16) (actual time=90.137..1142.656 rows=51398 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=32103.85..32240.30 rows=54580 width=20) (actual time=90.108..95.406 rows=55973 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: quicksort  Memory: 5909kB
                           ->  Bitmap Heap Scan on orders  (cost=859.78..27809.48 rows=54580 width=20) (actual time=9.337..81.695 rows=55973 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..846.13 rows=54580 width=0) (actual time=6.243..6.243 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using q4_idx_1 on lineitem  (cost=0.00..83464.97 rows=2000429 width=4) (actual time=0.017..819.380 rows=3793256 loops=1)
 Total runtime: 1154.224 ms
(16 rows)

query 5 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=171313.94..171313.94 rows=1 width=38) (actual time=1222.004..1222.005 rows=1 loops=1)
   ->  Sort  (cost=171313.94..171314.00 rows=25 width=38) (actual time=1222.003..1222.003 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=171313.56..171313.81 rows=25 width=38) (actual time=1221.978..1221.979 rows=5 loops=1)
               ->  Hash Join  (cost=10336.82..171241.91 rows=7165 width=38) (actual time=97.991..1210.456 rows=7540 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9863.82..165320.18 rows=179236 width=50) (actual time=93.024..1122.313 rows=182435 loops=1)
                           ->  Hash Join  (cost=9863.82..40923.81 rows=44809 width=38) (actual time=91.711..726.722 rows=45297 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3526.79..33018.47 rows=224045 width=8) (actual time=31.855..534.761 rows=226645 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3470.78 rows=224045 width=0) (actual time=28.563..28.563 rows=226645 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=59.830..59.830 rows=29952 loops=1)
                                       Buckets: 4096  Batches: 1  Memory Usage: 2106kB
                                       ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.024..54.823 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..38.684 rows=150000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.019..0.019 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.013..0.017 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.00..2.74 rows=4 width=20) (actual time=0.007..0.008 rows=4 loops=45297)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=4.898..4.898 rows=10000 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 391kB
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..3.721 rows=10000 loops=1)
 Total runtime: 1222.087 ms
(36 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=171313.94..171313.94 rows=1 width=38) (actual time=466.516..466.517 rows=1 loops=1)
   ->  Sort  (cost=171313.94..171314.00 rows=25 width=38) (actual time=466.515..466.515 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=171313.56..171313.81 rows=25 width=38) (actual time=466.490..466.490 rows=5 loops=1)
               ->  Hash Join  (cost=10336.82..171241.91 rows=7165 width=38) (actual time=67.137..458.687 rows=7540 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9863.82..165320.18 rows=179236 width=50) (actual time=63.982..420.397 rows=182435 loops=1)
                           ->  Hash Join  (cost=9863.82..40923.81 rows=44809 width=38) (actual time=63.933..235.506 rows=45297 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3526.79..33018.47 rows=224045 width=8) (actual time=23.228..130.395 rows=226645 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3470.78 rows=224045 width=0) (actual time=19.881..19.881 rows=226645 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=40.687..40.687 rows=29952 loops=1)
                                       Buckets: 4096  Batches: 1  Memory Usage: 2106kB
                                       ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.024..36.233 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..8.614 rows=150000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.017..0.017 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.012..0.016 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.001 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.00..2.74 rows=4 width=20) (actual time=0.003..0.004 rows=4 loops=45297)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.137..3.137 rows=10000 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 391kB
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..1.908 rows=10000 loops=1)
 Total runtime: 466.598 ms
(36 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116435.76..116435.77 rows=1 width=12) (actual time=1519.134..1519.135 rows=1 loops=1)
   ->  Aggregate  (cost=116435.76..116435.77 rows=1 width=12) (actual time=1519.132..1519.132 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=22585.59..115846.14 rows=117924 width=12) (actual time=141.475..1400.770 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22556.11 rows=117924 width=0) (actual time=129.961..129.961 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 1519.169 ms
(7 rows)

SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116435.76..116435.77 rows=1 width=12) (actual time=359.488..359.488 rows=1 loops=1)
   ->  Aggregate  (cost=116435.76..116435.77 rows=1 width=12) (actual time=359.486..359.486 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=22585.59..115846.14 rows=117924 width=12) (actual time=118.683..305.090 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22556.11 rows=117924 width=0) (actual time=108.273..108.273 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 359.524 ms
(7 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=242087.61..242087.62 rows=1 width=68) (actual time=3420.321..3420.322 rows=1 loops=1)
   ->  Sort  (cost=242087.61..242102.30 rows=5875 width=68) (actual time=3420.320..3420.320 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=241970.11..242058.24 rows=5875 width=68) (actual time=3420.268..3420.279 rows=4 loops=1)
               ->  Hash Join  (cost=88881.63..241881.99 rows=5875 width=68) (actual time=915.779..3408.385 rows=5729 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=88408.63..236912.60 rows=146942 width=76) (actual time=907.109..3309.597 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=33008.80..173148.45 rows=1838643 width=24) (actual time=301.680..2258.405 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32549.14 rows=1838643 width=0) (actual time=281.338..281.338 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53901.03..53901.03 rows=119904 width=60) (actual time=605.239..605.239 rows=118477 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 10645kB
                                 ->  Hash Join  (cost=5946.02..53901.03 rows=119904 width=60) (actual time=53.774..579.322 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.002..282.712 rows=1500000 loops=1)
                                       ->  Hash  (cost=5796.15..5796.15 rows=11990 width=60) (actual time=53.765..53.765 rows=11896 loops=1)
                                             Buckets: 2048  Batches: 1  Memory Usage: 1069kB
                                             ->  Hash Join  (cost=16.65..5796.15 rows=11990 width=60) (actual time=0.132..51.335 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.001..37.420 rows=150000 loops=1)
                                                   ->  Hash  (cost=16.62..16.62 rows=2 width=60) (actual time=0.128..0.128 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Nested Loop  (cost=0.00..16.62 rows=2 width=60) (actual time=0.085..0.127 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 623
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.002 rows=25 loops=1)
                                                               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.007 rows=25 loops=1)
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=8.114..8.114 rows=10000 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 391kB
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..6.726 rows=10000 loops=1)
 Total runtime: 3420.425 ms
(35 rows)

SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=242087.61..242087.62 rows=1 width=68) (actual time=1614.088..1614.089 rows=1 loops=1)
   ->  Sort  (cost=242087.61..242102.30 rows=5875 width=68) (actual time=1614.087..1614.087 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=241970.11..242058.24 rows=5875 width=68) (actual time=1614.037..1614.048 rows=4 loops=1)
               ->  Hash Join  (cost=88881.63..241881.99 rows=5875 width=68) (actual time=704.790..1607.154 rows=5729 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=88408.63..236912.60 rows=146942 width=76) (actual time=701.299..1553.610 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=33008.80..173148.45 rows=1838643 width=24) (actual time=235.698..733.482 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32549.14 rows=1838643 width=0) (actual time=215.616..215.616 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53901.03..53901.03 rows=119904 width=60) (actual time=465.560..465.560 rows=118477 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 10645kB
                                 ->  Hash Join  (cost=5946.02..53901.03 rows=119904 width=60) (actual time=34.681..442.935 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.003..76.125 rows=1500000 loops=1)
                                       ->  Hash  (cost=5796.15..5796.15 rows=11990 width=60) (actual time=34.673..34.673 rows=11896 loops=1)
                                             Buckets: 2048  Batches: 1  Memory Usage: 1069kB
                                             ->  Hash Join  (cost=16.65..5796.15 rows=11990 width=60) (actual time=0.132..32.681 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..7.682 rows=150000 loops=1)
                                                   ->  Hash  (cost=16.62..16.62 rows=2 width=60) (actual time=0.127..0.127 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Nested Loop  (cost=0.00..16.62 rows=2 width=60) (actual time=0.084..0.125 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 623
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.003 rows=25 loops=1)
                                                               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.005 rows=25 loops=1)
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.366..3.366 rows=10000 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 391kB
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..1.964 rows=10000 loops=1)
 Total runtime: 1614.179 ms
(35 rows)

query 8 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=62223.65..62223.66 rows=1 width=42) (actual time=1264.209..1264.209 rows=1 loops=1)
   ->  Sort  (cost=62223.65..62225.49 rows=734 width=42) (actual time=1264.207..1264.207 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=62207.14..62219.98 rows=734 width=42) (actual time=1264.194..1264.194 rows=2 loops=1)
               ->  Hash Join  (cost=51325.41..62158.38 rows=2438 width=42) (actual time=785.934..1256.821 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=51323.85..62111.10 rows=2438 width=20) (actual time=785.912..1253.573 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=50875.85..61602.14 rows=2439 width=20) (actual time=780.303..1245.128 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..10551.90 rows=39999 width=20) (actual time=5.548..445.524 rows=39694 loops=1)
                                       ->  Index Only Scan using q2_idx_1 on part  (cost=0.00..5435.62 rows=1333 width=4) (actual time=1.615..33.387 rows=1320 loops=1)
                                             Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.00..3.53 rows=31 width=24) (actual time=0.252..0.306 rows=30 loops=1320)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Heap Fetches: 0
                                 ->  Hash  (cost=49732.29..49732.29 rows=91485 width=8) (actual time=774.707..774.707 rows=91179 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 3562kB
                                       ->  Hash Join  (cost=13537.96..49732.29 rows=91485 width=8) (actual time=112.258..756.633 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=7200.93..40193.29 rows=457424 width=12) (actual time=53.617..534.791 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7086.57 rows=457424 width=0) (actual time=50.322..50.322 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=58.585..58.585 rows=29952 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 1053kB
                                                   ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.046..54.799 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.004..38.527 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.030..0.030 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.019..0.028 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.005 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.606..5.606 rows=10000 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 391kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..4.299 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.009..0.009 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.005 rows=25 loops=1)
 Total runtime: 1264.309 ms
(48 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=62223.65..62223.66 rows=1 width=42) (actual time=370.796..370.796 rows=1 loops=1)
   ->  Sort  (cost=62223.65..62225.49 rows=734 width=42) (actual time=370.795..370.795 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=62207.14..62219.98 rows=734 width=42) (actual time=370.782..370.783 rows=2 loops=1)
               ->  Hash Join  (cost=51325.41..62158.38 rows=2438 width=42) (actual time=324.273..368.035 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=51323.85..62111.10 rows=2438 width=20) (actual time=324.252..367.007 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=50875.85..61602.14 rows=2439 width=20) (actual time=321.004..362.194 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..10551.90 rows=39999 width=20) (actual time=0.091..27.254 rows=39694 loops=1)
                                       ->  Index Only Scan using q2_idx_1 on part  (cost=0.00..5435.62 rows=1333 width=4) (actual time=0.058..10.995 rows=1320 loops=1)
                                             Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.00..3.53 rows=31 width=24) (actual time=0.006..0.010 rows=30 loops=1320)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Heap Fetches: 0
                                 ->  Hash  (cost=49732.29..49732.29 rows=91485 width=8) (actual time=320.888..320.888 rows=91179 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 3562kB
                                       ->  Hash Join  (cost=13537.96..49732.29 rows=91485 width=8) (actual time=80.719..308.598 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=7200.93..40193.29 rows=457424 width=12) (actual time=41.107..171.297 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7086.57 rows=457424 width=0) (actual time=37.800..37.800 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=39.600..39.600 rows=29952 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 1053kB
                                                   ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.019..36.291 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.001..8.909 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.015..0.015 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.009..0.013 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.003 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.244..3.244 rows=10000 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 391kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..1.970 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.008..0.008 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.005 rows=25 loops=1)
 Total runtime: 370.877 ms
(48 rows)

query 9 run 1
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170489.57..170489.57 rows=1 width=53) (actual time=7149.854..7149.854 rows=1 loops=1)
   ->  Sort  (cost=170489.57..170490.30 rows=292 width=53) (actual time=7149.853..7149.853 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=170483.73..170488.11 rows=292 width=53) (actual time=7149.762..7149.789 rows=175 loops=1)
               ->  Nested Loop  (cost=1.50..170478.62 rows=292 width=53) (actual time=5.609..6666.735 rows=325928 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 7822272
                     ->  Nested Loop  (cost=1.50..170366.35 rows=292 width=31) (actual time=5.581..5613.088 rows=325928 loops=1)
                           ->  Nested Loop  (cost=1.50..169208.84 rows=292 width=31) (actual time=4.794..1772.369 rows=325928 loops=1)
                                 ->  Merge Join  (cost=1.50..168601.83 rows=292 width=35) (actual time=4.559..1205.840 rows=325928 loops=1)
                                       Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                       Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                       Rows Removed by Join Filter: 977784
                                       ->  Nested Loop  (cost=0.00..97442.44 rows=727416 width=33) (actual time=3.515..689.656 rows=325928 loops=1)
                                             ->  Index Only Scan using q20_idx_2 on part  (cost=0.00..6454.28 rows=24242 width=4) (actual time=0.260..58.310 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 189120
                                                   Heap Fetches: 0
                                             ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.00..3.44 rows=31 width=29) (actual time=0.042..0.055 rows=30 loops=10880)
                                                   Index Cond: (l_partkey = part.p_partkey)
                                                   Heap Fetches: 0
                                       ->  Materialize  (cost=0.00..20168.31 rows=800000 width=14) (actual time=1.000..250.371 rows=2060177 loops=1)
                                             ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.00..18168.31 rows=800000 width=14) (actual time=0.995..106.796 rows=799985 loops=1)
                                                   Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.00..2.07 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                                       Heap Fetches: 0
                           ->  Index Scan using q21_idx_3 on orders  (cost=0.00..3.95 rows=1 width=8) (actual time=0.011..0.011 rows=1 loops=325928)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=325928)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.004..0.009 rows=25 loops=1)
 Total runtime: 7149.946 ms
(33 rows)

SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170489.57..170489.57 rows=1 width=53) (actual time=3522.114..3522.115 rows=1 loops=1)
   ->  Sort  (cost=170489.57..170490.30 rows=292 width=53) (actual time=3522.114..3522.114 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=170483.73..170488.11 rows=292 width=53) (actual time=3522.025..3522.050 rows=175 loops=1)
               ->  Nested Loop  (cost=1.50..170478.62 rows=292 width=53) (actual time=0.150..3095.329 rows=325928 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 7822272
                     ->  Nested Loop  (cost=1.50..170366.35 rows=292 width=31) (actual time=0.138..2122.912 rows=325928 loops=1)
                           ->  Nested Loop  (cost=1.50..169208.84 rows=292 width=31) (actual time=0.121..1175.703 rows=325928 loops=1)
                                 ->  Merge Join  (cost=1.50..168601.83 rows=292 width=35) (actual time=0.110..675.032 rows=325928 loops=1)
                                       Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                       Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                       Rows Removed by Join Filter: 977784
                                       ->  Nested Loop  (cost=0.00..97442.44 rows=727416 width=33) (actual time=0.063..211.971 rows=325928 loops=1)
                                             ->  Index Only Scan using q20_idx_2 on part  (cost=0.00..6454.28 rows=24242 width=4) (actual time=0.031..46.599 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 189120
                                                   Heap Fetches: 0
                                             ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.00..3.44 rows=31 width=29) (actual time=0.006..0.012 rows=30 loops=10880)
                                                   Index Cond: (l_partkey = part.p_partkey)
                                                   Heap Fetches: 0
                                       ->  Materialize  (cost=0.00..20168.31 rows=800000 width=14) (actual time=0.029..220.847 rows=2060177 loops=1)
                                             ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.00..18168.31 rows=800000 width=14) (actual time=0.027..85.425 rows=799985 loops=1)
                                                   Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.00..2.07 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                                       Heap Fetches: 0
                           ->  Index Scan using q21_idx_3 on orders  (cost=0.00..3.95 rows=1 width=8) (actual time=0.002..0.003 rows=1 loops=325928)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=325928)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.006 rows=25 loops=1)
 Total runtime: 3522.192 ms
(33 rows)

query 10 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=168297.46..168297.51 rows=20 width=182) (actual time=1578.038..1578.040 rows=20 loops=1)
   ->  Sort  (cost=168297.46..168435.87 rows=55364 width=182) (actual time=1578.037..1578.038 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=166270.60..166824.24 rows=55364 width=182) (actual time=1555.199..1568.299 rows=38076 loops=1)
               ->  Hash Join  (cost=39291.52..164886.50 rows=55364 width=182) (actual time=618.342..1401.535 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=39289.96..164123.68 rows=55364 width=160) (actual time=618.328..1379.922 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=32317.96..155836.79 rows=55364 width=16) (actual time=533.326..1221.627 rows=114347 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Sort  (cost=32314.79..32455.76 rows=56386 width=8) (actual time=532.154..538.967 rows=57111 loops=1)
                                       Sort Key: orders.o_orderkey
                                       Sort Method: quicksort  Memory: 4214kB
                                       ->  Bitmap Heap Scan on orders  (cost=888.29..27865.08 rows=56386 width=8) (actual time=12.095..521.042 rows=57111 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..874.19 rows=56386 width=0) (actual time=9.072..9.072 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.00..119003.66 rows=1473116 width=16) (actual time=1.109..582.582 rows=1478867 loops=1)
                                       Index Cond: (l_returnflag = 'R'::bpchar)
                                       Heap Fetches: 0
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=84.988..84.988 rows=150000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 26813kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.000..52.334 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.007..0.007 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.003 rows=25 loops=1)
 Total runtime: 1578.199 ms
(28 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=168297.46..168297.51 rows=20 width=182) (actual time=923.047..923.050 rows=20 loops=1)
   ->  Sort  (cost=168297.46..168435.87 rows=55364 width=182) (actual time=923.046..923.048 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=166270.60..166824.24 rows=55364 width=182) (actual time=900.243..913.303 rows=38076 loops=1)
               ->  Hash Join  (cost=39291.52..164886.50 rows=55364 width=182) (actual time=150.613..757.405 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=39289.96..164123.68 rows=55364 width=160) (actual time=150.600..737.425 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=32317.96..155836.79 rows=55364 width=16) (actual time=86.012..603.733 rows=114347 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Sort  (cost=32314.79..32455.76 rows=56386 width=8) (actual time=85.936..92.338 rows=57111 loops=1)
                                       Sort Key: orders.o_orderkey
                                       Sort Method: quicksort  Memory: 4214kB
                                       ->  Bitmap Heap Scan on orders  (cost=888.29..27865.08 rows=56386 width=8) (actual time=8.588..79.626 rows=57111 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..874.19 rows=56386 width=0) (actual time=5.698..5.698 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.00..119003.66 rows=1473116 width=16) (actual time=0.050..419.071 rows=1478867 loops=1)
                                       Index Cond: (l_returnflag = 'R'::bpchar)
                                       Heap Fetches: 0
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=64.576..64.576 rows=150000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 26813kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.001..32.585 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.008..0.008 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.003 rows=25 loops=1)
 Total runtime: 923.194 ms
(28 rows)

query 11 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29404.98..29404.99 rows=1 width=14) (actual time=773.402..773.402 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=14262.49..14262.50 rows=1 width=10) (actual time=32.390..32.390 rows=1 loops=1)
           ->  Nested Loop  (cost=0.00..14022.49 rows=32000 width=10) (actual time=0.024..19.464 rows=32880 loops=1)
                 ->  Nested Loop  (cost=0.00..449.31 rows=400 width=4) (actual time=0.020..1.644 rows=411 loops=1)
                       Join Filter: (public.supplier.s_nationkey = public.nation.n_nationkey)
                       Rows Removed by Join Filter: 9589
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.000..0.519 rows=10000 loops=1)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..33.13 rows=80 width=14) (actual time=0.003..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=15142.49..15222.49 rows=32000 width=14) (actual time=773.402..773.402 rows=1 loops=1)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=14582.49..14982.49 rows=32000 width=14) (actual time=767.687..773.265 rows=839 loops=1)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $1)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=0.00..14022.49 rows=32000 width=14) (actual time=0.281..705.787 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..449.31 rows=400 width=4) (actual time=0.063..3.616 rows=411 loops=1)
                           Join Filter: (public.supplier.s_nationkey = public.nation.n_nationkey)
                           Rows Removed by Join Filter: 9589
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..2.611 rows=10000 loops=1)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..33.13 rows=80 width=18) (actual time=0.097..1.691 rows=80 loops=411)
                           Index Cond: (ps_suppkey = public.supplier.s_suppkey)
 Total runtime: 773.471 ms
(30 rows)

SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29404.98..29404.99 rows=1 width=14) (actual time=112.371..112.371 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=14262.49..14262.50 rows=1 width=10) (actual time=32.016..32.016 rows=1 loops=1)
           ->  Nested Loop  (cost=0.00..14022.49 rows=32000 width=10) (actual time=0.026..19.203 rows=32880 loops=1)
                 ->  Nested Loop  (cost=0.00..449.31 rows=400 width=4) (actual time=0.021..1.648 rows=411 loops=1)
                       Join Filter: (public.supplier.s_nationkey = public.nation.n_nationkey)
                       Rows Removed by Join Filter: 9589
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..0.501 rows=10000 loops=1)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..33.13 rows=80 width=14) (actual time=0.003..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=15142.49..15222.49 rows=32000 width=14) (actual time=112.370..112.370 rows=1 loops=1)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=14582.49..14982.49 rows=32000 width=14) (actual time=106.665..112.220 rows=839 loops=1)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $1)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=0.00..14022.49 rows=32000 width=14) (actual time=0.038..56.834 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..449.31 rows=400 width=4) (actual time=0.026..2.364 rows=411 loops=1)
                           Join Filter: (public.supplier.s_nationkey = public.nation.n_nationkey)
                           Rows Removed by Join Filter: 9589
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..0.669 rows=10000 loops=1)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..33.13 rows=80 width=18) (actual time=0.007..0.122 rows=80 loops=411)
                           Index Cond: (ps_suppkey = public.supplier.s_suppkey)
 Total runtime: 112.434 ms
(30 rows)

query 12 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116839.51..116839.51 rows=1 width=27) (actual time=3997.837..3997.837 rows=1 loops=1)
   ->  Sort  (cost=116839.51..116839.51 rows=1 width=27) (actual time=3997.834..3997.834 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=116839.49..116839.50 rows=1 width=27) (actual time=3997.823..3997.824 rows=2 loops=1)
               ->  Merge Join  (cost=55264.10..116319.70 rows=29702 width=27) (actual time=3483.052..3979.344 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..56864.33 rows=1500000 width=20) (actual time=0.523..396.403 rows=1499957 loops=1)
                     ->  Sort  (cost=55264.09..55338.36 rows=29708 width=15) (actual time=3482.469..3485.728 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 2219kB
                           ->  Index Scan using q12_idx_1 on lineitem  (cost=0.00..53057.00 rows=29708 width=15) (actual time=1.973..3459.571 rows=30953 loops=1)
                                 Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 3997.923 ms
(14 rows)

SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116839.51..116839.51 rows=1 width=27) (actual time=514.014..514.015 rows=1 loops=1)
   ->  Sort  (cost=116839.51..116839.51 rows=1 width=27) (actual time=514.014..514.014 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=116839.49..116839.50 rows=1 width=27) (actual time=514.003..514.004 rows=2 loops=1)
               ->  Merge Join  (cost=55264.10..116319.70 rows=29702 width=27) (actual time=142.722..499.237 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..56864.33 rows=1500000 width=20) (actual time=0.016..262.218 rows=1499957 loops=1)
                     ->  Sort  (cost=55264.09..55338.36 rows=29708 width=15) (actual time=142.686..145.178 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 2219kB
                           ->  Index Scan using q12_idx_1 on lineitem  (cost=0.00..53057.00 rows=29708 width=15) (actual time=0.027..134.348 rows=30953 loops=1)
                                 Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 514.091 ms
(14 rows)

query 13 run 1
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=95841.56..95841.57 rows=1 width=8) (actual time=2236.445..2236.445 rows=1 loops=1)
   ->  Sort  (cost=95841.56..95842.06 rows=200 width=8) (actual time=2236.444..2236.444 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=95838.56..95840.56 rows=200 width=8) (actual time=2236.422..2236.426 rows=42 loops=1)
               ->  HashAggregate  (cost=92088.56..93588.56 rows=150000 width=8) (actual time=2189.462..2216.820 rows=150000 loops=1)
                     ->  Hash Right Join  (cost=4953.26..84739.99 rows=1469715 width=8) (actual time=33.528..1717.004 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1469715 width=8) (actual time=0.345..651.019 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.26..3078.26 rows=150000 width=4) (actual time=33.170..33.170 rows=150000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 5274kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.00..3078.26 rows=150000 width=4) (actual time=0.771..18.261 rows=150000 loops=1)
                                       Heap Fetches: 0
 Total runtime: 2237.590 ms
(16 rows)

SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=95841.56..95841.57 rows=1 width=8) (actual time=2071.190..2071.190 rows=1 loops=1)
   ->  Sort  (cost=95841.56..95842.06 rows=200 width=8) (actual time=2071.188..2071.188 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=95838.56..95840.56 rows=200 width=8) (actual time=2071.166..2071.171 rows=42 loops=1)
               ->  HashAggregate  (cost=92088.56..93588.56 rows=150000 width=8) (actual time=2023.993..2051.263 rows=150000 loops=1)
                     ->  Hash Right Join  (cost=4953.26..84739.99 rows=1469715 width=8) (actual time=29.416..1565.685 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1469715 width=8) (actual time=0.010..572.850 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.26..3078.26 rows=150000 width=4) (actual time=29.395..29.395 rows=150000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 5274kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.00..3078.26 rows=150000 width=4) (actual time=0.052..14.789 rows=150000 loops=1)
                                       Heap Fetches: 0
 Total runtime: 2071.840 ms
(16 rows)

query 14 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=87105.49..87105.51 rows=1 width=33) (actual time=960.401..960.401 rows=1 loops=1)
   ->  Aggregate  (cost=87105.49..87105.51 rows=1 width=33) (actual time=960.401..960.401 rows=1 loops=1)
         ->  Hash Join  (cost=9960.68..85778.96 rows=75802 width=33) (actual time=107.284..871.392 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1361.68..75663.92 rows=75802 width=16) (actual time=24.098..710.867 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1342.73 rows=75802 width=0) (actual time=18.186..18.186 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=83.108..83.108 rows=200000 loops=1)
                     Buckets: 32768  Batches: 1  Memory Usage: 11552kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.003..56.011 rows=200000 loops=1)
 Total runtime: 960.453 ms
(12 rows)

SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=87105.49..87105.51 rows=1 width=33) (actual time=318.101..318.101 rows=1 loops=1)
   ->  Aggregate  (cost=87105.49..87105.51 rows=1 width=33) (actual time=318.099..318.099 rows=1 loops=1)
         ->  Hash Join  (cost=9960.68..85778.96 rows=75802 width=33) (actual time=76.592..252.870 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1361.68..75663.92 rows=75802 width=16) (actual time=15.835..136.561 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1342.73 rows=75802 width=0) (actual time=10.256..10.256 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=60.679..60.679 rows=200000 loops=1)
                     Buckets: 32768  Batches: 1  Memory Usage: 11552kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.004..36.066 rows=200000 loops=1)
 Total runtime: 318.133 ms
(12 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246537.44..246538.66 rows=1 width=103) (actual time=1629.567..1629.567 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122402.14..122402.15 rows=1 width=32) (actual time=245.663..245.663 rows=1 loops=1)
           ->  HashAggregate  (cost=122393.54..122397.36 rows=382 width=16) (actual time=243.857..245.065 rows=10000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=4110.97..120104.51 rows=228903 width=16) (actual time=33.663..96.225 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4053.74 rows=228903 width=0) (actual time=22.912..22.912 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=124135.29..124600.27 rows=382 width=103) (actual time=1629.566..1629.566 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..434.25 rows=10000 width=71) (actual time=0.675..4.530 rows=8449 loops=1)
         ->  Sort  (cost=124135.29..124136.25 rows=382 width=36) (actual time=1624.528..1624.528 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=124110.32..124118.91 rows=382 width=36) (actual time=1624.061..1624.519 rows=1 loops=1)
                     ->  HashAggregate  (cost=124110.32..124115.09 rows=382 width=16) (actual time=1624.060..1624.518 rows=1 loops=1)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=4110.97..120104.51 rows=228903 width=16) (actual time=47.772..1137.252 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4053.74 rows=228903 width=0) (actual time=37.125..37.125 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 1629.645 ms
(23 rows)

DROP VIEW
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246537.44..246538.66 rows=1 width=103) (actual time=649.850..649.850 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122402.14..122402.15 rows=1 width=32) (actual time=245.628..245.628 rows=1 loops=1)
           ->  HashAggregate  (cost=122393.54..122397.36 rows=382 width=16) (actual time=243.851..245.017 rows=10000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=4110.97..120104.51 rows=228903 width=16) (actual time=33.372..96.023 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4053.74 rows=228903 width=0) (actual time=22.648..22.648 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=124135.29..124600.27 rows=382 width=103) (actual time=649.849..649.849 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..434.25 rows=10000 width=71) (actual time=0.020..1.668 rows=8449 loops=1)
         ->  Sort  (cost=124135.29..124136.25 rows=382 width=36) (actual time=647.740..647.740 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=124110.32..124118.91 rows=382 width=36) (actual time=647.271..647.737 rows=1 loops=1)
                     ->  HashAggregate  (cost=124110.32..124115.09 rows=382 width=16) (actual time=647.270..647.735 rows=1 loops=1)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=4110.97..120104.51 rows=228903 width=16) (actual time=36.500..239.519 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4053.74 rows=228903 width=0) (actual time=26.761..26.761 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 649.930 ms
(23 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=37151.33..37151.33 rows=1 width=40) (actual time=1107.136..1107.136 rows=1 loops=1)
   ->  Sort  (cost=37151.33..37158.80 rows=2990 width=40) (actual time=1107.135..1107.135 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=36359.03..37136.38 rows=2990 width=40) (actual time=1059.283..1104.265 rows=18220 loops=1)
               ->  Sort  (cost=36359.03..36508.52 rows=59796 width=40) (actual time=1059.263..1066.792 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Merge Join  (cost=348.34..31614.89 rows=59796 width=40) (actual time=6.885..298.522 rows=117930 loops=1)
                           Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                           ->  Index Scan using part_pkey on part  (cost=0.00..11202.26 rows=29898 width=40) (actual time=0.630..102.397 rows=29492 loops=1)
                                 Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                 Rows Removed by Filter: 170508
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.00..18740.30 rows=400000 width=8) (actual time=6.244..145.232 rows=799673 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.941..5.172 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
 Total runtime: 1107.215 ms
(22 rows)

SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=37151.33..37151.33 rows=1 width=40) (actual time=1066.732..1066.733 rows=1 loops=1)
   ->  Sort  (cost=37151.33..37158.80 rows=2990 width=40) (actual time=1066.730..1066.730 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=36359.03..37136.38 rows=2990 width=40) (actual time=1019.038..1064.010 rows=18220 loops=1)
               ->  Sort  (cost=36359.03..36508.52 rows=59796 width=40) (actual time=1019.018..1026.338 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Merge Join  (cost=348.34..31614.89 rows=59796 width=40) (actual time=2.926..258.529 rows=117930 loops=1)
                           Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                           ->  Index Scan using part_pkey on part  (cost=0.00..11202.26 rows=29898 width=40) (actual time=0.025..80.856 rows=29492 loops=1)
                                 Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                 Rows Removed by Filter: 170508
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.00..18740.30 rows=400000 width=8) (actual time=2.892..128.775 rows=799673 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.111..2.856 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
 Total runtime: 1066.785 ms
(22 rows)

query 17 run 1
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=179386.70..179386.71 rows=1 width=8) (actual time=3518.373..3518.374 rows=1 loops=1)
   ->  Aggregate  (cost=179386.70..179386.71 rows=1 width=8) (actual time=3518.372..3518.372 rows=1 loops=1)
         ->  Nested Loop  (cost=7107.05..179381.61 rows=2033 width=8) (actual time=66.991..3517.856 rows=592 loops=1)
               Join Filter: (part.p_partkey = public.lineitem.l_partkey)
               ->  Merge Join  (cost=7107.05..178706.24 rows=203 width=40) (actual time=66.005..3398.858 rows=208 loops=1)
                     Merge Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=0.00..169164.45 rows=194533 width=9) (actual time=1.223..3330.561 rows=199276 loops=1)
                           ->  Index Only Scan using q17_idx_1 on lineitem  (cost=0.00..136240.02 rows=6001287 width=9) (actual time=1.183..960.223 rows=5979358 loops=1)
                                 Heap Fetches: 0
                     ->  Sort  (cost=7107.05..7107.58 rows=209 width=4) (actual time=54.210..54.316 rows=208 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 34kB
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=209 width=4) (actual time=0.816..54.129 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.00..3.20 rows=10 width=17) (actual time=0.522..0.569 rows=3 loops=208)
                     Index Cond: ((l_partkey = public.lineitem.l_partkey) AND (l_quantity < ((0.2 * avg(public.lineitem.l_quantity)))))
                     Heap Fetches: 0
 Total runtime: 3518.424 ms
(19 rows)

SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=179386.70..179386.71 rows=1 width=8) (actual time=3209.952..3209.952 rows=1 loops=1)
   ->  Aggregate  (cost=179386.70..179386.71 rows=1 width=8) (actual time=3209.952..3209.952 rows=1 loops=1)
         ->  Nested Loop  (cost=7107.05..179381.61 rows=2033 width=8) (actual time=42.850..3209.765 rows=592 loops=1)
               Join Filter: (part.p_partkey = public.lineitem.l_partkey)
               ->  Merge Join  (cost=7107.05..178706.24 rows=203 width=40) (actual time=42.824..3207.206 rows=208 loops=1)
                     Merge Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=0.00..169164.45 rows=194533 width=9) (actual time=0.069..3161.897 rows=199276 loops=1)
                           ->  Index Only Scan using q17_idx_1 on lineitem  (cost=0.00..136240.02 rows=6001287 width=9) (actual time=0.036..821.886 rows=5979358 loops=1)
                                 Heap Fetches: 0
                     ->  Sort  (cost=7107.05..7107.58 rows=209 width=4) (actual time=32.858..32.890 rows=208 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 34kB
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=209 width=4) (actual time=0.127..32.805 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.00..3.20 rows=10 width=17) (actual time=0.011..0.011 rows=3 loops=208)
                     Index Cond: ((l_partkey = public.lineitem.l_partkey) AND (l_quantity < ((0.2 * avg(public.lineitem.l_quantity)))))
                     Heap Fetches: 0
 Total runtime: 3210.001 ms
(19 rows)

query 18 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=933110.92..933113.67 rows=100 width=44) (actual time=3039.664..3039.690 rows=9 loops=1)
   ->  GroupAggregate  (cost=933110.92..1015610.92 rows=3000000 width=44) (actual time=3039.664..3039.687 rows=9 loops=1)
         ->  Sort  (cost=933110.92..940610.92 rows=3000000 width=44) (actual time=3039.656..3039.661 rows=63 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 29kB
               ->  Hash Join  (cost=6975.88..544442.95 rows=3000000 width=44) (actual time=752.161..3039.527 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=3.88..466220.95 rows=3000000 width=25) (actual time=688.714..2976.038 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.00..283122.86 rows=750000 width=24) (actual time=530.599..2373.549 rows=9 loops=1)
                                 Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..56864.33 rows=1500000 width=20) (actual time=0.580..318.430 rows=1201687 loops=1)
                                 ->  Materialize  (cost=0.00..203754.50 rows=1500322 width=4) (actual time=423.509..1986.622 rows=9 loops=1)
                                       ->  GroupAggregate  (cost=0.00..185000.48 rows=1500322 width=9) (actual time=423.507..1986.610 rows=9 loops=1)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             Rows Removed by Filter: 1499991
                                             ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.00..136240.02 rows=6001287 width=9) (actual time=0.878..676.496 rows=6001215 loops=1)
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.00..136240.02 rows=6001287 width=9) (actual time=0.009..391.555 rows=4807580 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=63.423..63.423 rows=150000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 8204kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.003..43.262 rows=150000 loops=1)
 Total runtime: 3039.768 ms
(24 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=933110.92..933113.67 rows=100 width=44) (actual time=2771.265..2771.289 rows=9 loops=1)
   ->  GroupAggregate  (cost=933110.92..1015610.92 rows=3000000 width=44) (actual time=2771.263..2771.287 rows=9 loops=1)
         ->  Sort  (cost=933110.92..940610.92 rows=3000000 width=44) (actual time=2771.060..2771.061 rows=63 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 29kB
               ->  Hash Join  (cost=6975.88..544442.95 rows=3000000 width=44) (actual time=665.403..2770.938 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=3.88..466220.95 rows=3000000 width=25) (actual time=621.621..2727.115 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.00..283122.86 rows=750000 width=24) (actual time=463.769..2125.483 rows=9 loops=1)
                                 Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..56864.33 rows=1500000 width=20) (actual time=0.015..205.881 rows=1201687 loops=1)
                                 ->  Materialize  (cost=0.00..203754.50 rows=1500322 width=4) (actual time=392.085..1854.235 rows=9 loops=1)
                                       ->  GroupAggregate  (cost=0.00..185000.48 rows=1500322 width=9) (actual time=392.084..1854.227 rows=9 loops=1)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             Rows Removed by Filter: 1499991
                                             ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.00..136240.02 rows=6001287 width=9) (actual time=0.030..554.502 rows=6001215 loops=1)
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.00..136240.02 rows=6001287 width=9) (actual time=0.009..391.795 rows=4807580 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=43.762..43.762 rows=150000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 8204kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.003..25.317 rows=150000 loops=1)
 Total runtime: 2771.357 ms
(24 rows)

query 19 run 1
SET
SET


 Limit  (cost=227927.33..227927.34 rows=1 width=12) (actual time=1450.463..1450.464 rows=1 loops=1)
   ->  Aggregate  (cost=227927.33..227927.34 rows=1 width=12) (actual time=1450.461..1450.461 rows=1 loops=1)
         ->  Merge Join  (cost=3.83..227926.49 rows=112 width=12) (actual time=10.560..1450.157 rows=111 loops=1)
               Merge Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               Rows Removed by Join Filter: 26985
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.00..212613.44 rows=111074 width=21) (actual time=0.447..1317.029 rows=89765 loops=1)
                     Index Cond: (l_shipinstruct = 'DELIVER IN PERSON'::bpchar)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
                     Rows Removed by Filter: 1410264
                     Heap Fetches: 0
               ->  Index Scan using part_pkey on part  (cost=0.00..11702.26 rows=100883 width=30) (actual time=0.624..106.328 rows=65795 loops=1)
                     Filter: ((p_size >= 1) AND (((p_size <= 5) AND (p_size >= 1)) OR ((p_size <= 10) AND (p_size >= 1)) OR ((p_size <= 15) AND (p_size >= 1))))
                     Rows Removed by Filter: 151720
 Total runtime: 1450.516 ms
(15 rows)

SET
SET


 Limit  (cost=227927.33..227927.34 rows=1 width=12) (actual time=1069.876..1069.876 rows=1 loops=1)
   ->  Aggregate  (cost=227927.33..227927.34 rows=1 width=12) (actual time=1069.876..1069.876 rows=1 loops=1)
         ->  Merge Join  (cost=3.83..227926.49 rows=112 width=12) (actual time=5.454..1069.660 rows=111 loops=1)
               Merge Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               Rows Removed by Join Filter: 26985
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.00..212613.44 rows=111074 width=21) (actual time=0.082..966.750 rows=89765 loops=1)
                     Index Cond: (l_shipinstruct = 'DELIVER IN PERSON'::bpchar)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
                     Rows Removed by Filter: 1410264
                     Heap Fetches: 0
               ->  Index Scan using part_pkey on part  (cost=0.00..11702.26 rows=100883 width=30) (actual time=0.017..81.487 rows=65795 loops=1)
                     Filter: ((p_size >= 1) AND (((p_size <= 5) AND (p_size >= 1)) OR ((p_size <= 10) AND (p_size >= 1)) OR ((p_size <= 15) AND (p_size >= 1))))
                     Rows Removed by Filter: 151720
 Total runtime: 1069.932 ms
(15 rows)

query 20 run 1
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170766.01..170766.01 rows=1 width=51) (actual time=3501.118..3501.118 rows=1 loops=1)
   ->  Sort  (cost=170766.01..170766.51 rows=200 width=51) (actual time=3501.117..3501.117 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=159364.15..170765.01 rows=200 width=51) (actual time=3316.469..3500.926 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.328..3.645 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.315..2.755 rows=10000 loops=1)
               ->  Materialize  (cost=159364.15..170279.71 rows=6 width=8) (actual time=7.243..7.708 rows=4371 loops=438)
                     ->  Merge Join  (cost=159364.15..170279.68 rows=6 width=8) (actual time=3172.303..3313.406 rows=5898 loops=1)
                           Merge Cond: (partsupp.ps_partkey = lineitem.l_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  Nested Loop  (cost=0.00..10370.27 rows=8121 width=16) (actual time=0.477..61.662 rows=8748 loops=1)
                                 ->  Index Only Scan using q20_idx_2 on part  (cost=0.00..6454.28 rows=2020 width=4) (actual time=0.261..32.910 rows=2187 loops=1)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 197813
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.00..1.90 rows=4 width=12) (actual time=0.012..0.012 rows=4 loops=2187)
                                       Index Cond: (ps_partkey = part.p_partkey)
                                       Heap Fetches: 0
                           ->  Sort  (cost=159364.15..159593.82 rows=91869 width=40) (actual time=3171.767..3216.797 rows=562387 loops=1)
                                 Sort Key: lineitem.l_partkey
                                 Sort Method: external sort  Disk: 14912kB
                                 ->  HashAggregate  (cost=149723.74..150872.11 rows=91869 width=13) (actual time=2523.501..2744.134 rows=544869 loops=1)
                                       ->  Bitmap Heap Scan on lineitem  (cost=16493.26..142833.58 rows=918688 width=13) (actual time=162.242..1976.790 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16263.59 rows=918688 width=0) (actual time=143.113..143.113 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Total runtime: 3504.541 ms
(36 rows)

SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170766.01..170766.01 rows=1 width=51) (actual time=1934.090..1934.091 rows=1 loops=1)
   ->  Sort  (cost=170766.01..170766.51 rows=200 width=51) (actual time=1934.088..1934.088 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=159364.15..170765.01 rows=200 width=51) (actual time=1751.135..1933.920 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.016..2.335 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.004..0.595 rows=10000 loops=1)
               ->  Materialize  (cost=159364.15..170279.71 rows=6 width=8) (actual time=3.728..4.134 rows=4371 loops=438)
                     ->  Merge Join  (cost=159364.15..170279.68 rows=6 width=8) (actual time=1632.956..1748.550 rows=5898 loops=1)
                           Merge Cond: (partsupp.ps_partkey = lineitem.l_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  Nested Loop  (cost=0.00..10370.27 rows=8121 width=16) (actual time=0.052..36.568 rows=8748 loops=1)
                                 ->  Index Only Scan using q20_idx_2 on part  (cost=0.00..6454.28 rows=2020 width=4) (actual time=0.033..26.152 rows=2187 loops=1)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 197813
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.00..1.90 rows=4 width=12) (actual time=0.004..0.004 rows=4 loops=2187)
                                       Index Cond: (ps_partkey = part.p_partkey)
                                       Heap Fetches: 0
                           ->  Sort  (cost=159364.15..159593.82 rows=91869 width=40) (actual time=1632.847..1677.531 rows=562387 loops=1)
                                 Sort Key: lineitem.l_partkey
                                 Sort Method: external sort  Disk: 14912kB
                                 ->  HashAggregate  (cost=149723.74..150872.11 rows=91869 width=13) (actual time=976.182..1196.561 rows=544869 loops=1)
                                       ->  Bitmap Heap Scan on lineitem  (cost=16493.26..142833.58 rows=918688 width=13) (actual time=125.780..518.137 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16263.59 rows=918688 width=0) (actual time=107.343..107.343 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Total runtime: 1937.111 ms
(36 rows)

query 21 run 1
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=302228.84..302228.85 rows=1 width=26) (actual time=1571.053..1571.061 rows=100 loops=1)
   ->  Sort  (cost=302228.84..302228.85 rows=1 width=26) (actual time=1571.053..1571.057 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=302228.82..302228.83 rows=1 width=26) (actual time=1570.348..1570.387 rows=421 loops=1)
               ->  Nested Loop Anti Join  (cost=166297.09..302228.82 rows=1 width=26) (actual time=1133.314..1568.697 rows=4227 loops=1)
                     ->  Nested Loop Semi Join  (cost=166297.09..302223.37 rows=1 width=34) (actual time=1133.216..1466.114 rows=73962 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 8252
                           ->  Merge Join  (cost=166297.09..195628.21 rows=38655 width=38) (actual time=1133.202..1345.717 rows=76644 loops=1)
                                 Merge Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Sort  (cost=166297.08..166497.02 rows=79977 width=34) (actual time=1132.782..1141.523 rows=159165 loops=1)
                                       Sort Key: l1.l_orderkey
                                       Sort Method: quicksort  Memory: 18579kB
                                       ->  Hash Join  (cost=239.42..159784.03 rows=79977 width=34) (actual time=6.089..1107.754 rows=159165 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Index Only Scan using q21_idx_1 on lineitem l1  (cost=0.00..151243.23 rows=2000429 width=8) (actual time=0.962..855.019 rows=3793296 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 2207919
                                                   Heap Fetches: 0
                                             ->  Hash  (cost=234.42..234.42 rows=400 width=30) (actual time=5.082..5.082 rows=421 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 27kB
                                                   ->  Nested Loop  (cost=7.35..234.42 rows=400 width=30) (actual time=1.179..4.991 rows=421 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=7.35..229.11 rows=400 width=34) (actual time=1.163..4.902 rows=421 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.25 rows=400 width=0) (actual time=1.132..1.132 rows=421 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.00..26733.83 rows=725150 width=4) (actual time=0.414..135.704 rows=733203 loops=1)
                                       Index Cond: (o_orderstatus = 'F'::bpchar)
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.00..2.71 rows=4 width=8) (actual time=0.001..0.001 rows=1 loops=76644)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
                     ->  Index Only Scan using q21_idx_1 on lineitem l3  (cost=0.00..2.72 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=73962)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 2
                           Heap Fetches: 0
 Total runtime: 1571.167 ms
(42 rows)

SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=302228.84..302228.85 rows=1 width=26) (actual time=1403.449..1403.457 rows=100 loops=1)
   ->  Sort  (cost=302228.84..302228.85 rows=1 width=26) (actual time=1403.449..1403.451 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=302228.82..302228.83 rows=1 width=26) (actual time=1402.955..1402.993 rows=421 loops=1)
               ->  Nested Loop Anti Join  (cost=166297.09..302228.82 rows=1 width=26) (actual time=995.131..1401.528 rows=4227 loops=1)
                     ->  Nested Loop Semi Join  (cost=166297.09..302223.37 rows=1 width=34) (actual time=995.038..1299.768 rows=73962 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 8252
                           ->  Merge Join  (cost=166297.09..195628.21 rows=38655 width=38) (actual time=995.023..1182.772 rows=76644 loops=1)
                                 Merge Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Sort  (cost=166297.08..166497.02 rows=79977 width=34) (actual time=994.971..1003.554 rows=159165 loops=1)
                                       Sort Key: l1.l_orderkey
                                       Sort Method: quicksort  Memory: 18579kB
                                       ->  Hash Join  (cost=239.42..159784.03 rows=79977 width=34) (actual time=0.913..973.115 rows=159165 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Index Only Scan using q21_idx_1 on lineitem l1  (cost=0.00..151243.23 rows=2000429 width=8) (actual time=0.028..729.118 rows=3793296 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 2207919
                                                   Heap Fetches: 0
                                             ->  Hash  (cost=234.42..234.42 rows=400 width=30) (actual time=0.866..0.866 rows=421 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 27kB
                                                   ->  Nested Loop  (cost=7.35..234.42 rows=400 width=30) (actual time=0.074..0.809 rows=421 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=7.35..229.11 rows=400 width=34) (actual time=0.067..0.740 rows=421 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.25 rows=400 width=0) (actual time=0.049..0.049 rows=421 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.00..26733.83 rows=725150 width=4) (actual time=0.046..112.598 rows=733203 loops=1)
                                       Index Cond: (o_orderstatus = 'F'::bpchar)
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.00..2.71 rows=4 width=8) (actual time=0.001..0.001 rows=1 loops=76644)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
                     ->  Index Only Scan using q21_idx_1 on lineitem l3  (cost=0.00..2.72 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=73962)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 2
                           Heap Fetches: 0
 Total runtime: 1403.771 ms
(42 rows)

query 22 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15477.16..15477.16 rows=1 width=22) (actual time=252.127..252.127 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.45..7546.46 rows=1 width=6) (actual time=119.918..119.918 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..7534.50 rows=4779 width=6) (actual time=0.007..104.295 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  Sort  (cost=7930.70..7932.55 rows=738 width=22) (actual time=252.120..252.120 rows=1 loops=1)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7915.94..7927.01 rows=738 width=22) (actual time=252.087..252.088 rows=7 loops=1)
               ->  Nested Loop Anti Join  (cost=0.00..7910.41 rows=738 width=22) (actual time=119.964..248.577 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=119.944..176.175 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.00..2.28 rows=17 width=4) (actual time=0.003..0.003 rows=1 loops=19077)
                           Index Cond: (o_custkey = public.customer.c_custkey)
                           Heap Fetches: 0
 Total runtime: 252.177 ms
(18 rows)

SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15477.16..15477.16 rows=1 width=22) (actual time=200.429..200.430 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.45..7546.46 rows=1 width=6) (actual time=98.563..98.563 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..7534.50 rows=4779 width=6) (actual time=0.006..83.718 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  Sort  (cost=7930.70..7932.55 rows=738 width=22) (actual time=200.429..200.429 rows=1 loops=1)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7915.94..7927.01 rows=738 width=22) (actual time=200.400..200.403 rows=7 loops=1)
               ->  Nested Loop Anti Join  (cost=0.00..7910.41 rows=738 width=22) (actual time=98.602..197.281 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=98.587..152.481 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.00..2.28 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                           Index Cond: (o_custkey = public.customer.c_custkey)
                           Heap Fetches: 0
 Total runtime: 200.474 ms
(18 rows)

