query 1 run 1
SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4245766.81..4245766.81 rows=1 width=25) (actual time=180202.987..180202.987 rows=1 loops=1)
   ->  Sort  (cost=4245766.81..4245766.82 rows=6 width=25) (actual time=180202.986..180202.986 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=4245766.67..4245766.78 rows=6 width=25) (actual time=180202.941..180202.946 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..1874970.15 rows=59269913 width=25) (actual time=0.551..12634.699 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Total runtime: 180203.107 ms
(9 rows)

SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4245766.81..4245766.81 rows=1 width=25) (actual time=178539.468..178539.468 rows=1 loops=1)
   ->  Sort  (cost=4245766.81..4245766.82 rows=6 width=25) (actual time=178539.468..178539.468 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=4245766.67..4245766.78 rows=6 width=25) (actual time=178539.431..178539.436 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..1874970.15 rows=59269913 width=25) (actual time=0.032..10906.880 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Total runtime: 178539.530 ms
(9 rows)

query 2 run 1
SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=817913.08..817913.08 rows=1 width=192) (actual time=1351.314..1351.323 rows=100 loops=1)
   ->  Sort  (cost=817913.08..817913.08 rows=1 width=192) (actual time=1351.313..1351.316 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Nested Loop  (cost=48.03..817913.07 rows=1 width=192) (actual time=6.637..1349.078 rows=4737 loops=1)
               Join Filter: (public.nation.n_nationkey = public.supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.007..0.013 rows=5 loops=1)
                     Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.004 rows=25 loops=1)
               ->  Materialize  (cost=48.03..817910.37 rows=1 width=170) (actual time=0.834..269.112 rows=4737 loops=5)
                     ->  Nested Loop  (cost=48.03..817910.36 rows=1 width=170) (actual time=4.166..1341.582 rows=4737 loops=1)
                           ->  Nested Loop  (cost=48.03..817906.38 rows=1 width=34) (actual time=3.441..1091.464 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.00..54666.30 rows=7708 width=30) (actual time=0.999..226.789 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=48.03..99.01 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=48.02..48.03 rows=1 width=6) (actual time=0.105..0.105 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=1.56..48.01 rows=4 width=6) (actual time=0.094..0.103 rows=1 loops=8046)
                                                     Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=1.56..46.72 rows=18 width=10) (actual time=0.078..0.101 rows=4 loops=8046)
                                                           Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                                           ->  Nested Loop  (cost=0.00..44.91 rows=18 width=10) (actual time=0.077..0.099 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.00..3.18 rows=18 width=10) (actual time=0.069..0.070 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.00..2.31 rows=1 width=8) (actual time=0.007..0.007 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.018..0.018 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8) (actual time=0.004..0.009 rows=25 loops=1)
                                       SubPlan 1
                                         ->  Aggregate  (cost=48.02..48.03 rows=1 width=6) (actual time=0.105..0.105 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=1.56..48.01 rows=4 width=6) (actual time=0.094..0.103 rows=1 loops=8046)
                                                     Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=1.56..46.72 rows=18 width=10) (actual time=0.078..0.101 rows=4 loops=8046)
                                                           Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                                           ->  Nested Loop  (cost=0.00..44.91 rows=18 width=10) (actual time=0.077..0.099 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.00..3.18 rows=18 width=10) (actual time=0.069..0.070 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.00..2.31 rows=1 width=8) (actual time=0.007..0.007 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.018..0.018 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8) (actual time=0.004..0.009 rows=25 loops=1)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.97 rows=1 width=144) (actual time=0.052..0.052 rows=1 loops=4737)
                                 Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
 Total runtime: 1351.621 ms
(68 rows)

SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=817913.08..817913.08 rows=1 width=192) (actual time=287.280..287.291 rows=100 loops=1)
   ->  Sort  (cost=817913.08..817913.08 rows=1 width=192) (actual time=287.280..287.285 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Nested Loop  (cost=48.03..817913.07 rows=1 width=192) (actual time=0.284..285.582 rows=4737 loops=1)
               Join Filter: (public.nation.n_nationkey = public.supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.007..0.013 rows=5 loops=1)
                     Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
               ->  Materialize  (cost=48.03..817910.37 rows=1 width=170) (actual time=0.031..56.562 rows=4737 loops=5)
                     ->  Nested Loop  (cost=48.03..817910.36 rows=1 width=170) (actual time=0.151..280.234 rows=4737 loops=1)
                           ->  Nested Loop  (cost=48.03..817906.38 rows=1 width=34) (actual time=0.134..263.568 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.00..54666.30 rows=7708 width=30) (actual time=0.036..105.068 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=48.03..99.01 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=48.02..48.03 rows=1 width=6) (actual time=0.018..0.018 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=1.56..48.01 rows=4 width=6) (actual time=0.013..0.017 rows=1 loops=8046)
                                                     Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=1.56..46.72 rows=18 width=10) (actual time=0.007..0.015 rows=4 loops=8046)
                                                           Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                                           ->  Nested Loop  (cost=0.00..44.91 rows=18 width=10) (actual time=0.007..0.014 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.00..3.18 rows=18 width=10) (actual time=0.004..0.005 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.00..2.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.006..0.006 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.004 rows=25 loops=1)
                                       SubPlan 1
                                         ->  Aggregate  (cost=48.02..48.03 rows=1 width=6) (actual time=0.018..0.018 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=1.56..48.01 rows=4 width=6) (actual time=0.013..0.017 rows=1 loops=8046)
                                                     Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=1.56..46.72 rows=18 width=10) (actual time=0.007..0.015 rows=4 loops=8046)
                                                           Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                                           ->  Nested Loop  (cost=0.00..44.91 rows=18 width=10) (actual time=0.007..0.014 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.00..3.18 rows=18 width=10) (actual time=0.004..0.005 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.00..2.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.006..0.006 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.004 rows=25 loops=1)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.97 rows=1 width=144) (actual time=0.003..0.003 rows=1 loops=4737)
                                 Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
 Total runtime: 287.598 ms
(68 rows)

query 3 run 1
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3552496.85..3552496.87 rows=10 width=24) (actual time=27365.416..27365.416 rows=10 loops=1)
   ->  Sort  (cost=3552496.85..3560501.67 rows=3201929 width=24) (actual time=27365.415..27365.415 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=3395251.27..3483304.32 rows=3201929 width=24) (actual time=27143.849..27345.839 rows=113934 loops=1)
               ->  Sort  (cost=3395251.27..3403256.09 rows=3201929 width=24) (actual time=27143.833..27167.313 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: external sort  Disk: 10464kB
                     ->  Hash Join  (cost=647345.10..3002369.68 rows=3201929 width=24) (actual time=7760.727..26976.375 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1874970.15 rows=32617370 width=16) (actual time=0.004..11830.122 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 27451823
                           ->  Hash  (cost=621748.92..621748.92 rows=1472494 width=12) (actual time=7758.500..7758.500 rows=1451805 loops=1)
                                 Buckets: 131072  Batches: 4  Memory Usage: 15620kB
                                 ->  Hash Join  (cost=58501.89..621748.92 rows=1472494 width=12) (actual time=511.142..7524.368 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..448767.81 rows=7254857 width=16) (actual time=0.002..2303.440 rows=7239437 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 7760563
                                       ->  Hash  (cost=54696.39..54696.39 rows=304440 width=4) (actual time=511.110..511.110 rows=300276 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 10557kB
                                             ->  Seq Scan on customer  (cost=0.00..54696.39 rows=304440 width=4) (actual time=0.002..465.327 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 1199724
 Total runtime: 27366.868 ms
(26 rows)

SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3552496.85..3552496.87 rows=10 width=24) (actual time=24585.734..24585.735 rows=10 loops=1)
   ->  Sort  (cost=3552496.85..3560501.67 rows=3201929 width=24) (actual time=24585.733..24585.734 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=3395251.27..3483304.32 rows=3201929 width=24) (actual time=24359.579..24565.796 rows=113934 loops=1)
               ->  Sort  (cost=3395251.27..3403256.09 rows=3201929 width=24) (actual time=24359.564..24383.429 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: external sort  Disk: 10464kB
                     ->  Hash Join  (cost=647345.10..3002369.68 rows=3201929 width=24) (actual time=6927.925..24193.886 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1874970.15 rows=32617370 width=16) (actual time=0.003..9929.678 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 27451823
                           ->  Hash  (cost=621748.92..621748.92 rows=1472494 width=12) (actual time=6927.125..6927.125 rows=1451805 loops=1)
                                 Buckets: 131072  Batches: 4  Memory Usage: 15620kB
                                 ->  Hash Join  (cost=58501.89..621748.92 rows=1472494 width=12) (actual time=340.536..6705.042 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..448767.81 rows=7254857 width=16) (actual time=0.001..1859.538 rows=7239437 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 7760563
                                       ->  Hash  (cost=54696.39..54696.39 rows=304440 width=4) (actual time=340.507..340.507 rows=300276 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 10557kB
                                             ->  Seq Scan on customer  (cost=0.00..54696.39 rows=304440 width=4) (actual time=0.002..303.464 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 1199724
 Total runtime: 24587.209 ms
(26 rows)

query 4 run 1
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1226386.48..1226386.48 rows=1 width=16) (actual time=16504.897..16504.898 rows=1 loops=1)
   ->  Sort  (cost=1226386.48..1226386.48 rows=1 width=16) (actual time=16504.896..16504.896 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1226386.46..1226386.47 rows=1 width=16) (actual time=16504.863..16504.865 rows=5 loops=1)
               ->  Merge Semi Join  (cost=328521.71..1223715.65 rows=534161 width=16) (actual time=4935.962..16380.166 rows=513822 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=328521.51..329857.22 rows=534284 width=20) (actual time=4934.446..5034.712 rows=560424 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: external sort  Disk: 16448kB
                           ->  Bitmap Heap Scan on orders  (cost=8409.48..277691.74 rows=534284 width=20) (actual time=163.701..4576.165 rows=560424 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8275.91 rows=534284 width=0) (actual time=115.092..115.092 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using q4_idx_1 on lineitem  (cost=0.00..835412.67 rows=19995391 width=4) (actual time=1.469..9031.171 rows=37929279 loops=1)
 Total runtime: 16507.223 ms
(16 rows)

SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1226386.48..1226386.48 rows=1 width=16) (actual time=10873.449..10873.450 rows=1 loops=1)
   ->  Sort  (cost=1226386.48..1226386.48 rows=1 width=16) (actual time=10873.447..10873.447 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1226386.46..1226386.47 rows=1 width=16) (actual time=10873.416..10873.417 rows=5 loops=1)
               ->  Merge Semi Join  (cost=328521.71..1223715.65 rows=534161 width=16) (actual time=1783.810..10755.484 rows=513822 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=328521.51..329857.22 rows=534284 width=20) (actual time=1783.744..1875.257 rows=560424 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: external sort  Disk: 16448kB
                           ->  Bitmap Heap Scan on orders  (cost=8409.48..277691.74 rows=534284 width=20) (actual time=160.745..1481.783 rows=560424 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8275.91 rows=534284 width=0) (actual time=112.014..112.014 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using q4_idx_1 on lineitem  (cost=0.00..835412.67 rows=19995391 width=4) (actual time=0.047..6676.244 rows=37929279 loops=1)
 Total runtime: 10875.999 ms
(16 rows)

query 5 run 1
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2161370.86..2161370.86 rows=1 width=38) (actual time=18374.710..18374.710 rows=1 loops=1)
   ->  Sort  (cost=2161370.86..2161370.92 rows=25 width=38) (actual time=18374.709..18374.709 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2161370.49..2161370.74 rows=25 width=38) (actual time=18374.694..18374.694 rows=5 loops=1)
               ->  Hash Join  (cost=457449.81..2160629.23 rows=74126 width=38) (actual time=7067.451..18303.215 rows=72033 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Merge Join  (cost=452728.81..2118105.79 rows=1853059 width=50) (actual time=7024.084..17377.888 rows=1815327 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Sort  (cost=452728.64..453887.07 rows=463371 width=38) (actual time=7022.277..7087.409 rows=453399 loops=1)
                                 Sort Key: orders.o_orderkey
                                 Sort Method: external sort  Disk: 22168kB
                                 ->  Hash Join  (cost=99778.48..409121.24 rows=463371 width=38) (actual time=1075.008..6737.613 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=36454.85..332475.69 rows=2316856 width=8) (actual time=497.494..4365.145 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..35875.63 rows=2316856 width=0) (actual time=442.245..442.245 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59573.76..59573.76 rows=299990 width=38) (actual time=577.335..577.335 rows=299436 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 21055kB
                                             ->  Hash Join  (cost=2.53..59573.76 rows=299990 width=38) (actual time=0.027..520.787 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50946.51 rows=1499951 width=8) (actual time=0.003..361.364 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.020..0.020 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.014..0.019 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.001 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                           ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.00..1494564.78 rows=59986172 width=20) (actual time=1.750..7319.252 rows=59986036 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=42.885..42.885 rows=100000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 3907kB
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.002..29.836 rows=100000 loops=1)
 Total runtime: 18377.938 ms
(39 rows)

SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2161370.86..2161370.86 rows=1 width=38) (actual time=15050.641..15050.641 rows=1 loops=1)
   ->  Sort  (cost=2161370.86..2161370.92 rows=25 width=38) (actual time=15050.639..15050.639 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2161370.49..2161370.74 rows=25 width=38) (actual time=15050.624..15050.625 rows=5 loops=1)
               ->  Hash Join  (cost=457449.81..2160629.23 rows=74126 width=38) (actual time=4339.493..14982.587 rows=72033 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Merge Join  (cost=452728.81..2118105.79 rows=1853059 width=50) (actual time=4303.429..14099.872 rows=1815327 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Sort  (cost=452728.64..453887.07 rows=463371 width=38) (actual time=4303.328..4364.815 rows=453399 loops=1)
                                 Sort Key: orders.o_orderkey
                                 Sort Method: external sort  Disk: 22168kB
                                 ->  Hash Join  (cost=99778.48..409121.24 rows=463371 width=38) (actual time=899.812..4054.634 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=36454.85..332475.69 rows=2316856 width=8) (actual time=464.659..1947.815 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..35875.63 rows=2316856 width=0) (actual time=409.365..409.365 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59573.76..59573.76 rows=299990 width=38) (actual time=435.078..435.078 rows=299436 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 21055kB
                                             ->  Hash Join  (cost=2.53..59573.76 rows=299990 width=38) (actual time=0.025..384.225 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50946.51 rows=1499951 width=8) (actual time=0.002..230.350 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.018..0.018 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.013..0.016 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                           ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.00..1494564.78 rows=59986172 width=20) (actual time=0.057..6796.532 rows=59986036 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=35.683..35.683 rows=100000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 3907kB
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.002..22.512 rows=100000 loops=1)
 Total runtime: 15053.998 ms
(39 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1167018.30..1167018.31 rows=1 width=12) (actual time=14030.328..14030.328 rows=1 loops=1)
   ->  Aggregate  (cost=1167018.30..1167018.31 rows=1 width=12) (actual time=14030.327..14030.327 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=227428.01..1161103.62 rows=1182936 width=12) (actual time=1428.031..13288.195 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               Rows Removed by Index Recheck: 21866393
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..227132.28 rows=1182936 width=0) (actual time=1376.344..1376.344 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 14030.365 ms
(8 rows)

SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1167018.30..1167018.31 rows=1 width=12) (actual time=8778.329..8778.329 rows=1 loops=1)
   ->  Aggregate  (cost=1167018.30..1167018.31 rows=1 width=12) (actual time=8778.328..8778.328 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=227428.01..1161103.62 rows=1182936 width=12) (actual time=1284.857..8207.532 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               Rows Removed by Index Recheck: 21866393
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..227132.28 rows=1182936 width=0) (actual time=1234.347..1234.347 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 8778.617 ms
(8 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2654674.05..2654674.05 rows=1 width=68) (actual time=41404.016..41404.017 rows=1 loops=1)
   ->  Sort  (cost=2654674.05..2654822.27 rows=59289 width=68) (actual time=41404.015..41404.015 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2653488.27..2654377.61 rows=59289 width=68) (actual time=41403.881..41403.956 rows=4 loops=1)
               ->  Hash Join  (cost=904247.32..2652598.94 rows=59289 width=68) (actual time=11673.320..41319.125 rows=57794 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=899526.32..2617344.18 rows=1482221 width=76) (actual time=11626.984..40547.292 rows=1448126 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=332862.47..1736144.39 rows=18542595 width=24) (actual time=3147.419..25855.836 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Index Recheck: 30957726
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..328226.82 rows=18542595 width=0) (actual time=3088.703..3088.703 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=538794.86..538794.86 rows=1199039 width=60) (actual time=8478.876..8478.876 rows=1191175 loops=1)
                                 Buckets: 65536  Batches: 4  Memory Usage: 26805kB
                                 ->  Hash Join  (cost=59286.69..538794.86 rows=1199039 width=60) (actual time=520.947..8210.980 rows=1191175 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..411267.85 rows=14999985 width=8) (actual time=0.003..1586.972 rows=15000000 loops=1)
                                       ->  Hash  (cost=57787.94..57787.94 rows=119900 width=60) (actual time=520.923..520.923 rows=119622 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 10748kB
                                             ->  Hash Join  (cost=16.65..57787.94 rows=119900 width=60) (actual time=0.129..493.797 rows=119622 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50946.51 rows=1499951 width=8) (actual time=0.001..354.809 rows=1500000 loops=1)
                                                   ->  Hash  (cost=16.62..16.62 rows=2 width=60) (actual time=0.124..0.124 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Nested Loop  (cost=0.00..16.62 rows=2 width=60) (actual time=0.081..0.122 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 623
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.002 rows=25 loops=1)
                                                               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.000..0.003 rows=25 loops=1)
                     ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=42.984..42.984 rows=100000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 3907kB
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.002..29.712 rows=100000 loops=1)
 Total runtime: 41404.381 ms
(36 rows)

SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2654674.05..2654674.05 rows=1 width=68) (actual time=27885.598..27885.599 rows=1 loops=1)
   ->  Sort  (cost=2654674.05..2654822.27 rows=59289 width=68) (actual time=27885.597..27885.597 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2653488.27..2654377.61 rows=59289 width=68) (actual time=27885.459..27885.536 rows=4 loops=1)
               ->  Hash Join  (cost=904247.32..2652598.94 rows=59289 width=68) (actual time=10237.533..27815.548 rows=57794 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=899526.32..2617344.18 rows=1482221 width=76) (actual time=10199.515..27089.306 rows=1448126 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=332862.47..1736144.39 rows=18542595 width=24) (actual time=2786.954..14287.742 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Index Recheck: 30957726
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..328226.82 rows=18542595 width=0) (actual time=2727.052..2727.052 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=538794.86..538794.86 rows=1199039 width=60) (actual time=7412.237..7412.237 rows=1191175 loops=1)
                                 Buckets: 65536  Batches: 4  Memory Usage: 26805kB
                                 ->  Hash Join  (cost=59286.69..538794.86 rows=1199039 width=60) (actual time=389.672..7155.485 rows=1191175 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..411267.85 rows=14999985 width=8) (actual time=0.003..1184.704 rows=15000000 loops=1)
                                       ->  Hash  (cost=57787.94..57787.94 rows=119900 width=60) (actual time=389.648..389.648 rows=119622 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 10748kB
                                             ->  Hash Join  (cost=16.65..57787.94 rows=119900 width=60) (actual time=0.129..365.668 rows=119622 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50946.51 rows=1499951 width=8) (actual time=0.001..231.161 rows=1500000 loops=1)
                                                   ->  Hash  (cost=16.62..16.62 rows=2 width=60) (actual time=0.124..0.124 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Nested Loop  (cost=0.00..16.62 rows=2 width=60) (actual time=0.082..0.124 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 623
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.003 rows=25 loops=1)
                                                               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.004 rows=25 loops=1)
                     ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=36.123..36.123 rows=100000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 3907kB
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.002..22.524 rows=100000 loops=1)
 Total runtime: 27886.017 ms
(36 rows)

query 8 run 1
SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=710227.83..710227.83 rows=1 width=42) (actual time=13036.931..13036.931 rows=1 loops=1)
   ->  Sort  (cost=710227.83..710229.65 rows=728 width=42) (actual time=13036.930..13036.930 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=710211.45..710224.19 rows=728 width=42) (actual time=13036.917..13036.918 rows=2 loops=1)
               ->  Hash Join  (cost=509443.23..709728.51 rows=24147 width=42) (actual time=8817.766..12990.813 rows=23842 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=509441.67..709274.19 rows=24147 width=20) (actual time=8817.741..12971.753 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=504970.67..704320.25 rows=24147 width=20) (actual time=8776.338..12910.777 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..189386.92 rows=399251 width=20) (actual time=3.936..3869.025 rows=389521 loops=1)
                                       ->  Index Only Scan using q2_idx_1 on part  (cost=0.00..54314.39 rows=13312 width=4) (actual time=2.356..183.546 rows=13011 loops=1)
                                             Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.00..9.83 rows=32 width=24) (actual time=0.222..0.277 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Heap Fetches: 0
                                 ->  Hash  (cost=490086.67..490086.67 rows=907200 width=8) (actual time=8770.381..8770.381 rows=910360 loops=1)
                                       Buckets: 131072  Batches: 2  Memory Usage: 17786kB
                                       ->  Hash Join  (cost=134696.69..490086.67 rows=907200 width=8) (actual time=1490.425..8565.908 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=71373.06..400681.05 rows=4535999 width=12) (actual time=924.835..4711.147 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..70239.06 rows=4535999 width=0) (actual time=869.019..869.019 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59573.76..59573.76 rows=299990 width=4) (actual time=565.570..565.570 rows=299436 loops=1)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 10528kB
                                                   ->  Hash Join  (cost=2.53..59573.76 rows=299990 width=4) (actual time=0.024..520.005 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50946.51 rows=1499951 width=8) (actual time=0.003..360.044 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.018..0.018 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.012..0.017 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=41.391..41.391 rows=100000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 3907kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.001..29.554 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.009..0.009 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.006 rows=25 loops=1)
 Total runtime: 13037.294 ms
(48 rows)

SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=710227.83..710227.83 rows=1 width=42) (actual time=6779.400..6779.400 rows=1 loops=1)
   ->  Sort  (cost=710227.83..710229.65 rows=728 width=42) (actual time=6779.399..6779.399 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=710211.45..710224.19 rows=728 width=42) (actual time=6779.384..6779.385 rows=2 loops=1)
               ->  Hash Join  (cost=509443.23..709728.51 rows=24147 width=42) (actual time=6255.785..6754.634 rows=23842 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=509441.67..709274.19 rows=24147 width=20) (actual time=6255.762..6745.254 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=504970.67..704320.25 rows=24147 width=20) (actual time=6221.255..6694.959 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..189386.92 rows=399251 width=20) (actual time=0.132..273.466 rows=389521 loops=1)
                                       ->  Index Only Scan using q2_idx_1 on part  (cost=0.00..54314.39 rows=13312 width=4) (actual time=0.086..89.566 rows=13011 loops=1)
                                             Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.00..9.83 rows=32 width=24) (actual time=0.006..0.011 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Heap Fetches: 0
                                 ->  Hash  (cost=490086.67..490086.67 rows=907200 width=8) (actual time=6220.665..6220.665 rows=910360 loops=1)
                                       Buckets: 131072  Batches: 2  Memory Usage: 17786kB
                                       ->  Hash Join  (cost=134696.69..490086.67 rows=907200 width=8) (actual time=1283.655..6046.973 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=71373.06..400681.05 rows=4535999 width=12) (actual time=858.677..2493.702 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..70239.06 rows=4535999 width=0) (actual time=803.039..803.039 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59573.76..59573.76 rows=299990 width=4) (actual time=424.960..424.960 rows=299436 loops=1)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 10528kB
                                                   ->  Hash Join  (cost=2.53..59573.76 rows=299990 width=4) (actual time=0.022..384.794 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50946.51 rows=1499951 width=8) (actual time=0.003..230.365 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.017..0.017 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.011..0.014 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.003 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=34.492..34.492 rows=100000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 3907kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.001..22.652 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.008..0.008 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.005 rows=25 loops=1)
 Total runtime: 6779.764 ms
(48 rows)

query 9 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1801452.63..1801452.63 rows=1 width=53) (actual time=74127.191..74127.191 rows=1 loops=1)
   ->  Sort  (cost=1801452.63..1801453.02 rows=155 width=53) (actual time=74127.190..74127.190 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1801449.53..1801451.85 rows=155 width=53) (actual time=74127.095..74127.112 rows=175 loops=1)
               ->  Nested Loop  (cost=68.37..1801446.82 rows=155 width=53) (actual time=5.422..69167.694 rows=3248192 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 77956608
                     ->  Nested Loop  (cost=68.37..1801386.60 rows=155 width=31) (actual time=5.397..58651.558 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=68.37..1800601.87 rows=155 width=31) (actual time=4.824..17734.430 rows=3248192 loops=1)
                                 ->  Merge Join  (cost=68.37..1800243.44 rows=156 width=35) (actual time=4.613..11456.508 rows=3248192 loops=1)
                                       Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                       Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                       Rows Removed by Join Filter: 9744576
                                       ->  Nested Loop  (cost=0.00..1334514.12 rows=3635519 width=33) (actual time=3.712..6403.124 rows=3248192 loops=1)
                                             ->  Index Only Scan using q20_idx_2 on part  (cost=0.00..64484.01 rows=121217 width=4) (actual time=0.253..508.372 rows=108312 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 1891688
                                                   Heap Fetches: 0
                                             ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.00..10.16 rows=32 width=29) (actual time=0.034..0.051 rows=30 loops=108312)
                                                   Index Cond: (l_partkey = part.p_partkey)
                                                   Heap Fetches: 0
                                       ->  Materialize  (cost=0.00..201616.13 rows=8000301 width=14) (actual time=0.857..2389.264 rows=20559501 loops=1)
                                             ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.00..181615.38 rows=8000301 width=14) (actual time=0.853..953.351 rows=7999981 loops=1)
                                                   Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.00..2.29 rows=1 width=8) (actual time=0.001..0.002 rows=1 loops=3248192)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                                       Heap Fetches: 0
                           ->  Index Scan using q21_idx_3 on orders  (cost=0.00..5.05 rows=1 width=8) (actual time=0.012..0.012 rows=1 loops=3248192)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=3248192)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.010 rows=25 loops=1)
 Total runtime: 74127.275 ms
(33 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1801452.63..1801452.63 rows=1 width=53) (actual time=41282.964..41282.964 rows=1 loops=1)
   ->  Sort  (cost=1801452.63..1801453.02 rows=155 width=53) (actual time=41282.963..41282.963 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1801449.53..1801451.85 rows=155 width=53) (actual time=41282.867..41282.891 rows=175 loops=1)
               ->  Nested Loop  (cost=68.37..1801446.82 rows=155 width=53) (actual time=0.221..36826.285 rows=3248192 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 77956608
                     ->  Nested Loop  (cost=68.37..1801386.60 rows=155 width=31) (actual time=0.210..27038.832 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=68.37..1800601.87 rows=155 width=31) (actual time=0.189..12913.575 rows=3248192 loops=1)
                                 ->  Merge Join  (cost=68.37..1800243.44 rows=156 width=35) (actual time=0.171..7196.282 rows=3248192 loops=1)
                                       Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                       Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                       Rows Removed by Join Filter: 9744576
                                       ->  Nested Loop  (cost=0.00..1334514.12 rows=3635519 width=33) (actual time=0.089..2495.131 rows=3248192 loops=1)
                                             ->  Index Only Scan using q20_idx_2 on part  (cost=0.00..64484.01 rows=121217 width=4) (actual time=0.031..448.604 rows=108312 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 1891688
                                                   Heap Fetches: 0
                                             ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.00..10.16 rows=32 width=29) (actual time=0.006..0.016 rows=30 loops=108312)
                                                   Index Cond: (l_partkey = part.p_partkey)
                                                   Heap Fetches: 0
                                       ->  Materialize  (cost=0.00..201616.13 rows=8000301 width=14) (actual time=0.062..2223.473 rows=20559501 loops=1)
                                             ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.00..181615.38 rows=8000301 width=14) (actual time=0.060..858.712 rows=7999981 loops=1)
                                                   Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.00..2.29 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3248192)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                                       Heap Fetches: 0
                           ->  Index Scan using q21_idx_3 on orders  (cost=0.00..5.05 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=3248192)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=3248192)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.001 rows=25 loops=1)
 Total runtime: 41283.047 ms
(33 rows)

query 10 run 1
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1854091.79..1854091.84 rows=20 width=182) (actual time=19643.522..19643.525 rows=20 loops=1)
   ->  Sort  (cost=1854091.79..1855511.49 rows=567877 width=182) (actual time=19643.521..19643.523 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 30kB
         ->  GroupAggregate  (cost=1817685.40..1838980.79 rows=567877 width=182) (actual time=17940.084..19536.557 rows=381205 loops=1)
               ->  Sort  (cost=1817685.40..1819105.10 rows=567877 width=182) (actual time=17940.063..18517.301 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     Sort Method: external merge  Disk: 218224kB
                     ->  Hash Join  (cost=435326.22..1727362.44 rows=567877 width=182) (actual time=5934.476..12591.859 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=435324.66..1719552.57 rows=567877 width=160) (actual time=5934.464..12400.043 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge Join  (cost=333402.76..1570630.67 rows=567877 width=16) (actual time=5003.626..10618.379 rows=1145402 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Sort  (cost=333402.55..334829.80 rows=570900 width=8) (actual time=5001.869..5072.119 rows=573160 loops=1)
                                             Sort Key: orders.o_orderkey
                                             Sort Method: external sort  Disk: 10096kB
                                             ->  Bitmap Heap Scan on orders  (cost=8984.80..278816.30 rows=570900 width=8) (actual time=165.697..4683.379 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8842.07 rows=570900 width=0) (actual time=115.020..115.020 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.00..1191394.06 rows=14920560 width=16) (actual time=1.699..4608.016 rows=14808183 loops=1)
                                             Index Cond: (l_returnflag = 'R'::bpchar)
                                             Heap Fetches: 0
                                 ->  Hash  (cost=50946.51..50946.51 rows=1499951 width=148) (actual time=930.236..930.236 rows=1500000 loops=1)
                                       Buckets: 32768  Batches: 16  Memory Usage: 16828kB
                                       ->  Seq Scan on customer  (cost=0.00..50946.51 rows=1499951 width=148) (actual time=0.001..490.079 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.008..0.008 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 2kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.005 rows=25 loops=1)
 Total runtime: 19679.657 ms
(31 rows)

SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1854091.79..1854091.84 rows=20 width=182) (actual time=15487.968..15487.971 rows=20 loops=1)
   ->  Sort  (cost=1854091.79..1855511.49 rows=567877 width=182) (actual time=15487.968..15487.970 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 30kB
         ->  GroupAggregate  (cost=1817685.40..1838980.79 rows=567877 width=182) (actual time=13797.532..15381.052 rows=381205 loops=1)
               ->  Sort  (cost=1817685.40..1819105.10 rows=567877 width=182) (actual time=13797.511..14371.364 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     Sort Method: external merge  Disk: 218224kB
                     ->  Hash Join  (cost=435326.22..1727362.44 rows=567877 width=182) (actual time=2514.796..8450.784 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=435324.66..1719552.57 rows=567877 width=160) (actual time=2514.784..8260.119 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge Join  (cost=333402.76..1570630.67 rows=567877 width=16) (actual time=1715.180..6617.112 rows=1145402 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Sort  (cost=333402.55..334829.80 rows=570900 width=8) (actual time=1715.090..1781.118 rows=573160 loops=1)
                                             Sort Key: orders.o_orderkey
                                             Sort Method: external sort  Disk: 10096kB
                                             ->  Bitmap Heap Scan on orders  (cost=8984.80..278816.30 rows=570900 width=8) (actual time=152.576..1435.505 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8842.07 rows=570900 width=0) (actual time=102.172..102.172 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.00..1191394.06 rows=14920560 width=16) (actual time=0.063..3916.875 rows=14808183 loops=1)
                                             Index Cond: (l_returnflag = 'R'::bpchar)
                                             Heap Fetches: 0
                                 ->  Hash  (cost=50946.51..50946.51 rows=1499951 width=148) (actual time=799.152..799.152 rows=1500000 loops=1)
                                       Buckets: 32768  Batches: 16  Memory Usage: 16828kB
                                       ->  Seq Scan on customer  (cost=0.00..50946.51 rows=1499951 width=148) (actual time=0.001..365.529 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.007..0.007 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 2kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.004 rows=25 loops=1)
 Total runtime: 15524.857 ms
(31 rows)

query 11 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=684639.29..684639.30 rows=1 width=14) (actual time=3889.676..3889.676 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=323121.42..323121.43 rows=1 width=10) (actual time=1714.656..1714.656 rows=1 loops=1)
           ->  Hash Join  (cost=2357.28..320748.47 rows=316393 width=10) (actual time=2.717..1567.706 rows=320800 loops=1)
                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..255225.01 rows=8000301 width=14) (actual time=0.031..690.824 rows=8000000 loops=1)
                 ->  Hash  (cost=2307.28..2307.28 rows=4000 width=4) (actual time=2.656..2.656 rows=4010 loops=1)
                       Buckets: 1024  Batches: 1  Memory Usage: 141kB
                       ->  Nested Loop  (cost=55.26..2307.28 rows=4000 width=4) (actual time=0.497..2.304 rows=4010 loops=1)
                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier  (cost=55.26..2265.96 rows=4000 width=8) (actual time=0.487..1.903 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = public.nation.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.26 rows=4000 width=0) (actual time=0.310..0.310 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = public.nation.n_nationkey)
   ->  Sort  (cost=361517.86..362308.84 rows=316393 width=14) (actual time=3889.675..3889.675 rows=0 loops=1)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=349653.12..359935.90 rows=316393 width=14) (actual time=3889.665..3889.665 rows=0 loops=1)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $1)
               Rows Removed by Filter: 301833
               ->  Sort  (cost=349653.12..350444.11 rows=316393 width=14) (actual time=2010.239..2021.847 rows=320800 loops=1)
                     Sort Key: public.partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 27326kB
                     ->  Hash Join  (cost=2357.28..320748.47 rows=316393 width=14) (actual time=24.665..1965.519 rows=320800 loops=1)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255225.01 rows=8000301 width=18) (actual time=0.309..1005.970 rows=8000000 loops=1)
                           ->  Hash  (cost=2307.28..2307.28 rows=4000 width=4) (actual time=24.270..24.270 rows=4010 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 141kB
                                 ->  Nested Loop  (cost=55.26..2307.28 rows=4000 width=4) (actual time=2.162..23.568 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.014 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 24
                                       ->  Bitmap Heap Scan on supplier  (cost=55.26..2265.96 rows=4000 width=8) (actual time=2.145..22.884 rows=4010 loops=1)
                                             Recheck Cond: (s_nationkey = public.nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.26 rows=4000 width=0) (actual time=1.892..1.892 rows=4010 loops=1)
                                                   Index Cond: (s_nationkey = public.nation.n_nationkey)
 Total runtime: 3889.755 ms
(39 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=684639.29..684639.30 rows=1 width=14) (actual time=3497.434..3497.434 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=323121.42..323121.43 rows=1 width=10) (actual time=1727.150..1727.150 rows=1 loops=1)
           ->  Hash Join  (cost=2357.28..320748.47 rows=316393 width=10) (actual time=2.697..1580.424 rows=320800 loops=1)
                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..255225.01 rows=8000301 width=14) (actual time=0.032..700.058 rows=8000000 loops=1)
                 ->  Hash  (cost=2307.28..2307.28 rows=4000 width=4) (actual time=2.637..2.637 rows=4010 loops=1)
                       Buckets: 1024  Batches: 1  Memory Usage: 141kB
                       ->  Nested Loop  (cost=55.26..2307.28 rows=4000 width=4) (actual time=0.492..2.306 rows=4010 loops=1)
                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier  (cost=55.26..2265.96 rows=4000 width=8) (actual time=0.483..1.842 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = public.nation.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.26 rows=4000 width=0) (actual time=0.307..0.307 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = public.nation.n_nationkey)
   ->  Sort  (cost=361517.86..362308.84 rows=316393 width=14) (actual time=3497.433..3497.433 rows=0 loops=1)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=349653.12..359935.90 rows=316393 width=14) (actual time=3497.423..3497.423 rows=0 loops=1)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $1)
               Rows Removed by Filter: 301833
               ->  Sort  (cost=349653.12..350444.11 rows=316393 width=14) (actual time=1609.519..1620.824 rows=320800 loops=1)
                     Sort Key: public.partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 27326kB
                     ->  Hash Join  (cost=2357.28..320748.47 rows=316393 width=14) (actual time=7.878..1568.460 rows=320800 loops=1)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255225.01 rows=8000301 width=18) (actual time=0.025..687.766 rows=8000000 loops=1)
                           ->  Hash  (cost=2307.28..2307.28 rows=4000 width=4) (actual time=7.826..7.826 rows=4010 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 141kB
                                 ->  Nested Loop  (cost=55.26..2307.28 rows=4000 width=4) (actual time=0.802..7.362 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 24
                                       ->  Bitmap Heap Scan on supplier  (cost=55.26..2265.96 rows=4000 width=8) (actual time=0.794..6.895 rows=4010 loops=1)
                                             Recheck Cond: (s_nationkey = public.nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.26 rows=4000 width=0) (actual time=0.597..0.597 rows=4010 loops=1)
                                                   Index Cond: (s_nationkey = public.nation.n_nationkey)
 Total runtime: 3497.496 ms
(39 rows)

query 12 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1196623.43..1196623.44 rows=1 width=27) (actual time=38268.812..38268.812 rows=1 loops=1)
   ->  Sort  (cost=1196623.43..1196623.44 rows=1 width=27) (actual time=38268.811..38268.811 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=1196623.41..1196623.42 rows=1 width=27) (actual time=38268.799..38268.800 rows=2 loops=1)
               ->  Merge Join  (cost=581469.53..1191616.42 rows=286114 width=27) (actual time=34412.043..38111.753 rows=311258 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..568531.85 rows=14999985 width=20) (actual time=0.594..2734.903 rows=14999967 loops=1)
                     ->  Sort  (cost=581424.89..582140.17 rows=286114 width=15) (actual time=34411.359..34437.899 rows=311258 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 26879kB
                           ->  Index Scan using q12_idx_1 on lineitem  (cost=0.00..555494.05 rows=286114 width=15) (actual time=3.336..34180.374 rows=311258 loops=1)
                                 Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 38269.427 ms
(14 rows)

SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1196623.43..1196623.44 rows=1 width=27) (actual time=5421.303..5421.303 rows=1 loops=1)
   ->  Sort  (cost=1196623.43..1196623.44 rows=1 width=27) (actual time=5421.303..5421.303 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=1196623.41..1196623.42 rows=1 width=27) (actual time=5421.290..5421.290 rows=2 loops=1)
               ->  Merge Join  (cost=581469.53..1191616.42 rows=286114 width=27) (actual time=2130.534..5270.185 rows=311258 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..568531.85 rows=14999985 width=20) (actual time=0.039..2204.934 rows=14999967 loops=1)
                     ->  Sort  (cost=581424.89..582140.17 rows=286114 width=15) (actual time=2130.453..2156.316 rows=311258 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 26879kB
                           ->  Index Scan using q12_idx_1 on lineitem  (cost=0.00..555494.05 rows=286114 width=15) (actual time=0.058..2026.584 rows=311258 loops=1)
                                 Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 5421.398 ms
(14 rows)

query 13 run 1
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2792380.06..2792380.06 rows=1 width=8) (actual time=23240.902..23240.902 rows=1 loops=1)
   ->  Sort  (cost=2792380.06..2792380.56 rows=200 width=8) (actual time=23240.900..23240.900 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2792377.06..2792379.06 rows=200 width=8) (actual time=23240.884..23240.889 rows=46 loops=1)
               ->  GroupAggregate  (cost=2382943.15..2769877.79 rows=1499951 width=8) (actual time=13900.443..23027.184 rows=1500000 loops=1)
                     ->  Merge Left Join  (cost=2382943.15..2679885.85 rows=14998486 width=8) (actual time=13900.428..21772.240 rows=15337604 loops=1)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Only Scan using customer_pkey on customer  (cost=0.00..30731.60 rows=1499951 width=4) (actual time=0.761..198.990 rows=1500000 loops=1)
                                 Heap Fetches: 0
                           ->  Materialize  (cost=2382930.87..2457923.30 rows=14998486 width=8) (actual time=13899.662..19675.765 rows=14837583 loops=1)
                                 ->  Sort  (cost=2382930.87..2420427.09 rows=14998486 width=8) (actual time=13899.659..18349.505 rows=14837583 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external merge  Disk: 260904kB
                                       ->  Seq Scan on orders  (cost=0.00..448767.81 rows=14998486 width=8) (actual time=0.526..5319.541 rows=14837583 loops=1)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                             Rows Removed by Filter: 162417
 Total runtime: 23276.593 ms
(18 rows)

SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2792380.06..2792380.06 rows=1 width=8) (actual time=22630.751..22630.751 rows=1 loops=1)
   ->  Sort  (cost=2792380.06..2792380.56 rows=200 width=8) (actual time=22630.751..22630.751 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2792377.06..2792379.06 rows=200 width=8) (actual time=22630.734..22630.737 rows=46 loops=1)
               ->  GroupAggregate  (cost=2382943.15..2769877.79 rows=1499951 width=8) (actual time=13264.215..22417.416 rows=1500000 loops=1)
                     ->  Merge Left Join  (cost=2382943.15..2679885.85 rows=14998486 width=8) (actual time=13264.200..21166.036 rows=15337604 loops=1)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Only Scan using customer_pkey on customer  (cost=0.00..30731.60 rows=1499951 width=4) (actual time=0.067..169.218 rows=1500000 loops=1)
                                 Heap Fetches: 0
                           ->  Materialize  (cost=2382930.87..2457923.30 rows=14998486 width=8) (actual time=13264.128..19095.269 rows=14837583 loops=1)
                                 ->  Sort  (cost=2382930.87..2420427.09 rows=14998486 width=8) (actual time=13264.126..17785.585 rows=14837583 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external merge  Disk: 260904kB
                                       ->  Seq Scan on orders  (cost=0.00..448767.81 rows=14998486 width=8) (actual time=0.025..4860.759 rows=14837583 loops=1)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                             Rows Removed by Filter: 162417
 Total runtime: 22666.258 ms
(18 rows)

query 14 run 1
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=923035.89..923035.91 rows=1 width=33) (actual time=8632.380..8632.381 rows=1 loops=1)
   ->  Aggregate  (cost=923035.89..923035.91 rows=1 width=33) (actual time=8632.378..8632.378 rows=1 loops=1)
         ->  Hash Join  (cost=113734.03..909317.13 rows=783929 width=33) (actual time=1122.616..7895.650 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=14078.14..770693.84 rows=783929 width=16) (actual time=282.472..6052.743 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..13882.16 rows=783929 width=0) (actual time=186.297..186.297 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60981.84..60981.84 rows=2000084 width=25) (actual time=839.307..839.307 rows=2000000 loops=1)
                     Buckets: 65536  Batches: 4  Memory Usage: 28922kB
                     ->  Seq Scan on part  (cost=0.00..60981.84 rows=2000084 width=25) (actual time=0.003..528.374 rows=2000000 loops=1)
 Total runtime: 8632.505 ms
(12 rows)

SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=923035.89..923035.91 rows=1 width=33) (actual time=4521.372..4521.373 rows=1 loops=1)
   ->  Aggregate  (cost=923035.89..923035.91 rows=1 width=33) (actual time=4521.371..4521.371 rows=1 loops=1)
         ->  Hash Join  (cost=113734.03..909317.13 rows=783929 width=33) (actual time=956.615..3884.413 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=14078.14..770693.84 rows=783929 width=16) (actual time=271.930..2338.342 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..13882.16 rows=783929 width=0) (actual time=176.555..176.555 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60981.84..60981.84 rows=2000084 width=25) (actual time=684.497..684.497 rows=2000000 loops=1)
                     Buckets: 65536  Batches: 4  Memory Usage: 28922kB
                     ->  Seq Scan on part  (cost=0.00..60981.84 rows=2000084 width=25) (actual time=0.003..381.652 rows=2000000 loops=1)
 Total runtime: 4521.474 ms
(12 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2478409.25..2478410.38 rows=1 width=103) (actual time=22533.988..22533.989 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1229942.25..1229942.26 rows=1 width=32) (actual time=8136.125..8136.125 rows=1 loops=1)
           ->  HashAggregate  (cost=1229851.39..1229891.77 rows=4038 width=16) (actual time=8107.209..8130.136 rows=100000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=43765.47..1205474.22 rows=2437717 width=16) (actual time=540.871..6008.476 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 21153354
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..43156.04 rows=2437717 width=0) (actual time=488.164..488.164 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1248466.99..1253051.82 rows=4038 width=103) (actual time=22533.986..22533.986 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4274.26 rows=100000 width=71) (actual time=1.477..18.606 rows=69998 loops=1)
         ->  Sort  (cost=1248466.99..1248477.09 rows=4038 width=36) (actual time=22511.464..22511.464 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1248134.27..1248225.13 rows=4038 width=36) (actual time=22499.107..22511.454 rows=1 loops=1)
                     ->  HashAggregate  (cost=1248134.27..1248184.75 rows=4038 width=16) (actual time=22499.105..22511.451 rows=1 loops=1)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=43765.47..1205474.22 rows=2437717 width=16) (actual time=608.599..11878.596 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Rows Removed by Index Recheck: 21153354
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..43156.04 rows=2437717 width=0) (actual time=555.046..555.046 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 22534.748 ms
(25 rows)

DROP VIEW
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2478409.25..2478410.38 rows=1 width=103) (actual time=16909.227..16909.227 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1229942.25..1229942.26 rows=1 width=32) (actual time=8121.337..8121.337 rows=1 loops=1)
           ->  HashAggregate  (cost=1229851.39..1229891.77 rows=4038 width=16) (actual time=8092.349..8115.225 rows=100000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=43765.47..1205474.22 rows=2437717 width=16) (actual time=535.562..5999.565 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 21153354
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..43156.04 rows=2437717 width=0) (actual time=483.002..483.002 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1248466.99..1253051.82 rows=4038 width=103) (actual time=16909.225..16909.225 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4274.26 rows=100000 width=71) (actual time=0.042..10.959 rows=69998 loops=1)
         ->  Sort  (cost=1248466.99..1248477.09 rows=4038 width=36) (actual time=16894.562..16894.562 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1248134.27..1248225.13 rows=4038 width=36) (actual time=16882.047..16894.345 rows=1 loops=1)
                     ->  HashAggregate  (cost=1248134.27..1248184.75 rows=4038 width=16) (actual time=16882.045..16894.341 rows=1 loops=1)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=43765.47..1205474.22 rows=2437717 width=16) (actual time=570.631..6574.038 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Rows Removed by Index Recheck: 21153354
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..43156.04 rows=2437717 width=0) (actual time=518.319..518.319 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 16909.456 ms
(25 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=393988.06..393988.06 rows=1 width=40) (actual time=19237.791..19237.792 rows=1 loops=1)
   ->  Sort  (cost=393988.06..394058.94 rows=28352 width=40) (actual time=19237.790..19237.790 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=386002.17..393846.30 rows=28352 width=40) (actual time=16928.724..19232.630 rows=27838 loops=1)
               ->  Sort  (cost=386002.17..387514.29 rows=604849 width=40) (actual time=16928.592..18934.491 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60504kB
                     ->  Merge Join  (cost=3476.24..316102.86 rows=604849 width=40) (actual time=40.869..3119.310 rows=1186319 loops=1)
                           Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                           ->  Index Scan using part_pkey on part  (cost=0.00..111958.88 rows=302426 width=40) (actual time=0.822..1109.355 rows=296733 loops=1)
                                 Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                 Rows Removed by Filter: 1703267
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.03..187350.98 rows=4000150 width=8) (actual time=40.035..1494.444 rows=7995493 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=1.182..38.360 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
 Total runtime: 19246.124 ms
(22 rows)

SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=393988.06..393988.06 rows=1 width=40) (actual time=18815.988..18815.988 rows=1 loops=1)
   ->  Sort  (cost=393988.06..394058.94 rows=28352 width=40) (actual time=18815.987..18815.987 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=386002.17..393846.30 rows=28352 width=40) (actual time=16508.796..18810.775 rows=27838 loops=1)
               ->  Sort  (cost=386002.17..387514.29 rows=604849 width=40) (actual time=16508.665..18513.754 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60504kB
                     ->  Merge Join  (cost=3476.24..316102.86 rows=604849 width=40) (actual time=27.562..2773.138 rows=1186319 loops=1)
                           Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                           ->  Index Scan using part_pkey on part  (cost=0.00..111958.88 rows=302426 width=40) (actual time=0.024..912.979 rows=296733 loops=1)
                                 Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                 Rows Removed by Filter: 1703267
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.03..187350.98 rows=4000150 width=8) (actual time=27.525..1350.297 rows=7995493 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.111..27.465 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
 Total runtime: 18824.615 ms
(22 rows)

query 17 run 1
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1802895.03..1802895.05 rows=1 width=8) (actual time=37521.184..37521.185 rows=1 loops=1)
   ->  Aggregate  (cost=1802895.03..1802895.05 rows=1 width=8) (actual time=37521.183..37521.183 rows=1 loops=1)
         ->  Nested Loop  (cost=71095.15..1802847.61 rows=18971 width=8) (actual time=523.079..37516.439 rows=5319 loops=1)
               Join Filter: (part.p_partkey = public.lineitem.l_partkey)
               ->  Merge Join  (cost=71095.15..1783663.83 rows=1898 width=40) (actual time=521.218..36419.362 rows=1996 loops=1)
                     Merge Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=0.00..1689418.92 rows=1849641 width=9) (actual time=3.165..35768.251 rows=1999333 loops=1)
                           ->  Index Only Scan using q17_idx_1 on lineitem  (cost=0.00..1361743.45 rows=59986172 width=9) (actual time=1.355..11803.144 rows=59965994 loops=1)
                                 Heap Fetches: 0
                     ->  Sort  (cost=71095.15..71100.28 rows=2052 width=4) (actual time=506.465..507.393 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 142kB
                           ->  Seq Scan on part  (cost=0.00..70982.26 rows=2052 width=4) (actual time=0.710..505.717 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.00..9.97 rows=11 width=17) (actual time=0.502..0.547 rows=3 loops=1996)
                     Index Cond: ((l_partkey = public.lineitem.l_partkey) AND (l_quantity < ((0.2 * avg(public.lineitem.l_quantity)))))
                     Heap Fetches: 0
 Total runtime: 37521.792 ms
(19 rows)

SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1802895.03..1802895.05 rows=1 width=8) (actual time=35330.651..35330.651 rows=1 loops=1)
   ->  Aggregate  (cost=1802895.03..1802895.05 rows=1 width=8) (actual time=35330.650..35330.650 rows=1 loops=1)
         ->  Nested Loop  (cost=71095.15..1802847.61 rows=18971 width=8) (actual time=371.039..35329.002 rows=5319 loops=1)
               Join Filter: (part.p_partkey = public.lineitem.l_partkey)
               ->  Merge Join  (cost=71095.15..1783663.83 rows=1898 width=40) (actual time=371.003..35296.846 rows=1996 loops=1)
                     Merge Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=0.00..1689418.92 rows=1849641 width=9) (actual time=0.140..34793.545 rows=1999333 loops=1)
                           ->  Index Only Scan using q17_idx_1 on lineitem  (cost=0.00..1361743.45 rows=59986172 width=9) (actual time=0.064..10882.631 rows=59965994 loops=1)
                                 Heap Fetches: 0
                     ->  Sort  (cost=71095.15..71100.28 rows=2052 width=4) (actual time=359.907..360.276 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 142kB
                           ->  Seq Scan on part  (cost=0.00..70982.26 rows=2052 width=4) (actual time=0.156..359.299 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.00..9.97 rows=11 width=17) (actual time=0.014..0.015 rows=3 loops=1996)
                     Index Cond: ((l_partkey = public.lineitem.l_partkey) AND (l_quantity < ((0.2 * avg(public.lineitem.l_quantity)))))
                     Heap Fetches: 0
 Total runtime: 35330.697 ms
(19 rows)

query 18 run 1
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10140933.48..10140936.23 rows=100 width=44) (actual time=31496.483..31496.779 rows=99 loops=1)
   ->  GroupAggregate  (cost=10140933.48..10965743.34 rows=29993086 width=44) (actual time=31496.483..31496.777 rows=99 loops=1)
         ->  Sort  (cost=10140933.48..10215916.19 rows=29993086 width=44) (actual time=31496.473..31496.498 rows=693 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 79kB
               ->  Hash Join  (cost=78694.57..5757043.13 rows=29993086 width=44) (actual time=4838.069..31495.435 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=209.67..4659845.52 rows=29993086 width=25) (actual time=690.947..30768.711 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.00..2830076.48 rows=7499992 width=24) (actual time=531.934..23218.538 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..568531.85 rows=14999985 width=20) (actual time=0.845..3172.399 rows=14982724 loops=1)
                                 ->  Materialize  (cost=0.00..2036587.88 rows=14996543 width=4) (actual time=425.257..19203.404 rows=99 loops=1)
                                       ->  GroupAggregate  (cost=0.00..1849131.10 rows=14996543 width=9) (actual time=425.254..19203.285 rows=99 loops=1)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             Rows Removed by Filter: 14999901
                                             ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.00..1361743.45 rows=59986172 width=9) (actual time=2.272..6174.753 rows=59986052 loops=1)
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.00..1361743.45 rows=59986172 width=9) (actual time=0.009..4862.628 rows=59916431 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=50946.51..50946.51 rows=1499951 width=23) (actual time=649.108..649.108 rows=1500000 loops=1)
                           Buckets: 65536  Batches: 4  Memory Usage: 20537kB
                           ->  Seq Scan on customer  (cost=0.00..50946.51 rows=1499951 width=23) (actual time=0.004..410.185 rows=1500000 loops=1)
 Total runtime: 31496.850 ms
(24 rows)

SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10140933.48..10140936.23 rows=100 width=44) (actual time=29944.464..29944.758 rows=99 loops=1)
   ->  GroupAggregate  (cost=10140933.48..10965743.34 rows=29993086 width=44) (actual time=29944.463..29944.745 rows=99 loops=1)
         ->  Sort  (cost=10140933.48..10215916.19 rows=29993086 width=44) (actual time=29944.453..29944.468 rows=693 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 79kB
               ->  Hash Join  (cost=78694.57..5757043.13 rows=29993086 width=44) (actual time=4438.301..29943.224 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=209.67..4659845.52 rows=29993086 width=25) (actual time=640.457..29349.142 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.00..2830076.48 rows=7499992 width=24) (actual time=482.341..21852.445 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..568531.85 rows=14999985 width=20) (actual time=0.034..2416.071 rows=14982724 loops=1)
                                 ->  Materialize  (cost=0.00..2036587.88 rows=14996543 width=4) (actual time=404.625..18618.663 rows=99 loops=1)
                                       ->  GroupAggregate  (cost=0.00..1849131.10 rows=14996543 width=9) (actual time=404.623..18618.561 rows=99 loops=1)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             Rows Removed by Filter: 14999901
                                             ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.00..1361743.45 rows=59986172 width=9) (actual time=0.061..5637.811 rows=59986052 loops=1)
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.00..1361743.45 rows=59986172 width=9) (actual time=0.010..4880.702 rows=59916431 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=50946.51..50946.51 rows=1499951 width=23) (actual time=516.039..516.039 rows=1500000 loops=1)
                           Buckets: 65536  Batches: 4  Memory Usage: 20537kB
                           ->  Seq Scan on customer  (cost=0.00..50946.51 rows=1499951 width=23) (actual time=0.003..285.710 rows=1500000 loops=1)
 Total runtime: 29944.830 ms
(24 rows)

query 19 run 1
SET
SET


 Limit  (cost=2288183.15..2288183.16 rows=1 width=12) (actual time=13146.034..13146.035 rows=1 loops=1)
   ->  Aggregate  (cost=2288183.15..2288183.16 rows=1 width=12) (actual time=13146.034..13146.034 rows=1 loops=1)
         ->  Merge Join  (cost=3.36..2288174.54 rows=1148 width=12) (actual time=41.950..13143.042 rows=1063 loops=1)
               Merge Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               Rows Removed by Join Filter: 268365
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.00..2134892.59 rows=1135230 width=21) (actual time=0.505..12017.967 rows=899482 loops=1)
                     Index Cond: (l_shipinstruct = 'DELIVER IN PERSON'::bpchar)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
                     Rows Removed by Filter: 14095107
                     Heap Fetches: 0
               ->  Index Scan using part_pkey on part  (cost=0.00..116959.09 rows=995778 width=30) (actual time=0.660..899.361 rows=649178 loops=1)
                     Filter: ((p_size >= 1) AND (((p_size <= 5) AND (p_size >= 1)) OR ((p_size <= 10) AND (p_size >= 1)) OR ((p_size <= 15) AND (p_size >= 1))))
                     Rows Removed by Filter: 1519493
 Total runtime: 13146.096 ms
(15 rows)

SET
SET


 Limit  (cost=2288183.15..2288183.16 rows=1 width=12) (actual time=11215.143..11215.144 rows=1 loops=1)
   ->  Aggregate  (cost=2288183.15..2288183.16 rows=1 width=12) (actual time=11215.142..11215.142 rows=1 loops=1)
         ->  Merge Join  (cost=3.36..2288174.54 rows=1148 width=12) (actual time=31.176..11212.477 rows=1063 loops=1)
               Merge Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               Rows Removed by Join Filter: 268365
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.00..2134892.59 rows=1135230 width=21) (actual time=0.029..10232.527 rows=899482 loops=1)
                     Index Cond: (l_shipinstruct = 'DELIVER IN PERSON'::bpchar)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
                     Rows Removed by Filter: 14095107
                     Heap Fetches: 0
               ->  Index Scan using part_pkey on part  (cost=0.00..116959.09 rows=995778 width=30) (actual time=0.042..766.854 rows=649178 loops=1)
                     Filter: ((p_size >= 1) AND (((p_size <= 5) AND (p_size >= 1)) OR ((p_size <= 10) AND (p_size >= 1)) OR ((p_size <= 15) AND (p_size >= 1))))
                     Rows Removed by Filter: 1519493
 Total runtime: 11215.198 ms
(15 rows)

query 20 run 1
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2897234.78..2897234.78 rows=1 width=51) (actual time=51013.062..51013.062 rows=1 loops=1)
   ->  Sort  (cost=2897234.78..2897239.78 rows=2000 width=51) (actual time=51013.061..51013.061 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2628759.80..2897224.78 rows=2000 width=51) (actual time=27351.424..51011.134 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=55.26..2307.28 rows=4000 width=55) (actual time=2.230..25.111 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=55.26..2265.96 rows=4000 width=59) (actual time=2.222..24.181 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.26 rows=4000 width=0) (actual time=1.764..1.764 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Materialize  (cost=2628704.55..2893237.58 rows=28 width=8) (actual time=6.343..9.661 rows=44445 loops=4095)
                     ->  Merge Join  (cost=2628704.55..2893237.44 rows=28 width=8) (actual time=25972.836..33602.135 rows=59002 loops=1)
                           Merge Cond: (partsupp.ps_partkey = lineitem.l_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  Nested Loop  (cost=0.00..130779.45 rows=368212 width=16) (actual time=0.538..513.412 rows=86872 loops=1)
                                 ->  Index Only Scan using q20_idx_2 on part  (cost=0.00..64484.01 rows=20203 width=4) (actual time=0.253..273.074 rows=21718 loops=1)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 1978282
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.00..3.10 rows=18 width=12) (actual time=0.010..0.010 rows=4 loops=21718)
                                       Index Cond: (ps_partkey = part.p_partkey)
                                       Heap Fetches: 0
                           ->  Materialize  (cost=2628704.55..2745487.28 rows=934262 width=40) (actual time=25971.939..32666.859 rows=5625848 loops=1)
                                 ->  GroupAggregate  (cost=2628704.55..2733809.00 rows=934262 width=13) (actual time=25971.937..32058.543 rows=5448473 loops=1)
                                       ->  Sort  (cost=2628704.55..2652061.09 rows=9342618 width=13) (actual time=25971.924..28968.729 rows=9123091 loops=1)
                                             Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                             Sort Method: external merge  Disk: 205072kB
                                             ->  Bitmap Heap Scan on lineitem  (cost=167714.70..1432996.97 rows=9342618 width=13) (actual time=1893.329..19574.351 rows=9123688 loops=1)
                                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                   Rows Removed by Index Recheck: 27869248
                                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..165379.05 rows=9342618 width=0) (actual time=1797.857..1797.857 rows=9123688 loops=1)
                                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Total runtime: 51040.779 ms
(39 rows)

SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2897234.78..2897234.78 rows=1 width=51) (actual time=41680.443..41680.443 rows=1 loops=1)
   ->  Sort  (cost=2897234.78..2897239.78 rows=2000 width=51) (actual time=41680.443..41680.443 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2628759.80..2897224.78 rows=2000 width=51) (actual time=18134.666..41678.637 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=55.26..2307.28 rows=4000 width=55) (actual time=0.621..10.141 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.009 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=55.26..2265.96 rows=4000 width=59) (actual time=0.613..9.355 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.26 rows=4000 width=0) (actual time=0.426..0.426 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Materialize  (cost=2628704.55..2893237.58 rows=28 width=8) (actual time=4.103..7.376 rows=44445 loops=4095)
                     ->  Merge Join  (cost=2628704.55..2893237.44 rows=28 width=8) (actual time=16800.783..24257.581 rows=59002 loops=1)
                           Merge Cond: (partsupp.ps_partkey = lineitem.l_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  Nested Loop  (cost=0.00..130779.45 rows=368212 width=16) (actual time=0.048..360.105 rows=86872 loops=1)
                                 ->  Index Only Scan using q20_idx_2 on part  (cost=0.00..64484.01 rows=20203 width=4) (actual time=0.029..250.055 rows=21718 loops=1)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 1978282
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.00..3.10 rows=18 width=12) (actual time=0.004..0.004 rows=4 loops=21718)
                                       Index Cond: (ps_partkey = part.p_partkey)
                                       Heap Fetches: 0
                           ->  Materialize  (cost=2628704.55..2745487.28 rows=934262 width=40) (actual time=16800.379..23455.710 rows=5625848 loops=1)
                                 ->  GroupAggregate  (cost=2628704.55..2733809.00 rows=934262 width=13) (actual time=16800.377..22847.870 rows=5448473 loops=1)
                                       ->  Sort  (cost=2628704.55..2652061.09 rows=9342618 width=13) (actual time=16800.363..19777.287 rows=9123091 loops=1)
                                             Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                             Sort Method: external merge  Disk: 205072kB
                                             ->  Bitmap Heap Scan on lineitem  (cost=167714.70..1432996.97 rows=9342618 width=13) (actual time=1711.695..10918.415 rows=9123688 loops=1)
                                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                   Rows Removed by Index Recheck: 27869248
                                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..165379.05 rows=9342618 width=0) (actual time=1618.415..1618.415 rows=9123688 loops=1)
                                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Total runtime: 41706.852 ms
(39 rows)

query 21 run 1
SET
SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3517208.84..3517208.84 rows=1 width=26) (actual time=35721.905..35721.913 rows=100 loops=1)
   ->  Sort  (cost=3517208.84..3517208.84 rows=1 width=26) (actual time=35721.904..35721.907 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=3517208.82..3517208.83 rows=1 width=26) (actual time=35719.634..35720.307 rows=3991 loops=1)
               ->  Nested Loop Anti Join  (cost=1691131.76..3517208.81 rows=1 width=26) (actual time=13233.549..35689.768 rows=39281 loops=1)
                     ->  Merge Semi Join  (cost=1691131.76..3517196.13 rows=1 width=34) (actual time=13232.001..24392.112 rows=704306 loops=1)
                           Merge Cond: (orders.o_orderkey = l2.l_orderkey)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 80163
                           ->  Merge Join  (cost=1691109.82..1985087.17 rows=389883 width=38) (actual time=13231.980..15494.760 rows=730985 loops=1)
                                 Merge Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Sort  (cost=1691088.73..1693088.27 rows=799816 width=34) (actual time=13231.454..13496.550 rows=1514267 loops=1)
                                       Sort Key: l1.l_orderkey
                                       Sort Method: external sort  Disk: 68096kB
                                       ->  Hash Join  (cost=2357.28..1597047.03 rows=799816 width=34) (actual time=39.344..12370.348 rows=1514267 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Index Only Scan using q21_idx_1 on lineitem l1  (cost=0.00..1511708.88 rows=19995391 width=8) (actual time=0.356..8577.320 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                                   Heap Fetches: 0
                                             ->  Hash  (cost=2307.28..2307.28 rows=4000 width=30) (actual time=38.945..38.945 rows=3991 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 250kB
                                                   ->  Nested Loop  (cost=55.26..2307.28 rows=4000 width=30) (actual time=2.291..37.949 rows=3991 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.012 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=55.26..2265.96 rows=4000 width=34) (actual time=2.276..37.159 rows=3991 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.26 rows=4000 width=0) (actual time=2.099..2.099 rows=3991 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.00..267882.89 rows=7311993 width=4) (actual time=0.517..1288.109 rows=7344831 loops=1)
                                       Index Cond: (o_orderstatus = 'F'::bpchar)
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.00..1361743.45 rows=59986172 width=8) (actual time=0.010..5952.188 rows=59988673 loops=1)
                                 Heap Fetches: 0
                     ->  Index Scan using q21_idx_2 on lineitem l3  (cost=0.00..6.34 rows=1 width=8) (actual time=0.016..0.016 rows=1 loops=704306)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: (l_suppkey <> l1.l_suppkey)
                           Rows Removed by Filter: 0
 Total runtime: 35731.542 ms
(41 rows)

SET
SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3517208.84..3517208.84 rows=1 width=26) (actual time=26170.701..26170.712 rows=100 loops=1)
   ->  Sort  (cost=3517208.84..3517208.84 rows=1 width=26) (actual time=26170.700..26170.705 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=3517208.82..3517208.83 rows=1 width=26) (actual time=26168.650..26169.331 rows=3991 loops=1)
               ->  Nested Loop Anti Join  (cost=1691131.76..3517208.81 rows=1 width=26) (actual time=12203.522..26143.665 rows=39281 loops=1)
                     ->  Merge Semi Join  (cost=1691131.76..3517196.13 rows=1 width=34) (actual time=12203.485..23033.101 rows=704306 loops=1)
                           Merge Cond: (orders.o_orderkey = l2.l_orderkey)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 80163
                           ->  Merge Join  (cost=1691109.82..1985087.17 rows=389883 width=38) (actual time=12203.466..14281.446 rows=730985 loops=1)
                                 Merge Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Sort  (cost=1691088.73..1693088.27 rows=799816 width=34) (actual time=12203.407..12443.462 rows=1514267 loops=1)
                                       Sort Key: l1.l_orderkey
                                       Sort Method: external sort  Disk: 68096kB
                                       ->  Hash Join  (cost=2357.28..1597047.03 rows=799816 width=34) (actual time=15.243..11366.276 rows=1514267 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Index Only Scan using q21_idx_1 on lineitem l1  (cost=0.00..1511708.88 rows=19995391 width=8) (actual time=0.038..7713.146 rows=37929348 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 22056704
                                                   Heap Fetches: 0
                                             ->  Hash  (cost=2307.28..2307.28 rows=4000 width=30) (actual time=15.176..15.176 rows=3991 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 250kB
                                                   ->  Nested Loop  (cost=55.26..2307.28 rows=4000 width=30) (actual time=0.603..14.449 rows=3991 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.007 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=55.26..2265.96 rows=4000 width=34) (actual time=0.595..13.792 rows=3991 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.26 rows=4000 width=0) (actual time=0.414..0.414 rows=3991 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.00..267882.89 rows=7311993 width=4) (actual time=0.052..1161.739 rows=7344831 loops=1)
                                       Index Cond: (o_orderstatus = 'F'::bpchar)
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.00..1361743.45 rows=59986172 width=8) (actual time=0.009..5877.486 rows=59988673 loops=1)
                                 Heap Fetches: 0
                     ->  Index Scan using q21_idx_2 on lineitem l3  (cost=0.00..6.34 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=704306)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: (l_suppkey <> l1.l_suppkey)
                           Rows Removed by Filter: 0
 Total runtime: 26179.695 ms
(41 rows)

query 22 run 1
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=156221.38..156221.38 rows=1 width=22) (actual time=2429.603..2429.603 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75440.25..75440.26 rows=1 width=6) (actual time=1158.038..1158.038 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..75320.71 rows=47814 width=6) (actual time=0.007..1001.576 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  Sort  (cost=80781.12..80799.68 rows=7422 width=22) (actual time=2429.602..2429.602 rows=1 loops=1)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=80632.68..80744.01 rows=7422 width=22) (actual time=2429.564..2429.573 rows=7 loops=1)
               ->  Nested Loop Anti Join  (cost=0.00..80577.02 rows=7422 width=22) (actual time=1158.085..2396.900 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75320.71 rows=17499 width=26) (actual time=1158.065..1723.291 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.00..3.28 rows=17 width=4) (actual time=0.003..0.003 rows=1 loops=191129)
                           Index Cond: (o_custkey = public.customer.c_custkey)
                           Heap Fetches: 0
 Total runtime: 2429.682 ms
(18 rows)

SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=156221.38..156221.38 rows=1 width=22) (actual time=1989.704..1989.704 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75440.25..75440.26 rows=1 width=6) (actual time=972.776..972.776 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..75320.71 rows=47814 width=6) (actual time=0.007..823.054 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  Sort  (cost=80781.12..80799.68 rows=7422 width=22) (actual time=1989.704..1989.704 rows=1 loops=1)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=80632.68..80744.01 rows=7422 width=22) (actual time=1989.667..1989.674 rows=7 loops=1)
               ->  Nested Loop Anti Join  (cost=0.00..80577.02 rows=7422 width=22) (actual time=972.818..1960.572 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75320.71 rows=17499 width=26) (actual time=972.801..1514.634 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.00..3.28 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=191129)
                           Index Cond: (o_custkey = public.customer.c_custkey)
                           Heap Fetches: 0
 Total runtime: 1989.754 ms
(18 rows)

