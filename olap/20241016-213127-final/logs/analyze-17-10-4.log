query 1 run 1
SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1832147.84..1832148.47 rows=1 width=236) (actual time=19545.442..19547.053 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1832147.84..1832151.65 rows=6 width=236) (actual time=19545.441..19547.051 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=1832147.84..1832150.71 rows=24 width=236) (actual time=19545.420..19547.033 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=1831147.78..1831147.79 rows=6 width=236) (actual time=19537.429..19537.430 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 26kB
                     Worker 0:  Sort Method: quicksort  Memory: 26kB
                     Worker 1:  Sort Method: quicksort  Memory: 26kB
                     Worker 2:  Sort Method: quicksort  Memory: 26kB
                     Worker 3:  Sort Method: quicksort  Memory: 26kB
                     ->  Partial HashAggregate  (cost=1831147.56..1831147.70 rows=6 width=236) (actual time=19537.393..19537.398 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..1312600.02 rows=14815644 width=25) (actual time=1.049..4502.336 rows=11856890 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 140321
 Planning Time: 26.550 ms
 Execution Time: 19548.763 ms
(25 rows)

SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1832147.84..1832148.47 rows=1 width=236) (actual time=18857.026..18857.589 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1832147.84..1832151.65 rows=6 width=236) (actual time=18857.025..18857.587 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=1832147.84..1832150.71 rows=24 width=236) (actual time=18856.998..18857.565 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=1831147.78..1831147.79 rows=6 width=236) (actual time=18852.097..18852.098 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 26kB
                     Worker 0:  Sort Method: quicksort  Memory: 26kB
                     Worker 1:  Sort Method: quicksort  Memory: 26kB
                     Worker 2:  Sort Method: quicksort  Memory: 26kB
                     Worker 3:  Sort Method: quicksort  Memory: 26kB
                     ->  Partial HashAggregate  (cost=1831147.56..1831147.70 rows=6 width=236) (actual time=18852.065..18852.070 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..1312600.02 rows=14815644 width=25) (actual time=0.030..2715.050 rows=11856890 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 140321
 Planning Time: 1.400 ms
 Execution Time: 18857.676 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=549093.36..549093.37 rows=1 width=192) (actual time=26191.508..26191.523 rows=100 loops=1)
   ->  Sort  (cost=549093.36..549093.37 rows=1 width=192) (actual time=26191.499..26191.507 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 67kB
         ->  Nested Loop  (cost=52.83..549093.35 rows=1 width=192) (actual time=29.219..26188.778 rows=4737 loops=1)
               Join Filter: (supplier.s_nationkey = nation.n_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.424..0.432 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.184..0.185 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.235..0.238 rows=25 loops=1)
               ->  Materialize  (cost=52.83..549090.66 rows=1 width=170) (actual time=4.729..5236.664 rows=4737 loops=5)
                     ->  Nested Loop  (cost=52.83..549090.65 rows=1 width=170) (actual time=23.637..26173.603 rows=4737 loops=1)
                           Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
                           Rows Removed by Join Filter: 236714834
                           ->  Nested Loop  (cost=52.83..544619.65 rows=1 width=34) (actual time=1.681..1243.938 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..54337.75 rows=8996 width=30) (actual time=0.265..286.314 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=52.41..54.49 rows=1 width=14) (actual time=0.002..0.003 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=51.96..51.97 rows=1 width=32) (actual time=0.113..0.113 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.41..51.95 rows=4 width=6) (actual time=0.100..0.109 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.41..50.65 rows=19 width=10) (actual time=0.082..0.106 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.85..49.03 rows=19 width=10) (actual time=0.081..0.103 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.77 rows=19 width=10) (actual time=0.073..0.075 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.42..2.43 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.010..0.011 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.006 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..2.430 rows=49972 loops=4737)
 Planning Time: 26.887 ms
 Execution Time: 26192.464 ms
(50 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=549093.36..549093.37 rows=1 width=192) (actual time=25236.146..25236.161 rows=100 loops=1)
   ->  Sort  (cost=549093.36..549093.37 rows=1 width=192) (actual time=25236.145..25236.153 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 67kB
         ->  Nested Loop  (cost=52.83..549093.35 rows=1 width=192) (actual time=12.943..25233.473 rows=4737 loops=1)
               Join Filter: (supplier.s_nationkey = nation.n_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.017..0.024 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.009 rows=25 loops=1)
               ->  Materialize  (cost=52.83..549090.66 rows=1 width=170) (actual time=2.031..5045.709 rows=4737 loops=5)
                     ->  Nested Loop  (cost=52.83..549090.65 rows=1 width=170) (actual time=10.153..25218.876 rows=4737 loops=1)
                           Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
                           Rows Removed by Join Filter: 236714834
                           ->  Nested Loop  (cost=52.83..544619.65 rows=1 width=34) (actual time=0.069..357.000 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..54337.75 rows=8996 width=30) (actual time=0.008..109.577 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=52.41..54.49 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=51.96..51.97 rows=1 width=32) (actual time=0.026..0.026 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.41..51.95 rows=4 width=6) (actual time=0.018..0.022 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.41..50.65 rows=19 width=10) (actual time=0.010..0.019 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.85..49.03 rows=19 width=10) (actual time=0.009..0.017 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.77 rows=19 width=10) (actual time=0.005..0.005 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.42..2.43 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.010..0.011 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.006 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..2.420 rows=49972 loops=4737)
 Planning Time: 2.677 ms
 Execution Time: 25236.249 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2300566.26..2300566.28 rows=10 width=44) (actual time=9813.504..9824.755 rows=10 loops=1)
   ->  Sort  (cost=2300566.26..2308133.27 rows=3026806 width=44) (actual time=9813.503..9824.752 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=1789507.38..2235158.07 rows=3026806 width=44) (actual time=9605.045..9802.399 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=1789507.38..2151920.90 rows=3026806 width=24) (actual time=9605.031..9655.667 rows=301530 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1788507.32..1790399.07 rows=756702 width=24) (actual time=9594.847..9597.733 rows=60306 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 4285kB
                           Worker 0:  Sort Method: quicksort  Memory: 4283kB
                           Worker 1:  Sort Method: quicksort  Memory: 4233kB
                           Worker 2:  Sort Method: quicksort  Memory: 4191kB
                           Worker 3:  Sort Method: quicksort  Memory: 4240kB
                           ->  Parallel Hash Join  (cost=358773.24..1703532.77 rows=756702 width=24) (actual time=2386.637..9579.873 rows=60306 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..1312600.02 rows=8071400 width=16) (actual time=0.806..6396.725 rows=6506846 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 5490365
                                 ->  Parallel Hash  (cost=354379.14..354379.14 rows=351528 width=12) (actual time=2381.131..2381.316 rows=290361 loops=5)
                                       Buckets: 2097152  Batches: 1  Memory Usage: 84576kB
                                       ->  Parallel Hash Join  (cost=41557.87..354379.14 rows=351528 width=12) (actual time=273.845..2283.094 rows=290361 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..308137.98 rows=1784108 width=16) (actual time=0.550..1655.888 rows=1447887 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 1552113
                                             ->  Parallel Hash  (cost=40634.32..40634.32 rows=73884 width=4) (actual time=272.758..272.758 rows=60055 loops=5)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 15904kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..40634.32 rows=73884 width=4) (actual time=0.495..254.511 rows=60055 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 239945
 Planning Time: 33.306 ms
 Execution Time: 9825.780 ms
(35 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2300566.26..2300566.28 rows=10 width=44) (actual time=4420.808..4432.579 rows=10 loops=1)
   ->  Sort  (cost=2300566.26..2308133.27 rows=3026806 width=44) (actual time=4420.806..4432.577 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=1789507.38..2235158.07 rows=3026806 width=44) (actual time=4213.111..4410.133 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=1789507.38..2151920.90 rows=3026806 width=24) (actual time=4213.099..4264.447 rows=301530 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1788507.32..1790399.07 rows=756702 width=24) (actual time=4207.322..4210.208 rows=60306 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 4366kB
                           Worker 0:  Sort Method: quicksort  Memory: 4430kB
                           Worker 1:  Sort Method: quicksort  Memory: 4195kB
                           Worker 2:  Sort Method: quicksort  Memory: 4057kB
                           Worker 3:  Sort Method: quicksort  Memory: 4184kB
                           ->  Parallel Hash Join  (cost=358773.24..1703532.77 rows=756702 width=24) (actual time=1042.959..4192.262 rows=60306 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..1312600.02 rows=8071400 width=16) (actual time=0.044..2173.298 rows=6506846 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 5490365
                                 ->  Parallel Hash  (cost=354379.14..354379.14 rows=351528 width=12) (actual time=1039.586..1039.761 rows=290361 loops=5)
                                       Buckets: 2097152  Batches: 1  Memory Usage: 84576kB
                                       ->  Parallel Hash Join  (cost=41557.87..354379.14 rows=351528 width=12) (actual time=84.173..929.367 rows=290361 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..308137.98 rows=1784108 width=16) (actual time=0.064..441.074 rows=1447887 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 1552113
                                             ->  Parallel Hash  (cost=40634.32..40634.32 rows=73884 width=4) (actual time=83.593..83.594 rows=60055 loops=5)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 15936kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..40634.32 rows=73884 width=4) (actual time=0.022..63.424 rows=60055 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 239945
 Planning Time: 2.096 ms
 Execution Time: 4432.648 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=283683.37..547028.83 rows=1 width=24) (actual time=8426.131..8444.970 rows=1 loops=1)
   ->  GroupAggregate  (cost=283683.37..1600410.65 rows=5 width=24) (actual time=8426.129..8444.968 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=283683.37..1597527.62 rows=576595 width=16) (actual time=4243.482..8405.479 rows=103030 loops=1)
               ->  Gather Merge  (cost=283682.93..352729.71 rows=576665 width=20) (actual time=4242.413..4317.866 rows=112213 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=282682.88..283043.29 rows=144166 width=20) (actual time=4229.489..4232.086 rows=23396 loops=5)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 7362kB
                           Worker 0:  Sort Method: quicksort  Memory: 7446kB
                           Worker 1:  Sort Method: quicksort  Memory: 7482kB
                           Worker 2:  Sort Method: quicksort  Memory: 7456kB
                           Worker 3:  Sort Method: quicksort  Memory: 7509kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=6899.25..270329.74 rows=144166 width=20) (actual time=130.714..4183.772 rows=112085 loops=5)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=45509
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6755.09 rows=576665 width=0) (actual time=86.588..86.588 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.44..2.44 rows=1 width=4) (actual time=0.036..0.036 rows=1 loops=112213)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Heap Fetches: 0
 Planning Time: 27.794 ms
 Execution Time: 8446.728 ms
(24 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=283683.37..547028.83 rows=1 width=24) (actual time=1146.720..1166.459 rows=1 loops=1)
   ->  GroupAggregate  (cost=283683.37..1600410.65 rows=5 width=24) (actual time=1146.719..1166.457 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=283683.37..1597527.62 rows=576595 width=16) (actual time=704.604..1148.666 rows=103030 loops=1)
               ->  Gather Merge  (cost=283682.93..352729.71 rows=576665 width=20) (actual time=704.544..753.206 rows=112213 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=282682.88..283043.29 rows=144166 width=20) (actual time=697.039..698.878 rows=23373 loops=5)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 7300kB
                           Worker 0:  Sort Method: quicksort  Memory: 7003kB
                           Worker 1:  Sort Method: quicksort  Memory: 7792kB
                           Worker 2:  Sort Method: quicksort  Memory: 7820kB
                           Worker 3:  Sort Method: quicksort  Memory: 7339kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=6899.25..270329.74 rows=144166 width=20) (actual time=127.224..657.949 rows=112085 loops=5)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=44663
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6755.09 rows=576665 width=0) (actual time=81.022..81.023 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.44..2.44 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=112213)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Heap Fetches: 0
 Planning Time: 1.889 ms
 Execution Time: 1166.525 ms
(24 rows)

query 5 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=647527.25..647527.25 rows=1 width=58) (actual time=7569.999..7602.901 rows=1 loops=1)
   ->  Sort  (cost=647527.25..647527.31 rows=25 width=58) (actual time=7569.997..7602.899 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=647289.98..647527.13 rows=25 width=58) (actual time=7566.082..7602.881 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=647289.98..647526.06 rows=100 width=58) (actual time=7564.778..7602.854 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=646289.92..646514.09 rows=25 width=58) (actual time=7548.815..7554.581 rows=5 loops=5)
                           Group Key: nation.n_name
                           ->  Sort  (cost=646289.92..646334.69 rows=17909 width=38) (actual time=7547.549..7548.188 rows=14407 loops=5)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 1179kB
                                 Worker 0:  Sort Method: quicksort  Memory: 1150kB
                                 Worker 1:  Sort Method: quicksort  Memory: 1188kB
                                 Worker 2:  Sort Method: quicksort  Memory: 1174kB
                                 Worker 3:  Sort Method: quicksort  Memory: 1170kB
                                 ->  Parallel Hash Join  (cost=73267.48..645024.79 rows=17909 width=38) (actual time=569.966..7537.721 rows=14407 loops=5)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=69575.88..638982.31 rows=447787 width=50) (actual time=549.638..7398.467 rows=363065 loops=5)
                                             ->  Parallel Hash Join  (cost=69575.31..341619.51 rows=111960 width=38) (actual time=549.330..5167.214 rows=90680 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=26782.33..296447.36 rows=559802 width=8) (actual time=259.276..4667.944 rows=455328 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=52241
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..26222.53 rows=2239209 width=0) (actual time=202.376..202.376 rows=2276638 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=41855.53..41855.53 rows=74997 width=38) (actual time=289.374..289.377 rows=59887 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 25248kB
                                                         ->  Hash Join  (cost=2.51..41855.53 rows=74997 width=38) (actual time=0.857..262.231 rows=59887 loops=5)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..39696.85 rows=374985 width=8) (actual time=0.471..227.440 rows=300000 loops=5)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.375..0.377 rows=5 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.370..0.375 rows=5 loops=5)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.142..0.144 rows=25 loops=5)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.175..0.176 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.172..0.173 rows=1 loops=5)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.023..0.024 rows=4 loops=453399)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=17.309..17.309 rows=20000 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4992kB
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.200..9.643 rows=20000 loops=5)
 Planning Time: 40.929 ms
 Execution Time: 7603.939 ms
(51 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=647527.25..647527.25 rows=1 width=58) (actual time=2022.497..2062.344 rows=1 loops=1)
   ->  Sort  (cost=647527.25..647527.31 rows=25 width=58) (actual time=2022.495..2062.342 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=647289.98..647527.13 rows=25 width=58) (actual time=2018.490..2062.325 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=647289.98..647526.06 rows=100 width=58) (actual time=2017.132..2062.293 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=646289.92..646514.09 rows=25 width=58) (actual time=2002.822..2007.993 rows=5 loops=5)
                           Group Key: nation.n_name
                           ->  Sort  (cost=646289.92..646334.69 rows=17909 width=38) (actual time=2000.775..2001.443 rows=14407 loops=5)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 1192kB
                                 Worker 0:  Sort Method: quicksort  Memory: 1145kB
                                 Worker 1:  Sort Method: quicksort  Memory: 1209kB
                                 Worker 2:  Sort Method: quicksort  Memory: 1232kB
                                 Worker 3:  Sort Method: quicksort  Memory: 1084kB
                                 ->  Parallel Hash Join  (cost=73267.48..645024.79 rows=17909 width=38) (actual time=391.036..1993.328 rows=14407 loops=5)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=69575.88..638982.31 rows=447787 width=50) (actual time=374.189..1865.489 rows=363065 loops=5)
                                             ->  Parallel Hash Join  (cost=69575.31..341619.51 rows=111960 width=38) (actual time=374.137..948.144 rows=90680 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=26782.33..296447.36 rows=559802 width=8) (actual time=245.982..654.120 rows=455328 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=53980
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..26222.53 rows=2239209 width=0) (actual time=189.909..189.909 rows=2276638 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=41855.53..41855.53 rows=74997 width=38) (actual time=127.602..127.605 rows=59887 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 25312kB
                                                         ->  Hash Join  (cost=2.51..41855.53 rows=74997 width=38) (actual time=0.143..96.621 rows=59887 loops=5)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..39696.85 rows=374985 width=8) (actual time=0.032..58.605 rows=300000 loops=5)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.101..0.103 rows=5 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.095..0.101 rows=5 loops=5)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.021..0.023 rows=25 loops=5)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.018..0.018 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=5)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.009..0.009 rows=4 loops=453399)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=15.659..15.659 rows=20000 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 5056kB
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.053..7.536 rows=20000 loops=5)
 Planning Time: 6.094 ms
 Execution Time: 2062.441 ms
(51 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1383203.10..1383203.11 rows=1 width=32) (actual time=10685.782..10718.673 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1383203.10..1383203.11 rows=1 width=32) (actual time=10685.781..10718.671 rows=1 loops=1)
         ->  Gather  (cost=1383202.67..1383203.08 rows=4 width=32) (actual time=10685.771..10718.663 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1382202.67..1382202.68 rows=1 width=32) (actual time=10676.420..10676.421 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=235148.63..1380681.71 rows=304192 width=12) (actual time=1344.592..10536.862 rows=238912 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Rows Removed by Index Recheck: 2744818
                           Heap Blocks: exact=78657 lossy=53309
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..234844.44 rows=1216770 width=0) (actual time=1259.013..1259.014 rows=1194558 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 21.438 ms
 Execution Time: 10720.105 ms
(14 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1383203.10..1383203.11 rows=1 width=32) (actual time=3116.105..3153.266 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1383203.10..1383203.11 rows=1 width=32) (actual time=3116.104..3153.264 rows=1 loops=1)
         ->  Gather  (cost=1383202.67..1383203.08 rows=4 width=32) (actual time=3116.092..3153.255 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1382202.67..1382202.68 rows=1 width=32) (actual time=3109.783..3109.784 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=235148.63..1380681.71 rows=304192 width=12) (actual time=1205.985..3002.635 rows=238912 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Rows Removed by Index Recheck: 2744818
                           Heap Blocks: exact=74465 lossy=49833
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..234844.44 rows=1216770 width=0) (actual time=1117.202..1117.203 rows=1194558 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 1.573 ms
 Execution Time: 3153.321 ms
(14 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1419949.09..1420989.72 rows=1 width=116) (actual time=34397.653..34403.034 rows=1 loops=1)
   ->  GroupAggregate  (cost=1419949.09..11863671.59 rows=10036 width=116) (actual time=34397.652..34403.032 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=1419949.09..11862621.16 rows=59993 width=96) (actual time=7389.205..34371.854 rows=14421 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 349035
               ->  Nested Loop  (cost=1419948.67..8210415.15 rows=1499824 width=76) (actual time=7388.722..29136.608 rows=363456 loops=1)
                     ->  Gather Merge  (cost=1419948.23..1599529.12 rows=1499824 width=76) (actual time=7387.534..7860.701 rows=363456 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=1418948.17..1419885.56 rows=374956 width=76) (actual time=7371.237..7413.784 rows=73105 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: external merge  Disk: 26400kB
                                 Worker 0:  Sort Method: external merge  Disk: 26880kB
                                 Worker 1:  Sort Method: external merge  Disk: 26600kB
                                 Worker 2:  Sort Method: external merge  Disk: 27264kB
                                 Worker 3:  Sort Method: external merge  Disk: 26808kB
                                 ->  Parallel Hash Join  (cost=3140.96..1372331.57 rows=374956 width=76) (actual time=15.453..7097.406 rows=291139 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..1350091.43 rows=4504950 width=24) (actual time=0.481..6538.152 rows=3646065 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 8351145
                                       ->  Parallel Hash  (cost=3079.76..3079.76 rows=4896 width=60) (actual time=14.550..14.553 rows=1596 loops=5)
                                             Buckets: 16384  Batches: 1  Memory Usage: 992kB
                                             ->  Hash Join  (cost=2.87..3079.76 rows=4896 width=60) (actual time=0.877..13.363 rows=1596 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.739..11.070 rows=20000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.129..0.131 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.119..0.125 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.050..0.051 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.032..0.034 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.012 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=8) (actual time=0.058..0.058 rows=1 loops=363456)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Only Scan using q10_idx_1 on customer  (cost=0.43..2.42 rows=1 width=8) (actual time=0.013..0.014 rows=1 loops=363456)
                     Index Cond: (c_custkey = orders.o_custkey)
                     Heap Fetches: 0
 Planning Time: 37.084 ms
 Execution Time: 34407.024 ms
(46 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1419949.09..1420989.72 rows=1 width=116) (actual time=5368.297..5374.045 rows=1 loops=1)
   ->  GroupAggregate  (cost=1419949.09..11863671.59 rows=10036 width=116) (actual time=5368.296..5374.043 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=1419949.09..11862621.16 rows=59993 width=96) (actual time=3227.593..5360.901 rows=14421 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 349037
               ->  Nested Loop  (cost=1419948.67..8210415.15 rows=1499824 width=76) (actual time=3226.781..4430.126 rows=363458 loops=1)
                     ->  Gather Merge  (cost=1419948.23..1599529.12 rows=1499824 width=76) (actual time=3226.732..3444.960 rows=363458 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=1418948.17..1419885.56 rows=374956 width=76) (actual time=3205.155..3234.084 rows=73113 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: external merge  Disk: 25600kB
                                 Worker 0:  Sort Method: external merge  Disk: 27424kB
                                 Worker 1:  Sort Method: external merge  Disk: 29152kB
                                 Worker 2:  Sort Method: external merge  Disk: 24528kB
                                 Worker 3:  Sort Method: external merge  Disk: 27248kB
                                 ->  Parallel Hash Join  (cost=3140.96..1372331.57 rows=374956 width=76) (actual time=12.813..2913.755 rows=291139 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..1350091.43 rows=4504950 width=24) (actual time=0.045..2293.310 rows=3646065 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 8351145
                                       ->  Parallel Hash  (cost=3079.76..3079.76 rows=4896 width=60) (actual time=10.662..10.665 rows=1596 loops=5)
                                             Buckets: 16384  Batches: 1  Memory Usage: 992kB
                                             ->  Hash Join  (cost=2.87..3079.76 rows=4896 width=60) (actual time=0.136..9.421 rows=1596 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.038..7.098 rows=20000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.093..0.094 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.083..0.089 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.063..0.065 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.007..0.009 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.012 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=363458)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Only Scan using q10_idx_1 on customer  (cost=0.43..2.42 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=363458)
                     Index Cond: (c_custkey = orders.o_custkey)
                     Heap Fetches: 0
 Planning Time: 5.050 ms
 Execution Time: 5377.700 ms
(46 rows)

query 8 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=384751.75..384905.61 rows=1 width=64) (actual time=6881.336..6889.642 rows=1 loops=1)
   ->  GroupAggregate  (cost=384751.75..754955.36 rows=2406 width=64) (actual time=6881.335..6889.640 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=384751.75..754425.66 rows=24079 width=70) (actual time=3236.177..6872.850 rows=11818 loops=1)
               ->  Nested Loop  (cost=384751.60..753747.73 rows=24079 width=20) (actual time=3236.155..6854.716 rows=11818 loops=1)
                     ->  Nested Loop  (cost=384751.18..695678.32 rows=24079 width=20) (actual time=3235.922..6646.312 rows=11818 loops=1)
                           Join Filter: (n1.n_regionkey = region.r_regionkey)
                           Rows Removed by Join Filter: 47507
                           ->  Nested Loop  (cost=384751.18..693871.33 rows=120395 width=24) (actual time=3233.645..6619.422 rows=59325 loops=1)
                                 ->  Nested Loop  (cost=384751.03..690899.05 rows=120395 width=24) (actual time=3233.379..6557.901 rows=59325 loops=1)
                                       ->  Gather Merge  (cost=384750.61..399166.06 rows=120395 width=24) (actual time=3232.701..3279.201 rows=59325 loops=1)
                                             Workers Planned: 4
                                             Workers Launched: 4
                                             ->  Sort  (cost=383750.55..383825.80 rows=30099 width=24) (actual time=3224.310..3225.480 rows=12606 loops=5)
                                                   Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                                   Sort Method: quicksort  Memory: 1984kB
                                                   Worker 0:  Sort Method: quicksort  Memory: 2001kB
                                                   Worker 1:  Sort Method: quicksort  Memory: 2057kB
                                                   Worker 2:  Sort Method: quicksort  Memory: 2041kB
                                                   Worker 3:  Sort Method: quicksort  Memory: 2015kB
                                                   ->  Parallel Hash Join  (cost=59670.67..381511.57 rows=30099 width=24) (actual time=1163.014..3212.888 rows=23719 loops=5)
                                                         Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..317511.98 rows=1134313 width=12) (actual time=0.401..1824.975 rows=911503 loops=5)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 2088497
                                                         ->  Parallel Hash  (cost=58426.98..58426.98 rows=99495 width=20) (actual time=1161.781..1161.783 rows=77904 loops=5)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 25504kB
                                                               ->  Nested Loop  (cost=0.56..58426.98 rows=99495 width=20) (actual time=1.079..1129.996 rows=77904 loops=5)
                                                                     ->  Parallel Seq Scan on part  (cost=0.00..47231.47 rows=3318 width=4) (actual time=0.545..124.607 rows=2602 loops=5)
                                                                           Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                           Rows Removed by Filter: 397398
                                                                     ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.07 rows=30 width=24) (actual time=0.314..0.382 rows=30 loops=13011)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                       ->  Index Only Scan using q10_idx_1 on customer  (cost=0.43..2.42 rows=1 width=8) (actual time=0.055..0.055 rows=1 loops=59325)
                                             Index Cond: (c_custkey = orders.o_custkey)
                                             Heap Fetches: 0
                                 ->  Memoize  (cost=0.15..1.17 rows=1 width=8) (actual time=0.000..0.000 rows=1 loops=59325)
                                       Cache Key: customer.c_nationkey
                                       Cache Mode: logical
                                       Hits: 59300  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 3kB
                                       ->  Index Scan using nation_pkey on nation n1  (cost=0.14..1.16 rows=1 width=8) (actual time=0.014..0.014 rows=1 loops=25)
                                             Index Cond: (n_nationkey = customer.c_nationkey)
                           ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=59325)
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.254..0.256 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                     ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.42..2.41 rows=1 width=8) (actual time=0.017..0.017 rows=1 loops=11818)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Heap Fetches: 0
               ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=11818)
                     Cache Key: supplier.s_nationkey
                     Cache Mode: logical
                     Hits: 11793  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                     ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.004..0.004 rows=1 loops=25)
                           Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 44.537 ms
 Execution Time: 6890.533 ms
(58 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=384751.75..384905.61 rows=1 width=64) (actual time=1128.860..1139.142 rows=1 loops=1)
   ->  GroupAggregate  (cost=384751.75..754955.36 rows=2406 width=64) (actual time=1128.859..1139.140 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=384751.75..754425.66 rows=24079 width=70) (actual time=867.639..1131.242 rows=11818 loops=1)
               ->  Nested Loop  (cost=384751.60..753747.73 rows=24079 width=20) (actual time=867.631..1122.219 rows=11818 loops=1)
                     ->  Nested Loop  (cost=384751.18..695678.32 rows=24079 width=20) (actual time=867.615..1094.123 rows=11818 loops=1)
                           Join Filter: (n1.n_regionkey = region.r_regionkey)
                           Rows Removed by Join Filter: 47508
                           ->  Nested Loop  (cost=384751.18..693871.33 rows=120395 width=24) (actual time=867.601..1078.514 rows=59326 loops=1)
                                 ->  Nested Loop  (cost=384751.03..690899.05 rows=120395 width=24) (actual time=867.589..1050.943 rows=59326 loops=1)
                                       ->  Gather Merge  (cost=384750.61..399166.06 rows=120395 width=24) (actual time=867.543..897.705 rows=59326 loops=1)
                                             Workers Planned: 4
                                             Workers Launched: 4
                                             ->  Sort  (cost=383750.55..383825.80 rows=30099 width=24) (actual time=861.177..861.935 rows=12594 loops=5)
                                                   Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                                   Sort Method: quicksort  Memory: 1859kB
                                                   Worker 0:  Sort Method: quicksort  Memory: 2049kB
                                                   Worker 1:  Sort Method: quicksort  Memory: 2189kB
                                                   Worker 2:  Sort Method: quicksort  Memory: 1850kB
                                                   Worker 3:  Sort Method: quicksort  Memory: 2150kB
                                                   ->  Parallel Hash Join  (cost=59670.67..381511.57 rows=30099 width=24) (actual time=150.489..851.590 rows=23719 loops=5)
                                                         Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..317511.98 rows=1134313 width=12) (actual time=0.278..454.906 rows=911503 loops=5)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 2088497
                                                         ->  Parallel Hash  (cost=58426.98..58426.98 rows=99495 width=20) (actual time=148.392..148.394 rows=77904 loops=5)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 25536kB
                                                               ->  Nested Loop  (cost=0.56..58426.98 rows=99495 width=20) (actual time=0.068..110.193 rows=77904 loops=5)
                                                                     ->  Parallel Seq Scan on part  (cost=0.00..47231.47 rows=3318 width=4) (actual time=0.034..63.518 rows=2602 loops=5)
                                                                           Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                           Rows Removed by Filter: 397398
                                                                     ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.07 rows=30 width=24) (actual time=0.007..0.015 rows=30 loops=13011)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                       ->  Index Only Scan using q10_idx_1 on customer  (cost=0.43..2.42 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=59326)
                                             Index Cond: (c_custkey = orders.o_custkey)
                                             Heap Fetches: 0
                                 ->  Memoize  (cost=0.15..1.17 rows=1 width=8) (actual time=0.000..0.000 rows=1 loops=59326)
                                       Cache Key: customer.c_nationkey
                                       Cache Mode: logical
                                       Hits: 59301  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 3kB
                                       ->  Index Scan using nation_pkey on nation n1  (cost=0.14..1.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=25)
                                             Index Cond: (n_nationkey = customer.c_nationkey)
                           ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=59326)
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                     ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.42..2.41 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=11818)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Heap Fetches: 0
               ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=11818)
                     Cache Key: supplier.s_nationkey
                     Cache Mode: logical
                     Hits: 11793  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                     ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=25)
                           Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 6.067 ms
 Execution Time: 1139.455 ms
(58 rows)

query 9 run 1
SET
SET
SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=558106.51..558236.71 rows=1 width=90) (actual time=10361.711..10417.569 rows=1 loops=1)
   ->  GroupAggregate  (cost=558106.51..8389495.35 rows=60150 width=90) (actual time=10361.710..10417.566 rows=1 loops=1)
         Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=558106.51..8335574.78 rows=3029618 width=81) (actual time=9105.287..10394.259 rows=11401 loops=1)
               Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Gather Merge  (cost=558106.08..920856.30 rows=3029618 width=63) (actual time=9104.327..9175.733 rows=11401 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=557106.02..558999.53 rows=757404 width=63) (actual time=9047.616..9049.415 rows=2753 loops=5)
                           Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
                           Sort Method: external merge  Disk: 52032kB
                           Worker 0:  Sort Method: external merge  Disk: 50472kB
                           Worker 1:  Sort Method: external merge  Disk: 47104kB
                           Worker 2:  Sort Method: external merge  Disk: 52840kB
                           Worker 3:  Sort Method: external merge  Disk: 54808kB
                           ->  Hash Join  (cost=145756.64..462800.35 rows=757404 width=63) (actual time=5225.035..7862.707 rows=649638 loops=5)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=145755.07..460473.56 rows=757404 width=41) (actual time=5224.908..7634.923 rows=649638 loops=5)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..298763.98 rows=3749598 width=8) (actual time=0.563..1175.541 rows=3000000 loops=5)
                                       ->  Parallel Hash  (cost=136287.52..136287.52 rows=757404 width=41) (actual time=5220.347..5220.368 rows=649638 loops=5)
                                             Buckets: 4194304  Batches: 1  Memory Usage: 286688kB
                                             ->  Parallel Hash Join  (cost=3545.53..136287.52 rows=757404 width=41) (actual time=29.411..4872.713 rows=649638 loops=5)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.99..130754.71 rows=757404 width=33) (actual time=1.472..4655.774 rows=649638 loops=5)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.43..45557.65 rows=25254 width=4) (actual time=0.231..184.508 rows=21662 loops=5)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 378338
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.07 rows=30 width=29) (actual time=0.173..0.202 rows=30 loops=108312)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=27.667..27.668 rows=20000 loops=5)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 4992kB
                                                         ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.983..21.746 rows=20000 loops=5)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.059..0.060 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.047..0.050 rows=25 loops=5)
               ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..2.43 rows=1 width=14) (actual time=0.105..0.105 rows=1 loops=11401)
                     Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                     Heap Fetches: 0
 Planning Time: 44.796 ms
 Execution Time: 10426.241 ms
(43 rows)

SET
SET
SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=558106.51..558236.71 rows=1 width=90) (actual time=4464.588..4535.008 rows=1 loops=1)
   ->  GroupAggregate  (cost=558106.51..8389495.35 rows=60150 width=90) (actual time=4464.586..4535.006 rows=1 loops=1)
         Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=558106.51..8335574.78 rows=3029618 width=81) (actual time=4410.546..4525.827 rows=11401 loops=1)
               Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Gather Merge  (cost=558106.08..920856.30 rows=3029618 width=63) (actual time=4410.490..4487.268 rows=11401 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=557106.02..558999.53 rows=757404 width=63) (actual time=4354.211..4355.567 rows=2768 loops=5)
                           Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
                           Sort Method: external merge  Disk: 48440kB
                           Worker 0:  Sort Method: external merge  Disk: 52816kB
                           Worker 1:  Sort Method: external merge  Disk: 54160kB
                           Worker 2:  Sort Method: external merge  Disk: 53768kB
                           Worker 3:  Sort Method: external merge  Disk: 48072kB
                           ->  Hash Join  (cost=145756.64..462800.35 rows=757404 width=63) (actual time=1152.279..3108.241 rows=649638 loops=5)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=145755.07..460473.56 rows=757404 width=41) (actual time=1152.189..2858.431 rows=649638 loops=5)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..298763.98 rows=3749598 width=8) (actual time=0.054..328.866 rows=3000000 loops=5)
                                       ->  Parallel Hash  (cost=136287.52..136287.52 rows=757404 width=41) (actual time=1147.443..1147.446 rows=649638 loops=5)
                                             Buckets: 4194304  Batches: 1  Memory Usage: 286688kB
                                             ->  Parallel Hash Join  (cost=3545.53..136287.52 rows=757404 width=41) (actual time=11.601..781.810 rows=649638 loops=5)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.99..130754.71 rows=757404 width=33) (actual time=1.287..581.930 rows=649638 loops=5)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.43..45557.65 rows=25254 width=4) (actual time=1.257..169.009 rows=21662 loops=5)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 378338
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.07 rows=30 width=29) (actual time=0.006..0.015 rows=30 loops=108312)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=10.095..10.095 rows=20000 loops=5)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 5024kB
                                                         ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.015..3.745 rows=20000 loops=5)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.022..0.023 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.013 rows=25 loops=5)
               ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..2.43 rows=1 width=14) (actual time=0.003..0.003 rows=1 loops=11401)
                     Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                     Heap Fetches: 0
 Planning Time: 7.747 ms
 Execution Time: 4541.348 ms
(43 rows)

query 10 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=788706.62..788706.67 rows=20 width=201) (actual time=12425.640..12477.454 rows=20 loops=1)
   ->  Sort  (cost=788706.62..790121.75 rows=566052 width=201) (actual time=12425.639..12477.451 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=691716.85..773644.18 rows=566052 width=201) (actual time=11388.375..12352.368 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather Merge  (cost=691716.85..759492.88 rows=566052 width=181) (actual time=11388.358..11652.099 rows=1145402 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=690716.79..691070.57 rows=141513 width=181) (actual time=11369.901..11395.470 rows=229080 loops=5)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 43808kB
                           Worker 0:  Sort Method: external merge  Disk: 44712kB
                           Worker 1:  Sort Method: external merge  Disk: 42760kB
                           Worker 2:  Sort Method: external merge  Disk: 44304kB
                           Worker 3:  Sort Method: external merge  Disk: 42944kB
                           ->  Nested Loop  (cost=271900.46..678609.95 rows=141513 width=181) (actual time=4219.810..11216.078 rows=229080 loops=5)
                                 ->  Hash Join  (cost=271899.90..315194.95 rows=141079 width=173) (actual time=4218.549..4535.634 rows=114632 loops=5)
                                       Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                       ->  Parallel Hash Join  (cost=271898.33..314760.27 rows=141079 width=151) (actual time=4218.425..4492.294 rows=114632 loops=5)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..39696.85 rows=374985 width=147) (actual time=0.469..84.887 rows=300000 loops=5)
                                             ->  Parallel Hash  (cost=270134.85..270134.85 rows=141079 width=8) (actual time=4216.881..4216.882 rows=114632 loops=5)
                                                   Buckets: 1048576  Batches: 1  Memory Usage: 30720kB
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=6750.66..270134.85 rows=141079 width=8) (actual time=134.811..4160.790 rows=114632 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=46514
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6609.59 rows=564315 width=0) (actual time=87.649..87.649 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.050..0.051 rows=25 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.042..0.045 rows=25 loops=5)
                                 ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..2.57 rows=1 width=16) (actual time=0.057..0.058 rows=2 loops=573160)
                                       Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                       Heap Fetches: 0
 Planning Time: 38.811 ms
 Execution Time: 12483.982 ms
(37 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=788706.62..788706.67 rows=20 width=201) (actual time=3319.956..3373.097 rows=20 loops=1)
   ->  Sort  (cost=788706.62..790121.75 rows=566052 width=201) (actual time=3319.955..3373.094 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=691716.85..773644.18 rows=566052 width=201) (actual time=2276.500..3246.181 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather Merge  (cost=691716.85..759492.88 rows=566052 width=181) (actual time=2276.483..2539.654 rows=1145402 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=690716.79..691070.57 rows=141513 width=181) (actual time=2262.058..2287.736 rows=229080 loops=5)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 46112kB
                           Worker 0:  Sort Method: external merge  Disk: 47552kB
                           Worker 1:  Sort Method: external merge  Disk: 40848kB
                           Worker 2:  Sort Method: external merge  Disk: 40840kB
                           Worker 3:  Sort Method: external merge  Disk: 43168kB
                           ->  Nested Loop  (cost=271900.46..678609.95 rows=141513 width=181) (actual time=710.363..2106.455 rows=229080 loops=5)
                                 ->  Hash Join  (cost=271899.90..315194.95 rows=141079 width=173) (actual time=710.283..994.228 rows=114632 loops=5)
                                       Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                       ->  Parallel Hash Join  (cost=271898.33..314760.27 rows=141079 width=151) (actual time=710.191..956.424 rows=114632 loops=5)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..39696.85 rows=374985 width=147) (actual time=0.033..61.072 rows=300000 loops=5)
                                             ->  Parallel Hash  (cost=270134.85..270134.85 rows=141079 width=8) (actual time=708.304..708.305 rows=114632 loops=5)
                                                   Buckets: 1048576  Batches: 1  Memory Usage: 30688kB
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=6750.66..270134.85 rows=141079 width=8) (actual time=133.302..659.903 rows=114632 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=48185
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6609.59 rows=564315 width=0) (actual time=84.143..84.143 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.020..0.021 rows=25 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.012..0.015 rows=25 loops=5)
                                 ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..2.57 rows=1 width=16) (actual time=0.009..0.009 rows=2 loops=573160)
                                       Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                       Heap Fetches: 0
 Planning Time: 2.879 ms
 Execution Time: 3379.387 ms
(37 rows)

query 11 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=467672.58..467672.58 rows=1 width=36) (actual time=2047.524..2047.663 rows=0 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=207454.72..207454.73 rows=1 width=32) (actual time=410.637..410.722 rows=1 loops=1)
           ->  Gather  (cost=207454.29..207454.70 rows=4 width=32) (actual time=410.538..410.712 rows=4 loops=1)
                 Workers Planned: 4
                 Workers Launched: 3
                 ->  Partial Aggregate  (cost=206454.29..206454.30 rows=1 width=32) (actual time=407.594..407.596 rows=1 loops=4)
                       ->  Hash Join  (cost=2341.31..205854.28 rows=80000 width=10) (actual time=4.347..387.122 rows=80200 loops=4)
                             Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                             ->  Parallel Seq Scan on partsupp partsupp_1  (cost=0.00..195222.00 rows=2000000 width=14) (actual time=0.035..171.788 rows=2000000 loops=4)
                             ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=4.230..4.232 rows=4010 loops=4)
                                   Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                   ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=0.798..3.712 rows=4010 loops=4)
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.015 rows=1 loops=4)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                                         ->  Bitmap Heap Scan on supplier supplier_1  (cost=39.29..2250.00 rows=4000 width=8) (actual time=0.783..3.336 rows=4010 loops=4)
                                               Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                               Heap Blocks: exact=1869
                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.538..0.538 rows=4010 loops=4)
                                                     Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=260217.85..260484.51 rows=106667 width=36) (actual time=2047.523..2047.576 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=213369.43..259684.51 rows=106667 width=36) (actual time=2047.516..2047.569 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Rows Removed by Filter: 301833
               ->  Gather Merge  (cost=213369.43..251684.51 rows=320000 width=14) (actual time=1416.507..1457.899 rows=320800 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=212369.37..212569.37 rows=80000 width=14) (actual time=1406.631..1409.553 rows=64160 loops=5)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: quicksort  Memory: 5126kB
                           Worker 0:  Sort Method: quicksort  Memory: 3528kB
                           Worker 1:  Sort Method: quicksort  Memory: 3552kB
                           Worker 2:  Sort Method: quicksort  Memory: 3509kB
                           Worker 3:  Sort Method: quicksort  Memory: 3529kB
                           ->  Hash Join  (cost=2341.31..205854.28 rows=80000 width=14) (actual time=36.388..1397.442 rows=64160 loops=5)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Parallel Seq Scan on partsupp  (cost=0.00..195222.00 rows=2000000 width=18) (actual time=0.415..1158.383 rows=1600000 loops=5)
                                 ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=35.840..35.842 rows=4010 loops=5)
                                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                       ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=1.138..34.579 rows=4010 loops=5)
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.179..0.182 rows=1 loops=5)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 24
                                             ->  Bitmap Heap Scan on supplier  (cost=39.29..2250.00 rows=4000 width=8) (actual time=0.956..33.735 rows=4010 loops=5)
                                                   Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                   Heap Blocks: exact=1869
                                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.585..0.585 rows=4010 loops=5)
                                                         Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 17.384 ms
 Execution Time: 2048.048 ms
(54 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=467672.58..467672.58 rows=1 width=36) (actual time=1030.568..1030.712 rows=0 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=207454.72..207454.73 rows=1 width=32) (actual time=408.054..408.144 rows=1 loops=1)
           ->  Gather  (cost=207454.29..207454.70 rows=4 width=32) (actual time=407.914..408.132 rows=4 loops=1)
                 Workers Planned: 4
                 Workers Launched: 3
                 ->  Partial Aggregate  (cost=206454.29..206454.30 rows=1 width=32) (actual time=405.005..405.008 rows=1 loops=4)
                       ->  Hash Join  (cost=2341.31..205854.28 rows=80000 width=10) (actual time=4.444..384.555 rows=80200 loops=4)
                             Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                             ->  Parallel Seq Scan on partsupp partsupp_1  (cost=0.00..195222.00 rows=2000000 width=14) (actual time=0.044..171.126 rows=2000000 loops=4)
                             ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=4.310..4.312 rows=4010 loops=4)
                                   Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                   ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=0.854..3.789 rows=4010 loops=4)
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.016 rows=1 loops=4)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                                         ->  Bitmap Heap Scan on supplier supplier_1  (cost=39.29..2250.00 rows=4000 width=8) (actual time=0.839..3.410 rows=4010 loops=4)
                                               Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                               Heap Blocks: exact=1869
                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.580..0.580 rows=4010 loops=4)
                                                     Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=260217.85..260484.51 rows=106667 width=36) (actual time=1030.567..1030.621 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=213369.43..259684.51 rows=106667 width=36) (actual time=1030.559..1030.613 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Rows Removed by Filter: 301833
               ->  Gather Merge  (cost=213369.43..251684.51 rows=320000 width=14) (actual time=402.427..443.958 rows=320800 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=212369.37..212569.37 rows=80000 width=14) (actual time=397.714..400.645 rows=64160 loops=5)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: quicksort  Memory: 5273kB
                           Worker 0:  Sort Method: quicksort  Memory: 5581kB
                           Worker 1:  Sort Method: quicksort  Memory: 3484kB
                           Worker 2:  Sort Method: quicksort  Memory: 3075kB
                           Worker 3:  Sort Method: quicksort  Memory: 3367kB
                           ->  Hash Join  (cost=2341.31..205854.28 rows=80000 width=14) (actual time=5.794..387.541 rows=64160 loops=5)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Parallel Seq Scan on partsupp  (cost=0.00..195222.00 rows=2000000 width=18) (actual time=0.037..166.709 rows=1600000 loops=5)
                                 ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=5.649..5.651 rows=4010 loops=5)
                                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                       ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=0.712..5.116 rows=4010 loops=5)
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.016 rows=1 loops=5)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 24
                                             ->  Bitmap Heap Scan on supplier  (cost=39.29..2250.00 rows=4000 width=8) (actual time=0.696..4.733 rows=4010 loops=5)
                                                   Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                   Heap Blocks: exact=1869
                                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.457..0.457 rows=4010 loops=5)
                                                         Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 1.531 ms
 Execution Time: 1030.784 ms
(54 rows)

query 12 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=154922.92..344653.06 rows=1 width=27) (actual time=11654.593..11659.934 rows=1 loops=1)
   ->  GroupAggregate  (cost=154922.92..1483033.96 rows=7 width=27) (actual time=11654.592..11659.932 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=154922.92..1477918.94 rows=292283 width=27) (actual time=552.267..11542.036 rows=155572 loops=1)
               ->  Gather Merge  (cost=154922.48..189918.88 rows=292283 width=15) (actual time=551.522..646.398 rows=155572 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=153922.42..154105.10 rows=73071 width=15) (actual time=542.186..545.463 rows=32380 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 3335kB
                           Worker 0:  Sort Method: quicksort  Memory: 3476kB
                           Worker 1:  Sort Method: quicksort  Memory: 3505kB
                           Worker 2:  Sort Method: quicksort  Memory: 3543kB
                           Worker 3:  Sort Method: quicksort  Memory: 3549kB
                           ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.43..148019.38 rows=73071 width=15) (actual time=0.283..529.446 rows=62252 loops=5)
                                 Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Heap Fetches: 0
               ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=20) (actual time=0.069..0.069 rows=1 loops=155572)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 29.772 ms
 Execution Time: 11660.309 ms
(21 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=154922.92..344653.06 rows=1 width=27) (actual time=857.600..863.257 rows=1 loops=1)
   ->  GroupAggregate  (cost=154922.92..1483033.96 rows=7 width=27) (actual time=857.599..863.256 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=154922.92..1477918.94 rows=292283 width=27) (actual time=353.458..814.281 rows=155572 loops=1)
               ->  Gather Merge  (cost=154922.48..189918.88 rows=292283 width=15) (actual time=353.393..394.927 rows=155572 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=153922.42..154105.10 rows=73071 width=15) (actual time=348.926..351.047 rows=32235 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 5454kB
                           Worker 0:  Sort Method: quicksort  Memory: 5448kB
                           Worker 1:  Sort Method: quicksort  Memory: 2832kB
                           Worker 2:  Sort Method: quicksort  Memory: 5405kB
                           Worker 3:  Sort Method: quicksort  Memory: 2879kB
                           ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.43..148019.38 rows=73071 width=15) (actual time=0.767..337.279 rows=62252 loops=5)
                                 Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Heap Fetches: 0
               ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=155572)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 1.926 ms
 Execution Time: 863.325 ms
(21 rows)

query 13 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1430393.27..1430393.27 rows=1 width=16) (actual time=16753.100..16753.102 rows=1 loops=1)
   ->  Sort  (cost=1430393.27..1430393.77 rows=200 width=16) (actual time=16753.098..16753.101 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1430390.27..1430392.27 rows=200 width=16) (actual time=16753.072..16753.079 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1275728.51..1407891.15 rows=1499941 width=12) (actual time=14648.350..16582.759 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 212480kB
                     ->  Hash Right Join  (cost=55340.81..666479.69 rows=14996894 width=8) (actual time=376.054..10801.275 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448747.93 rows=14996894 width=8) (actual time=0.820..5026.861 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=30731.54..30731.54 rows=1499941 width=4) (actual time=370.637..370.638 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 2  Memory Usage: 42747kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30731.54 rows=1499941 width=4) (actual time=0.407..166.522 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 18.661 ms
 Execution Time: 16787.761 ms
(21 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1430393.27..1430393.27 rows=1 width=16) (actual time=16208.461..16208.465 rows=1 loops=1)
   ->  Sort  (cost=1430393.27..1430393.77 rows=200 width=16) (actual time=16208.460..16208.462 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1430390.27..1430392.27 rows=200 width=16) (actual time=16208.434..16208.442 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1275728.51..1407891.15 rows=1499941 width=12) (actual time=14064.384..16035.961 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 212480kB
                     ->  Hash Right Join  (cost=55340.81..666479.69 rows=14996894 width=8) (actual time=336.685..10259.311 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448747.93 rows=14996894 width=8) (actual time=0.038..4557.530 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=30731.54..30731.54 rows=1499941 width=4) (actual time=334.074..334.075 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 2  Memory Usage: 42747kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30731.54 rows=1499941 width=4) (actual time=0.033..133.552 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.859 ms
 Execution Time: 16242.045 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=911398.33..911398.34 rows=1 width=32) (actual time=5236.571..5268.188 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=911398.33..911398.34 rows=1 width=32) (actual time=5236.570..5268.186 rows=1 loops=1)
         ->  Gather  (cost=911397.87..911398.28 rows=4 width=64) (actual time=5229.527..5268.155 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=910397.87..910397.88 rows=1 width=64) (actual time=5220.847..5220.849 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=65493.12..907168.17 rows=184554 width=33) (actual time=642.114..5068.723 rows=154588 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=13261.27..854451.87 rows=184554 width=16) (actual time=287.037..4531.660 rows=154588 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=83757
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..13076.72 rows=738215 width=0) (actual time=186.961..186.962 rows=772942 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=45981.38..45981.38 rows=500038 width=25) (actual time=352.831..352.831 rows=400000 loops=5)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 137280kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..45981.38 rows=500038 width=25) (actual time=0.513..188.857 rows=400000 loops=5)
 Planning Time: 27.811 ms
 Execution Time: 5268.979 ms
(18 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=911398.33..911398.34 rows=1 width=32) (actual time=1655.403..1704.925 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=911398.33..911398.34 rows=1 width=32) (actual time=1655.402..1704.922 rows=1 loops=1)
         ->  Gather  (cost=911397.87..911398.28 rows=4 width=64) (actual time=1646.723..1704.899 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=910397.87..910397.88 rows=1 width=64) (actual time=1641.626..1641.629 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=65493.12..907168.17 rows=184554 width=33) (actual time=519.855..1530.704 rows=154588 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=13261.27..854451.87 rows=184554 width=16) (actual time=269.116..1135.269 rows=154588 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=81358
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..13076.72 rows=738215 width=0) (actual time=169.314..169.314 rows=772942 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=45981.38..45981.38 rows=500038 width=25) (actual time=248.677..248.677 rows=400000 loops=5)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 137312kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..45981.38 rows=500038 width=25) (actual time=0.054..79.846 rows=400000 loops=5)
 Planning Time: 2.475 ms
 Execution Time: 1704.974 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2739267.27..2739375.18 rows=1 width=103) (actual time=13011.811..13063.072 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=1387929.72..1387929.73 rows=1 width=32) (actual time=2809.833..2819.525 rows=1 loops=1)
           ->  Finalize HashAggregate  (cost=1385471.02..1386700.37 rows=98348 width=36) (actual time=2766.465..2813.663 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 54289kB
                 ->  Gather  (cost=1341952.03..1382520.58 rows=393392 width=36) (actual time=2454.827..2537.004 rows=398600 loops=1)
                       Workers Planned: 4
                       Workers Launched: 3
                       ->  Partial HashAggregate  (cost=1340952.03..1342181.38 rows=98348 width=36) (actual time=2450.210..2495.988 rows=99650 loops=4)
                             Group Key: lineitem_1.l_suppkey
                             Batches: 1  Memory Usage: 39953kB
                             Worker 0:  Batches: 1  Memory Usage: 39953kB
                             Worker 1:  Batches: 1  Memory Usage: 39953kB
                             Worker 2:  Batches: 1  Memory Usage: 39953kB
                             ->  Parallel Bitmap Heap Scan on lineitem lineitem_1  (cost=39884.68..1335400.78 rows=555125 width=16) (actual time=426.656..1999.722 rows=566428 loops=4)
                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                   Rows Removed by Index Recheck: 3305913
                                   Heap Blocks: exact=105586 lossy=70807
                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39329.56 rows=2220499 width=0) (actual time=336.631..336.631 rows=2265714 loops=1)
                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=1351337.54..1404430.99 rows=492 width=103) (actual time=13011.810..13053.377 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=1351337.25..1402865.55 rows=492 width=36) (actual time=13011.037..13052.603 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
               Rows Removed by Filter: 69997
               ->  Gather Merge  (cost=1351337.25..1398439.89 rows=393392 width=36) (actual time=10011.457..10116.461 rows=346211 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1350337.19..1350583.06 rows=98348 width=36) (actual time=9980.765..9988.754 rows=69729 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 11573kB
                           Worker 0:  Sort Method: quicksort  Memory: 11573kB
                           Worker 1:  Sort Method: quicksort  Memory: 11579kB
                           Worker 2:  Sort Method: quicksort  Memory: 11569kB
                           Worker 3:  Sort Method: quicksort  Memory: 11571kB
                           ->  Partial HashAggregate  (cost=1340952.03..1342181.38 rows=98348 width=36) (actual time=9896.846..9955.293 rows=98917 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 39953kB
                                 Worker 0:  Batches: 1  Memory Usage: 39953kB
                                 Worker 1:  Batches: 1  Memory Usage: 39953kB
                                 Worker 2:  Batches: 1  Memory Usage: 39953kB
                                 Worker 3:  Batches: 1  Memory Usage: 39953kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=39884.68..1335400.78 rows=555125 width=16) (actual time=472.558..9408.343 rows=453143 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Rows Removed by Index Recheck: 2644730
                                       Heap Blocks: exact=79554 lossy=52735
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39329.56 rows=2220499 width=0) (actual time=387.250..387.250 rows=2265714 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.17 rows=1 width=71) (actual time=0.767..0.767 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 22.296 ms
 Execution Time: 13065.308 ms
(53 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2739267.27..2739375.18 rows=1 width=103) (actual time=5733.618..5785.037 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=1387929.72..1387929.73 rows=1 width=32) (actual time=2811.023..2820.937 rows=1 loops=1)
           ->  Finalize HashAggregate  (cost=1385471.02..1386700.37 rows=98348 width=36) (actual time=2767.397..2815.094 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 56337kB
                 ->  Gather  (cost=1341952.03..1382520.58 rows=393392 width=36) (actual time=2457.691..2538.990 rows=398641 loops=1)
                       Workers Planned: 4
                       Workers Launched: 3
                       ->  Partial HashAggregate  (cost=1340952.03..1342181.38 rows=98348 width=36) (actual time=2452.948..2498.913 rows=99660 loops=4)
                             Group Key: lineitem_1.l_suppkey
                             Batches: 1  Memory Usage: 39953kB
                             Worker 0:  Batches: 1  Memory Usage: 39953kB
                             Worker 1:  Batches: 1  Memory Usage: 39953kB
                             Worker 2:  Batches: 1  Memory Usage: 39953kB
                             ->  Parallel Bitmap Heap Scan on lineitem lineitem_1  (cost=39884.68..1335400.78 rows=555125 width=16) (actual time=429.603..2003.171 rows=566428 loops=4)
                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                   Rows Removed by Index Recheck: 3305913
                                   Heap Blocks: exact=104829 lossy=69893
                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39329.56 rows=2220499 width=0) (actual time=339.064..339.064 rows=2265714 loops=1)
                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=1351337.54..1404430.99 rows=492 width=103) (actual time=5733.617..5775.121 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=1351337.25..1402865.55 rows=492 width=36) (actual time=5733.565..5775.068 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
               Rows Removed by Filter: 69997
               ->  Gather Merge  (cost=1351337.25..1398439.89 rows=393392 width=36) (actual time=2736.841..2840.337 rows=346114 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1350337.19..1350583.06 rows=98348 width=36) (actual time=2706.419..2714.095 rows=69682 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 11586kB
                           Worker 0:  Sort Method: quicksort  Memory: 11537kB
                           Worker 1:  Sort Method: quicksort  Memory: 11592kB
                           Worker 2:  Sort Method: quicksort  Memory: 11552kB
                           Worker 3:  Sort Method: quicksort  Memory: 11589kB
                           ->  Partial HashAggregate  (cost=1340952.03..1342181.38 rows=98348 width=36) (actual time=2621.908..2682.373 rows=98894 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 39953kB
                                 Worker 0:  Batches: 1  Memory Usage: 39953kB
                                 Worker 1:  Batches: 1  Memory Usage: 39953kB
                                 Worker 2:  Batches: 1  Memory Usage: 39953kB
                                 Worker 3:  Batches: 1  Memory Usage: 39953kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=39884.68..1335400.78 rows=555125 width=16) (actual time=436.915..2170.729 rows=453143 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Rows Removed by Index Recheck: 2644730
                                       Heap Blocks: exact=83031 lossy=54674
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39329.56 rows=2220499 width=0) (actual time=349.941..349.942 rows=2265714 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.17 rows=1 width=71) (actual time=0.047..0.047 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 2.416 ms
 Execution Time: 5787.081 ms
(53 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=264420.09..264420.10 rows=1 width=44) (actual time=2850.682..2858.390 rows=1 loops=1)
   ->  Sort  (cost=264420.09..264807.66 rows=155026 width=44) (actual time=2850.681..2858.388 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=183441.65..263644.96 rows=155026 width=44) (actual time=2199.571..2852.855 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=183441.65..256032.09 rows=606261 width=40) (actual time=2199.519..2691.695 rows=1186319 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=182441.59..182820.51 rows=151565 width=40) (actual time=2096.347..2112.255 rows=237264 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 19205kB
                           Worker 0:  Sort Method: quicksort  Memory: 20816kB
                           Worker 1:  Sort Method: quicksort  Memory: 20415kB
                           Worker 2:  Sort Method: quicksort  Memory: 20131kB
                           Worker 3:  Sort Method: quicksort  Memory: 20147kB
                           ->  Parallel Hash Join  (cost=57900.74..169399.74 rows=151565 width=40) (actual time=341.663..1154.719 rows=237264 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..112345.46 rows=1000000 width=8) (actual time=37.133..640.923 rows=1599104 loops=5)
                                       Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                       Rows Removed by Filter: 896
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=1.243..36.309 rows=56 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 99944
                                 ->  Parallel Hash  (cost=53481.94..53481.94 rows=75788 width=40) (actual time=303.816..303.817 rows=59347 loops=5)
                                       Buckets: 524288  Batches: 1  Memory Usage: 26368kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..53481.94 rows=75788 width=40) (actual time=0.294..279.348 rows=59347 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 340653
 Planning Time: 19.717 ms
 Execution Time: 2858.700 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=264420.09..264420.10 rows=1 width=44) (actual time=2617.390..2623.494 rows=1 loops=1)
   ->  Sort  (cost=264420.09..264807.66 rows=155026 width=44) (actual time=2617.389..2623.492 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=183441.65..263644.96 rows=155026 width=44) (actual time=1965.578..2617.971 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=183441.65..256032.09 rows=606261 width=40) (actual time=1965.525..2457.451 rows=1186319 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=182441.59..182820.51 rows=151565 width=40) (actual time=1814.448..1830.295 rows=237264 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 18239kB
                           Worker 0:  Sort Method: quicksort  Memory: 20433kB
                           Worker 1:  Sort Method: quicksort  Memory: 20082kB
                           Worker 2:  Sort Method: quicksort  Memory: 20557kB
                           Worker 3:  Sort Method: quicksort  Memory: 21404kB
                           ->  Parallel Hash Join  (cost=57900.74..169399.74 rows=151565 width=40) (actual time=184.740..889.569 rows=237264 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..112345.46 rows=1000000 width=8) (actual time=27.088..516.708 rows=1599104 loops=5)
                                       Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                       Rows Removed by Filter: 896
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.085..26.778 rows=56 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 99944
                                 ->  Parallel Hash  (cost=53481.94..53481.94 rows=75788 width=40) (actual time=156.985..156.986 rows=59347 loops=5)
                                       Buckets: 524288  Batches: 1  Memory Usage: 26400kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..53481.94 rows=75788 width=40) (actual time=0.015..123.733 rows=59347 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 340653
 Planning Time: 1.104 ms
 Execution Time: 2623.563 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1747866.39..1747866.40 rows=1 width=32) (actual time=29960.356..29992.286 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1747866.39..1747866.40 rows=1 width=32) (actual time=29960.355..29992.284 rows=1 loops=1)
         ->  Gather  (cost=1747865.96..1747866.37 rows=4 width=32) (actual time=29944.534..29992.268 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1746865.96..1746865.97 rows=1 width=32) (actual time=29860.958..29860.959 rows=1 loops=5)
                     ->  Nested Loop  (cost=48505.21..1746853.42 rows=5015 width=8) (actual time=983.567..29860.556 rows=1064 loops=5)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=48504.65..1745312.98 rows=502 width=40) (actual time=979.442..28684.558 rows=399 loops=5)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=48504.08..48505.34 rows=502 width=4) (actual time=278.261..278.488 rows=399 loops=5)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 25kB
                                       Worker 0:  Sort Method: quicksort  Memory: 25kB
                                       Worker 1:  Sort Method: quicksort  Memory: 25kB
                                       Worker 2:  Sort Method: quicksort  Memory: 25kB
                                       Worker 3:  Sort Method: quicksort  Memory: 25kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..48481.56 rows=502 width=4) (actual time=1.328..278.179 rows=399 loops=5)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 399601
                                 ->  GroupAggregate  (cost=0.56..1691801.68 rows=1999877 width=36) (actual time=2.215..28223.882 rows=1991042 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361872.28 rows=59986248 width=9) (actual time=1.044..18462.910 rows=59717256 loops=5)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.94 rows=10 width=17) (actual time=2.835..2.943 rows=3 loops=1996)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 28.413 ms
 Execution Time: 29993.452 ms
(29 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1747866.39..1747866.40 rows=1 width=32) (actual time=29757.539..29757.632 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1747866.39..1747866.40 rows=1 width=32) (actual time=29757.538..29757.630 rows=1 loops=1)
         ->  Gather  (cost=1747865.96..1747866.37 rows=4 width=32) (actual time=29757.527..29757.624 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1746865.96..1746865.97 rows=1 width=32) (actual time=28869.957..28869.959 rows=1 loops=5)
                     ->  Nested Loop  (cost=48505.21..1746853.42 rows=5015 width=8) (actual time=666.212..28868.885 rows=1064 loops=5)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=48504.65..1745312.98 rows=502 width=40) (actual time=666.151..28847.544 rows=399 loops=5)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=48504.08..48505.34 rows=502 width=4) (actual time=115.927..116.095 rows=399 loops=5)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 25kB
                                       Worker 0:  Sort Method: quicksort  Memory: 25kB
                                       Worker 1:  Sort Method: quicksort  Memory: 25kB
                                       Worker 2:  Sort Method: quicksort  Memory: 25kB
                                       Worker 3:  Sort Method: quicksort  Memory: 25kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..48481.56 rows=502 width=4) (actual time=0.169..115.872 rows=399 loops=5)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 399601
                                 ->  GroupAggregate  (cost=0.56..1691801.68 rows=1999877 width=36) (actual time=0.085..28542.810 rows=1994431 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361872.28 rows=59986248 width=9) (actual time=0.047..18549.921 rows=59818711 loops=5)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.94 rows=10 width=17) (actual time=0.045..0.049 rows=3 loops=1996)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 2.171 ms
 Execution Time: 29757.695 ms
(29 rows)

query 18 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6974941.97..6974942.22 rows=100 width=71) (actual time=49707.130..49719.406 rows=99 loops=1)
   ->  Sort  (cost=6974941.97..7024924.40 rows=19992974 width=71) (actual time=49707.129..49719.399 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 31kB
         ->  GroupAggregate  (cost=836752.63..6210824.88 rows=19992974 width=71) (actual time=27467.677..49719.294 rows=99 loops=1)
               Group Key: orders.o_orderkey, customer.c_custkey
               ->  Incremental Sort  (cost=836752.63..5810965.40 rows=19992974 width=44) (actual time=27467.667..49719.039 rows=693 loops=1)
                     Sort Key: orders.o_orderkey, customer.c_custkey
                     Presorted Key: orders.o_orderkey
                     Full-sort Groups: 20  Sort Method: quicksort  Average Memory: 27kB  Peak Memory: 27kB
                     ->  Merge Join  (cost=836752.34..5086091.87 rows=19992974 width=44) (actual time=25274.326..49718.660 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Gather Merge  (cost=836650.80..3362286.15 rows=4998854 width=43) (actual time=25075.444..41773.475 rows=99 loops=1)
                                 Workers Planned: 4
                                 Workers Launched: 4
                                 ->  Merge Join  (cost=835650.75..2765874.39 rows=1249714 width=43) (actual time=4733.413..24235.917 rows=20 loops=5)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Sort  (cost=835650.18..845024.18 rows=3749598 width=39) (actual time=3759.146..4089.881 rows=2996546 loops=5)
                                             Sort Key: orders.o_orderkey
                                             Sort Method: external merge  Disk: 152480kB
                                             Worker 0:  Sort Method: external merge  Disk: 148216kB
                                             Worker 1:  Sort Method: external merge  Disk: 153632kB
                                             Worker 2:  Sort Method: external merge  Disk: 149240kB
                                             Worker 3:  Sort Method: external merge  Disk: 144336kB
                                             ->  Parallel Hash Join  (cost=44384.17..352990.87 rows=3749598 width=39) (actual time=332.249..3035.122 rows=3000000 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..298763.98 rows=3749598 width=20) (actual time=0.588..1222.536 rows=3000000 loops=5)
                                                   ->  Parallel Hash  (cost=39696.85..39696.85 rows=374985 width=23) (actual time=329.476..329.476 rows=300000 loops=5)
                                                         Buckets: 2097152  Batches: 1  Memory Usage: 98656kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39696.85 rows=374985 width=23) (actual time=0.392..220.127 rows=300000 loops=5)
                                       ->  GroupAggregate  (cost=0.56..1886481.95 rows=4998854 width=4) (actual time=477.934..19936.752 rows=99 loops=5)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 14999901
                                             ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361602.28 rows=59986248 width=9) (actual time=0.688..8079.934 rows=59986052 loops=5)
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361602.28 rows=59986248 width=9) (actual time=0.020..5422.672 rows=59916431 loops=1)
                                 Heap Fetches: 0
 Planning Time: 32.654 ms
 Execution Time: 49737.478 ms
(40 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6974941.97..6974942.22 rows=100 width=71) (actual time=45888.780..45900.379 rows=99 loops=1)
   ->  Sort  (cost=6974941.97..7024924.40 rows=19992974 width=71) (actual time=45888.779..45900.372 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 31kB
         ->  GroupAggregate  (cost=836752.63..6210824.88 rows=19992974 width=71) (actual time=24200.372..45900.268 rows=99 loops=1)
               Group Key: orders.o_orderkey, customer.c_custkey
               ->  Incremental Sort  (cost=836752.63..5810965.40 rows=19992974 width=44) (actual time=24200.362..45900.005 rows=693 loops=1)
                     Sort Key: orders.o_orderkey, customer.c_custkey
                     Presorted Key: orders.o_orderkey
                     Full-sort Groups: 20  Sort Method: quicksort  Average Memory: 27kB  Peak Memory: 27kB
                     ->  Merge Join  (cost=836752.34..5086091.87 rows=19992974 width=44) (actual time=22038.582..45899.628 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Gather Merge  (cost=836650.80..3362286.15 rows=4998854 width=43) (actual time=21870.016..38031.274 rows=99 loops=1)
                                 Workers Planned: 4
                                 Workers Launched: 4
                                 ->  Merge Join  (cost=835650.75..2765874.39 rows=1249714 width=43) (actual time=3952.006..21481.858 rows=20 loops=5)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Sort  (cost=835650.18..845024.18 rows=3749598 width=39) (actual time=3063.436..3389.393 rows=2996545 loops=5)
                                             Sort Key: orders.o_orderkey
                                             Sort Method: external merge  Disk: 147160kB
                                             Worker 0:  Sort Method: external merge  Disk: 146584kB
                                             Worker 1:  Sort Method: external merge  Disk: 146984kB
                                             Worker 2:  Sort Method: external merge  Disk: 147184kB
                                             Worker 3:  Sort Method: external merge  Disk: 159968kB
                                             ->  Parallel Hash Join  (cost=44384.17..352990.87 rows=3749598 width=39) (actual time=209.421..2246.004 rows=3000000 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..298763.98 rows=3749598 width=20) (actual time=0.039..363.202 rows=3000000 loops=5)
                                                   ->  Parallel Hash  (cost=39696.85..39696.85 rows=374985 width=23) (actual time=206.318..206.318 rows=300000 loops=5)
                                                         Buckets: 2097152  Batches: 1  Memory Usage: 98624kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39696.85 rows=374985 width=23) (actual time=0.046..81.576 rows=300000 loops=5)
                                       ->  GroupAggregate  (cost=0.56..1886481.95 rows=4998854 width=4) (actual time=468.019..17883.581 rows=99 loops=5)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 14996446
                                             ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361602.28 rows=59986248 width=9) (actual time=0.063..6058.133 rows=59972128 loops=5)
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361602.28 rows=59986248 width=9) (actual time=0.020..5361.287 rows=59916431 loops=1)
                                 Heap Fetches: 0
 Planning Time: 2.972 ms
 Execution Time: 45917.114 ms
(40 rows)

query 19 run 1
SET
SET
SET

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=69398.64..69398.65 rows=1 width=32) (actual time=725.599..730.513 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=69398.64..69398.65 rows=1 width=32) (actual time=725.598..730.511 rows=1 loops=1)
         ->  Gather  (cost=69398.21..69398.62 rows=4 width=32) (actual time=725.588..730.502 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=68398.21..68398.22 rows=1 width=32) (actual time=717.395..717.396 rows=1 loops=5)
                     ->  Nested Loop  (cost=0.56..68396.10 rows=281 width=12) (actual time=7.021..717.033 rows=213 loops=5)
                           ->  Parallel Seq Scan on part  (cost=0.00..62232.59 rows=1183 width=30) (actual time=0.725..181.033 rows=956 loops=5)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 399044
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..5.20 rows=1 width=21) (actual time=0.556..0.559 rows=0 loops=4781)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 1
                                 Heap Fetches: 0
 Planning Time: 28.454 ms
 Execution Time: 731.126 ms
(17 rows)

SET
SET
SET


 Limit  (cost=69398.64..69398.65 rows=1 width=32) (actual time=148.703..151.346 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=69398.64..69398.65 rows=1 width=32) (actual time=148.702..151.344 rows=1 loops=1)
         ->  Gather  (cost=69398.21..69398.62 rows=4 width=32) (actual time=146.141..151.330 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=68398.21..68398.22 rows=1 width=32) (actual time=141.414..141.415 rows=1 loops=5)
                     ->  Nested Loop  (cost=0.56..68396.10 rows=281 width=12) (actual time=0.687..141.250 rows=213 loops=5)
                           ->  Parallel Seq Scan on part  (cost=0.00..62232.59 rows=1183 width=30) (actual time=0.153..127.546 rows=956 loops=5)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 399044
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..5.20 rows=1 width=21) (actual time=0.014..0.014 rows=0 loops=4781)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 1
                                 Heap Fetches: 0
 Planning Time: 2.908 ms
 Execution Time: 151.391 ms
(17 rows)

query 20 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2522698.89..2719700.56 rows=1 width=51) (actual time=15375.591..15376.973 rows=1 loops=1)
   ->  Nested Loop Semi Join  (cost=2522698.89..2719700.56 rows=1 width=51) (actual time=15375.589..15376.970 rows=1 loops=1)
         Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
         Rows Removed by Join Filter: 13473
         ->  Gather Merge  (cost=4122.93..4578.81 rows=4000 width=55) (actual time=25.848..27.165 rows=1 loops=1)
               Workers Planned: 1
               Workers Launched: 1
               ->  Sort  (cost=3122.92..3128.80 rows=2353 width=55) (actual time=20.439..20.456 rows=393 loops=2)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 279kB
                     Worker 0:  Sort Method: quicksort  Memory: 168kB
                     ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=55) (actual time=0.813..19.077 rows=2048 loops=2)
                           Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                           ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=59) (actual time=0.626..14.285 rows=50000 loops=2)
                           ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.105..0.106 rows=1 loops=2)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.098..0.100 rows=1 loops=2)
                                       Filter: (n_name = 'IRAQ'::bpchar)
                                       Rows Removed by Filter: 24
         ->  Materialize  (cost=2518575.95..2714941.75 rows=3 width=8) (actual time=13843.191..15348.799 rows=13474 loops=1)
               ->  Hash Join  (cost=2518575.95..2714941.73 rows=3 width=8) (actual time=13843.187..15345.623 rows=13474 loops=1)
                     Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                     Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                     Rows Removed by Join Filter: 27
                     ->  HashAggregate  (cost=2448428.95..2608650.86 rows=4819165 width=40) (actual time=13342.643..14657.193 rows=1251651 loops=1)
                           Group Key: lineitem.l_partkey, lineitem.l_suppkey
                           Planned Partitions: 32  Batches: 61  Memory Usage: 65809kB  Disk Usage: 358152kB
                           ->  Seq Scan on lineitem  (cost=0.00..2024936.72 rows=9004486 width=13) (actual time=0.523..9477.278 rows=9123688 loops=1)
                                 Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 Rows Removed by Filter: 50862364
                     ->  Hash  (cost=68934.85..68934.85 rows=80810 width=16) (actual time=500.422..500.485 rows=86872 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 5097kB
                           ->  Gather  (cost=1000.86..68934.85 rows=80810 width=16) (actual time=0.300..481.797 rows=86872 loops=1)
                                 Workers Planned: 4
                                 Workers Launched: 4
                                 ->  Nested Loop  (cost=0.86..59853.85 rows=20202 width=16) (actual time=0.288..488.162 rows=17374 loops=5)
                                       ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.43..45557.65 rows=5051 width=4) (actual time=0.255..186.736 rows=4344 loops=5)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 395656
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.64 rows=19 width=12) (actual time=0.067..0.068 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 34.565 ms
 Execution Time: 15422.802 ms
(45 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2522698.89..2719700.56 rows=1 width=51) (actual time=12829.838..12831.352 rows=1 loops=1)
   ->  Nested Loop Semi Join  (cost=2522698.89..2719700.56 rows=1 width=51) (actual time=12829.837..12831.350 rows=1 loops=1)
         Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
         Rows Removed by Join Filter: 13473
         ->  Gather Merge  (cost=4122.93..4578.81 rows=4000 width=55) (actual time=12.818..14.253 rows=1 loops=1)
               Workers Planned: 1
               Workers Launched: 1
               ->  Sort  (cost=3122.92..3128.80 rows=2353 width=55) (actual time=10.720..10.737 rows=392 loops=2)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 274kB
                     Worker 0:  Sort Method: quicksort  Memory: 173kB
                     ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=55) (actual time=0.079..9.356 rows=2048 loops=2)
                           Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                           ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=59) (actual time=0.008..3.619 rows=50000 loops=2)
                           ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.018..0.019 rows=1 loops=2)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=2)
                                       Filter: (n_name = 'IRAQ'::bpchar)
                                       Rows Removed by Filter: 24
         ->  Materialize  (cost=2518575.95..2714941.75 rows=3 width=8) (actual time=11304.392..12816.034 rows=13474 loops=1)
               ->  Hash Join  (cost=2518575.95..2714941.73 rows=3 width=8) (actual time=11304.388..12812.823 rows=13474 loops=1)
                     Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                     Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                     Rows Removed by Join Filter: 27
                     ->  HashAggregate  (cost=2448428.95..2608650.86 rows=4819165 width=40) (actual time=11187.949..12510.553 rows=1251651 loops=1)
                           Group Key: lineitem.l_partkey, lineitem.l_suppkey
                           Planned Partitions: 32  Batches: 61  Memory Usage: 65809kB  Disk Usage: 358152kB
                           ->  Seq Scan on lineitem  (cost=0.00..2024936.72 rows=9004486 width=13) (actual time=0.051..7498.078 rows=9123688 loops=1)
                                 Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 Rows Removed by Filter: 50862364
                     ->  Hash  (cost=68934.85..68934.85 rows=80810 width=16) (actual time=116.337..116.414 rows=86872 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 5097kB
                           ->  Gather  (cost=1000.86..68934.85 rows=80810 width=16) (actual time=0.287..100.394 rows=86872 loops=1)
                                 Workers Planned: 4
                                 Workers Launched: 4
                                 ->  Nested Loop  (cost=0.86..59853.85 rows=20202 width=16) (actual time=0.125..101.306 rows=17374 loops=5)
                                       ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.43..45557.65 rows=5051 width=4) (actual time=0.102..81.651 rows=4344 loops=5)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 395656
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.64 rows=19 width=12) (actual time=0.003..0.004 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 2.547 ms
 Execution Time: 12879.049 ms
(45 rows)

query 21 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=565534.36..565534.37 rows=1 width=34) (actual time=18963.675..18976.009 rows=100 loops=1)
   ->  Sort  (cost=565534.36..565534.37 rows=1 width=34) (actual time=18963.674..18976.001 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=565534.33..565534.35 rows=1 width=34) (actual time=18956.716..18974.801 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=565534.33..565534.34 rows=1 width=26) (actual time=18956.707..18970.564 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 1537kB
                     ->  Nested Loop Semi Join  (cost=286197.67..565534.32 rows=1 width=26) (actual time=4754.024..18794.443 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 27756
                           ->  Nested Loop  (cost=286197.11..565531.68 rows=1 width=38) (actual time=4752.053..9268.318 rows=65960 loops=1)
                                 ->  Gather  (cost=286196.67..565529.23 rows=1 width=34) (actual time=4751.388..4808.256 rows=134155 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Parallel Hash Right Anti Join  (cost=285196.67..564529.13 rows=1 width=34) (actual time=4741.589..4765.185 rows=26831 loops=5)
                                             Hash Cond: (l3.l_orderkey = l1.l_orderkey)
                                             Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                             Rows Removed by Join Filter: 302862
                                             ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..259754.19 rows=4998854 width=8) (actual time=0.030..1106.100 rows=7585870 loops=5)
                                                   Heap Fetches: 0
                                             ->  Parallel Hash  (cost=282696.68..282696.68 rows=199954 width=34) (actual time=2488.123..2488.435 rows=302853 loops=5)
                                                   Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 131392kB
                                                   ->  Parallel Hash Join  (cost=3021.13..282696.68 rows=199954 width=34) (actual time=16.851..2349.700 rows=302853 loops=5)
                                                         Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                         ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..259754.19 rows=4998854 width=8) (actual time=0.968..1651.337 rows=7585870 loops=5)
                                                               Heap Fetches: 0
                                                         ->  Parallel Hash  (cost=2991.15..2991.15 rows=2353 width=30) (actual time=15.817..15.819 rows=798 loops=5)
                                                               Buckets: 4096  Batches: 1  Memory Usage: 352kB
                                                               ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=30) (actual time=1.465..15.381 rows=798 loops=5)
                                                                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                                     ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=34) (actual time=0.406..13.310 rows=20000 loops=5)
                                                                     ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.060..0.061 rows=1 loops=5)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.057..0.058 rows=1 loops=5)
                                                                                 Filter: (n_name = 'PERU'::bpchar)
                                                                                 Rows Removed by Filter: 24
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.45 rows=1 width=4) (actual time=0.032..0.032 rows=0 loops=134155)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.143..0.143 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 35.754 ms
 Execution Time: 18977.128 ms
(46 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=565534.36..565534.37 rows=1 width=34) (actual time=5026.798..5038.833 rows=100 loops=1)
   ->  Sort  (cost=565534.36..565534.37 rows=1 width=34) (actual time=5026.797..5038.825 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=565534.33..565534.35 rows=1 width=34) (actual time=5019.970..5037.631 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=565534.33..565534.34 rows=1 width=26) (actual time=5019.958..5033.509 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 1537kB
                     ->  Nested Loop Semi Join  (cost=286197.67..565534.32 rows=1 width=26) (actual time=4188.066..4870.330 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 27756
                           ->  Nested Loop  (cost=286197.11..565531.68 rows=1 width=38) (actual time=4188.017..4622.100 rows=65960 loops=1)
                                 ->  Gather  (cost=286196.67..565529.23 rows=1 width=34) (actual time=4187.994..4215.661 rows=134155 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Parallel Hash Right Anti Join  (cost=285196.67..564529.13 rows=1 width=34) (actual time=4182.312..4201.500 rows=26831 loops=5)
                                             Hash Cond: (l3.l_orderkey = l1.l_orderkey)
                                             Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                             Rows Removed by Join Filter: 302862
                                             ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..259754.19 rows=4998854 width=8) (actual time=0.775..1048.294 rows=7585870 loops=5)
                                                   Heap Fetches: 0
                                             ->  Parallel Hash  (cost=282696.68..282696.68 rows=199954 width=34) (actual time=1956.486..1956.787 rows=302853 loops=5)
                                                   Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 131392kB
                                                   ->  Parallel Hash Join  (cost=3021.13..282696.68 rows=199954 width=34) (actual time=7.132..1818.082 rows=302853 loops=5)
                                                         Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                         ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..259754.19 rows=4998854 width=8) (actual time=0.052..1117.719 rows=7585870 loops=5)
                                                               Heap Fetches: 0
                                                         ->  Parallel Hash  (cost=2991.15..2991.15 rows=2353 width=30) (actual time=6.378..6.380 rows=798 loops=5)
                                                               Buckets: 4096  Batches: 1  Memory Usage: 384kB
                                                               ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=30) (actual time=0.044..6.122 rows=798 loops=5)
                                                                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                                     ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=34) (actual time=0.010..3.054 rows=20000 loops=5)
                                                                     ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.024..0.025 rows=1 loops=5)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.021..0.022 rows=1 loops=5)
                                                                                 Filter: (n_name = 'PERU'::bpchar)
                                                                                 Rows Removed by Filter: 24
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=134155)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 4.145 ms
 Execution Time: 5038.922 ms
(46 rows)

query 22 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=93876.11..93878.08 rows=1 width=72) (actual time=1350.759..1354.690 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=46820.66..46820.67 rows=1 width=32) (actual time=301.521..301.620 rows=1 loops=1)
           ->  Gather  (cost=46820.23..46820.64 rows=4 width=32) (actual time=300.943..301.609 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=45820.23..45820.24 rows=1 width=32) (actual time=285.074..285.075 rows=1 loops=5)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..45790.36 rows=11945 width=6) (actual time=0.133..278.082 rows=76485 loops=5)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 223515
   ->  GroupAggregate  (cost=47055.44..60716.62 rows=6920 width=72) (actual time=1350.758..1354.589 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=47055.44..60543.62 rows=6920 width=38) (actual time=471.957..1348.494 rows=9006 loops=1)
               ->  Gather Merge  (cost=47055.00..49150.24 rows=17499 width=26) (actual time=471.100..491.035 rows=27128 loops=1)
                     Workers Planned: 4
                     Workers Launched: 3
                     ->  Sort  (cost=46054.94..46065.88 rows=4375 width=26) (actual time=164.258..165.236 rows=7650 loops=4)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 3921kB
                           Worker 0:  Sort Method: quicksort  Memory: 3729kB
                           Worker 1:  Sort Method: quicksort  Memory: 3751kB
                           Worker 2:  Sort Method: quicksort  Memory: 3705kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..45790.36 rows=4375 width=26) (actual time=0.018..150.038 rows=47782 loops=4)
                                 Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 327218
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.63 rows=17 width=4) (actual time=0.031..0.031 rows=1 loops=27128)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 15.620 ms
 Execution Time: 1354.770 ms
(30 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=93876.11..93878.08 rows=1 width=72) (actual time=437.451..441.911 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=46820.66..46820.67 rows=1 width=32) (actual time=202.375..202.482 rows=1 loops=1)
           ->  Gather  (cost=46820.23..46820.64 rows=4 width=32) (actual time=199.930..202.463 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=45820.23..45820.24 rows=1 width=32) (actual time=195.428..195.428 rows=1 loops=5)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..45790.36 rows=11945 width=6) (actual time=0.019..187.737 rows=76485 loops=5)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 223515
   ->  GroupAggregate  (cost=47055.44..60716.62 rows=6920 width=72) (actual time=437.450..441.802 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=47055.44..60543.62 rows=6920 width=38) (actual time=369.883..439.417 rows=9006 loops=1)
               ->  Gather Merge  (cost=47055.00..49150.24 rows=17499 width=26) (actual time=369.837..381.843 rows=27129 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=46054.94..46065.88 rows=4375 width=26) (actual time=161.197..161.755 rows=6236 loops=5)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 3916kB
                           Worker 0:  Sort Method: quicksort  Memory: 3737kB
                           Worker 1:  Sort Method: quicksort  Memory: 1874kB
                           Worker 2:  Sort Method: quicksort  Memory: 3745kB
                           Worker 3:  Sort Method: quicksort  Memory: 1833kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..45790.36 rows=4375 width=26) (actual time=0.019..146.669 rows=38226 loops=5)
                                 Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 261774
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.63 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=27129)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 0.940 ms
 Execution Time: 441.972 ms
(31 rows)

