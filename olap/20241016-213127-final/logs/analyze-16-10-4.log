query 1 run 1
SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1832503.73..1832504.36 rows=1 width=236) (actual time=20146.260..20146.342 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1832503.73..1832507.54 rows=6 width=236) (actual time=20146.258..20146.340 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=1832503.73..1832506.60 rows=24 width=236) (actual time=20146.225..20146.312 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=1831503.67..1831503.68 rows=6 width=236) (actual time=20135.784..20135.784 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=1831503.46..1831503.59 rows=6 width=236) (actual time=20135.749..20135.755 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..1312593.70 rows=14825993 width=25) (actual time=0.676..4377.903 rows=11856890 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 140321
 Planning Time: 25.901 ms
 Execution Time: 20146.760 ms
(25 rows)

SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1832503.73..1832504.36 rows=1 width=236) (actual time=19525.827..19525.906 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1832503.73..1832507.54 rows=6 width=236) (actual time=19525.826..19525.905 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=1832503.73..1832506.60 rows=24 width=236) (actual time=19525.793..19525.875 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=1831503.67..1831503.68 rows=6 width=236) (actual time=19520.258..19520.258 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=1831503.46..1831503.59 rows=6 width=236) (actual time=19520.226..19520.232 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..1312593.70 rows=14825993 width=25) (actual time=0.030..2797.750 rows=11856890 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 140321
 Planning Time: 1.129 ms
 Execution Time: 19525.995 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=472854.79..472854.79 rows=1 width=193) (actual time=28587.228..28587.243 rows=100 loops=1)
   ->  Sort  (cost=472854.79..472854.79 rows=1 width=193) (actual time=28587.227..28587.235 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 67kB
         ->  Nested Loop  (cost=50.37..472854.78 rows=1 width=193) (actual time=34.148..28583.659 rows=4737 loops=1)
               Join Filter: (supplier.s_nationkey = nation.n_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.403..0.411 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.204..0.205 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.194..0.197 rows=25 loops=1)
               ->  Materialize  (cost=50.37..472852.08 rows=1 width=171) (actual time=5.579..5715.740 rows=4737 loops=5)
                     ->  Nested Loop  (cost=50.37..472852.08 rows=1 width=171) (actual time=27.891..28567.681 rows=4737 loops=1)
                           Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
                           Rows Removed by Join Filter: 236714834
                           ->  Nested Loop  (cost=50.37..468381.08 rows=1 width=34) (actual time=2.469..1207.528 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..54371.57 rows=7958 width=30) (actual time=0.285..268.705 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=49.94..52.01 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=49.50..49.51 rows=1 width=32) (actual time=0.111..0.111 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.41..49.49 rows=4 width=6) (actual time=0.097..0.107 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.41..48.20 rows=18 width=10) (actual time=0.081..0.104 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.85..46.58 rows=18 width=10) (actual time=0.079..0.101 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.75 rows=18 width=10) (actual time=0.072..0.073 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.42..2.43 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.009..0.010 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.005 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=145) (actual time=0.001..2.736 rows=49972 loops=4737)
 Planning Time: 25.700 ms
 Execution Time: 28587.605 ms
(50 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=472854.79..472854.79 rows=1 width=193) (actual time=26883.341..26883.356 rows=100 loops=1)
   ->  Sort  (cost=472854.79..472854.79 rows=1 width=193) (actual time=26883.340..26883.349 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 67kB
         ->  Nested Loop  (cost=50.37..472854.78 rows=1 width=193) (actual time=13.593..26880.548 rows=4737 loops=1)
               Join Filter: (supplier.s_nationkey = nation.n_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.009..0.017 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.004 rows=25 loops=1)
               ->  Materialize  (cost=50.37..472852.08 rows=1 width=171) (actual time=2.129..5375.220 rows=4737 loops=5)
                     ->  Nested Loop  (cost=50.37..472852.08 rows=1 width=171) (actual time=10.642..26865.612 rows=4737 loops=1)
                           Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
                           Rows Removed by Join Filter: 236714834
                           ->  Nested Loop  (cost=50.37..468381.08 rows=1 width=34) (actual time=0.068..329.950 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..54371.57 rows=7958 width=30) (actual time=0.007..94.223 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=49.94..52.01 rows=1 width=14) (actual time=0.001..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=49.50..49.51 rows=1 width=32) (actual time=0.024..0.024 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.41..49.49 rows=4 width=6) (actual time=0.017..0.020 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.41..48.20 rows=18 width=10) (actual time=0.009..0.018 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.85..46.58 rows=18 width=10) (actual time=0.008..0.016 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.75 rows=18 width=10) (actual time=0.005..0.005 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.42..2.43 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.009..0.009 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=145) (actual time=0.001..2.715 rows=49972 loops=4737)
 Planning Time: 2.461 ms
 Execution Time: 26883.453 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2319615.75..2319615.77 rows=10 width=44) (actual time=9762.959..9774.222 rows=10 loops=1)
   ->  Sort  (cost=2319615.75..2327417.65 rows=3120763 width=44) (actual time=9762.958..9774.219 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=1792692.76..2252177.18 rows=3120763 width=44) (actual time=9545.837..9751.783 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=1792692.76..2166356.20 rows=3120763 width=24) (actual time=9545.822..9598.130 rows=301530 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1791692.70..1793643.18 rows=780191 width=24) (actual time=9535.173..9538.203 rows=60306 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 4730kB
                           Worker 0:  Sort Method: quicksort  Memory: 4708kB
                           Worker 1:  Sort Method: quicksort  Memory: 4697kB
                           Worker 2:  Sort Method: quicksort  Memory: 4721kB
                           Worker 3:  Sort Method: quicksort  Memory: 4731kB
                           ->  Parallel Hash Join  (cost=358956.36..1703907.48 rows=780191 width=24) (actual time=2368.930..9520.039 rows=60306 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..1312593.70 rows=8108518 width=16) (actual time=0.502..6323.106 rows=6506846 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 5490365
                                 ->  Parallel Hash  (cost=354446.31..354446.31 rows=360804 width=12) (actual time=2364.710..2364.894 rows=290361 loops=5)
                                       Buckets: 2097152  Batches: 1  Memory Usage: 84576kB
                                       ->  Parallel Hash Join  (cost=41572.20..354446.31 rows=360804 width=12) (actual time=298.196..2258.007 rows=290361 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..308140.92 rows=1803116 width=16) (actual time=0.534..1601.848 rows=1447887 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 1552113
                                             ->  Parallel Hash  (cost=40634.28..40634.28 rows=75034 width=4) (actual time=297.107..297.108 rows=60055 loops=5)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 15968kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..40634.28 rows=75034 width=4) (actual time=0.445..277.944 rows=60055 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 239945
 Planning Time: 32.289 ms
 Execution Time: 9774.594 ms
(35 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2319615.75..2319615.77 rows=10 width=44) (actual time=4816.644..4827.263 rows=10 loops=1)
   ->  Sort  (cost=2319615.75..2327417.65 rows=3120763 width=44) (actual time=4816.643..4827.261 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=1792692.76..2252177.18 rows=3120763 width=44) (actual time=4597.947..4804.808 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=1792692.76..2166356.20 rows=3120763 width=24) (actual time=4597.935..4651.023 rows=301530 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1791692.70..1793643.18 rows=780191 width=24) (actual time=4591.049..4594.071 rows=60306 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 4654kB
                           Worker 0:  Sort Method: quicksort  Memory: 4614kB
                           Worker 1:  Sort Method: quicksort  Memory: 4850kB
                           Worker 2:  Sort Method: quicksort  Memory: 4806kB
                           Worker 3:  Sort Method: quicksort  Memory: 4663kB
                           ->  Parallel Hash Join  (cost=358956.36..1703907.48 rows=780191 width=24) (actual time=1124.889..4573.826 rows=60306 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..1312593.70 rows=8108518 width=16) (actual time=0.045..2468.493 rows=6506846 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 5490365
                                 ->  Parallel Hash  (cost=354446.31..354446.31 rows=360804 width=12) (actual time=1121.598..1121.762 rows=290361 loops=5)
                                       Buckets: 2097152  Batches: 1  Memory Usage: 84608kB
                                       ->  Parallel Hash Join  (cost=41572.20..354446.31 rows=360804 width=12) (actual time=91.050..994.136 rows=290361 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..308140.92 rows=1803116 width=16) (actual time=0.808..503.834 rows=1447887 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 1552113
                                             ->  Parallel Hash  (cost=40634.28..40634.28 rows=75034 width=4) (actual time=89.744..89.745 rows=60055 loops=5)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 15936kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..40634.28 rows=75034 width=4) (actual time=0.014..64.254 rows=60055 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 239945
 Planning Time: 1.764 ms
 Execution Time: 4827.335 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=282420.42..530941.11 rows=1 width=24) (actual time=10200.441..10220.577 rows=1 loops=1)
   ->  GroupAggregate  (cost=282420.42..1525023.86 rows=5 width=24) (actual time=10200.439..10220.574 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=282420.42..1522303.42 rows=544077 width=16) (actual time=4268.489..10169.251 rows=103030 loops=1)
               ->  Gather Merge  (cost=282419.98..347579.09 rows=544196 width=20) (actual time=4267.519..4351.271 rows=112213 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=281419.92..281760.04 rows=136049 width=20) (actual time=4251.880..4254.838 rows=23419 loops=5)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 8337kB
                           Worker 0:  Sort Method: quicksort  Memory: 8317kB
                           Worker 1:  Sort Method: quicksort  Memory: 8296kB
                           Worker 2:  Sort Method: quicksort  Memory: 8347kB
                           Worker 3:  Sort Method: quicksort  Memory: 8336kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=6510.44..269819.18 rows=136049 width=20) (actual time=130.557..4204.386 rows=112085 loops=5)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=46254
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6374.40 rows=544196 width=0) (actual time=86.567..86.567 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.44..2.44 rows=1 width=4) (actual time=0.051..0.051 rows=1 loops=112213)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Heap Fetches: 0
 Planning Time: 28.792 ms
 Execution Time: 10220.955 ms
(24 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=282420.42..530941.11 rows=1 width=24) (actual time=1134.109..1153.948 rows=1 loops=1)
   ->  GroupAggregate  (cost=282420.42..1525023.86 rows=5 width=24) (actual time=1134.108..1153.946 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=282420.42..1522303.42 rows=544077 width=16) (actual time=696.345..1133.328 rows=103030 loops=1)
               ->  Gather Merge  (cost=282419.98..347579.09 rows=544196 width=20) (actual time=696.301..744.027 rows=112213 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=281419.92..281760.04 rows=136049 width=20) (actual time=687.249..689.311 rows=23406 loops=5)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 8191kB
                           Worker 0:  Sort Method: quicksort  Memory: 8537kB
                           Worker 1:  Sort Method: quicksort  Memory: 8576kB
                           Worker 2:  Sort Method: quicksort  Memory: 8102kB
                           Worker 3:  Sort Method: quicksort  Memory: 8227kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=6510.44..269819.18 rows=136049 width=20) (actual time=126.737..648.217 rows=112085 loops=5)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=45059
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6374.40 rows=544196 width=0) (actual time=81.454..81.454 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.44..2.44 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=112213)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Heap Fetches: 0
 Planning Time: 2.487 ms
 Execution Time: 1154.023 ms
(24 rows)

query 5 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=653642.91..653642.92 rows=1 width=58) (actual time=7430.479..7464.790 rows=1 loops=1)
   ->  Sort  (cost=653642.91..653642.98 rows=25 width=58) (actual time=7430.478..7464.787 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=653401.59..653642.79 rows=25 width=58) (actual time=7426.191..7464.771 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=653401.59..653641.73 rows=100 width=58) (actual time=7424.671..7464.740 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=652401.53..652629.76 rows=25 width=58) (actual time=7405.225..7410.684 rows=5 loops=5)
                           Group Key: nation.n_name
                           ->  Sort  (cost=652401.53..652447.11 rows=18233 width=38) (actual time=7403.900..7404.577 rows=14407 loops=5)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 1306kB
                                 Worker 0:  Sort Method: quicksort  Memory: 1275kB
                                 Worker 1:  Sort Method: quicksort  Memory: 1277kB
                                 Worker 2:  Sort Method: quicksort  Memory: 1295kB
                                 Worker 3:  Sort Method: quicksort  Memory: 1272kB
                                 ->  Parallel Hash Join  (cost=73749.55..651111.16 rows=18233 width=38) (actual time=573.985..7393.291 rows=14407 loops=5)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=70057.95..645026.49 rows=455823 width=50) (actual time=554.332..7258.175 rows=363065 loops=5)
                                             ->  Parallel Hash Join  (cost=70057.39..342296.02 rows=113981 width=38) (actual time=553.846..5100.914 rows=90680 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=27264.47..297081.02 rows=569903 width=8) (actual time=261.457..4604.077 rows=455328 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=52738
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..26694.57 rows=2279613 width=0) (actual time=202.319..202.319 rows=2276638 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=41855.47..41855.47 rows=74996 width=38) (actual time=291.830..291.833 rows=59887 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 25312kB
                                                         ->  Hash Join  (cost=2.51..41855.47 rows=74996 width=38) (actual time=0.996..265.607 rows=59887 loops=5)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..39696.82 rows=374982 width=8) (actual time=0.437..228.568 rows=300000 loops=5)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.547..0.550 rows=5 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.539..0.547 rows=5 loops=5)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.207..0.210 rows=25 loops=5)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.323..0.324 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.319..0.320 rows=1 loops=5)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.022..0.023 rows=4 loops=453399)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=18.007..18.007 rows=20000 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 5056kB
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.257..11.531 rows=20000 loops=5)
 Planning Time: 41.290 ms
 Execution Time: 7465.177 ms
(51 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=653642.91..653642.92 rows=1 width=58) (actual time=1994.334..2024.663 rows=1 loops=1)
   ->  Sort  (cost=653642.91..653642.98 rows=25 width=58) (actual time=1994.333..2024.661 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=653401.59..653642.79 rows=25 width=58) (actual time=1981.714..2024.642 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=653401.59..653641.73 rows=100 width=58) (actual time=1980.159..2024.607 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=652401.53..652629.76 rows=25 width=58) (actual time=1965.618..1973.038 rows=5 loops=5)
                           Group Key: nation.n_name
                           ->  Sort  (cost=652401.53..652447.11 rows=18233 width=38) (actual time=1963.458..1964.970 rows=14407 loops=5)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 1346kB
                                 Worker 0:  Sort Method: quicksort  Memory: 1306kB
                                 Worker 1:  Sort Method: quicksort  Memory: 1311kB
                                 Worker 2:  Sort Method: quicksort  Memory: 1199kB
                                 Worker 3:  Sort Method: quicksort  Memory: 1262kB
                                 ->  Parallel Hash Join  (cost=73749.55..651111.16 rows=18233 width=38) (actual time=409.434..1955.119 rows=14407 loops=5)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=70057.95..645026.49 rows=455823 width=50) (actual time=392.293..1828.948 rows=363065 loops=5)
                                             ->  Parallel Hash Join  (cost=70057.39..342296.02 rows=113981 width=38) (actual time=392.244..960.057 rows=90680 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=27264.47..297081.02 rows=569903 width=8) (actual time=247.202..649.031 rows=455328 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=55883
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..26694.57 rows=2279613 width=0) (actual time=190.263..190.264 rows=2276638 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=41855.47..41855.47 rows=74996 width=38) (actual time=142.988..142.992 rows=59887 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 25312kB
                                                         ->  Hash Join  (cost=2.51..41855.47 rows=74996 width=38) (actual time=0.074..109.815 rows=59887 loops=5)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..39696.82 rows=374982 width=8) (actual time=0.026..68.883 rows=300000 loops=5)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.040..0.042 rows=5 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.035..0.040 rows=5 loops=5)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.018..0.019 rows=25 loops=5)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=5)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.008..0.009 rows=4 loops=453399)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=16.434..16.434 rows=20000 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 5024kB
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.033..5.236 rows=20000 loops=5)
 Planning Time: 6.025 ms
 Execution Time: 2024.778 ms
(51 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1379066.86..1379066.87 rows=1 width=32) (actual time=10580.060..10613.248 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1379066.86..1379066.87 rows=1 width=32) (actual time=10580.058..10613.245 rows=1 loops=1)
         ->  Gather  (cost=1379066.43..1379066.84 rows=4 width=32) (actual time=10578.567..10613.232 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1378066.43..1378066.44 rows=1 width=32) (actual time=10569.323..10569.324 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=231729.40..1376547.82 rows=303720 width=12) (actual time=1333.488..10426.017 rows=238912 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Rows Removed by Index Recheck: 2744818
                           Heap Blocks: exact=79843 lossy=53641
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231425.69 rows=1214879 width=0) (actual time=1248.567..1248.567 rows=1194558 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 23.531 ms
 Execution Time: 10614.725 ms
(14 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1379066.86..1379066.87 rows=1 width=32) (actual time=3070.429..3103.949 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1379066.86..1379066.87 rows=1 width=32) (actual time=3070.427..3103.947 rows=1 loops=1)
         ->  Gather  (cost=1379066.43..1379066.84 rows=4 width=32) (actual time=3066.258..3103.932 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1378066.43..1378066.44 rows=1 width=32) (actual time=3061.407..3061.408 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=231729.40..1376547.82 rows=303720 width=12) (actual time=1194.690..2954.962 rows=238912 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Rows Removed by Index Recheck: 2744818
                           Heap Blocks: exact=78291 lossy=52893
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231425.69 rows=1214879 width=0) (actual time=1106.829..1106.829 rows=1194558 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 1.372 ms
 Execution Time: 3104.007 ms
(14 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1420859.47..1421913.62 rows=1 width=116) (actual time=30168.248..30173.543 rows=1 loops=1)
   ->  GroupAggregate  (cost=1420859.47..12004591.08 rows=10040 width=116) (actual time=30168.246..30173.540 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=1420859.47..12003528.52 rows=60797 width=96) (actual time=7298.599..30142.446 rows=14421 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 349034
               ->  Nested Loop  (cost=1420859.04..8302360.04 rows=1519931 width=76) (actual time=7282.640..25137.880 rows=363455 loops=1)
                     ->  Gather Merge  (cost=1420858.60..1602847.00 rows=1519931 width=76) (actual time=7281.670..7747.078 rows=363455 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=1419858.55..1420808.50 rows=379983 width=76) (actual time=7262.698..7305.696 rows=73110 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: external merge  Disk: 27176kB
                                 Worker 0:  Sort Method: external merge  Disk: 26712kB
                                 Worker 1:  Sort Method: external merge  Disk: 26704kB
                                 Worker 2:  Sort Method: external merge  Disk: 26480kB
                                 Worker 3:  Sort Method: external merge  Disk: 26880kB
                                 ->  Parallel Hash Join  (cost=3140.96..1372580.03 rows=379983 width=76) (actual time=17.305..6963.238 rows=291139 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..1350083.84 rows=4565345 width=24) (actual time=0.449..6366.057 rows=3646065 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 8351145
                                       ->  Parallel Hash  (cost=3079.76..3079.76 rows=4896 width=60) (actual time=16.549..16.551 rows=1596 loops=5)
                                             Buckets: 16384  Batches: 1  Memory Usage: 928kB
                                             ->  Hash Join  (cost=2.87..3079.76 rows=4896 width=60) (actual time=0.329..13.993 rows=1596 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.247..11.687 rows=20000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.074..0.075 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.064..0.070 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.052..0.054 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.005 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=8) (actual time=0.047..0.047 rows=1 loops=363455)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Only Scan using q10_idx_1 on customer  (cost=0.43..2.42 rows=1 width=8) (actual time=0.013..0.013 rows=1 loops=363455)
                     Index Cond: (c_custkey = orders.o_custkey)
                     Heap Fetches: 0
 Planning Time: 38.790 ms
 Execution Time: 30177.981 ms
(46 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1420859.47..1421913.62 rows=1 width=116) (actual time=5505.137..5510.587 rows=1 loops=1)
   ->  GroupAggregate  (cost=1420859.47..12004591.08 rows=10040 width=116) (actual time=5505.136..5510.585 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=1420859.47..12003528.52 rows=60797 width=96) (actual time=3529.115..5496.404 rows=14421 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 349054
               ->  Nested Loop  (cost=1420859.04..8302360.04 rows=1519931 width=76) (actual time=3529.016..4649.069 rows=363475 loops=1)
                     ->  Gather Merge  (cost=1420858.60..1602847.00 rows=1519931 width=76) (actual time=3528.968..3748.005 rows=363475 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=1419858.55..1420808.50 rows=379983 width=76) (actual time=3510.326..3539.653 rows=73103 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: external merge  Disk: 25912kB
                                 Worker 0:  Sort Method: external merge  Disk: 27976kB
                                 Worker 1:  Sort Method: external merge  Disk: 26144kB
                                 Worker 2:  Sort Method: external merge  Disk: 28688kB
                                 Worker 3:  Sort Method: external merge  Disk: 25224kB
                                 ->  Parallel Hash Join  (cost=3140.96..1372580.03 rows=379983 width=76) (actual time=13.570..3190.273 rows=291139 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..1350083.84 rows=4565345 width=24) (actual time=0.045..2541.365 rows=3646065 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 8351145
                                       ->  Parallel Hash  (cost=3079.76..3079.76 rows=4896 width=60) (actual time=10.881..10.884 rows=1596 loops=5)
                                             Buckets: 16384  Batches: 1  Memory Usage: 960kB
                                             ->  Hash Join  (cost=2.87..3079.76 rows=4896 width=60) (actual time=0.063..8.499 rows=1596 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.025..6.270 rows=20000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.031..0.032 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.021..0.027 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.011..0.013 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.005 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=363475)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Only Scan using q10_idx_1 on customer  (cost=0.43..2.42 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=363475)
                     Index Cond: (c_custkey = orders.o_custkey)
                     Heap Fetches: 0
 Planning Time: 4.738 ms
 Execution Time: 5513.964 ms
(46 rows)

query 8 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=383977.92..384113.68 rows=1 width=64) (actual time=6604.755..6612.766 rows=1 loops=1)
   ->  GroupAggregate  (cost=383977.92..710607.19 rows=2406 width=64) (actual time=6604.754..6612.757 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=383977.92..710134.19 rows=21244 width=70) (actual time=3075.705..6594.403 rows=11818 loops=1)
               ->  Nested Loop  (cost=383977.78..709532.66 rows=21244 width=20) (actual time=3075.695..6577.086 rows=11818 loops=1)
                     ->  Nested Loop  (cost=383977.36..658300.19 rows=21244 width=20) (actual time=3075.403..6367.128 rows=11818 loops=1)
                           Join Filter: (n1.n_regionkey = region.r_regionkey)
                           Rows Removed by Join Filter: 47507
                           ->  Nested Loop  (cost=383977.36..656705.83 rows=106220 width=24) (actual time=3072.857..6339.702 rows=59325 loops=1)
                                 ->  Nested Loop  (cost=383977.21..654080.08 rows=106220 width=24) (actual time=3072.609..6281.004 rows=59325 loops=1)
                                       ->  Gather Merge  (cost=383976.78..396695.00 rows=106220 width=24) (actual time=3071.990..3121.578 rows=59325 loops=1)
                                             Workers Planned: 4
                                             Workers Launched: 4
                                             ->  Sort  (cost=382976.72..383043.11 rows=26555 width=24) (actual time=3063.333..3064.513 rows=12599 loops=5)
                                                   Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                                   Sort Method: quicksort  Memory: 2154kB
                                                   Worker 0:  Sort Method: quicksort  Memory: 2239kB
                                                   Worker 1:  Sort Method: quicksort  Memory: 2204kB
                                                   Worker 2:  Sort Method: quicksort  Memory: 2170kB
                                                   Worker 3:  Sort Method: quicksort  Memory: 2258kB
                                                   ->  Parallel Hash Join  (cost=59182.80..381025.37 rows=26555 width=24) (actual time=1135.041..3050.744 rows=23719 loops=5)
                                                         Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..317515.51 rows=1136180 width=12) (actual time=0.468..1684.275 rows=911503 loops=5)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 2088497
                                                         ->  Parallel Hash  (cost=58087.27..58087.27 rows=87642 width=20) (actual time=1133.775..1133.777 rows=77904 loops=5)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 25504kB
                                                               ->  Nested Loop  (cost=0.56..58087.27 rows=87642 width=20) (actual time=1.136..1104.122 rows=77904 loops=5)
                                                                     ->  Parallel Seq Scan on part  (cost=0.00..47230.99 rows=3326 width=4) (actual time=0.391..138.275 rows=2602 loops=5)
                                                                           Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                           Rows Removed by Filter: 397398
                                                                     ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.00 rows=26 width=24) (actual time=0.306..0.367 rows=30 loops=13011)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                       ->  Index Only Scan using q10_idx_1 on customer  (cost=0.43..2.42 rows=1 width=8) (actual time=0.053..0.053 rows=1 loops=59325)
                                             Index Cond: (c_custkey = orders.o_custkey)
                                             Heap Fetches: 0
                                 ->  Memoize  (cost=0.15..1.17 rows=1 width=8) (actual time=0.000..0.000 rows=1 loops=59325)
                                       Cache Key: customer.c_nationkey
                                       Cache Mode: logical
                                       Hits: 59300  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 3kB
                                       ->  Index Scan using nation_pkey on nation n1  (cost=0.14..1.16 rows=1 width=8) (actual time=0.012..0.012 rows=1 loops=25)
                                             Index Cond: (n_nationkey = customer.c_nationkey)
                           ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=59325)
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.200..0.202 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                     ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.42..2.41 rows=1 width=8) (actual time=0.017..0.017 rows=1 loops=11818)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Heap Fetches: 0
               ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=11818)
                     Cache Key: supplier.s_nationkey
                     Cache Mode: logical
                     Hits: 11793  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                     ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.003..0.003 rows=1 loops=25)
                           Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 44.663 ms
 Execution Time: 6613.367 ms
(58 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=383977.92..384113.68 rows=1 width=64) (actual time=1170.285..1179.044 rows=1 loops=1)
   ->  GroupAggregate  (cost=383977.92..710607.19 rows=2406 width=64) (actual time=1170.284..1179.042 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=383977.92..710134.19 rows=21244 width=70) (actual time=929.806..1170.219 rows=11818 loops=1)
               ->  Nested Loop  (cost=383977.78..709532.66 rows=21244 width=20) (actual time=929.791..1162.132 rows=11818 loops=1)
                     ->  Nested Loop  (cost=383977.36..658300.19 rows=21244 width=20) (actual time=929.772..1137.249 rows=11818 loops=1)
                           Join Filter: (n1.n_regionkey = region.r_regionkey)
                           Rows Removed by Join Filter: 47517
                           ->  Nested Loop  (cost=383977.36..656705.83 rows=106220 width=24) (actual time=929.760..1121.530 rows=59335 loops=1)
                                 ->  Nested Loop  (cost=383977.21..654080.08 rows=106220 width=24) (actual time=929.749..1097.152 rows=59335 loops=1)
                                       ->  Gather Merge  (cost=383976.78..396695.00 rows=106220 width=24) (actual time=929.708..958.820 rows=59335 loops=1)
                                             Workers Planned: 4
                                             Workers Launched: 4
                                             ->  Sort  (cost=382976.72..383043.11 rows=26555 width=24) (actual time=923.252..924.024 rows=12600 loops=5)
                                                   Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                                   Sort Method: quicksort  Memory: 2195kB
                                                   Worker 0:  Sort Method: quicksort  Memory: 2041kB
                                                   Worker 1:  Sort Method: quicksort  Memory: 2287kB
                                                   Worker 2:  Sort Method: quicksort  Memory: 2076kB
                                                   Worker 3:  Sort Method: quicksort  Memory: 2425kB
                                                   ->  Parallel Hash Join  (cost=59182.80..381025.37 rows=26555 width=24) (actual time=151.504..908.238 rows=23719 loops=5)
                                                         Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..317515.51 rows=1136180 width=12) (actual time=0.054..498.824 rows=911503 loops=5)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 2088497
                                                         ->  Parallel Hash  (cost=58087.27..58087.27 rows=87642 width=20) (actual time=149.930..149.931 rows=77904 loops=5)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 25568kB
                                                               ->  Nested Loop  (cost=0.56..58087.27 rows=87642 width=20) (actual time=0.062..118.490 rows=77904 loops=5)
                                                                     ->  Parallel Seq Scan on part  (cost=0.00..47230.99 rows=3326 width=4) (actual time=0.034..69.930 rows=2602 loops=5)
                                                                           Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                           Rows Removed by Filter: 397398
                                                                     ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.00 rows=26 width=24) (actual time=0.005..0.015 rows=30 loops=13011)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                       ->  Index Only Scan using q10_idx_1 on customer  (cost=0.43..2.42 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=59335)
                                             Index Cond: (c_custkey = orders.o_custkey)
                                             Heap Fetches: 0
                                 ->  Memoize  (cost=0.15..1.17 rows=1 width=8) (actual time=0.000..0.000 rows=1 loops=59335)
                                       Cache Key: customer.c_nationkey
                                       Cache Mode: logical
                                       Hits: 59310  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 3kB
                                       ->  Index Scan using nation_pkey on nation n1  (cost=0.14..1.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=25)
                                             Index Cond: (n_nationkey = customer.c_nationkey)
                           ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=59335)
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                     ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.42..2.41 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=11818)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Heap Fetches: 0
               ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=11818)
                     Cache Key: supplier.s_nationkey
                     Cache Mode: logical
                     Hits: 11793  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                     ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=25)
                           Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 5.795 ms
 Execution Time: 1179.408 ms
(58 rows)

query 9 run 1
SET
SET
SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=578067.72..578204.97 rows=1 width=90) (actual time=10444.340..10503.476 rows=1 loops=1)
   ->  GroupAggregate  (cost=578067.72..8833700.16 rows=60150 width=90) (actual time=10444.339..10503.474 rows=1 loops=1)
         Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=578067.72..8776907.14 rows=3193758 width=81) (actual time=9204.017..10478.863 rows=11401 loops=1)
               Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Gather Merge  (cost=578067.29..960470.76 rows=3193758 width=63) (actual time=9203.283..9278.833 rows=11401 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=577067.23..579063.33 rows=798440 width=63) (actual time=9151.354..9153.268 rows=2772 loops=5)
                           Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
                           Sort Method: external merge  Disk: 49712kB
                           Worker 0:  Sort Method: external merge  Disk: 52088kB
                           Worker 1:  Sort Method: external merge  Disk: 50040kB
                           Worker 2:  Sort Method: external merge  Disk: 53232kB
                           Worker 3:  Sort Method: external merge  Disk: 52184kB
                           ->  Hash Join  (cost=160074.83..477350.37 rows=798440 width=63) (actual time=5260.720..7895.889 rows=649638 loops=5)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=160073.27..474897.59 rows=798440 width=41) (actual time=5260.546..7660.237 rows=649638 loops=5)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..298766.34 rows=3749834 width=8) (actual time=0.627..1137.969 rows=3000000 loops=5)
                                       ->  Parallel Hash  (cost=150092.77..150092.77 rows=798440 width=41) (actual time=5255.941..5255.944 rows=649638 loops=5)
                                             Buckets: 4194304  Batches: 1  Memory Usage: 286688kB
                                             ->  Parallel Hash Join  (cost=3545.53..150092.77 rows=798440 width=41) (actual time=23.834..4914.020 rows=649638 loops=5)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.99..144452.24 rows=798440 width=33) (actual time=0.843..4715.678 rows=649638 loops=5)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.43..45556.40 rows=30303 width=4) (actual time=0.323..167.183 rows=21662 loops=5)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 378338
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.00 rows=26 width=29) (actual time=0.177..0.206 rows=30 loops=108312)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=22.768..22.768 rows=20000 loops=5)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 4992kB
                                                         ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=1.024..16.857 rows=20000 loops=5)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.108..0.108 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.050..0.053 rows=25 loops=5)
               ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..2.43 rows=1 width=14) (actual time=0.103..0.103 rows=1 loops=11401)
                     Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                     Heap Fetches: 0
 Planning Time: 48.095 ms
 Execution Time: 10510.911 ms
(43 rows)

SET
SET
SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=578067.72..578204.97 rows=1 width=90) (actual time=4516.033..4579.691 rows=1 loops=1)
   ->  GroupAggregate  (cost=578067.72..8833700.16 rows=60150 width=90) (actual time=4516.031..4579.689 rows=1 loops=1)
         Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=578067.72..8776907.14 rows=3193758 width=81) (actual time=4463.899..4569.792 rows=11401 loops=1)
               Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Gather Merge  (cost=578067.29..960470.76 rows=3193758 width=63) (actual time=4463.844..4534.069 rows=11401 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=577067.23..579063.33 rows=798440 width=63) (actual time=4393.087..4394.465 rows=2766 loops=5)
                           Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
                           Sort Method: external merge  Disk: 49432kB
                           Worker 0:  Sort Method: external merge  Disk: 56216kB
                           Worker 1:  Sort Method: external merge  Disk: 49968kB
                           Worker 2:  Sort Method: external merge  Disk: 50032kB
                           Worker 3:  Sort Method: external merge  Disk: 51624kB
                           ->  Hash Join  (cost=160074.83..477350.37 rows=798440 width=63) (actual time=1083.934..3117.717 rows=649638 loops=5)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=160073.27..474897.59 rows=798440 width=41) (actual time=1083.801..2854.255 rows=649638 loops=5)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..298766.34 rows=3749834 width=8) (actual time=0.776..399.481 rows=3000000 loops=5)
                                       ->  Parallel Hash  (cost=150092.77..150092.77 rows=798440 width=41) (actual time=1079.052..1079.076 rows=649638 loops=5)
                                             Buckets: 4194304  Batches: 1  Memory Usage: 286688kB
                                             ->  Parallel Hash Join  (cost=3545.53..150092.77 rows=798440 width=41) (actual time=11.660..719.562 rows=649638 loops=5)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.99..144452.24 rows=798440 width=33) (actual time=0.106..535.836 rows=649638 loops=5)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.43..45556.40 rows=30303 width=4) (actual time=0.074..166.012 rows=21662 loops=5)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 378338
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.00 rows=26 width=29) (actual time=0.005..0.014 rows=30 loops=108312)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=10.677..10.677 rows=20000 loops=5)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 4992kB
                                                         ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.012..3.620 rows=20000 loops=5)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.067..0.067 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.013..0.015 rows=25 loops=5)
               ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..2.43 rows=1 width=14) (actual time=0.003..0.003 rows=1 loops=11401)
                     Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                     Heap Fetches: 0
 Planning Time: 7.790 ms
 Execution Time: 4586.584 ms
(43 rows)

query 10 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=795469.41..795469.46 rows=20 width=201) (actual time=8127.717..8190.037 rows=20 loops=1)
   ->  Sort  (cost=795469.41..796903.72 rows=573722 width=201) (actual time=8127.715..8190.034 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=697165.43..780202.88 rows=573722 width=201) (actual time=7031.365..8066.651 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather Merge  (cost=697165.43..765859.83 rows=573722 width=181) (actual time=7031.348..7345.553 rows=1145402 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=696165.37..696523.95 rows=143430 width=181) (actual time=7009.034..7038.430 rows=229080 loops=5)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 44128kB
                           Worker 0:  Sort Method: external merge  Disk: 44464kB
                           Worker 1:  Sort Method: external merge  Disk: 43832kB
                           Worker 2:  Sort Method: external merge  Disk: 43048kB
                           Worker 3:  Sort Method: external merge  Disk: 43048kB
                           ->  Nested Loop  (cost=51230.61..683880.60 rows=143430 width=181) (actual time=560.863..6802.654 rows=229080 loops=5)
                                 ->  Hash Join  (cost=51230.05..315457.91 rows=143023 width=173) (actual time=558.945..4510.953 rows=114632 loops=5)
                                       Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                       ->  Parallel Hash Join  (cost=51228.48..315017.27 rows=143023 width=151) (actual time=558.823..4464.139 rows=114632 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Bitmap Heap Scan on orders  (cost=6844.39..270257.74 rows=143023 width=8) (actual time=126.529..3870.808 rows=114632 loops=5)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   Heap Blocks: exact=46949
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6701.37 rows=572093 width=0) (actual time=75.263..75.263 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Parallel Hash  (cost=39696.82..39696.82 rows=374982 width=147) (actual time=430.106..430.106 rows=300000 loops=5)
                                                   Buckets: 2097152  Batches: 1  Memory Usage: 288448kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..39696.82 rows=374982 width=147) (actual time=0.406..136.879 rows=300000 loops=5)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.053..0.053 rows=25 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.043..0.046 rows=25 loops=5)
                                 ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..2.57 rows=1 width=16) (actual time=0.019..0.019 rows=2 loops=573160)
                                       Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                       Heap Fetches: 0
 Planning Time: 37.256 ms
 Execution Time: 8196.552 ms
(37 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=795469.41..795469.46 rows=20 width=201) (actual time=3341.761..3414.113 rows=20 loops=1)
   ->  Sort  (cost=795469.41..796903.72 rows=573722 width=201) (actual time=3341.759..3414.110 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=697165.43..780202.88 rows=573722 width=201) (actual time=2244.852..3290.435 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather Merge  (cost=697165.43..765859.83 rows=573722 width=181) (actual time=2244.833..2567.936 rows=1145402 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=696165.37..696523.95 rows=143430 width=181) (actual time=2225.026..2254.661 rows=229080 loops=5)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 33296kB
                           Worker 0:  Sort Method: external merge  Disk: 52768kB
                           Worker 1:  Sort Method: external merge  Disk: 44328kB
                           Worker 2:  Sort Method: external merge  Disk: 40360kB
                           Worker 3:  Sort Method: external merge  Disk: 47776kB
                           ->  Nested Loop  (cost=51230.61..683880.60 rows=143430 width=181) (actual time=485.791..2031.593 rows=229080 loops=5)
                                 ->  Hash Join  (cost=51230.05..315457.91 rows=143023 width=173) (actual time=485.655..990.285 rows=114632 loops=5)
                                       Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                       ->  Parallel Hash Join  (cost=51228.48..315017.27 rows=143023 width=151) (actual time=485.563..954.672 rows=114632 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Bitmap Heap Scan on orders  (cost=6844.39..270257.74 rows=143023 width=8) (actual time=119.044..462.290 rows=114632 loops=5)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   Heap Blocks: exact=35743
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6701.37 rows=572093 width=0) (actual time=68.906..68.907 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Parallel Hash  (cost=39696.82..39696.82 rows=374982 width=147) (actual time=364.350..364.350 rows=300000 loops=5)
                                                   Buckets: 2097152  Batches: 1  Memory Usage: 288416kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..39696.82 rows=374982 width=147) (actual time=0.038..84.946 rows=300000 loops=5)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.022..0.022 rows=25 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.014 rows=25 loops=5)
                                 ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..2.57 rows=1 width=16) (actual time=0.008..0.008 rows=2 loops=573160)
                                       Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                       Heap Fetches: 0
 Planning Time: 2.892 ms
 Execution Time: 3418.744 ms
(37 rows)

query 11 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=467711.40..467711.40 rows=1 width=36) (actual time=1981.649..1981.789 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Finalize Aggregate  (cost=207469.13..207469.14 rows=1 width=32) (actual time=458.814..458.901 rows=1 loops=1)
           ->  Gather  (cost=207468.70..207469.11 rows=4 width=32) (actual time=458.696..458.890 rows=4 loops=1)
                 Workers Planned: 4
                 Workers Launched: 3
                 ->  Partial Aggregate  (cost=206468.70..206468.71 rows=1 width=32) (actual time=455.834..455.836 rows=1 loops=4)
                       ->  Hash Join  (cost=2341.31..205868.58 rows=80015 width=10) (actual time=4.078..430.991 rows=80200 loops=4)
                             Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                             ->  Parallel Seq Scan on partsupp partsupp_1  (cost=0.00..195225.72 rows=2000372 width=14) (actual time=0.033..212.999 rows=2000000 loops=4)
                             ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=3.983..3.984 rows=4010 loops=4)
                                   Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                   ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=0.544..3.522 rows=4010 loops=4)
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.013 rows=1 loops=4)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                                         ->  Bitmap Heap Scan on supplier supplier_1  (cost=39.29..2250.00 rows=4000 width=8) (actual time=0.531..3.112 rows=4010 loops=4)
                                               Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                               Heap Blocks: exact=1869
                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.300..0.301 rows=4010 loops=4)
                                                     Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=260242.26..260508.97 rows=106687 width=36) (actual time=1981.648..1981.701 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=213385.05..259708.82 rows=106687 width=36) (actual time=1981.641..1981.693 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 301833
               ->  Gather Merge  (cost=213385.05..251707.32 rows=320060 width=14) (actual time=1277.492..1318.833 rows=320800 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=212385.00..212585.03 rows=80015 width=14) (actual time=1267.400..1270.388 rows=64160 loops=5)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: quicksort  Memory: 4041kB
                           Worker 0:  Sort Method: quicksort  Memory: 4018kB
                           Worker 1:  Sort Method: quicksort  Memory: 5672kB
                           Worker 2:  Sort Method: quicksort  Memory: 3989kB
                           Worker 3:  Sort Method: quicksort  Memory: 4030kB
                           ->  Hash Join  (cost=2341.31..205868.58 rows=80015 width=14) (actual time=35.333..1256.771 rows=64160 loops=5)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Parallel Seq Scan on partsupp  (cost=0.00..195225.72 rows=2000372 width=18) (actual time=0.777..1011.352 rows=1600000 loops=5)
                                 ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=34.446..34.447 rows=4010 loops=5)
                                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                       ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=0.745..33.302 rows=4010 loops=5)
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.059..0.063 rows=1 loops=5)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 24
                                             ->  Bitmap Heap Scan on supplier  (cost=39.29..2250.00 rows=4000 width=8) (actual time=0.682..32.583 rows=4010 loops=5)
                                                   Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                   Heap Blocks: exact=1869
                                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.388..0.388 rows=4010 loops=5)
                                                         Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 18.925 ms
 Execution Time: 1982.148 ms
(54 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=467711.40..467711.40 rows=1 width=36) (actual time=1162.504..1162.644 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Finalize Aggregate  (cost=207469.13..207469.14 rows=1 width=32) (actual time=459.206..459.293 rows=1 loops=1)
           ->  Gather  (cost=207468.70..207469.11 rows=4 width=32) (actual time=459.077..459.283 rows=4 loops=1)
                 Workers Planned: 4
                 Workers Launched: 3
                 ->  Partial Aggregate  (cost=206468.70..206468.71 rows=1 width=32) (actual time=456.040..456.043 rows=1 loops=4)
                       ->  Hash Join  (cost=2341.31..205868.58 rows=80015 width=10) (actual time=4.063..431.352 rows=80200 loops=4)
                             Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                             ->  Parallel Seq Scan on partsupp partsupp_1  (cost=0.00..195225.72 rows=2000372 width=14) (actual time=0.032..212.330 rows=2000000 loops=4)
                             ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=3.971..3.972 rows=4010 loops=4)
                                   Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                   ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=0.526..3.498 rows=4010 loops=4)
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=4)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                                         ->  Bitmap Heap Scan on supplier supplier_1  (cost=39.29..2250.00 rows=4000 width=8) (actual time=0.512..3.078 rows=4010 loops=4)
                                               Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                               Heap Blocks: exact=1869
                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.280..0.280 rows=4010 loops=4)
                                                     Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=260242.26..260508.97 rows=106687 width=36) (actual time=1162.503..1162.556 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=213385.05..259708.82 rows=106687 width=36) (actual time=1162.496..1162.549 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 301833
               ->  Gather Merge  (cost=213385.05..251707.32 rows=320060 width=14) (actual time=458.934..499.816 rows=320800 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=212385.00..212585.03 rows=80015 width=14) (actual time=453.564..456.516 rows=64160 loops=5)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: quicksort  Memory: 3957kB
                           Worker 0:  Sort Method: quicksort  Memory: 3824kB
                           Worker 1:  Sort Method: quicksort  Memory: 6017kB
                           Worker 2:  Sort Method: quicksort  Memory: 3844kB
                           Worker 3:  Sort Method: quicksort  Memory: 5645kB
                           ->  Hash Join  (cost=2341.31..205868.58 rows=80015 width=14) (actual time=5.793..438.154 rows=64160 loops=5)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Parallel Seq Scan on partsupp  (cost=0.00..195225.72 rows=2000372 width=18) (actual time=0.030..214.710 rows=1600000 loops=5)
                                 ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=5.686..5.687 rows=4010 loops=5)
                                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                       ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=0.523..3.604 rows=4010 loops=5)
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.014 rows=1 loops=5)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 24
                                             ->  Bitmap Heap Scan on supplier  (cost=39.29..2250.00 rows=4000 width=8) (actual time=0.510..3.187 rows=4010 loops=5)
                                                   Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                   Heap Blocks: exact=1869
                                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.279..0.279 rows=4010 loops=5)
                                                         Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 1.206 ms
 Execution Time: 1162.724 ms
(54 rows)

query 12 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=142321.16..327772.23 rows=1 width=27) (actual time=9753.668..9759.183 rows=1 loops=1)
   ->  GroupAggregate  (cost=142321.16..1440478.67 rows=7 width=27) (actual time=9753.667..9759.181 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=142321.16..1435479.01 rows=285691 width=27) (actual time=593.439..9648.841 rows=155572 loops=1)
               ->  Gather Merge  (cost=142320.72..176527.83 rows=285691 width=15) (actual time=592.825..675.516 rows=155572 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=141320.67..141499.22 rows=71423 width=15) (actual time=580.628..583.759 rows=32285 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 4049kB
                           Worker 0:  Sort Method: quicksort  Memory: 3918kB
                           Worker 1:  Sort Method: quicksort  Memory: 3919kB
                           Worker 2:  Sort Method: quicksort  Memory: 4004kB
                           Worker 3:  Sort Method: quicksort  Memory: 3951kB
                           ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.43..135562.51 rows=71423 width=15) (actual time=0.137..567.856 rows=62252 loops=5)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 155618
                                 Heap Fetches: 0
               ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=20) (actual time=0.057..0.057 rows=1 loops=155572)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 28.353 ms
 Execution Time: 9759.610 ms
(23 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=142321.16..327772.23 rows=1 width=27) (actual time=728.450..736.881 rows=1 loops=1)
   ->  GroupAggregate  (cost=142321.16..1440478.67 rows=7 width=27) (actual time=728.448..736.879 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=142321.16..1435479.01 rows=285691 width=27) (actual time=251.420..689.901 rows=155572 loops=1)
               ->  Gather Merge  (cost=142320.72..176527.83 rows=285691 width=15) (actual time=251.360..293.524 rows=155572 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=141320.67..141499.22 rows=71423 width=15) (actual time=245.973..247.991 rows=32287 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 5800kB
                           Worker 0:  Sort Method: quicksort  Memory: 3746kB
                           Worker 1:  Sort Method: quicksort  Memory: 3475kB
                           Worker 2:  Sort Method: quicksort  Memory: 4002kB
                           Worker 3:  Sort Method: quicksort  Memory: 5890kB
                           ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.43..135562.51 rows=71423 width=15) (actual time=0.038..234.142 rows=62252 loops=5)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 155618
                                 Heap Fetches: 0
               ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=155572)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 1.975 ms
 Execution Time: 736.955 ms
(23 rows)

query 13 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1412708.18..1412708.19 rows=1 width=16) (actual time=17143.159..17143.162 rows=1 loops=1)
   ->  Sort  (cost=1412708.18..1412708.68 rows=200 width=16) (actual time=17143.157..17143.159 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1412705.18..1412707.18 rows=200 width=16) (actual time=17143.130..17143.138 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1260392.00..1390206.26 rows=1499928 width=12) (actual time=15010.396..16973.806 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 212480kB
                     ->  Hash Right Join  (cost=55340.45..663354.08 rows=14696318 width=8) (actual time=367.162..11110.539 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448759.69 rows=14696318 width=8) (actual time=0.799..5266.571 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=30731.35..30731.35 rows=1499928 width=4) (actual time=363.742..363.743 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 2  Memory Usage: 42747kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30731.35 rows=1499928 width=4) (actual time=0.430..160.897 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 17.957 ms
 Execution Time: 17177.261 ms
(21 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1412708.18..1412708.19 rows=1 width=16) (actual time=16591.130..16591.134 rows=1 loops=1)
   ->  Sort  (cost=1412708.18..1412708.68 rows=200 width=16) (actual time=16591.129..16591.131 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1412705.18..1412707.18 rows=200 width=16) (actual time=16591.103..16591.111 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1260392.00..1390206.26 rows=1499928 width=12) (actual time=14418.910..16422.109 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 212480kB
                     ->  Hash Right Join  (cost=55340.45..663354.08 rows=14696318 width=8) (actual time=330.341..10575.839 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448759.69 rows=14696318 width=8) (actual time=0.033..4850.355 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=30731.35..30731.35 rows=1499928 width=4) (actual time=327.732..327.732 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 2  Memory Usage: 42747kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30731.35 rows=1499928 width=4) (actual time=0.029..129.019 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 1.221 ms
 Execution Time: 16624.239 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=949783.48..949783.49 rows=1 width=32) (actual time=5246.085..5279.958 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=949783.48..949783.49 rows=1 width=32) (actual time=5246.083..5279.956 rows=1 loops=1)
         ->  Gather  (cost=949783.02..949783.43 rows=4 width=64) (actual time=5239.910..5279.934 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=948783.02..948783.03 rows=1 width=64) (actual time=5231.855..5231.858 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=66581.74..945712.64 rows=175450 width=33) (actual time=654.637..5071.036 rows=154588 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=14350.76..892957.42 rows=199712 width=16) (actual time=289.707..4530.376 rows=154588 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=82417
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14151.05 rows=798848 width=0) (actual time=190.040..190.040 rows=772942 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=45980.99..45980.99 rows=499999 width=25) (actual time=362.734..362.735 rows=400000 loops=5)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 137312kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..45980.99 rows=499999 width=25) (actual time=0.470..208.213 rows=400000 loops=5)
 Planning Time: 29.390 ms
 Execution Time: 5280.301 ms
(18 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=949783.48..949783.49 rows=1 width=32) (actual time=1622.651..1655.186 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=949783.48..949783.49 rows=1 width=32) (actual time=1622.649..1655.183 rows=1 loops=1)
         ->  Gather  (cost=949783.02..949783.43 rows=4 width=64) (actual time=1617.705..1655.160 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=948783.02..948783.03 rows=1 width=64) (actual time=1612.740..1612.743 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=66581.74..945712.64 rows=175450 width=33) (actual time=536.747..1496.624 rows=154588 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=14350.76..892957.42 rows=199712 width=16) (actual time=271.551..1078.625 rows=154588 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=86079
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14151.05 rows=798848 width=0) (actual time=172.039..172.040 rows=772942 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=45980.99..45980.99 rows=499999 width=25) (actual time=263.134..263.134 rows=400000 loops=5)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 137280kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..45980.99 rows=499999 width=25) (actual time=0.044..100.074 rows=400000 loops=5)
 Planning Time: 2.280 ms
 Execution Time: 1655.245 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2700020.92..2700128.85 rows=1 width=104) (actual time=13081.217..13130.867 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=1368347.23..1368347.24 rows=1 width=32) (actual time=2835.503..2844.581 rows=1 loops=1)
           ->  Finalize HashAggregate  (cost=1365882.95..1367115.09 rows=98571 width=36) (actual time=2792.052..2838.901 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 56337kB
                 ->  Gather  (cost=1322265.28..1362925.82 rows=394284 width=36) (actual time=2461.575..2543.957 rows=398573 loops=1)
                       Workers Planned: 4
                       Workers Launched: 3
                       ->  Partial HashAggregate  (cost=1321265.28..1322497.42 rows=98571 width=36) (actual time=2457.409..2506.303 rows=99643 loops=4)
                             Group Key: lineitem_1.l_suppkey
                             Batches: 1  Memory Usage: 39953kB
                             Worker 0:  Batches: 1  Memory Usage: 43025kB
                             Worker 1:  Batches: 1  Memory Usage: 39953kB
                             Worker 2:  Batches: 1  Memory Usage: 39953kB
                             ->  Parallel Bitmap Heap Scan on lineitem lineitem_1  (cost=37776.84..1316007.65 rows=525763 width=16) (actual time=438.617..1992.841 rows=566428 loops=4)
                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                   Rows Removed by Index Recheck: 3305913
                                   Heap Blocks: exact=105973 lossy=70616
                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..37251.08 rows=2103051 width=0) (actual time=347.581..347.582 rows=2265714 loops=1)
                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=1331673.68..1384886.30 rows=493 width=104) (actual time=13081.216..13121.787 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=1331673.39..1383318.54 rows=493 width=36) (actual time=13080.422..13120.991 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $1)
               Rows Removed by Filter: 69997
               ->  Gather Merge  (cost=1331673.39..1378882.84 rows=394284 width=36) (actual time=10036.788..10141.699 rows=346163 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1330673.33..1330919.76 rows=98571 width=36) (actual time=10006.359..10014.285 rows=69667 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 12349kB
                           Worker 0:  Sort Method: quicksort  Memory: 12347kB
                           Worker 1:  Sort Method: quicksort  Memory: 12346kB
                           Worker 2:  Sort Method: quicksort  Memory: 12344kB
                           Worker 3:  Sort Method: quicksort  Memory: 12345kB
                           ->  Partial HashAggregate  (cost=1321265.28..1322497.42 rows=98571 width=36) (actual time=9920.117..9982.453 rows=98917 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 39953kB
                                 Worker 0:  Batches: 1  Memory Usage: 39953kB
                                 Worker 1:  Batches: 1  Memory Usage: 39953kB
                                 Worker 2:  Batches: 1  Memory Usage: 39953kB
                                 Worker 3:  Batches: 1  Memory Usage: 39953kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=37776.84..1316007.65 rows=525763 width=16) (actual time=483.707..9406.343 rows=453143 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Rows Removed by Index Recheck: 2644730
                                       Heap Blocks: exact=80511 lossy=53701
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..37251.08 rows=2103051 width=0) (actual time=396.630..396.630 rows=2265714 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.17 rows=1 width=72) (actual time=0.788..0.788 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 24.322 ms
 Execution Time: 13133.637 ms
(53 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2700020.92..2700128.85 rows=1 width=104) (actual time=5776.860..5824.745 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=1368347.23..1368347.24 rows=1 width=32) (actual time=2834.051..2843.504 rows=1 loops=1)
           ->  Finalize HashAggregate  (cost=1365882.95..1367115.09 rows=98571 width=36) (actual time=2790.805..2837.874 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 56337kB
                 ->  Gather  (cost=1322265.28..1362925.82 rows=394284 width=36) (actual time=2461.524..2544.480 rows=398610 loops=1)
                       Workers Planned: 4
                       Workers Launched: 3
                       ->  Partial HashAggregate  (cost=1321265.28..1322497.42 rows=98571 width=36) (actual time=2457.225..2506.238 rows=99652 loops=4)
                             Group Key: lineitem_1.l_suppkey
                             Batches: 1  Memory Usage: 39953kB
                             Worker 0:  Batches: 1  Memory Usage: 39953kB
                             Worker 1:  Batches: 1  Memory Usage: 39953kB
                             Worker 2:  Batches: 1  Memory Usage: 39953kB
                             ->  Parallel Bitmap Heap Scan on lineitem lineitem_1  (cost=37776.84..1316007.65 rows=525763 width=16) (actual time=436.940..1995.521 rows=566428 loops=4)
                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                   Rows Removed by Index Recheck: 3305913
                                   Heap Blocks: exact=106197 lossy=70565
                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..37251.08 rows=2103051 width=0) (actual time=345.949..345.950 rows=2265714 loops=1)
                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=1331673.68..1384886.30 rows=493 width=104) (actual time=5776.858..5815.289 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=1331673.39..1383318.54 rows=493 width=36) (actual time=5776.809..5815.238 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $1)
               Rows Removed by Filter: 69997
               ->  Gather Merge  (cost=1331673.39..1378882.84 rows=394284 width=36) (actual time=2737.824..2839.671 rows=346138 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1330673.33..1330919.76 rows=98571 width=36) (actual time=2711.625..2719.337 rows=69680 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 12360kB
                           Worker 0:  Sort Method: quicksort  Memory: 12362kB
                           Worker 1:  Sort Method: quicksort  Memory: 12379kB
                           Worker 2:  Sort Method: quicksort  Memory: 12323kB
                           Worker 3:  Sort Method: quicksort  Memory: 12303kB
                           ->  Partial HashAggregate  (cost=1321265.28..1322497.42 rows=98571 width=36) (actual time=2624.214..2686.394 rows=98911 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 39953kB
                                 Worker 0:  Batches: 1  Memory Usage: 39953kB
                                 Worker 1:  Batches: 1  Memory Usage: 39953kB
                                 Worker 2:  Batches: 1  Memory Usage: 39953kB
                                 Worker 3:  Batches: 1  Memory Usage: 39953kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=37776.84..1316007.65 rows=525763 width=16) (actual time=447.776..2170.559 rows=453143 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Rows Removed by Index Recheck: 2644730
                                       Heap Blocks: exact=82590 lossy=54199
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..37251.08 rows=2103051 width=0) (actual time=359.207..359.207 rows=2265714 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.17 rows=1 width=72) (actual time=0.045..0.046 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 1.833 ms
 Execution Time: 5827.215 ms
(53 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=260472.84..260472.85 rows=1 width=44) (actual time=2866.372..2873.746 rows=1 loops=1)
   ->  Sort  (cost=260472.84..260853.66 rows=152326 width=44) (actual time=2866.371..2873.744 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=182823.41..259711.21 rows=152326 width=44) (actual time=2200.589..2868.577 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=182823.41..252378.82 rows=580913 width=40) (actual time=2200.548..2692.603 rows=1186319 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=181823.36..182186.43 rows=145228 width=40) (actual time=2065.632..2082.485 rows=237264 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 21257kB
                           Worker 0:  Sort Method: quicksort  Memory: 22454kB
                           Worker 1:  Sort Method: quicksort  Memory: 22255kB
                           Worker 2:  Sort Method: quicksort  Memory: 21592kB
                           Worker 3:  Sort Method: quicksort  Memory: 22424kB
                           ->  Parallel Hash Join  (cost=57859.94..169371.54 rows=145228 width=40) (actual time=364.744..1103.788 rows=237264 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..112357.56 rows=1000186 width=8) (actual time=47.883..588.775 rows=1599104 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 896
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=1.094..46.972 rows=56 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 99944
                                 ->  Parallel Hash  (cost=53480.98..53480.98 rows=72600 width=40) (actual time=316.182..316.182 rows=59347 loops=5)
                                       Buckets: 524288  Batches: 1  Memory Usage: 26368kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..53480.98 rows=72600 width=40) (actual time=0.122..288.567 rows=59347 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 340653
 Planning Time: 22.114 ms
 Execution Time: 2874.508 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=260472.84..260472.85 rows=1 width=44) (actual time=2558.900..2564.623 rows=1 loops=1)
   ->  Sort  (cost=260472.84..260853.66 rows=152326 width=44) (actual time=2558.898..2564.621 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=182823.41..259711.21 rows=152326 width=44) (actual time=1891.167..2559.473 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=182823.41..252378.82 rows=580913 width=40) (actual time=1891.120..2383.974 rows=1186319 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=181823.36..182186.43 rows=145228 width=40) (actual time=1767.474..1784.265 rows=237264 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 20654kB
                           Worker 0:  Sort Method: quicksort  Memory: 22382kB
                           Worker 1:  Sort Method: quicksort  Memory: 27315kB
                           Worker 2:  Sort Method: quicksort  Memory: 20373kB
                           Worker 3:  Sort Method: quicksort  Memory: 21624kB
                           ->  Parallel Hash Join  (cost=57859.94..169371.54 rows=145228 width=40) (actual time=185.821..800.901 rows=237264 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..112357.56 rows=1000186 width=8) (actual time=26.994..439.462 rows=1599104 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 896
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.088..26.315 rows=56 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 99944
                                 ->  Parallel Hash  (cost=53480.98..53480.98 rows=72600 width=40) (actual time=158.148..158.149 rows=59347 loops=5)
                                       Buckets: 524288  Batches: 1  Memory Usage: 26368kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..53480.98 rows=72600 width=40) (actual time=0.016..128.345 rows=59347 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 340653
 Planning Time: 1.071 ms
 Execution Time: 2564.701 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1752983.10..1752983.11 rows=1 width=32) (actual time=29440.985..29472.898 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1752983.10..1752983.11 rows=1 width=32) (actual time=29440.984..29472.895 rows=1 loops=1)
         ->  Gather  (cost=1752982.67..1752983.08 rows=4 width=32) (actual time=29380.021..29472.863 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1751982.67..1751982.68 rows=1 width=32) (actual time=29372.387..29372.389 rows=1 loops=5)
                     ->  Nested Loop  (cost=48506.68..1751969.15 rows=5406 width=8) (actual time=714.182..29371.993 rows=1064 loops=5)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=48506.11..1750117.40 rows=616 width=40) (actual time=710.735..28226.616 rows=399 loops=5)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=48505.55..48506.90 rows=541 width=4) (actual time=296.873..297.093 rows=399 loops=5)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 25kB
                                       Worker 0:  Sort Method: quicksort  Memory: 25kB
                                       Worker 1:  Sort Method: quicksort  Memory: 25kB
                                       Worker 2:  Sort Method: quicksort  Memory: 25kB
                                       Worker 3:  Sort Method: quicksort  Memory: 25kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..48480.99 rows=541 width=4) (actual time=0.513..296.768 rows=399 loops=5)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 399601
                                 ->  GroupAggregate  (cost=0.56..1695911.56 rows=2276568 width=36) (actual time=2.207..27788.501 rows=1996310 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361841.92 rows=59984224 width=9) (actual time=0.990..18008.911 rows=59875157 loops=5)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.89 rows=9 width=17) (actual time=2.779..2.866 rows=3 loops=1996)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 27.533 ms
 Execution Time: 29473.392 ms
(29 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1752983.10..1752983.11 rows=1 width=32) (actual time=29329.757..29329.856 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1752983.10..1752983.11 rows=1 width=32) (actual time=29329.756..29329.854 rows=1 loops=1)
         ->  Gather  (cost=1752982.67..1752983.08 rows=4 width=32) (actual time=29329.745..29329.846 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1751982.67..1751982.68 rows=1 width=32) (actual time=28422.083..28422.085 rows=1 loops=5)
                     ->  Nested Loop  (cost=48506.68..1751969.15 rows=5406 width=8) (actual time=639.722..28421.771 rows=1064 loops=5)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=48506.11..1750117.40 rows=616 width=40) (actual time=638.007..28400.023 rows=399 loops=5)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=48505.55..48506.90 rows=541 width=4) (actual time=126.882..127.044 rows=399 loops=5)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 25kB
                                       Worker 0:  Sort Method: quicksort  Memory: 25kB
                                       Worker 1:  Sort Method: quicksort  Memory: 25kB
                                       Worker 2:  Sort Method: quicksort  Memory: 25kB
                                       Worker 3:  Sort Method: quicksort  Memory: 25kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..48480.99 rows=541 width=4) (actual time=0.362..126.814 rows=399 loops=5)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 399601
                                 ->  GroupAggregate  (cost=0.56..1695911.56 rows=2276568 width=36) (actual time=0.075..28122.744 rows=1993458 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361841.92 rows=59984224 width=9) (actual time=0.040..17975.377 rows=59789713 loops=5)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.89 rows=9 width=17) (actual time=0.044..0.050 rows=3 loops=1996)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 2.705 ms
 Execution Time: 29329.924 ms
(29 rows)

query 18 run 1
SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=7309718.82..7309719.07 rows=100 width=71) (actual time=30330.542..30330.556 rows=99 loops=1)
   ->  Sort  (cost=7309718.82..7359694.74 rows=19990369 width=71) (actual time=30330.540..30330.548 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 31kB
         ->  HashAggregate  (cost=5944428.47..6545701.29 rows=19990369 width=71) (actual time=30329.678..30330.444 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 128  Batches: 1  Memory Usage: 6225kB
               ->  Hash Join  (cost=78621.31..4691906.91 rows=19990369 width=44) (actual time=2252.916..30329.257 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=136.93..4278852.67 rows=19990369 width=25) (actual time=661.676..29568.250 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..2554937.24 rows=4998685 width=24) (actual time=498.313..21796.981 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..568521.46 rows=14999335 width=20) (actual time=0.781..3278.716 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..1886433.88 rows=4998685 width=4) (actual time=389.770..17650.456 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361571.92 rows=59984224 width=9) (actual time=0.444..6496.997 rows=59986052 loops=1)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361571.92 rows=59984224 width=9) (actual time=0.015..5185.351 rows=59916431 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=50946.28..50946.28 rows=1499928 width=23) (actual time=677.522..677.522 rows=1500000 loops=1)
                           Buckets: 1048576  Batches: 2  Memory Usage: 49242kB
                           ->  Seq Scan on customer  (cost=0.00..50946.28 rows=1499928 width=23) (actual time=0.787..408.721 rows=1500000 loops=1)
 Planning Time: 29.989 ms
 Execution Time: 30332.003 ms
(27 rows)

SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=7309718.82..7309719.07 rows=100 width=71) (actual time=28786.521..28786.535 rows=99 loops=1)
   ->  Sort  (cost=7309718.82..7359694.74 rows=19990369 width=71) (actual time=28786.520..28786.527 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 31kB
         ->  HashAggregate  (cost=5944428.47..6545701.29 rows=19990369 width=71) (actual time=28785.650..28786.427 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 128  Batches: 1  Memory Usage: 6225kB
               ->  Hash Join  (cost=78621.31..4691906.91 rows=19990369 width=44) (actual time=2005.688..28785.246 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=136.93..4278852.67 rows=19990369 width=25) (actual time=610.780..28161.868 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..2554937.24 rows=4998685 width=24) (actual time=447.437..20414.006 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..568521.46 rows=14999335 width=20) (actual time=0.051..2525.618 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..1886433.88 rows=4998685 width=4) (actual time=369.222..17043.342 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361571.92 rows=59984224 width=9) (actual time=0.034..5947.517 rows=59986052 loops=1)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361571.92 rows=59984224 width=9) (actual time=0.013..5185.615 rows=59916431 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=50946.28..50946.28 rows=1499928 width=23) (actual time=539.484..539.485 rows=1500000 loops=1)
                           Buckets: 1048576  Batches: 2  Memory Usage: 49242kB
                           ->  Seq Scan on customer  (cost=0.00..50946.28 rows=1499928 width=23) (actual time=0.029..277.570 rows=1500000 loops=1)
 Planning Time: 2.666 ms
 Execution Time: 28787.754 ms
(27 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=67235.35..67235.36 rows=1 width=32) (actual time=839.183..844.796 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=67235.35..67235.36 rows=1 width=32) (actual time=839.182..844.794 rows=1 loops=1)
         ->  Gather  (cost=67234.92..67235.33 rows=4 width=32) (actual time=838.994..844.784 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=66234.92..66234.93 rows=1 width=32) (actual time=830.301..830.302 rows=1 loops=5)
                     ->  Nested Loop  (cost=0.56..66232.97 rows=260 width=12) (actual time=8.600..829.900 rows=213 loops=5)
                           ->  Parallel Seq Scan on part  (cost=0.00..62230.97 rows=1200 width=30) (actual time=0.551..200.491 rows=956 loops=5)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 399044
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.32 rows=1 width=21) (actual time=0.634..0.657 rows=0 loops=4781)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning Time: 32.129 ms
 Execution Time: 845.069 ms
(17 rows)

SET
SET
SET


 Limit  (cost=67235.35..67235.36 rows=1 width=32) (actual time=155.053..161.389 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=67235.35..67235.36 rows=1 width=32) (actual time=155.052..161.387 rows=1 loops=1)
         ->  Gather  (cost=67234.92..67235.33 rows=4 width=32) (actual time=154.835..161.376 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=66234.92..66234.93 rows=1 width=32) (actual time=150.768..150.769 rows=1 loops=5)
                     ->  Nested Loop  (cost=0.56..66232.97 rows=260 width=12) (actual time=0.659..150.579 rows=213 loops=5)
                           ->  Parallel Seq Scan on part  (cost=0.00..62230.97 rows=1200 width=30) (actual time=0.181..135.500 rows=956 loops=5)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 399044
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.32 rows=1 width=21) (actual time=0.014..0.015 rows=0 loops=4781)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning Time: 2.964 ms
 Execution Time: 161.645 ms
(17 rows)

query 20 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2519710.68..2715812.14 rows=1 width=52) (actual time=16886.304..16887.630 rows=1 loops=1)
   ->  Nested Loop Semi Join  (cost=2519710.68..2715812.14 rows=1 width=52) (actual time=16886.303..16887.628 rows=1 loops=1)
         Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
         Rows Removed by Join Filter: 13473
         ->  Gather Merge  (cost=4122.93..4578.81 rows=4000 width=56) (actual time=28.426..29.688 rows=1 loops=1)
               Workers Planned: 1
               Workers Launched: 1
               ->  Sort  (cost=3122.92..3128.80 rows=2353 width=56) (actual time=22.827..22.844 rows=391 loops=2)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 305kB
                     Worker 0:  Sort Method: quicksort  Memory: 174kB
                     ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=56) (actual time=0.531..21.532 rows=2048 loops=2)
                           Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                           ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=60) (actual time=0.261..16.539 rows=50000 loops=2)
                           ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.223..0.224 rows=1 loops=2)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.087..0.090 rows=1 loops=2)
                                       Filter: (n_name = 'IRAQ'::bpchar)
                                       Rows Removed by Filter: 24
         ->  Materialize  (cost=2515587.75..2711053.34 rows=3 width=8) (actual time=15299.792..16856.875 rows=13474 loops=1)
               ->  Hash Join  (cost=2515587.75..2711053.32 rows=3 width=8) (actual time=15299.788..16854.097 rows=13474 loops=1)
                     Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                     Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                     Rows Removed by Join Filter: 27
                     ->  HashAggregate  (cost=2445582.27..2605009.11 rows=4805146 width=40) (actual time=14754.313..16122.271 rows=1251652 loops=1)
                           Group Key: lineitem.l_partkey, lineitem.l_suppkey
                           Planned Partitions: 32  Batches: 61  Memory Usage: 65809kB  Disk Usage: 358152kB
                           ->  Seq Scan on lineitem  (cost=0.00..2024906.36 rows=8944604 width=13) (actual time=0.479..10678.678 rows=9123688 loops=1)
                                 Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 Rows Removed by Filter: 50862364
                     ->  Hash  (cost=68793.14..68793.14 rows=80823 width=16) (actual time=545.352..545.413 rows=86872 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 5097kB
                           ->  Gather  (cost=1000.86..68793.14 rows=80823 width=16) (actual time=0.311..528.028 rows=86872 loops=1)
                                 Workers Planned: 4
                                 Workers Launched: 4
                                 ->  Nested Loop  (cost=0.86..59710.84 rows=20206 width=16) (actual time=0.347..533.035 rows=17374 loops=5)
                                       ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.43..45556.40 rows=5050 width=4) (actual time=0.197..174.027 rows=4344 loops=5)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 395656
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.62 rows=18 width=12) (actual time=0.081..0.082 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 36.220 ms
 Execution Time: 16933.088 ms
(45 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2519710.68..2715812.14 rows=1 width=52) (actual time=14251.658..14253.149 rows=1 loops=1)
   ->  Nested Loop Semi Join  (cost=2519710.68..2715812.14 rows=1 width=52) (actual time=14251.656..14253.147 rows=1 loops=1)
         Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
         Rows Removed by Join Filter: 13473
         ->  Gather Merge  (cost=4122.93..4578.81 rows=4000 width=56) (actual time=12.961..14.386 rows=1 loops=1)
               Workers Planned: 1
               Workers Launched: 1
               ->  Sort  (cost=3122.92..3128.80 rows=2353 width=56) (actual time=11.026..11.043 rows=391 loops=2)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 291kB
                     Worker 0:  Sort Method: quicksort  Memory: 188kB
                     ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=56) (actual time=0.189..9.845 rows=2048 loops=2)
                           Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                           ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=60) (actual time=0.010..3.868 rows=50000 loops=2)
                           ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=2)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=2)
                                       Filter: (n_name = 'IRAQ'::bpchar)
                                       Rows Removed by Filter: 24
         ->  Materialize  (cost=2515587.75..2711053.34 rows=3 width=8) (actual time=12682.717..14237.692 rows=13474 loops=1)
               ->  Hash Join  (cost=2515587.75..2711053.32 rows=3 width=8) (actual time=12682.714..14234.849 rows=13474 loops=1)
                     Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                     Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                     Rows Removed by Join Filter: 27
                     ->  HashAggregate  (cost=2445582.27..2605009.11 rows=4805146 width=40) (actual time=12572.015..13937.652 rows=1251652 loops=1)
                           Group Key: lineitem.l_partkey, lineitem.l_suppkey
                           Planned Partitions: 32  Batches: 61  Memory Usage: 65809kB  Disk Usage: 358152kB
                           ->  Seq Scan on lineitem  (cost=0.00..2024906.36 rows=8944604 width=13) (actual time=0.044..8647.283 rows=9123688 loops=1)
                                 Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 Rows Removed by Filter: 50862364
                     ->  Hash  (cost=68793.14..68793.14 rows=80823 width=16) (actual time=110.595..110.659 rows=86872 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 5097kB
                           ->  Gather  (cost=1000.86..68793.14 rows=80823 width=16) (actual time=0.283..95.421 rows=86872 loops=1)
                                 Workers Planned: 4
                                 Workers Launched: 4
                                 ->  Nested Loop  (cost=0.86..59710.84 rows=20206 width=16) (actual time=0.069..98.239 rows=17374 loops=5)
                                       ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.43..45556.40 rows=5050 width=4) (actual time=0.049..79.976 rows=4344 loops=5)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 395656
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.62 rows=18 width=12) (actual time=0.003..0.004 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 2.488 ms
 Execution Time: 14301.230 ms
(45 rows)

query 21 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=564062.83..564062.84 rows=1 width=34) (actual time=19109.117..19119.942 rows=100 loops=1)
   ->  Sort  (cost=564062.83..564062.84 rows=1 width=34) (actual time=19109.115..19119.934 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=564062.80..564062.82 rows=1 width=34) (actual time=19102.196..19118.757 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=564062.80..564062.81 rows=1 width=26) (actual time=19102.186..19114.560 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 3071kB
                     ->  Nested Loop Semi Join  (cost=285461.86..564062.79 rows=1 width=26) (actual time=4716.353..18933.113 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 27756
                           ->  Nested Loop  (cost=285461.29..564060.14 rows=1 width=38) (actual time=4708.409..9373.743 rows=65960 loops=1)
                                 ->  Gather  (cost=285460.86..564057.70 rows=1 width=34) (actual time=4707.794..4938.464 rows=134155 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Parallel Hash Right Anti Join  (cost=284460.86..563057.60 rows=1 width=34) (actual time=4697.058..4736.017 rows=26831 loops=5)
                                             Hash Cond: (l3.l_orderkey = l1.l_orderkey)
                                             Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                             Rows Removed by Join Filter: 302862
                                             ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..259019.12 rows=4998685 width=8) (actual time=0.291..1067.963 rows=7585870 loops=5)
                                                   Heap Fetches: 0
                                             ->  Parallel Hash  (cost=281960.94..281960.94 rows=199948 width=34) (actual time=2484.275..2484.278 rows=302853 loops=5)
                                                   Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 131392kB
                                                   ->  Parallel Hash Join  (cost=3021.13..281960.94 rows=199948 width=34) (actual time=20.458..2344.485 rows=302853 loops=5)
                                                         Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                         ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..259019.12 rows=4998685 width=8) (actual time=0.718..1642.713 rows=7585870 loops=5)
                                                               Heap Fetches: 0
                                                         ->  Parallel Hash  (cost=2991.15..2991.15 rows=2353 width=30) (actual time=19.670..19.672 rows=798 loops=5)
                                                               Buckets: 4096  Batches: 1  Memory Usage: 352kB
                                                               ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=30) (actual time=0.181..19.370 rows=798 loops=5)
                                                                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                                     ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=34) (actual time=0.115..17.202 rows=20000 loops=5)
                                                                     ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.054..0.055 rows=1 loops=5)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.048..0.049 rows=1 loops=5)
                                                                                 Filter: (n_name = 'PERU'::bpchar)
                                                                                 Rows Removed by Filter: 24
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.45 rows=1 width=4) (actual time=0.032..0.032 rows=0 loops=134155)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.144..0.144 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 33.401 ms
 Execution Time: 19120.666 ms
(46 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=564062.83..564062.84 rows=1 width=34) (actual time=4897.824..4910.476 rows=100 loops=1)
   ->  Sort  (cost=564062.83..564062.84 rows=1 width=34) (actual time=4897.823..4910.468 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=564062.80..564062.82 rows=1 width=34) (actual time=4890.882..4909.267 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=564062.80..564062.81 rows=1 width=26) (actual time=4890.870..4905.069 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 3071kB
                     ->  Nested Loop Semi Join  (cost=285461.86..564062.79 rows=1 width=26) (actual time=4105.418..4740.426 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 27756
                           ->  Nested Loop  (cost=285461.29..564060.14 rows=1 width=38) (actual time=4105.368..4506.901 rows=65960 loops=1)
                                 ->  Gather  (cost=285460.86..564057.70 rows=1 width=34) (actual time=4105.339..4132.619 rows=134155 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Parallel Hash Right Anti Join  (cost=284460.86..563057.60 rows=1 width=34) (actual time=4097.888..4116.913 rows=26831 loops=5)
                                             Hash Cond: (l3.l_orderkey = l1.l_orderkey)
                                             Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                             Rows Removed by Join Filter: 302862
                                             ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..259019.12 rows=4998685 width=8) (actual time=0.210..1017.126 rows=7585870 loops=5)
                                                   Heap Fetches: 0
                                             ->  Parallel Hash  (cost=281960.94..281960.94 rows=199948 width=34) (actual time=1913.597..1913.896 rows=302853 loops=5)
                                                   Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 131360kB
                                                   ->  Parallel Hash Join  (cost=3021.13..281960.94 rows=199948 width=34) (actual time=6.801..1776.966 rows=302853 loops=5)
                                                         Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                         ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..259019.12 rows=4998685 width=8) (actual time=0.407..1074.734 rows=7585870 loops=5)
                                                               Heap Fetches: 0
                                                         ->  Parallel Hash  (cost=2991.15..2991.15 rows=2353 width=30) (actual time=6.293..6.295 rows=798 loops=5)
                                                               Buckets: 4096  Batches: 1  Memory Usage: 416kB
                                                               ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=30) (actual time=0.039..6.051 rows=798 loops=5)
                                                                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                                     ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=34) (actual time=0.009..2.731 rows=20000 loops=5)
                                                                     ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.021..0.021 rows=1 loops=5)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=5)
                                                                                 Filter: (n_name = 'PERU'::bpchar)
                                                                                 Rows Removed by Filter: 24
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=134155)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 3.795 ms
 Execution Time: 4910.575 ms
(46 rows)

query 22 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=93875.95..93877.64 rows=1 width=72) (actual time=1757.865..1764.568 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=46820.59..46820.60 rows=1 width=32) (actual time=306.408..306.503 rows=1 loops=1)
           ->  Gather  (cost=46820.15..46820.57 rows=4 width=32) (actual time=306.111..306.490 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=45820.15..45820.17 rows=1 width=32) (actual time=297.352..297.352 rows=1 loops=5)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..45790.28 rows=11950 width=6) (actual time=1.069..288.605 rows=76485 loops=5)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 223515
   ->  GroupAggregate  (cost=47055.35..60374.72 rows=7853 width=72) (actual time=1757.864..1764.472 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=47055.35..60178.40 rows=7853 width=38) (actual time=489.365..1757.396 rows=9006 loops=1)
               ->  Gather Merge  (cost=47054.92..49150.15 rows=17499 width=26) (actual time=488.718..513.764 rows=27133 loops=1)
                     Workers Planned: 4
                     Params Evaluated: $1
                     Workers Launched: 3
                     ->  Sort  (cost=46054.86..46065.79 rows=4375 width=26) (actual time=176.301..177.308 rows=7562 loops=4)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 4243kB
                           Worker 0:  Sort Method: quicksort  Memory: 4169kB
                           Worker 1:  Sort Method: quicksort  Memory: 4096kB
                           Worker 2:  Sort Method: quicksort  Memory: 4090kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..45790.28 rows=4375 width=26) (actual time=0.021..160.500 rows=47782 loops=4)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 327218
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.65 rows=18 width=4) (actual time=0.045..0.045 rows=1 loops=27133)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 18.625 ms
 Execution Time: 1765.181 ms
(31 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=93875.95..93877.64 rows=1 width=72) (actual time=460.174..465.202 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=46820.59..46820.60 rows=1 width=32) (actual time=220.048..220.146 rows=1 loops=1)
           ->  Gather  (cost=46820.15..46820.57 rows=4 width=32) (actual time=216.331..220.125 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=45820.15..45820.17 rows=1 width=32) (actual time=211.155..211.156 rows=1 loops=5)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..45790.28 rows=11950 width=6) (actual time=0.018..203.039 rows=76485 loops=5)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 223515
   ->  GroupAggregate  (cost=47055.35..60374.72 rows=7853 width=72) (actual time=460.173..465.102 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=47055.35..60178.40 rows=7853 width=38) (actual time=397.087..462.905 rows=9006 loops=1)
               ->  Gather Merge  (cost=47054.92..49150.15 rows=17499 width=26) (actual time=397.048..408.800 rows=27128 loops=1)
                     Workers Planned: 4
                     Params Evaluated: $1
                     Workers Launched: 4
                     ->  Sort  (cost=46054.86..46065.79 rows=4375 width=26) (actual time=170.951..171.512 rows=6310 loops=5)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 4415kB
                           Worker 0:  Sort Method: quicksort  Memory: 4061kB
                           Worker 1:  Sort Method: quicksort  Memory: 4084kB
                           Worker 2:  Sort Method: quicksort  Memory: 2003kB
                           Worker 3:  Sort Method: quicksort  Memory: 2036kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..45790.28 rows=4375 width=26) (actual time=0.020..154.008 rows=38226 loops=5)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 261774
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.65 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=27128)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 0.955 ms
 Execution Time: 465.268 ms
(32 rows)

