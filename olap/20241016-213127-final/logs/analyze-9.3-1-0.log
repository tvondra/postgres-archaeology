query 1 run 1
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424640.82..424640.82 rows=1 width=25) (actual time=15104.665..15104.665 rows=1 loops=1)
   ->  Sort  (cost=424640.82..424640.84 rows=6 width=25) (actual time=15104.664..15104.664 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424640.69..424640.79 rows=6 width=25) (actual time=15104.623..15104.628 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..187580.73 rows=5926499 width=25) (actual time=0.313..1306.056 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Total runtime: 15104.723 ms
(9 rows)

SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424640.82..424640.82 rows=1 width=25) (actual time=14796.211..14796.211 rows=1 loops=1)
   ->  Sort  (cost=424640.82..424640.84 rows=6 width=25) (actual time=14796.209..14796.209 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424640.69..424640.79 rows=6 width=25) (actual time=14796.174..14796.180 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..187580.73 rows=5926499 width=25) (actual time=0.020..1133.647 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Total runtime: 14796.263 ms
(9 rows)

query 2 run 1
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29651.71..29651.72 rows=1 width=192) (actual time=181.960..181.971 rows=100 loops=1)
   ->  Sort  (cost=29651.71..29651.72 rows=1 width=192) (actual time=181.960..181.964 rows=100 loops=1)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Nested Loop  (cost=15.18..29651.70 rows=1 width=192) (actual time=7.246..181.574 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.006..0.011 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
               ->  Materialize  (cost=15.18..29649.01 rows=1 width=170) (actual time=0.693..36.231 rows=489 loops=5)
                     ->  Nested Loop  (cost=15.18..29649.00 rows=1 width=170) (actual time=3.460..180.703 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.90..29647.72 rows=1 width=34) (actual time=2.987..140.655 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5474.26 rows=796 width=30) (actual time=0.999..24.973 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=14.48..30.36 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=14.04..14.05 rows=1 width=6) (actual time=0.142..0.142 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.97..14.04 rows=1 width=6) (actual time=0.130..0.140 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.97..12.93 rows=4 width=10) (actual time=0.110..0.137 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.83..12.25 rows=4 width=10) (actual time=0.108..0.131 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.103..0.104 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.41..2.43 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                                       SubPlan 1
                                         ->  Aggregate  (cost=14.04..14.05 rows=1 width=6) (actual time=0.142..0.142 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.97..14.04 rows=1 width=6) (actual time=0.130..0.140 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.97..12.93 rows=4 width=10) (actual time=0.110..0.137 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.83..12.25 rows=4 width=10) (actual time=0.108..0.131 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.103..0.104 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.41..2.43 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.081..0.081 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Total runtime: 182.027 ms
(64 rows)

SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29651.71..29651.72 rows=1 width=192) (actual time=21.642..21.652 rows=100 loops=1)
   ->  Sort  (cost=29651.71..29651.72 rows=1 width=192) (actual time=21.640..21.643 rows=100 loops=1)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Nested Loop  (cost=15.18..29651.70 rows=1 width=192) (actual time=0.193..21.287 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.005..0.010 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.000..0.002 rows=25 loops=1)
               ->  Materialize  (cost=15.18..29649.01 rows=1 width=170) (actual time=0.014..4.199 rows=489 loops=5)
                     ->  Nested Loop  (cost=15.18..29649.00 rows=1 width=170) (actual time=0.068..20.763 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.90..29647.72 rows=1 width=34) (actual time=0.065..19.752 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5474.26 rows=796 width=30) (actual time=0.014..6.190 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=14.48..30.36 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=14.04..14.05 rows=1 width=6) (actual time=0.015..0.015 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.97..14.04 rows=1 width=6) (actual time=0.011..0.014 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.97..12.93 rows=4 width=10) (actual time=0.005..0.013 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.83..12.25 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.41..2.43 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                                       SubPlan 1
                                         ->  Aggregate  (cost=14.04..14.05 rows=1 width=6) (actual time=0.015..0.015 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.97..14.04 rows=1 width=6) (actual time=0.011..0.014 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.97..12.93 rows=4 width=10) (actual time=0.005..0.013 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.83..12.25 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.41..2.43 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.002..0.002 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Total runtime: 21.706 ms
(64 rows)

query 3 run 1
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=308685.86..308685.89 rows=10 width=24) (actual time=2502.485..2502.487 rows=10 loops=1)
   ->  Sort  (cost=308685.86..309464.22 rows=311345 width=24) (actual time=2502.484..2502.485 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=293395.82..301957.81 rows=311345 width=24) (actual time=2484.592..2500.474 rows=11612 loops=1)
               ->  Sort  (cost=293395.82..294174.18 rows=311345 width=24) (actual time=2484.578..2485.655 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=62052.76..264988.46 rows=311345 width=24) (actual time=649.923..2478.056 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187580.73 rows=3264408 width=16) (actual time=0.003..1143.029 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 2739342
                           ->  Hash  (cost=60263.97..60263.97 rows=143103 width=12) (actual time=648.942..648.942 rows=146063 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 6277kB
                                 ->  Hash Join  (cost=5844.31..60263.97 rows=143103 width=12) (actual time=54.051..625.659 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=720678 width=16) (actual time=0.001..351.377 rows=722275 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 777725
                                       ->  Hash  (cost=5472.00..5472.00 rows=29785 width=4) (actual time=54.034..54.034 rows=30142 loops=1)
                                             Buckets: 4096  Batches: 1  Memory Usage: 1060kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29785 width=4) (actual time=0.002..50.267 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
 Total runtime: 2502.543 ms
(26 rows)

SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=308685.86..308685.89 rows=10 width=24) (actual time=1983.362..1983.363 rows=10 loops=1)
   ->  Sort  (cost=308685.86..309464.22 rows=311345 width=24) (actual time=1983.361..1983.361 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=293395.82..301957.81 rows=311345 width=24) (actual time=1965.575..1981.430 rows=11612 loops=1)
               ->  Sort  (cost=293395.82..294174.18 rows=311345 width=24) (actual time=1965.562..1966.729 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=62052.76..264988.46 rows=311345 width=24) (actual time=394.725..1959.477 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187580.73 rows=3264408 width=16) (actual time=0.003..930.862 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 2739342
                           ->  Hash  (cost=60263.97..60263.97 rows=143103 width=12) (actual time=394.498..394.498 rows=146063 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 6277kB
                                 ->  Hash Join  (cost=5844.31..60263.97 rows=143103 width=12) (actual time=26.555..375.864 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=720678 width=16) (actual time=0.001..205.512 rows=722275 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 777725
                                       ->  Hash  (cost=5472.00..5472.00 rows=29785 width=4) (actual time=26.540..26.540 rows=30142 loops=1)
                                             Buckets: 4096  Batches: 1  Memory Usage: 1060kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29785 width=4) (actual time=0.002..23.430 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
 Total runtime: 1983.418 ms
(26 rows)

query 4 run 1
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=122182.12..122182.12 rows=1 width=16) (actual time=2157.293..2157.293 rows=1 loops=1)
   ->  Sort  (cost=122182.12..122182.12 rows=1 width=16) (actual time=2157.292..2157.292 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=122182.10..122182.11 rows=1 width=16) (actual time=2157.265..2157.267 rows=5 loops=1)
               ->  Merge Semi Join  (cost=32353.91..121898.64 rows=56691 width=16) (actual time=545.878..2141.086 rows=51398 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=32350.87..32492.59 rows=56691 width=20) (actual time=545.635..552.341 rows=55973 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: quicksort  Memory: 5909kB
                           ->  Bitmap Heap Scan on orders  (cost=893.51..27874.88 rows=56691 width=20) (actual time=12.389..531.458 rows=55973 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..879.34 rows=56691 width=0) (actual time=9.503..9.503 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using q4_idx_1 on lineitem  (cost=0.43..83507.11 rows=2000553 width=4) (actual time=0.196..1344.809 rows=3793256 loops=1)
 Total runtime: 2157.366 ms
(16 rows)

SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=122182.12..122182.12 rows=1 width=16) (actual time=853.174..853.174 rows=1 loops=1)
   ->  Sort  (cost=122182.12..122182.12 rows=1 width=16) (actual time=853.173..853.173 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=122182.10..122182.11 rows=1 width=16) (actual time=853.148..853.148 rows=5 loops=1)
               ->  Merge Semi Join  (cost=32353.91..121898.64 rows=56691 width=16) (actual time=47.713..842.937 rows=51398 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=32350.87..32492.59 rows=56691 width=20) (actual time=47.693..52.758 rows=55973 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: quicksort  Memory: 5909kB
                           ->  Bitmap Heap Scan on orders  (cost=893.51..27874.88 rows=56691 width=20) (actual time=8.660..40.369 rows=55973 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..879.34 rows=56691 width=0) (actual time=5.573..5.573 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using q4_idx_1 on lineitem  (cost=0.43..83507.11 rows=2000553 width=4) (actual time=0.009..569.791 rows=3793256 loops=1)
 Total runtime: 853.229 ms
(16 rows)

query 5 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=159437.03..159437.03 rows=1 width=38) (actual time=1207.981..1207.981 rows=1 loops=1)
   ->  Sort  (cost=159437.03..159437.09 rows=25 width=38) (actual time=1207.979..1207.979 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=159436.66..159436.91 rows=25 width=38) (actual time=1207.959..1207.960 rows=5 loops=1)
               ->  Hash Join  (cost=10365.98..159364.63 rows=7203 width=38) (actual time=95.785..1197.096 rows=7540 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9892.98..153399.20 rows=180680 width=50) (actual time=90.262..1107.338 rows=182435 loops=1)
                           ->  Hash Join  (cost=9892.42..40992.12 rows=45170 width=38) (actual time=89.539..709.821 rows=45297 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3555.39..33074.14 rows=225850 width=8) (actual time=30.438..519.731 rows=226645 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3498.93 rows=225850 width=0) (actual time=27.141..27.141 rows=226645 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=59.072..59.072 rows=29952 loops=1)
                                       Buckets: 4096  Batches: 1  Memory Usage: 2106kB
                                       ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.025..54.354 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..37.802 rows=150000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.019..0.019 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.013..0.018 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.001 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.45 rows=4 width=20) (actual time=0.007..0.008 rows=4 loops=45297)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.438..5.438 rows=10000 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 391kB
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..4.271 rows=10000 loops=1)
 Total runtime: 1208.263 ms
(36 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=159437.03..159437.03 rows=1 width=38) (actual time=338.087..338.087 rows=1 loops=1)
   ->  Sort  (cost=159437.03..159437.09 rows=25 width=38) (actual time=338.087..338.087 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=159436.66..159436.91 rows=25 width=38) (actual time=338.065..338.066 rows=5 loops=1)
               ->  Hash Join  (cost=10365.98..159364.63 rows=7203 width=38) (actual time=56.171..331.366 rows=7540 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9892.98..153399.20 rows=180680 width=50) (actual time=53.598..294.609 rows=182435 loops=1)
                           ->  Hash Join  (cost=9892.42..40992.12 rows=45170 width=38) (actual time=53.556..168.416 rows=45297 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3555.39..33074.14 rows=225850 width=8) (actual time=20.654..73.666 rows=226645 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3498.93 rows=225850 width=0) (actual time=17.386..17.386 rows=226645 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=32.885..32.885 rows=29952 loops=1)
                                       Buckets: 4096  Batches: 1  Memory Usage: 2106kB
                                       ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.023..28.616 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..7.966 rows=150000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.018..0.018 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.013..0.018 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.000..0.001 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.45 rows=4 width=20) (actual time=0.002..0.002 rows=4 loops=45297)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.554..2.554 rows=10000 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 391kB
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..1.416 rows=10000 loops=1)
 Total runtime: 338.375 ms
(36 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=118086.24..118086.25 rows=1 width=12) (actual time=1286.954..1286.955 rows=1 loops=1)
   ->  Aggregate  (cost=118086.24..118086.25 rows=1 width=12) (actual time=1286.954..1286.954 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=23223.82..117482.09 rows=120830 width=12) (actual time=138.909..1209.507 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..23193.61 rows=120830 width=0) (actual time=127.795..127.795 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 1286.983 ms
(7 rows)

SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=118086.24..118086.25 rows=1 width=12) (actual time=219.368..219.369 rows=1 loops=1)
   ->  Aggregate  (cost=118086.24..118086.25 rows=1 width=12) (actual time=219.368..219.368 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=23223.82..117482.09 rows=120830 width=12) (actual time=102.410..179.408 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..23193.61 rows=120830 width=0) (actual time=91.820..91.820 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 219.405 ms
(7 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=240725.85..240725.85 rows=1 width=68) (actual time=3431.593..3431.593 rows=1 loops=1)
   ->  Sort  (cost=240725.85..240740.22 rows=5749 width=68) (actual time=3431.591..3431.591 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=240610.87..240697.10 rows=5749 width=68) (actual time=3431.544..3431.554 rows=4 loops=1)
               ->  Hash Join  (cost=88271.43..240524.63 rows=5749 width=68) (actual time=905.427..3420.318 rows=5729 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=87798.43..235638.77 rows=144221 width=76) (actual time=898.789..3325.025 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=32398.61..172029.11 rows=1804700 width=24) (actual time=295.007..2275.681 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..31947.43 rows=1804700 width=0) (actual time=274.763..274.763 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53901.03..53901.03 rows=119904 width=60) (actual time=603.585..603.585 rows=118477 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 10645kB
                                 ->  Hash Join  (cost=5946.02..53901.03 rows=119904 width=60) (actual time=53.852..578.987 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.002..278.760 rows=1500000 loops=1)
                                       ->  Hash  (cost=5796.15..5796.15 rows=11990 width=60) (actual time=53.841..53.841 rows=11896 loops=1)
                                             Buckets: 2048  Batches: 1  Memory Usage: 1069kB
                                             ->  Hash Join  (cost=16.65..5796.15 rows=11990 width=60) (actual time=0.132..51.643 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.001..37.365 rows=150000 loops=1)
                                                   ->  Hash  (cost=16.62..16.62 rows=2 width=60) (actual time=0.127..0.127 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Nested Loop  (cost=0.00..16.62 rows=2 width=60) (actual time=0.084..0.125 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 623
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.002 rows=25 loops=1)
                                                               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.002 rows=25 loops=1)
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=6.045..6.045 rows=10000 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 391kB
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..4.676 rows=10000 loops=1)
 Total runtime: 3431.679 ms
(35 rows)

SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=240725.85..240725.85 rows=1 width=68) (actual time=1302.160..1302.161 rows=1 loops=1)
   ->  Sort  (cost=240725.85..240740.22 rows=5749 width=68) (actual time=1302.159..1302.159 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=240610.87..240697.10 rows=5749 width=68) (actual time=1302.108..1302.118 rows=4 loops=1)
               ->  Hash Join  (cost=88271.43..240524.63 rows=5749 width=68) (actual time=621.828..1295.834 rows=5729 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=87798.43..235638.77 rows=144221 width=76) (actual time=619.018..1243.911 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=32398.61..172029.11 rows=1804700 width=24) (actual time=215.193..492.934 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..31947.43 rows=1804700 width=0) (actual time=195.270..195.270 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53901.03..53901.03 rows=119904 width=60) (actual time=403.786..403.786 rows=118477 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 10645kB
                                 ->  Hash Join  (cost=5946.02..53901.03 rows=119904 width=60) (actual time=28.107..384.286 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.002..73.402 rows=1500000 loops=1)
                                       ->  Hash  (cost=5796.15..5796.15 rows=11990 width=60) (actual time=28.098..28.098 rows=11896 loops=1)
                                             Buckets: 2048  Batches: 1  Memory Usage: 1069kB
                                             ->  Hash Join  (cost=16.65..5796.15 rows=11990 width=60) (actual time=0.132..26.398 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..7.817 rows=150000 loops=1)
                                                   ->  Hash  (cost=16.62..16.62 rows=2 width=60) (actual time=0.127..0.127 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Nested Loop  (cost=0.00..16.62 rows=2 width=60) (actual time=0.084..0.125 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 623
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.002 rows=25 loops=1)
                                                               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.003 rows=25 loops=1)
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.704..2.704 rows=10000 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 391kB
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.003..1.383 rows=10000 loops=1)
 Total runtime: 1302.240 ms
(35 rows)

query 8 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=61665.51..61665.51 rows=1 width=42) (actual time=1303.779..1303.780 rows=1 loops=1)
   ->  Sort  (cost=61665.51..61667.35 rows=734 width=42) (actual time=1303.778..1303.778 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=61649.00..61661.84 rows=734 width=42) (actual time=1303.761..1303.762 rows=2 loops=1)
               ->  Hash Join  (cost=51325.94..61600.40 rows=2430 width=42) (actual time=811.057..1297.062 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=51324.37..61553.27 rows=2430 width=20) (actual time=811.033..1293.967 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=50876.37..61044.39 rows=2439 width=20) (actual time=804.654..1284.783 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.98..9994.60 rows=40001 width=20) (actual time=3.582..459.379 rows=39694 loops=1)
                                       ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5435.75 rows=1333 width=4) (actual time=2.620..34.716 rows=1320 loops=1)
                                             Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.12 rows=30 width=24) (actual time=0.259..0.316 rows=30 loops=1320)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Heap Fetches: 0
                                 ->  Hash  (cost=49731.87..49731.87 rows=91482 width=8) (actual time=801.025..801.025 rows=91179 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 3562kB
                                       ->  Hash Join  (cost=13537.89..49731.87 rows=91482 width=8) (actual time=109.155..782.978 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=7200.86..40192.98 rows=457408 width=12) (actual time=52.011..557.144 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7086.51 rows=457408 width=0) (actual time=48.717..48.717 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=57.088..57.088 rows=29952 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 1053kB
                                                   ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.037..53.543 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.003..37.148 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.028..0.028 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.018..0.027 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.007 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=6.377..6.377 rows=10000 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 391kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..5.328 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.008..0.008 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.005 rows=25 loops=1)
 Total runtime: 1304.087 ms
(48 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=61665.51..61665.51 rows=1 width=42) (actual time=291.725..291.725 rows=1 loops=1)
   ->  Sort  (cost=61665.51..61667.35 rows=734 width=42) (actual time=291.724..291.724 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=61649.00..61661.84 rows=734 width=42) (actual time=291.707..291.708 rows=2 loops=1)
               ->  Hash Join  (cost=51325.94..61600.40 rows=2430 width=42) (actual time=254.244..289.436 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=51324.37..61553.27 rows=2430 width=20) (actual time=254.221..288.487 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=50876.37..61044.39 rows=2439 width=20) (actual time=251.835..284.532 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.98..9994.60 rows=40001 width=20) (actual time=0.055..19.080 rows=39694 loops=1)
                                       ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5435.75 rows=1333 width=4) (actual time=0.040..6.620 rows=1320 loops=1)
                                             Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.12 rows=30 width=24) (actual time=0.003..0.007 rows=30 loops=1320)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Heap Fetches: 0
                                 ->  Hash  (cost=49731.87..49731.87 rows=91482 width=8) (actual time=251.756..251.756 rows=91179 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 3562kB
                                       ->  Hash Join  (cost=13537.89..49731.87 rows=91482 width=8) (actual time=68.322..240.058 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=7200.86..40192.98 rows=457408 width=12) (actual time=37.018..113.160 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7086.51 rows=457408 width=0) (actual time=33.724..33.724 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=31.290..31.290 rows=29952 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 1053kB
                                                   ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.018..28.222 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.001..7.952 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.014..0.014 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.009..0.012 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.000..0.000 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.384..2.384 rows=10000 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 391kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..1.342 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.009..0.009 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.007 rows=25 loops=1)
 Total runtime: 292.024 ms
(48 rows)

query 9 run 1
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=115555.42..115555.43 rows=1 width=53) (actual time=6935.304..6935.304 rows=1 loops=1)
   ->  Sort  (cost=115555.42..115555.91 rows=195 width=53) (actual time=6935.303..6935.303 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=115551.52..115554.45 rows=195 width=53) (actual time=6935.211..6935.236 rows=175 loops=1)
               ->  Nested Loop  (cost=3.15..115548.11 rows=195 width=53) (actual time=3.729..6517.395 rows=325928 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 7822272
                     ->  Nested Loop  (cost=3.15..115472.70 rows=195 width=31) (actual time=3.704..5440.393 rows=325928 loops=1)
                           ->  Nested Loop  (cost=2.74..115039.13 rows=194 width=35) (actual time=3.477..4896.279 rows=325928 loops=1)
                                 ->  Merge Join  (cost=2.31..114251.64 rows=194 width=35) (actual time=2.937..1064.956 rows=325928 loops=1)
                                       Merge Cond: (partsupp.ps_partkey = lineitem.l_partkey)
                                       Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                       Rows Removed by Join Filter: 977784
                                       ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..18168.42 rows=800000 width=14) (actual time=0.522..102.458 rows=799985 loops=1)
                                             Heap Fetches: 0
                                       ->  Materialize  (cost=0.98..61123.02 rows=484994 width=33) (actual time=2.390..729.109 rows=1303709 loops=1)
                                             ->  Nested Loop  (cost=0.98..59910.54 rows=484994 width=33) (actual time=2.385..625.684 rows=325928 loops=1)
                                                   ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6454.42 rows=16162 width=4) (actual time=0.275..56.203 rows=10880 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 189120
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.01 rows=30 width=29) (actual time=0.038..0.049 rows=30 loops=10880)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.05 rows=1 width=8) (actual time=0.011..0.011 rows=1 loops=325928)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
                           ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.41..2.22 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                 Index Cond: (s_suppkey = lineitem.l_suppkey)
                                 Heap Fetches: 0
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=325928)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.004..0.007 rows=25 loops=1)
 Total runtime: 6935.391 ms
(33 rows)

SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=115555.42..115555.43 rows=1 width=53) (actual time=3248.808..3248.809 rows=1 loops=1)
   ->  Sort  (cost=115555.42..115555.91 rows=195 width=53) (actual time=3248.807..3248.807 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=115551.52..115554.45 rows=195 width=53) (actual time=3248.713..3248.741 rows=175 loops=1)
               ->  Nested Loop  (cost=3.15..115548.11 rows=195 width=53) (actual time=0.104..2887.554 rows=325928 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 7822272
                     ->  Nested Loop  (cost=3.15..115472.70 rows=195 width=31) (actual time=0.093..1898.460 rows=325928 loops=1)
                           ->  Nested Loop  (cost=2.74..115039.13 rows=194 width=35) (actual time=0.080..1445.513 rows=325928 loops=1)
                                 ->  Merge Join  (cost=2.31..114251.64 rows=194 width=35) (actual time=0.074..538.501 rows=325928 loops=1)
                                       Merge Cond: (partsupp.ps_partkey = lineitem.l_partkey)
                                       Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                       Rows Removed by Join Filter: 977784
                                       ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..18168.42 rows=800000 width=14) (actual time=0.029..71.135 rows=799985 loops=1)
                                             Heap Fetches: 0
                                       ->  Materialize  (cost=0.98..61123.02 rows=484994 width=33) (actual time=0.035..256.876 rows=1303709 loops=1)
                                             ->  Nested Loop  (cost=0.98..59910.54 rows=484994 width=33) (actual time=0.033..165.049 rows=325928 loops=1)
                                                   ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6454.42 rows=16162 width=4) (actual time=0.015..40.853 rows=10880 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 189120
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.01 rows=30 width=29) (actual time=0.003..0.008 rows=30 loops=10880)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.05 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=325928)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
                           ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.41..2.22 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                 Index Cond: (s_suppkey = lineitem.l_suppkey)
                                 Heap Fetches: 0
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=325928)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.007 rows=25 loops=1)
 Total runtime: 3248.892 ms
(33 rows)

query 10 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=167723.16..167723.21 rows=20 width=182) (actual time=1562.389..1562.392 rows=20 loops=1)
   ->  Sort  (cost=167723.16..167855.82 rows=53064 width=182) (actual time=1562.388..1562.390 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=165780.51..166311.15 rows=53064 width=182) (actual time=1539.683..1552.690 rows=38076 loops=1)
               ->  Hash Join  (cost=39041.33..164453.91 rows=53064 width=182) (actual time=619.232..1400.762 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=39039.76..163722.72 rows=53064 width=160) (actual time=619.219..1379.240 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=32067.76..155490.45 rows=53064 width=16) (actual time=537.242..1223.155 rows=114347 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Sort  (cost=32063.61..32199.20 rows=54235 width=8) (actual time=536.480..543.459 rows=57111 loops=1)
                                       Sort Key: orders.o_orderkey
                                       Sort Method: quicksort  Memory: 4214kB
                                       ->  Bitmap Heap Scan on orders  (cost=854.34..27798.86 rows=54235 width=8) (actual time=12.698..525.816 rows=57111 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..840.78 rows=54235 width=0) (actual time=9.422..9.422 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..118955.05 rows=1468006 width=16) (actual time=0.695..583.451 rows=1478867 loops=1)
                                       Index Cond: (l_returnflag = 'R'::bpchar)
                                       Heap Fetches: 0
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=81.961..81.961 rows=150000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 26813kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.000..49.399 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.009..0.009 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.002 rows=25 loops=1)
 Total runtime: 1562.544 ms
(28 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=167723.16..167723.21 rows=20 width=182) (actual time=785.953..785.955 rows=20 loops=1)
   ->  Sort  (cost=167723.16..167855.82 rows=53064 width=182) (actual time=785.952..785.952 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=165780.51..166311.15 rows=53064 width=182) (actual time=763.300..776.267 rows=38076 loops=1)
               ->  Hash Join  (cost=39041.33..164453.91 rows=53064 width=182) (actual time=99.958..635.641 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=39039.76..163722.72 rows=53064 width=160) (actual time=99.944..615.992 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=32067.76..155490.45 rows=53064 width=16) (actual time=44.864..493.169 rows=114347 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Sort  (cost=32063.61..32199.20 rows=54235 width=8) (actual time=44.797..51.121 rows=57111 loops=1)
                                       Sort Key: orders.o_orderkey
                                       Sort Method: quicksort  Memory: 4214kB
                                       ->  Bitmap Heap Scan on orders  (cost=854.34..27798.86 rows=54235 width=8) (actual time=8.375..39.270 rows=57111 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..840.78 rows=54235 width=0) (actual time=5.169..5.169 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..118955.05 rows=1468006 width=16) (actual time=0.041..353.541 rows=1478867 loops=1)
                                       Index Cond: (l_returnflag = 'R'::bpchar)
                                       Heap Fetches: 0
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=55.070..55.070 rows=150000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 26813kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.001..24.070 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.010..0.010 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.003 rows=25 loops=1)
 Total runtime: 786.095 ms
(28 rows)

query 11 run 1
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29295.18..29295.18 rows=1 width=14) (actual time=730.920..730.921 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=14100.15..14100.17 rows=1 width=10) (actual time=29.359..29.359 rows=1 loops=1)
           ->  Nested Loop  (cost=7.81..13860.15 rows=32000 width=10) (actual time=0.699..18.417 rows=32880 loops=1)
                 ->  Nested Loop  (cost=7.38..234.45 rows=400 width=4) (actual time=0.693..0.898 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.007 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=7.38..229.14 rows=400 width=8) (actual time=0.687..0.855 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.668..0.668 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..33.26 rows=80 width=14) (actual time=0.003..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=15195.01..15275.01 rows=32000 width=14) (actual time=730.919..730.919 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=14635.01..15035.01 rows=32000 width=14) (actual time=725.278..730.780 rows=839 loops=1)
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=0.42..14075.01 rows=32000 width=14) (actual time=0.679..668.315 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..449.31 rows=400 width=4) (actual time=0.060..3.840 rows=411 loops=1)
                           Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                           Rows Removed by Join Filter: 9589
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.007 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..2.770 rows=10000 loops=1)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..33.26 rows=80 width=18) (actual time=0.094..1.600 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Total runtime: 730.986 ms
(31 rows)

SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29295.18..29295.18 rows=1 width=14) (actual time=74.643..74.643 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=14100.15..14100.17 rows=1 width=10) (actual time=27.971..27.971 rows=1 loops=1)
           ->  Nested Loop  (cost=7.81..13860.15 rows=32000 width=10) (actual time=0.066..17.038 rows=32880 loops=1)
                 ->  Nested Loop  (cost=7.38..234.45 rows=400 width=4) (actual time=0.061..0.277 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=7.38..229.14 rows=400 width=8) (actual time=0.053..0.227 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.035..0.035 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..33.26 rows=80 width=14) (actual time=0.003..0.033 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=15195.01..15275.01 rows=32000 width=14) (actual time=74.641..74.641 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=14635.01..15035.01 rows=32000 width=14) (actual time=69.080..74.501 rows=839 loops=1)
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=0.42..14075.01 rows=32000 width=14) (actual time=0.026..26.735 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..449.31 rows=400 width=4) (actual time=0.021..1.752 rows=411 loops=1)
                           Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                           Rows Removed by Join Filter: 9589
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..0.516 rows=10000 loops=1)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..33.26 rows=80 width=18) (actual time=0.004..0.052 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Total runtime: 74.946 ms
(31 rows)

query 12 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116220.90..116220.91 rows=1 width=27) (actual time=3902.881..3902.881 rows=1 loops=1)
   ->  Sort  (cost=116220.90..116220.91 rows=1 width=27) (actual time=3902.880..3902.880 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=116220.88..116220.89 rows=1 width=27) (actual time=3902.867..3902.868 rows=2 loops=1)
               ->  Merge Join  (cost=54673.74..115712.52 rows=29049 width=27) (actual time=3393.454..3884.102 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.280..388.667 rows=1499957 loops=1)
                     ->  Sort  (cost=54673.31..54745.95 rows=29057 width=15) (actual time=3393.119..3396.420 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 2219kB
                           ->  Index Scan using q12_idx_1 on lineitem  (cost=0.42..52519.23 rows=29057 width=15) (actual time=2.548..3370.594 rows=30953 loops=1)
                                 Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 3902.975 ms
(14 rows)

SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116220.90..116220.91 rows=1 width=27) (actual time=406.293..406.293 rows=1 loops=1)
   ->  Sort  (cost=116220.90..116220.91 rows=1 width=27) (actual time=406.293..406.293 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=116220.88..116220.89 rows=1 width=27) (actual time=406.283..406.284 rows=2 loops=1)
               ->  Merge Join  (cost=54673.74..115712.52 rows=29049 width=27) (actual time=96.420..391.810 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.005..201.850 rows=1499957 loops=1)
                     ->  Sort  (cost=54673.31..54745.95 rows=29057 width=15) (actual time=96.389..98.560 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 2219kB
                           ->  Index Scan using q12_idx_1 on lineitem  (cost=0.42..52519.23 rows=29057 width=15) (actual time=0.021..89.862 rows=30953 loops=1)
                                 Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 406.363 ms
(14 rows)

query 13 run 1
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=96708.11..96708.11 rows=1 width=8) (actual time=2260.638..2260.639 rows=1 loops=1)
   ->  Sort  (cost=96708.11..96708.61 rows=200 width=8) (actual time=2260.637..2260.637 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=96705.11..96707.11 rows=200 width=8) (actual time=2260.615..2260.621 rows=42 loops=1)
               ->  HashAggregate  (cost=92955.11..94455.11 rows=150000 width=8) (actual time=2214.371..2241.664 rows=150000 loops=1)
                     ->  Hash Right Join  (cost=4953.42..85455.86 rows=1499850 width=8) (actual time=31.885..1745.337 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.273..666.717 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=31.599..31.599 rows=150000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 5274kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.555..17.055 rows=150000 loops=1)
                                       Heap Fetches: 0
 Total runtime: 2261.242 ms
(16 rows)

SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=96708.11..96708.11 rows=1 width=8) (actual time=2022.155..2022.155 rows=1 loops=1)
   ->  Sort  (cost=96708.11..96708.61 rows=200 width=8) (actual time=2022.154..2022.154 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=96705.11..96707.11 rows=200 width=8) (actual time=2022.133..2022.136 rows=42 loops=1)
               ->  HashAggregate  (cost=92955.11..94455.11 rows=150000 width=8) (actual time=1975.898..2003.140 rows=150000 loops=1)
                     ->  Hash Right Join  (cost=4953.42..85455.86 rows=1499850 width=8) (actual time=27.596..1525.318 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.008..525.286 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=27.577..27.577 rows=150000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 5274kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.037..12.978 rows=150000 loops=1)
                                       Heap Fetches: 0
 Total runtime: 2022.802 ms
(16 rows)

query 14 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=91445.00..91445.02 rows=1 width=33) (actual time=843.223..843.223 rows=1 loops=1)
   ->  Aggregate  (cost=91445.00..91445.02 rows=1 width=33) (actual time=843.221..843.221 rows=1 loops=1)
         ->  Hash Join  (cost=10098.35..89985.38 rows=83407 width=33) (actual time=100.250..769.737 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1499.35..79718.24 rows=83407 width=16) (actual time=20.743..615.313 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1478.50 rows=83407 width=0) (actual time=14.258..14.258 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=79.435..79.435 rows=200000 loops=1)
                     Buckets: 32768  Batches: 1  Memory Usage: 11552kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.004..53.515 rows=200000 loops=1)
 Total runtime: 843.274 ms
(12 rows)

SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=91445.00..91445.02 rows=1 width=33) (actual time=216.892..216.892 rows=1 loops=1)
   ->  Aggregate  (cost=91445.00..91445.02 rows=1 width=33) (actual time=216.890..216.890 rows=1 loops=1)
         ->  Hash Join  (cost=10098.35..89985.38 rows=83407 width=33) (actual time=66.424..167.762 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1499.35..79718.24 rows=83407 width=16) (actual time=15.085..65.313 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1478.50 rows=83407 width=0) (actual time=9.043..9.043 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=51.296..51.296 rows=200000 loops=1)
                     Buckets: 32768  Batches: 1  Memory Usage: 11552kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.004..27.711 rows=200000 loops=1)
 Total runtime: 216.923 ms
(12 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=243449.48..243450.75 rows=1 width=103) (actual time=1467.748..1467.748 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=120901.82..120901.83 rows=1 width=32) (actual time=218.978..218.978 rows=1 loops=1)
           ->  HashAggregate  (cost=120893.63..120897.27 rows=364 width=16) (actual time=217.186..218.380 rows=10000 loops=1)
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3902.18..118720.22 rows=217341 width=16) (actual time=31.610..93.911 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3847.84 rows=217341 width=0) (actual time=22.051..22.051 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=122547.65..123012.11 rows=364 width=103) (actual time=1467.746..1467.746 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..434.29 rows=10000 width=71) (actual time=0.394..4.756 rows=8449 loops=1)
         ->  Sort  (cost=122547.36..122548.27 rows=364 width=36) (actual time=1462.456..1462.456 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=122523.69..122531.88 rows=364 width=36) (actual time=1462.012..1462.452 rows=1 loops=1)
                     ->  HashAggregate  (cost=122523.69..122528.24 rows=364 width=16) (actual time=1462.011..1462.451 rows=1 loops=1)
                           Filter: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3902.18..118720.22 rows=217341 width=16) (actual time=45.621..1021.213 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3847.84 rows=217341 width=0) (actual time=35.067..35.067 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 1467.816 ms
(23 rows)

DROP VIEW
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=243449.48..243450.75 rows=1 width=103) (actual time=476.983..476.983 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=120901.82..120901.83 rows=1 width=32) (actual time=219.854..219.854 rows=1 loops=1)
           ->  HashAggregate  (cost=120893.63..120897.27 rows=364 width=16) (actual time=218.033..219.247 rows=10000 loops=1)
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3902.18..118720.22 rows=217341 width=16) (actual time=31.708..94.938 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3847.84 rows=217341 width=0) (actual time=22.258..22.258 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=122547.65..123012.11 rows=364 width=103) (actual time=476.982..476.982 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..434.29 rows=10000 width=71) (actual time=0.005..1.173 rows=8449 loops=1)
         ->  Sort  (cost=122547.36..122548.27 rows=364 width=36) (actual time=475.309..475.309 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=122523.69..122531.88 rows=364 width=36) (actual time=474.860..475.304 rows=1 loops=1)
                     ->  HashAggregate  (cost=122523.69..122528.24 rows=364 width=16) (actual time=474.859..475.303 rows=1 loops=1)
                           Filter: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3902.18..118720.22 rows=217341 width=16) (actual time=34.216..125.659 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3847.84 rows=217341 width=0) (actual time=24.465..24.465 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 477.056 ms
(23 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=36920.05..36920.05 rows=1 width=40) (actual time=1113.775..1113.775 rows=1 loops=1)
   ->  Sort  (cost=36920.05..36927.27 rows=2886 width=40) (actual time=1113.774..1113.774 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=36155.41..36905.62 rows=2886 width=40) (actual time=1064.000..1110.869 rows=18220 loops=1)
               ->  Sort  (cost=36155.41..36299.68 rows=57708 width=40) (actual time=1063.980..1071.422 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Merge Join  (cost=348.85..31591.72 rows=57708 width=40) (actual time=6.670..306.867 rows=117930 loops=1)
                           Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                           ->  Index Scan using part_pkey on part  (cost=0.42..11202.42 rows=28854 width=40) (actual time=0.281..104.563 rows=29492 loops=1)
                                 Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                 Rows Removed by Filter: 170508
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..18740.43 rows=400000 width=8) (actual time=6.378..150.602 rows=799673 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.960..5.468 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
 Total runtime: 1113.837 ms
(22 rows)

SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=36920.05..36920.05 rows=1 width=40) (actual time=1045.242..1045.242 rows=1 loops=1)
   ->  Sort  (cost=36920.05..36927.27 rows=2886 width=40) (actual time=1045.241..1045.241 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=36155.41..36905.62 rows=2886 width=40) (actual time=996.077..1042.255 rows=18220 loops=1)
               ->  Sort  (cost=36155.41..36299.68 rows=57708 width=40) (actual time=996.059..1003.396 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Merge Join  (cost=348.85..31591.72 rows=57708 width=40) (actual time=2.265..241.703 rows=117930 loops=1)
                           Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                           ->  Index Scan using part_pkey on part  (cost=0.42..11202.42 rows=28854 width=40) (actual time=0.011..67.986 rows=29492 loops=1)
                                 Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                 Rows Removed by Filter: 170508
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..18740.43 rows=400000 width=8) (actual time=2.244..125.182 rows=799673 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.083..2.217 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
 Total runtime: 1045.294 ms
(22 rows)

query 17 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=179423.35..179423.36 rows=1 width=8) (actual time=3171.019..3171.019 rows=1 loops=1)
   ->  Aggregate  (cost=179423.35..179423.36 rows=1 width=8) (actual time=3171.018..3171.018 rows=1 loops=1)
         ->  Nested Loop  (cost=7107.77..179418.30 rows=2020 width=8) (actual time=63.832..3170.525 rows=592 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=7107.21..178833.38 rows=202 width=40) (actual time=63.150..3062.598 rows=208 loops=1)
                     Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=0.43..169237.21 rows=198908 width=9) (actual time=0.521..2995.012 rows=199276 loops=1)
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136245.30 rows=6001658 width=9) (actual time=0.456..952.653 rows=5979358 loops=1)
                                 Heap Fetches: 0
                     ->  Sort  (cost=7106.78..7107.29 rows=203 width=4) (actual time=53.087..53.182 rows=208 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 34kB
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=203 width=4) (actual time=0.793..52.986 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.77 rows=10 width=17) (actual time=0.478..0.516 rows=3 loops=208)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Total runtime: 3171.065 ms
(19 rows)

SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=179423.35..179423.36 rows=1 width=8) (actual time=2790.917..2790.917 rows=1 loops=1)
   ->  Aggregate  (cost=179423.35..179423.36 rows=1 width=8) (actual time=2790.917..2790.917 rows=1 loops=1)
         ->  Nested Loop  (cost=7107.77..179418.30 rows=2020 width=8) (actual time=33.356..2790.769 rows=592 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=7107.21..178833.38 rows=202 width=40) (actual time=33.337..2789.155 rows=208 loops=1)
                     Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=0.43..169237.21 rows=198908 width=9) (actual time=0.052..2752.232 rows=199276 loops=1)
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136245.30 rows=6001658 width=9) (actual time=0.024..769.603 rows=5979358 loops=1)
                                 Heap Fetches: 0
                     ->  Sort  (cost=7106.78..7107.29 rows=203 width=4) (actual time=24.713..24.741 rows=208 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 34kB
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=203 width=4) (actual time=0.082..24.670 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.77 rows=10 width=17) (actual time=0.006..0.007 rows=3 loops=208)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Total runtime: 2790.962 ms
(19 rows)

query 18 run 1
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=933096.43..933099.18 rows=100 width=44) (actual time=2850.279..2850.302 rows=9 loops=1)
   ->  GroupAggregate  (cost=933096.43..1015596.45 rows=3000001 width=44) (actual time=2850.278..2850.301 rows=9 loops=1)
         ->  Sort  (cost=933096.43..940596.43 rows=3000001 width=44) (actual time=2850.270..2850.270 rows=63 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 29kB
               ->  Hash Join  (cost=6977.75..544428.34 rows=3000001 width=44) (actual time=707.770..2850.140 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=5.75..466206.32 rows=3000001 width=25) (actual time=645.230..2787.561 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.86..283133.54 rows=750000 width=24) (actual time=490.642..2198.981 rows=9 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.322..312.435 rows=1201687 loops=1)
                                 ->  Materialize  (cost=0.43..203763.94 rows=1500414 width=4) (actual time=385.757..1816.382 rows=9 loops=1)
                                       ->  GroupAggregate  (cost=0.43..185008.77 rows=1500414 width=9) (actual time=385.754..1816.369 rows=9 loops=1)
                                             Filter: (sum(lineitem_1.l_quantity) > 313::numeric)
                                             Rows Removed by Filter: 1499991
                                             ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136245.30 rows=6001658 width=9) (actual time=0.443..667.192 rows=6001215 loops=1)
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136245.30 rows=6001658 width=9) (actual time=0.009..381.055 rows=4807580 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=62.517..62.517 rows=150000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 8204kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.003..43.081 rows=150000 loops=1)
 Total runtime: 2850.374 ms
(24 rows)

SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=933096.43..933099.18 rows=100 width=44) (actual time=2480.649..2480.672 rows=9 loops=1)
   ->  GroupAggregate  (cost=933096.43..1015596.45 rows=3000001 width=44) (actual time=2480.647..2480.670 rows=9 loops=1)
         ->  Sort  (cost=933096.43..940596.43 rows=3000001 width=44) (actual time=2480.641..2480.642 rows=63 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 29kB
               ->  Hash Join  (cost=6977.75..544428.34 rows=3000001 width=44) (actual time=596.253..2480.509 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=5.75..466206.32 rows=3000001 width=25) (actual time=559.444..2443.670 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.86..283133.54 rows=750000 width=24) (actual time=403.878..1851.464 rows=9 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.010..160.058 rows=1201687 loops=1)
                                 ->  Materialize  (cost=0.43..203763.94 rows=1500414 width=4) (actual time=343.776..1624.570 rows=9 loops=1)
                                       ->  GroupAggregate  (cost=0.43..185008.77 rows=1500414 width=9) (actual time=343.774..1624.560 rows=9 loops=1)
                                             Filter: (sum(lineitem_1.l_quantity) > 313::numeric)
                                             Rows Removed by Filter: 1499991
                                             ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136245.30 rows=6001658 width=9) (actual time=0.017..500.187 rows=6001215 loops=1)
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136245.30 rows=6001658 width=9) (actual time=0.008..381.220 rows=4807580 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=36.788..36.788 rows=150000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 8204kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.003..18.723 rows=150000 loops=1)
 Total runtime: 2480.736 ms
(24 rows)

query 19 run 1
SET
SET


 Limit  (cost=228237.26..228237.27 rows=1 width=12) (actual time=1435.758..1435.758 rows=1 loops=1)
   ->  Aggregate  (cost=228237.26..228237.27 rows=1 width=12) (actual time=1435.757..1435.757 rows=1 loops=1)
         ->  Merge Join  (cost=1.58..228236.41 rows=114 width=12) (actual time=9.130..1435.446 rows=111 loops=1)
               Merge Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               Rows Removed by Join Filter: 26985
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..212942.40 rows=111409 width=21) (actual time=0.381..1305.828 rows=89765 loops=1)
                     Index Cond: (l_shipinstruct = 'DELIVER IN PERSON'::bpchar)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
                     Rows Removed by Filter: 1410264
                     Heap Fetches: 0
               ->  Index Scan using part_pkey on part  (cost=0.42..11702.42 rows=99986 width=30) (actual time=0.247..105.039 rows=65795 loops=1)
                     Filter: ((p_size >= 1) AND (((p_size <= 5) AND (p_size >= 1)) OR ((p_size <= 10) AND (p_size >= 1)) OR ((p_size <= 15) AND (p_size >= 1))))
                     Rows Removed by Filter: 151720
 Total runtime: 1435.804 ms
(15 rows)

SET
SET


 Limit  (cost=228237.26..228237.27 rows=1 width=12) (actual time=891.986..891.987 rows=1 loops=1)
   ->  Aggregate  (cost=228237.26..228237.27 rows=1 width=12) (actual time=891.986..891.986 rows=1 loops=1)
         ->  Merge Join  (cost=1.58..228236.41 rows=114 width=12) (actual time=4.318..891.810 rows=111 loops=1)
               Merge Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               Rows Removed by Join Filter: 26985
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..212942.40 rows=111409 width=21) (actual time=0.062..807.157 rows=89765 loops=1)
                     Index Cond: (l_shipinstruct = 'DELIVER IN PERSON'::bpchar)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
                     Rows Removed by Filter: 1410264
                     Heap Fetches: 0
               ->  Index Scan using part_pkey on part  (cost=0.42..11702.42 rows=99986 width=30) (actual time=0.007..66.895 rows=65795 loops=1)
                     Filter: ((p_size >= 1) AND (((p_size <= 5) AND (p_size >= 1)) OR ((p_size <= 10) AND (p_size >= 1)) OR ((p_size <= 15) AND (p_size >= 1))))
                     Rows Removed by Filter: 151720
 Total runtime: 892.030 ms
(15 rows)

query 20 run 1
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170140.39..170140.39 rows=1 width=51) (actual time=3406.958..3406.958 rows=1 loops=1)
   ->  Sort  (cost=170140.39..170140.89 rows=200 width=51) (actual time=3406.957..3406.957 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=158517.76..170139.39 rows=200 width=51) (actual time=3217.232..3406.761 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.382..3.674 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.371..2.760 rows=10000 loops=1)
               ->  Materialize  (cost=158517.76..169654.09 rows=6 width=8) (actual time=7.017..7.483 rows=4371 loops=438)
                     ->  Merge Join  (cost=158517.76..169654.06 rows=6 width=8) (actual time=3073.257..3214.040 rows=5898 loops=1)
                           Merge Cond: (partsupp.ps_partkey = lineitem.l_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  Nested Loop  (cost=0.84..10599.32 rows=8226 width=16) (actual time=0.524..61.070 rows=8748 loops=1)
                                 ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6454.42 rows=2020 width=4) (actual time=0.268..32.467 rows=2187 loops=1)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 197813
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..2.01 rows=4 width=12) (actual time=0.012..0.012 rows=4 loops=2187)
                                       Index Cond: (ps_partkey = part.p_partkey)
                                       Heap Fetches: 0
                           ->  Sort  (cost=158516.92..158742.49 rows=90229 width=40) (actual time=3072.674..3117.548 rows=562387 loops=1)
                                 Sort Key: lineitem.l_partkey
                                 Sort Method: external sort  Disk: 14912kB
                                 ->  HashAggregate  (cost=149060.33..150188.19 rows=90229 width=13) (actual time=2445.018..2644.231 rows=544869 loops=1)
                                       ->  Bitmap Heap Scan on lineitem  (cost=16198.87..142293.18 rows=902287 width=13) (actual time=158.985..1925.539 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..15973.30 rows=902287 width=0) (actual time=139.126..139.126 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Total runtime: 3409.771 ms
(36 rows)

SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170140.39..170140.39 rows=1 width=51) (actual time=1667.165..1667.165 rows=1 loops=1)
   ->  Sort  (cost=170140.39..170140.89 rows=200 width=51) (actual time=1667.165..1667.165 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=158517.76..170139.39 rows=200 width=51) (actual time=1478.778..1667.018 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.010..1.709 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.001..0.531 rows=10000 loops=1)
               ->  Materialize  (cost=158517.76..169654.09 rows=6 width=8) (actual time=3.126..3.515 rows=4371 loops=438)
                     ->  Merge Join  (cost=158517.76..169654.06 rows=6 width=8) (actual time=1368.948..1476.200 rows=5898 loops=1)
                           Merge Cond: (partsupp.ps_partkey = lineitem.l_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  Nested Loop  (cost=0.84..10599.32 rows=8226 width=16) (actual time=0.040..28.492 rows=8748 loops=1)
                                 ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6454.42 rows=2020 width=4) (actual time=0.029..22.157 rows=2187 loops=1)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 197813
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..2.01 rows=4 width=12) (actual time=0.002..0.002 rows=4 loops=2187)
                                       Index Cond: (ps_partkey = part.p_partkey)
                                       Heap Fetches: 0
                           ->  Sort  (cost=158516.92..158742.49 rows=90229 width=40) (actual time=1368.851..1413.297 rows=562387 loops=1)
                                 Sort Key: lineitem.l_partkey
                                 Sort Method: external sort  Disk: 14912kB
                                 ->  HashAggregate  (cost=149060.33..150188.19 rows=90229 width=13) (actual time=743.155..941.737 rows=544869 loops=1)
                                       ->  Bitmap Heap Scan on lineitem  (cost=16198.87..142293.18 rows=902287 width=13) (actual time=116.065..313.091 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..15973.30 rows=902287 width=0) (actual time=96.879..96.879 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Total runtime: 1670.231 ms
(36 rows)

query 21 run 1
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=291492.54..291492.55 rows=1 width=26) (actual time=1562.181..1562.190 rows=100 loops=1)
   ->  Sort  (cost=291492.54..291492.55 rows=1 width=26) (actual time=1562.180..1562.185 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=291492.52..291492.53 rows=1 width=26) (actual time=1561.682..1561.721 rows=421 loops=1)
               ->  Nested Loop Anti Join  (cost=166282.01..291492.52 rows=1 width=26) (actual time=1125.475..1559.713 rows=4227 loops=1)
                     ->  Nested Loop Semi Join  (cost=166281.58..291488.07 rows=1 width=34) (actual time=1125.365..1457.413 rows=73962 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 8252
                           ->  Merge Join  (cost=166281.15..195640.98 rows=38681 width=38) (actual time=1125.344..1334.647 rows=76644 loops=1)
                                 Merge Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Sort  (cost=166280.71..166480.07 rows=79743 width=34) (actual time=1125.018..1134.723 rows=159165 loops=1)
                                       Sort Key: l1.l_orderkey
                                       Sort Method: quicksort  Memory: 18579kB
                                       ->  Hash Join  (cost=239.89..159788.40 rows=79743 width=34) (actual time=5.448..1099.233 rows=159165 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Index Only Scan using q21_idx_1 on lineitem l1  (cost=0.43..151249.45 rows=2000553 width=8) (actual time=0.235..853.962 rows=3793296 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 2207919
                                                   Heap Fetches: 0
                                             ->  Hash  (cost=234.45..234.45 rows=400 width=30) (actual time=5.176..5.176 rows=421 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 27kB
                                                   ->  Nested Loop  (cost=7.38..234.45 rows=400 width=30) (actual time=0.583..5.084 rows=421 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=7.38..229.14 rows=400 width=34) (actual time=0.569..5.001 rows=421 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.550..0.550 rows=421 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..26760.43 rows=727800 width=4) (actual time=0.317..135.165 rows=733203 loops=1)
                                       Index Cond: (o_orderstatus = 'F'::bpchar)
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.43 rows=4 width=8) (actual time=0.001..0.001 rows=1 loops=76644)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
                     ->  Index Only Scan using q21_idx_1 on lineitem l3  (cost=0.43..2.44 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=73962)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 2
                           Heap Fetches: 0
 Total runtime: 1562.294 ms
(42 rows)

SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=291492.54..291492.55 rows=1 width=26) (actual time=1328.275..1328.285 rows=100 loops=1)
   ->  Sort  (cost=291492.54..291492.55 rows=1 width=26) (actual time=1328.274..1328.277 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=291492.52..291492.53 rows=1 width=26) (actual time=1327.781..1327.823 rows=421 loops=1)
               ->  Nested Loop Anti Join  (cost=166282.01..291492.52 rows=1 width=26) (actual time=936.502..1326.173 rows=4227 loops=1)
                     ->  Nested Loop Semi Join  (cost=166281.58..291488.07 rows=1 width=34) (actual time=936.409..1224.974 rows=73962 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 8252
                           ->  Merge Join  (cost=166281.15..195640.98 rows=38681 width=38) (actual time=936.397..1109.181 rows=76644 loops=1)
                                 Merge Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Sort  (cost=166280.71..166480.07 rows=79743 width=34) (actual time=936.347..945.699 rows=159165 loops=1)
                                       Sort Key: l1.l_orderkey
                                       Sort Method: quicksort  Memory: 18579kB
                                       ->  Hash Join  (cost=239.89..159788.40 rows=79743 width=34) (actual time=0.447..915.615 rows=159165 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Index Only Scan using q21_idx_1 on lineitem l1  (cost=0.43..151249.45 rows=2000553 width=8) (actual time=0.019..682.462 rows=3793296 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 2207919
                                                   Heap Fetches: 0
                                             ->  Hash  (cost=234.45..234.45 rows=400 width=30) (actual time=0.409..0.409 rows=421 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 27kB
                                                   ->  Nested Loop  (cost=7.38..234.45 rows=400 width=30) (actual time=0.063..0.350 rows=421 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=7.38..229.14 rows=400 width=34) (actual time=0.056..0.300 rows=421 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.038..0.038 rows=421 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..26760.43 rows=727800 width=4) (actual time=0.045..100.938 rows=733203 loops=1)
                                       Index Cond: (o_orderstatus = 'F'::bpchar)
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.43 rows=4 width=8) (actual time=0.001..0.001 rows=1 loops=76644)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
                     ->  Index Only Scan using q21_idx_1 on lineitem l3  (cost=0.43..2.44 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=73962)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 2
                           Heap Fetches: 0
 Total runtime: 1328.359 ms
(42 rows)

query 22 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16168.86..16168.86 rows=1 width=22) (actual time=242.795..242.795 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.43..7546.44 rows=1 width=6) (actual time=113.102..113.102 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4773 width=6) (actual time=0.738..99.924 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  Sort  (cost=8622.42..8624.29 rows=748 width=22) (actual time=242.794..242.794 rows=1 loops=1)
         Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=8607.46..8618.68 rows=748 width=22) (actual time=242.763..242.765 rows=7 loops=1)
               ->  Nested Loop Anti Join  (cost=0.43..8601.85 rows=748 width=22) (actual time=113.178..239.514 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=113.126..169.408 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.38 rows=17 width=4) (actual time=0.003..0.003 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Total runtime: 242.853 ms
(18 rows)

SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16168.86..16168.86 rows=1 width=22) (actual time=175.009..175.009 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.43..7546.44 rows=1 width=6) (actual time=85.445..85.445 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4773 width=6) (actual time=0.011..73.289 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  Sort  (cost=8622.42..8624.29 rows=748 width=22) (actual time=175.009..175.009 rows=1 loops=1)
         Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=8607.46..8618.68 rows=748 width=22) (actual time=174.981..174.983 rows=7 loops=1)
               ->  Nested Loop Anti Join  (cost=0.43..8601.85 rows=748 width=22) (actual time=85.480..172.320 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=85.468..138.423 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.38 rows=17 width=4) (actual time=0.001..0.001 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Total runtime: 175.052 ms
(18 rows)

