query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191588.41..191589.09 rows=1 width=236) (actual time=2194.787..2194.862 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191588.41..191592.47 rows=6 width=236) (actual time=2194.786..2194.860 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=191588.41..191591.28 rows=24 width=236) (actual time=2194.741..2194.818 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=190588.35..190588.37 rows=6 width=236) (actual time=2186.029..2186.029 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=190588.11..190588.27 rows=6 width=236) (actual time=2186.001..2186.009 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.15 rows=1481849 width=25) (actual time=0.095..613.610 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 15.940 ms
 Execution Time: 2195.938 ms
(20 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191588.41..191589.09 rows=1 width=236) (actual time=1909.926..1909.993 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191588.41..191592.47 rows=6 width=236) (actual time=1909.925..1909.992 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=191588.41..191591.28 rows=24 width=236) (actual time=1909.898..1909.968 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=190588.35..190588.37 rows=6 width=236) (actual time=1905.341..1905.342 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=190588.11..190588.27 rows=6 width=236) (actual time=1905.316..1905.323 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.15 rows=1481849 width=25) (actual time=0.029..281.864 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 1.074 ms
 Execution Time: 1910.081 ms
(20 rows)

query 2 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18351.51..18351.52 rows=1 width=192) (actual time=169.619..169.632 rows=100 loops=1)
   ->  Sort  (cost=18351.51..18351.52 rows=1 width=192) (actual time=169.618..169.625 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=14.58..18351.50 rows=1 width=192) (actual time=5.463..169.258 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.406..0.411 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.207..0.208 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.193..0.195 rows=25 loops=1)
               ->  Materialize  (cost=14.58..18348.80 rows=1 width=170) (actual time=0.358..33.681 rows=489 loops=5)
                     ->  Nested Loop  (cost=14.58..18348.80 rows=1 width=170) (actual time=1.787..167.743 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.30..18347.53 rows=1 width=34) (actual time=1.436..125.889 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5437.51 rows=822 width=30) (actual time=0.222..25.233 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.88..15.70 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.44..13.45 rows=1 width=32) (actual time=0.122..0.122 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.85..13.44 rows=1 width=6) (actual time=0.109..0.119 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..12.33 rows=4 width=10) (actual time=0.088..0.117 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.71..11.71 rows=4 width=10) (actual time=0.086..0.110 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.080..0.082 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..2.30 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.085..0.085 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 20.980 ms
 Execution Time: 170.821 ms
(47 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18351.51..18351.52 rows=1 width=192) (actual time=23.498..23.511 rows=100 loops=1)
   ->  Sort  (cost=18351.51..18351.52 rows=1 width=192) (actual time=23.497..23.504 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=14.58..18351.50 rows=1 width=192) (actual time=0.169..23.178 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.009..0.014 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
               ->  Materialize  (cost=14.58..18348.80 rows=1 width=170) (actual time=0.012..4.571 rows=489 loops=5)
                     ->  Nested Loop  (cost=14.58..18348.80 rows=1 width=170) (actual time=0.059..22.495 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.30..18347.53 rows=1 width=34) (actual time=0.049..21.396 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5437.51 rows=822 width=30) (actual time=0.012..6.365 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.88..15.70 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.44..13.45 rows=1 width=32) (actual time=0.017..0.017 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.85..13.44 rows=1 width=6) (actual time=0.012..0.015 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..12.33 rows=4 width=10) (actual time=0.006..0.014 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.71..11.71 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.003..0.003 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..2.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.002..0.002 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 1.916 ms
 Execution Time: 23.775 ms
(47 rows)

query 3 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233225.61..233225.64 rows=10 width=44) (actual time=1096.153..1097.740 rows=10 loops=1)
   ->  Sort  (cost=233225.61..233997.09 rows=308592 width=44) (actual time=1096.151..1097.738 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=179771.53..226557.05 rows=308592 width=44) (actual time=1078.086..1095.292 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179771.53..218842.25 rows=308592 width=44) (actual time=1078.080..1086.300 rows=12053 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=178771.47..181085.91 rows=77148 width=44) (actual time=1067.999..1072.428 rows=2411 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=178771.47..178964.34 rows=77148 width=24) (actual time=1067.987..1068.266 rows=6107 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 663kB
                                 Worker 0:  Sort Method: quicksort  Memory: 617kB
                                 Worker 1:  Sort Method: quicksort  Memory: 684kB
                                 Worker 2:  Sort Method: quicksort  Memory: 654kB
                                 Worker 3:  Sort Method: quicksort  Memory: 730kB
                                 ->  Parallel Hash Join  (cost=37896.98..172508.85 rows=77148 width=24) (actual time=233.607..1065.972 rows=6107 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.15 rows=813044 width=16) (actual time=0.544..763.116 rows=652375 loops=5)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 547868
                                       ->  Parallel Hash  (cost=37323.05..37323.05 rows=45914 width=12) (actual time=230.846..230.848 rows=29213 loops=5)
                                             Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                             ->  Parallel Hash Join  (cost=4532.26..37323.05 rows=45914 width=12) (actual time=28.836..220.949 rows=29213 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=232906 width=16) (actual time=0.578..162.463 rows=144455 loops=5)
                                                         Filter: (o_orderdate < '1995-03-07'::date)
                                                         Rows Removed by Filter: 155545
                                                   ->  Parallel Hash  (cost=4378.25..4378.25 rows=12321 width=4) (actual time=28.161..28.161 rows=6028 loops=5)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1472kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12321 width=4) (actual time=0.071..25.952 rows=6028 loops=5)
                                                               Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                               Rows Removed by Filter: 23972
 Planning Time: 23.565 ms
 Execution Time: 1098.852 ms
(37 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233225.61..233225.64 rows=10 width=44) (actual time=449.895..453.903 rows=10 loops=1)
   ->  Sort  (cost=233225.61..233997.09 rows=308592 width=44) (actual time=449.894..453.901 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=179771.53..226557.05 rows=308592 width=44) (actual time=432.448..451.491 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179771.53..218842.25 rows=308592 width=44) (actual time=432.442..442.511 rows=12054 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=178771.47..181085.91 rows=77148 width=44) (actual time=427.105..431.611 rows=2411 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=178771.47..178964.34 rows=77148 width=24) (actual time=427.093..427.366 rows=6107 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 543kB
                                 Worker 0:  Sort Method: quicksort  Memory: 756kB
                                 Worker 1:  Sort Method: quicksort  Memory: 708kB
                                 Worker 2:  Sort Method: quicksort  Memory: 646kB
                                 Worker 3:  Sort Method: quicksort  Memory: 695kB
                                 ->  Parallel Hash Join  (cost=37896.98..172508.85 rows=77148 width=24) (actual time=100.048..423.009 rows=6107 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.15 rows=813044 width=16) (actual time=0.047..237.295 rows=652375 loops=5)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 547868
                                       ->  Parallel Hash  (cost=37323.05..37323.05 rows=45914 width=12) (actual time=99.250..99.252 rows=29213 loops=5)
                                             Buckets: 262144  Batches: 1  Memory Usage: 9024kB
                                             ->  Parallel Hash Join  (cost=4532.26..37323.05 rows=45914 width=12) (actual time=8.908..89.444 rows=29213 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=232906 width=16) (actual time=0.014..55.565 rows=144455 loops=5)
                                                         Filter: (o_orderdate < '1995-03-07'::date)
                                                         Rows Removed by Filter: 155545
                                                   ->  Parallel Hash  (cost=4378.25..4378.25 rows=12321 width=4) (actual time=8.197..8.198 rows=6028 loops=5)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12321 width=4) (actual time=0.011..6.312 rows=6028 loops=5)
                                                               Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                               Rows Removed by Filter: 23972
 Planning Time: 1.352 ms
 Execution Time: 453.977 ms
(37 rows)

query 4 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=60840.38..60840.76 rows=1 width=24) (actual time=911.725..945.845 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=60840.38..60842.28 rows=5 width=24) (actual time=911.724..945.843 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Gather Merge  (cost=60840.38..60842.16 rows=15 width=24) (actual time=911.717..945.838 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Sort  (cost=59840.34..59840.35 rows=5 width=24) (actual time=904.255..904.258 rows=4 loops=4)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=59840.23..59840.28 rows=5 width=24) (actual time=903.845..903.849 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Parallel Hash Semi Join  (cost=33111.92..59751.74 rows=17698 width=16) (actual time=851.074..901.538 rows=12850 loops=4)
                                 Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=864.78..27261.25 rows=17698 width=20) (actual time=12.883..416.309 rows=13993 loops=4)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=5676
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..851.07 rows=54864 width=0) (actual time=8.693..8.694 rows=55973 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Parallel Hash  (cost=25995.75..25995.75 rows=500111 width=4) (actual time=389.369..389.370 rows=948324 loops=4)
                                       Buckets: 1048576 (originally 2097152)  Batches: 8 (originally 1)  Memory Usage: 26880kB
                                       ->  Parallel Index Only Scan using q21_idx_2 on lineitem  (cost=0.43..25995.75 rows=500111 width=4) (actual time=0.678..147.302 rows=948324 loops=4)
                                             Heap Fetches: 0
 Planning Time: 20.452 ms
 Execution Time: 946.549 ms
(27 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=60840.38..60840.76 rows=1 width=24) (actual time=469.781..506.410 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=60840.38..60842.28 rows=5 width=24) (actual time=469.780..506.408 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Gather Merge  (cost=60840.38..60842.16 rows=15 width=24) (actual time=469.772..506.402 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Sort  (cost=59840.34..59840.35 rows=5 width=24) (actual time=465.404..465.407 rows=4 loops=4)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=59840.23..59840.28 rows=5 width=24) (actual time=465.042..465.045 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Parallel Hash Semi Join  (cost=33111.92..59751.74 rows=17698 width=16) (actual time=412.034..462.752 rows=12850 loops=4)
                                 Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=864.78..27261.25 rows=17698 width=20) (actual time=8.440..27.460 rows=13993 loops=4)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=5802
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..851.07 rows=54864 width=0) (actual time=4.772..4.772 rows=55973 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Parallel Hash  (cost=25995.75..25995.75 rows=500111 width=4) (actual time=342.469..342.470 rows=948324 loops=4)
                                       Buckets: 1048576 (originally 2097152)  Batches: 8 (originally 1)  Memory Usage: 26912kB
                                       ->  Parallel Index Only Scan using q21_idx_2 on lineitem  (cost=0.43..25995.75 rows=500111 width=4) (actual time=0.091..101.627 rows=948324 loops=4)
                                             Heap Fetches: 0
 Planning Time: 1.606 ms
 Execution Time: 506.484 ms
(27 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=73262.18..73262.18 rows=1 width=58) (actual time=778.201..785.221 rows=1 loops=1)
   ->  Sort  (cost=73262.18..73262.24 rows=25 width=58) (actual time=778.200..785.219 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=73222.06..73262.06 rows=25 width=58) (actual time=777.522..785.206 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=73222.06..73261.18 rows=75 width=58) (actual time=777.327..785.180 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=72222.02..72252.33 rows=25 width=58) (actual time=769.848..770.544 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=72222.02..72228.02 rows=2400 width=38) (actual time=769.671..769.754 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 198kB
                                 Worker 0:  Sort Method: quicksort  Memory: 191kB
                                 Worker 1:  Sort Method: quicksort  Memory: 197kB
                                 Worker 2:  Sort Method: quicksort  Memory: 197kB
                                 ->  Hash Join  (cost=8874.95..72087.27 rows=2400 width=38) (actual time=59.581..768.295 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=8401.95..71299.22 rows=60009 width=50) (actual time=55.508..753.460 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=8401.52..36001.18 rows=14999 width=38) (actual time=54.566..551.974 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=3661.39..30917.31 rows=74995 width=8) (actual time=30.256..504.570 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6762
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3603.27 rows=232484 width=0) (actual time=26.004..26.005 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=24.179..24.181 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.206..21.829 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.090..17.288 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.110..0.111 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.104..0.109 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.047..0.048 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.052..0.052 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.049..0.050 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.43..2.31 rows=4 width=20) (actual time=0.016..0.017 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.946..3.947 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.075..2.051 rows=10000 loops=4)
 Planning Time: 31.088 ms
 Execution Time: 785.946 ms
(50 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=73262.18..73262.18 rows=1 width=58) (actual time=133.006..143.709 rows=1 loops=1)
   ->  Sort  (cost=73262.18..73262.24 rows=25 width=58) (actual time=133.006..143.708 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=73222.06..73262.06 rows=25 width=58) (actual time=132.250..143.696 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=73222.06..73261.18 rows=75 width=58) (actual time=132.069..143.670 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=72222.02..72252.33 rows=25 width=58) (actual time=128.994..129.693 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=72222.02..72228.02 rows=2400 width=38) (actual time=128.819..128.903 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 195kB
                                 Worker 0:  Sort Method: quicksort  Memory: 191kB
                                 Worker 1:  Sort Method: quicksort  Memory: 202kB
                                 Worker 2:  Sort Method: quicksort  Memory: 195kB
                                 ->  Hash Join  (cost=8874.95..72087.27 rows=2400 width=38) (actual time=36.808..128.024 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=8401.95..71299.22 rows=60009 width=50) (actual time=33.417..117.381 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=8401.52..36001.18 rows=14999 width=38) (actual time=33.386..71.549 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=3661.39..30917.31 rows=74995 width=8) (actual time=21.536..46.659 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6475
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3603.27 rows=232484 width=0) (actual time=17.636..17.636 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.691..11.693 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.045..9.400 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.006..3.460 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.033..0.034 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.027..0.032 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.009..0.010 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.43..2.31 rows=4 width=20) (actual time=0.003..0.003 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.306..3.306 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.020..1.478 rows=10000 loops=4)
 Planning Time: 3.946 ms
 Execution Time: 143.793 ms
(50 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116218.96..116218.97 rows=1 width=32) (actual time=1073.671..1075.464 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=116218.96..116218.97 rows=1 width=32) (actual time=1073.669..1075.461 rows=1 loops=1)
         ->  Gather  (cost=116218.52..116218.93 rows=4 width=32) (actual time=1068.317..1075.441 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=115218.52..115218.53 rows=1 width=32) (actual time=1059.252..1059.253 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=23041.41..115068.23 rows=30058 width=12) (actual time=134.880..1041.488 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13051
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..23011.35 rows=120232 width=0) (actual time=130.861..130.862 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 13.978 ms
 Execution Time: 1076.531 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116218.96..116218.97 rows=1 width=32) (actual time=212.457..218.294 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=116218.96..116218.97 rows=1 width=32) (actual time=212.456..218.292 rows=1 loops=1)
         ->  Gather  (cost=116218.52..116218.93 rows=4 width=32) (actual time=208.852..218.275 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=115218.52..115218.53 rows=1 width=32) (actual time=205.720..205.721 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=23041.41..115068.23 rows=30058 width=12) (actual time=110.431..197.562 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=17144
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..23011.35 rows=120232 width=0) (actual time=101.403..101.403 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.821 ms
 Execution Time: 218.345 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=176463.26..176463.42 rows=1 width=92) (actual time=1038.509..1040.206 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=176463.26..177428.73 rows=6116 width=92) (actual time=1038.508..1040.205 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=176463.26..177245.25 rows=6116 width=92) (actual time=1038.284..1040.190 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=175463.20..175516.72 rows=1529 width=92) (actual time=1027.078..1027.484 rows=4 loops=5)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=175463.20..175467.03 rows=1529 width=72) (actual time=1026.912..1026.962 rows=1007 loops=5)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 233kB
                           Worker 0:  Sort Method: quicksort  Memory: 203kB
                           Worker 1:  Sort Method: quicksort  Memory: 212kB
                           Worker 2:  Sort Method: quicksort  Memory: 204kB
                           Worker 3:  Sort Method: quicksort  Memory: 196kB
                           ->  Hash Join  (cost=38272.27..175382.33 rows=1529 width=72) (actual time=223.781..1025.721 rows=1146 loops=5)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 1165
                                 ->  Parallel Hash Join  (cost=37907.17..174813.02 rows=36744 width=46) (actual time=215.789..1015.513 rows=29021 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135064.98 rows=459299 width=24) (actual time=0.510..748.171 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Parallel Hash  (cost=37423.29..37423.29 rows=38710 width=30) (actual time=214.951..214.954 rows=23695 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 8512kB
                                             ->  Parallel Hash Join  (cost=4477.77..37423.29 rows=38710 width=30) (actual time=28.674..207.208 rows=23695 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.464..133.070 rows=300000 loops=5)
                                                   ->  Parallel Hash  (cost=4415.27..4415.27 rows=5000 width=30) (actual time=28.098..28.100 rows=2379 loops=5)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 960kB
                                                         ->  Hash Join  (cost=1.40..4415.27 rows=5000 width=30) (actual time=0.102..27.262 rows=2379 loops=5)
                                                               Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.076..23.646 rows=30000 loops=5)
                                                               ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.014..0.015 rows=2 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.012 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                                 ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=3.117..3.118 rows=794 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                       ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.280..2.729 rows=794 loops=5)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.065..1.332 rows=10000 loops=5)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.211..0.211 rows=2 loops=5)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.203..0.205 rows=2 loops=5)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 27.106 ms
 Execution Time: 1041.208 ms
(51 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=176463.26..176463.42 rows=1 width=92) (actual time=429.641..433.569 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=176463.26..177428.73 rows=6116 width=92) (actual time=429.640..433.567 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=176463.26..177245.25 rows=6116 width=92) (actual time=429.504..433.558 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=175463.20..175516.72 rows=1529 width=92) (actual time=421.797..422.205 rows=4 loops=5)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=175463.20..175467.03 rows=1529 width=72) (actual time=421.644..421.691 rows=1038 loops=5)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 166kB
                           Worker 0:  Sort Method: quicksort  Memory: 227kB
                           Worker 1:  Sort Method: quicksort  Memory: 214kB
                           Worker 2:  Sort Method: quicksort  Memory: 206kB
                           Worker 3:  Sort Method: quicksort  Memory: 211kB
                           ->  Hash Join  (cost=38272.27..175382.33 rows=1529 width=72) (actual time=105.991..420.856 rows=1146 loops=5)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 1165
                                 ->  Parallel Hash Join  (cost=37907.17..174813.02 rows=36744 width=46) (actual time=103.526..410.523 rows=29021 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135064.98 rows=459299 width=24) (actual time=0.232..250.324 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Parallel Hash  (cost=37423.29..37423.29 rows=38710 width=30) (actual time=102.436..102.439 rows=23695 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 8544kB
                                             ->  Parallel Hash Join  (cost=4477.77..37423.29 rows=38710 width=30) (actual time=9.485..91.735 rows=23695 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.012..27.102 rows=300000 loops=5)
                                                   ->  Parallel Hash  (cost=4415.27..4415.27 rows=5000 width=30) (actual time=8.955..8.957 rows=2379 loops=5)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 960kB
                                                         ->  Hash Join  (cost=1.40..4415.27 rows=5000 width=30) (actual time=0.025..8.353 rows=2379 loops=5)
                                                               Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.006..4.048 rows=30000 loops=5)
                                                               ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.012..0.012 rows=2 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.010 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                                 ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=2.263..2.264 rows=794 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                       ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.034..1.963 rows=794 loops=5)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.012..0.672 rows=10000 loops=5)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.018..0.018 rows=2 loops=5)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.011..0.013 rows=2 loops=5)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 3.072 ms
 Execution Time: 433.655 ms
(51 rows)

query 8 run 1
SET
SET
SET
                                                                                                    QUERY PLAN                                                                                                     
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=46604.96..46605.11 rows=1 width=40) (actual time=394.830..399.935 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=46604.96..46962.22 rows=2406 width=40) (actual time=394.829..399.934 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=46604.96..46882.68 rows=2032 width=72) (actual time=394.613..399.923 rows=4 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=45604.93..45648.11 rows=1016 width=72) (actual time=387.837..388.036 rows=2 loops=3)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=45604.93..45607.47 rows=1016 width=46) (actual time=387.631..387.672 rows=828 loops=3)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 89kB
                           Worker 0:  Sort Method: quicksort  Memory: 93kB
                           Worker 1:  Sort Method: quicksort  Memory: 86kB
                           ->  Hash Join  (cost=41041.35..45554.19 rows=1016 width=46) (actual time=350.999..387.356 rows=828 loops=3)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Hash Join  (cost=41039.78..45544.43 rows=1016 width=20) (actual time=350.382..386.322 rows=828 loops=3)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=40591.78..45093.76 rows=1016 width=20) (actual time=346.797..382.415 rows=828 loops=3)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Parallel Hash Join  (cost=40589.28..45062.04 rows=5080 width=24) (actual time=346.319..381.858 rows=4032 loops=3)
                                                   Hash Cond: (customer.c_custkey = orders.o_custkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.252..28.118 rows=50000 loops=3)
                                                   ->  Parallel Hash  (cost=40540.11..40540.11 rows=3933 width=24) (actual time=345.728..345.730 rows=4032 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 896kB
                                                         ->  Parallel Hash Join  (cost=6585.66..40540.11 rows=3933 width=24) (actual time=142.780..343.449 rows=4032 loops=3)
                                                               Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                               ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=148150 width=12) (actual time=0.678..173.747 rows=152421 loops=3)
                                                                     Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                                     Rows Removed by Filter: 347579
                                                               ->  Parallel Hash  (cost=6461.22..6461.22 rows=9955 width=20) (actual time=141.890..141.891 rows=13231 loops=3)
                                                                     Buckets: 65536  Batches: 1  Memory Usage: 2720kB
                                                                     ->  Nested Loop  (cost=0.85..6461.22 rows=9955 width=20) (actual time=0.931..136.667 rows=13231 loops=3)
                                                                           ->  Parallel Index Only Scan using q2_idx_1 on part  (cost=0.42..5391.74 rows=332 width=4) (actual time=0.382..14.946 rows=440 loops=3)
                                                                                 Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                                                 Heap Fetches: 0
                                                                           ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.43..2.92 rows=30 width=24) (actual time=0.220..0.272 rows=30 loops=1320)
                                                                                 Index Cond: (l_partkey = part.p_partkey)
                                                                                 Heap Fetches: 0
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.084..0.085 rows=5 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.077..0.084 rows=5 loops=3)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.005 rows=25 loops=3)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.069..0.070 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.067..0.068 rows=1 loops=3)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.563..3.563 rows=10000 loops=3)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.100..2.255 rows=10000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.071..0.071 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.058..0.061 rows=25 loops=3)
 Planning Time: 33.922 ms
 Execution Time: 400.841 ms
(56 rows)

SET
SET
SET
                                                                                                    QUERY PLAN                                                                                                    
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=46604.96..46605.11 rows=1 width=40) (actual time=126.549..134.444 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=46604.96..46962.22 rows=2406 width=40) (actual time=126.548..134.442 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=46604.96..46882.68 rows=2032 width=72) (actual time=126.353..134.432 rows=4 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=45604.93..45648.11 rows=1016 width=72) (actual time=123.515..123.715 rows=2 loops=3)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=45604.93..45607.47 rows=1016 width=46) (actual time=123.296..123.339 rows=828 loops=3)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 86kB
                           Worker 0:  Sort Method: quicksort  Memory: 90kB
                           Worker 1:  Sort Method: quicksort  Memory: 91kB
                           ->  Hash Join  (cost=41041.35..45554.19 rows=1016 width=46) (actual time=110.161..123.106 rows=828 loops=3)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Hash Join  (cost=41039.78..45544.43 rows=1016 width=20) (actual time=110.107..122.759 rows=828 loops=3)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=40591.78..45093.76 rows=1016 width=20) (actual time=107.412..119.780 rows=828 loops=3)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Parallel Hash Join  (cost=40589.28..45062.04 rows=5080 width=24) (actual time=107.307..119.360 rows=4032 loops=3)
                                                   Hash Cond: (customer.c_custkey = orders.o_custkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.003..3.962 rows=50000 loops=3)
                                                   ->  Parallel Hash  (cost=40540.11..40540.11 rows=3933 width=24) (actual time=107.008..107.011 rows=4032 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 896kB
                                                         ->  Parallel Hash Join  (cost=6585.66..40540.11 rows=3933 width=24) (actual time=13.196..105.444 rows=4032 loops=3)
                                                               Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                               ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=148150 width=12) (actual time=0.010..70.946 rows=152421 loops=3)
                                                                     Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                                     Rows Removed by Filter: 347579
                                                               ->  Parallel Hash  (cost=6461.22..6461.22 rows=9955 width=20) (actual time=12.966..12.967 rows=13231 loops=3)
                                                                     Buckets: 65536  Batches: 1  Memory Usage: 2720kB
                                                                     ->  Nested Loop  (cost=0.85..6461.22 rows=9955 width=20) (actual time=0.084..9.665 rows=13231 loops=3)
                                                                           ->  Parallel Index Only Scan using q2_idx_1 on part  (cost=0.42..5391.74 rows=332 width=4) (actual time=0.061..4.667 rows=440 loops=3)
                                                                                 Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                                                 Heap Fetches: 0
                                                                           ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.43..2.92 rows=30 width=24) (actual time=0.004..0.008 rows=30 loops=1320)
                                                                                 Index Cond: (l_partkey = part.p_partkey)
                                                                                 Heap Fetches: 0
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.031..0.032 rows=5 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.026..0.031 rows=5 loops=3)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.004..0.005 rows=25 loops=3)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=3)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.679..2.679 rows=10000 loops=3)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.008..1.448 rows=10000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.025..0.026 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.015..0.019 rows=25 loops=3)
 Planning Time: 4.286 ms
 Execution Time: 134.539 ms
(56 rows)

query 9 run 1
SET
SET
SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=76982.74..76983.14 rows=1 width=66) (actual time=1065.674..1072.613 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=76982.74..101193.11 rows=60150 width=66) (actual time=1065.673..1072.611 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=76982.74..98335.99 rows=180450 width=66) (actual time=1065.658..1072.598 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Sort  (cost=75982.70..76133.07 rows=60150 width=66) (actual time=1056.622..1057.052 rows=132 loops=4)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: quicksort  Memory: 49kB
                     Worker 0:  Sort Method: quicksort  Memory: 49kB
                     Worker 1:  Sort Method: quicksort  Memory: 49kB
                     Worker 2:  Sort Method: quicksort  Memory: 49kB
                     ->  Partial HashAggregate  (cost=70155.28..71207.91 rows=60150 width=66) (actual time=1055.868..1056.841 rows=175 loops=4)
                           Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
                           ->  Parallel Hash Join  (cost=34438.27..68102.29 rows=117314 width=57) (actual time=702.661..977.819 rows=81482 loops=4)
                                 Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.443..153.198 rows=375000 loops=4)
                                 ->  Parallel Hash  (cost=33301.80..33301.80 rows=90918 width=53) (actual time=701.347..701.768 rows=81482 loops=4)
                                       Buckets: 524288  Batches: 1  Memory Usage: 34720kB
                                       ->  Hash Join  (cost=19125.77..33301.80 rows=90918 width=53) (actual time=549.730..669.442 rows=81482 loops=4)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=19124.21..33021.11 rows=90918 width=31) (actual time=549.659..652.338 rows=81482 loops=4)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Hash Join  (cost=18676.21..32334.33 rows=90928 width=35) (actual time=546.198..631.388 rows=81482 loops=4)
                                                         Hash Cond: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND (partsupp.ps_partkey = lineitem.l_partkey))
                                                         ->  Parallel Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..12158.42 rows=200000 width=14) (actual time=0.713..33.952 rows=200000 loops=4)
                                                               Heap Fetches: 0
                                                         ->  Parallel Hash  (cost=16915.89..16915.89 rows=117326 width=33) (actual time=544.571..544.572 rows=81482 loops=4)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 27040kB
                                                               ->  Nested Loop  (cost=0.85..16915.89 rows=117326 width=33) (actual time=1.030..516.510 rows=81482 loops=4)
                                                                     ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=3910 width=4) (actual time=0.157..24.945 rows=2720 loops=4)
                                                                           Filter: ((p_name)::text ~~ '%navy%'::text)
                                                                           Rows Removed by Filter: 47280
                                                                           Heap Fetches: 0
                                                                     ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.81 rows=30 width=29) (actual time=0.151..0.176 rows=30 loops=10880)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.430..3.430 rows=10000 loops=4)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.071..2.139 rows=10000 loops=4)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.066..0.066 rows=25 loops=4)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.053..0.056 rows=25 loops=4)
 Planning Time: 36.243 ms
 Execution Time: 1074.097 ms
(45 rows)

SET
SET
SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=76982.74..76983.14 rows=1 width=66) (actual time=452.388..462.532 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=76982.74..101193.11 rows=60150 width=66) (actual time=452.386..462.530 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=76982.74..98335.99 rows=180450 width=66) (actual time=452.371..462.516 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Sort  (cost=75982.70..76133.07 rows=60150 width=66) (actual time=447.092..447.509 rows=132 loops=4)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: quicksort  Memory: 49kB
                     Worker 0:  Sort Method: quicksort  Memory: 49kB
                     Worker 1:  Sort Method: quicksort  Memory: 49kB
                     Worker 2:  Sort Method: quicksort  Memory: 49kB
                     ->  Partial HashAggregate  (cost=70155.28..71207.91 rows=60150 width=66) (actual time=446.387..447.308 rows=175 loops=4)
                           Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
                           ->  Parallel Hash Join  (cost=34438.27..68102.29 rows=117314 width=57) (actual time=217.372..374.189 rows=81482 loops=4)
                                 Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.010..32.554 rows=375000 loops=4)
                                 ->  Parallel Hash  (cost=33301.80..33301.80 rows=90918 width=53) (actual time=216.524..216.934 rows=81482 loops=4)
                                       Buckets: 524288  Batches: 1  Memory Usage: 34688kB
                                       ->  Hash Join  (cost=19125.77..33301.80 rows=90918 width=53) (actual time=78.914..185.235 rows=81482 loops=4)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=19124.21..33021.11 rows=90918 width=31) (actual time=78.884..168.151 rows=81482 loops=4)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Hash Join  (cost=18676.21..32334.33 rows=90928 width=35) (actual time=75.918..147.947 rows=81482 loops=4)
                                                         Hash Cond: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND (partsupp.ps_partkey = lineitem.l_partkey))
                                                         ->  Parallel Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..12158.42 rows=200000 width=14) (actual time=0.046..21.573 rows=200000 loops=4)
                                                               Heap Fetches: 0
                                                         ->  Parallel Hash  (cost=16915.89..16915.89 rows=117326 width=33) (actual time=75.240..75.241 rows=81482 loops=4)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 27104kB
                                                               ->  Nested Loop  (cost=0.85..16915.89 rows=117326 width=33) (actual time=0.067..48.910 rows=81482 loops=4)
                                                                     ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=3910 width=4) (actual time=0.043..11.207 rows=2720 loops=4)
                                                                           Filter: ((p_name)::text ~~ '%navy%'::text)
                                                                           Rows Removed by Filter: 47280
                                                                           Heap Fetches: 0
                                                                     ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.81 rows=30 width=29) (actual time=0.004..0.010 rows=30 loops=10880)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.924..2.924 rows=10000 loops=4)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.010..1.543 rows=10000 loops=4)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.024..0.025 rows=25 loops=4)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.012..0.016 rows=25 loops=4)
 Planning Time: 5.117 ms
 Execution Time: 463.194 ms
(45 rows)

query 10 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84264.92..84264.97 rows=20 width=202) (actual time=730.608..735.044 rows=20 loops=1)
   ->  Sort  (cost=84264.92..84407.58 rows=57061 width=202) (actual time=730.600..735.034 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=82033.29..82746.55 rows=57061 width=202) (actual time=699.188..723.187 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=6910.50..81320.03 rows=57061 width=182) (actual time=65.586..597.404 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5910.50..74613.93 rows=18407 width=182) (actual time=57.951..643.989 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5908.94..74555.86 rows=18407 width=160) (actual time=57.828..634.643 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=905.69..69504.29 rows=18407 width=16) (actual time=16.788..575.042 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=905.26..27314.23 rows=18531 width=8) (actual time=15.861..339.770 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=4332
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..890.90 rows=57447 width=0) (actual time=12.002..12.002 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.43..2.27 rows=1 width=16) (actual time=0.015..0.015 rows=2 loops=57111)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=40.587..40.587 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29344kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.081..19.919 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.057..0.058 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.049..0.052 rows=25 loops=4)
 Planning Time: 25.265 ms
 Execution Time: 736.009 ms
(30 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84264.92..84264.97 rows=20 width=202) (actual time=208.309..212.451 rows=20 loops=1)
   ->  Sort  (cost=84264.92..84407.58 rows=57061 width=202) (actual time=208.308..212.448 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=82033.29..82746.55 rows=57061 width=202) (actual time=176.251..200.508 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=6910.50..81320.03 rows=57061 width=182) (actual time=43.655..95.651 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5910.50..74613.93 rows=18407 width=182) (actual time=40.706..133.480 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5908.94..74555.86 rows=18407 width=160) (actual time=40.615..125.928 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=905.69..69504.29 rows=18407 width=16) (actual time=12.106..83.956 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=905.26..27314.23 rows=18531 width=8) (actual time=12.052..27.956 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=1501
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..890.90 rows=57447 width=0) (actual time=8.490..8.491 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.43..2.27 rows=1 width=16) (actual time=0.003..0.003 rows=2 loops=57111)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=28.063..28.064 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29280kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.007..7.798 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.021..0.021 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.012..0.016 rows=25 loops=4)
 Planning Time: 1.724 ms
 Execution Time: 212.795 ms
(30 rows)

query 11 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22237.23..22237.23 rows=1 width=36) (actual time=635.714..635.845 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Finalize Aggregate  (cost=9611.97..9611.98 rows=1 width=32) (actual time=20.781..20.874 rows=1 loops=1)
           ->  Gather  (cost=9611.85..9611.96 rows=1 width=32) (actual time=20.662..20.865 rows=2 loops=1)
                 Workers Planned: 1
                 Workers Launched: 1
                 ->  Partial Aggregate  (cost=8611.85..8611.86 rows=1 width=32) (actual time=19.051..19.054 rows=1 loops=2)
                       ->  Nested Loop  (cost=2.04..8470.67 rows=18824 width=10) (actual time=0.088..14.966 rows=16440 loops=2)
                             ->  Hash Join  (cost=1.61..508.49 rows=235 width=4) (actual time=0.075..1.309 rows=206 loops=2)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.021..0.920 rows=5000 loops=2)
                                         Heap Fetches: 0
                                   ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=2)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=2)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..33.08 rows=80 width=14) (actual time=0.004..0.057 rows=80 loops=411)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=12625.24..12651.91 rows=10667 width=36) (actual time=635.713..635.750 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize HashAggregate  (cost=12011.91..12571.91 rows=10667 width=36) (actual time=625.831..635.580 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Gather  (cost=9658.91..11776.61 rows=18824 width=36) (actual time=578.417..588.894 rows=31759 loops=1)
                     Workers Planned: 1
                     Workers Launched: 1
                     ->  Partial HashAggregate  (cost=8658.91..8894.21 rows=18824 width=36) (actual time=573.884..581.224 rows=15880 loops=2)
                           Group Key: partsupp.ps_partkey
                           ->  Nested Loop  (cost=2.04..8470.67 rows=18824 width=14) (actual time=0.959..557.130 rows=16440 loops=2)
                                 ->  Hash Join  (cost=1.61..508.49 rows=235 width=4) (actual time=0.316..2.521 rows=206 loops=2)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Parallel Index Only Scan using q2_idx_3 on supplier  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.079..1.798 rows=5000 loops=2)
                                             Heap Fetches: 0
                                       ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.206..0.207 rows=1 loops=2)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.095..0.096 rows=1 loops=2)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 24
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..33.08 rows=80 width=18) (actual time=0.147..2.679 rows=80 loops=411)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 16.007 ms
 Execution Time: 637.165 ms
(45 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22237.23..22237.23 rows=1 width=36) (actual time=86.744..86.873 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Finalize Aggregate  (cost=9611.97..9611.98 rows=1 width=32) (actual time=19.770..19.861 rows=1 loops=1)
           ->  Gather  (cost=9611.85..9611.96 rows=1 width=32) (actual time=19.618..19.851 rows=2 loops=1)
                 Workers Planned: 1
                 Workers Launched: 1
                 ->  Partial Aggregate  (cost=8611.85..8611.86 rows=1 width=32) (actual time=18.030..18.033 rows=1 loops=2)
                       ->  Nested Loop  (cost=2.04..8470.67 rows=18824 width=10) (actual time=0.086..13.992 rows=16440 loops=2)
                             ->  Hash Join  (cost=1.61..508.49 rows=235 width=4) (actual time=0.074..1.239 rows=206 loops=2)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.021..0.853 rows=5000 loops=2)
                                         Heap Fetches: 0
                                   ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=2)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=2)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..33.08 rows=80 width=14) (actual time=0.004..0.052 rows=80 loops=411)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=12625.24..12651.91 rows=10667 width=36) (actual time=86.743..86.779 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize HashAggregate  (cost=12011.91..12571.91 rows=10667 width=36) (actual time=76.771..86.621 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Gather  (cost=9658.91..11776.61 rows=18824 width=36) (actual time=29.764..40.627 rows=31778 loops=1)
                     Workers Planned: 1
                     Workers Launched: 1
                     ->  Partial HashAggregate  (cost=8658.91..8894.21 rows=18824 width=36) (actual time=28.096..35.455 rows=15889 loops=2)
                           Group Key: partsupp.ps_partkey
                           ->  Nested Loop  (cost=2.04..8470.67 rows=18824 width=14) (actual time=0.185..18.508 rows=16440 loops=2)
                                 ->  Hash Join  (cost=1.61..508.49 rows=235 width=4) (actual time=0.174..1.397 rows=206 loops=2)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Parallel Index Only Scan using q2_idx_3 on supplier  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.014..0.896 rows=5000 loops=2)
                                             Heap Fetches: 0
                                       ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.142..0.142 rows=1 loops=2)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=2)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 24
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..33.08 rows=80 width=18) (actual time=0.005..0.073 rows=80 loops=411)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.171 ms
 Execution Time: 87.479 ms
(45 rows)

query 12 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=43353.63..43354.14 rows=1 width=27) (actual time=352.178..354.466 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=43353.63..43357.26 rows=7 width=27) (actual time=352.177..354.465 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=43353.63..43356.98 rows=28 width=27) (actual time=352.159..354.453 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=42353.57..42353.59 rows=7 width=27) (actual time=339.830..339.831 rows=2 loops=5)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     Worker 3:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=42353.40..42353.47 rows=7 width=27) (actual time=339.811..339.813 rows=2 loops=5)
                           Group Key: lineitem.l_shipmode
                           ->  Nested Loop  (cost=0.85..42228.01 rows=7165 width=27) (actual time=0.369..334.560 rows=6191 loops=5)
                                 ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..13564.09 rows=7165 width=15) (actual time=0.099..38.681 rows=6191 loops=5)
                                       Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                       Rows Removed by Filter: 15496
                                       Heap Fetches: 0
                                 ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=20) (actual time=0.047..0.047 rows=1 loops=30953)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 21.672 ms
 Execution Time: 355.225 ms
(25 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=43353.63..43354.14 rows=1 width=27) (actual time=57.057..57.142 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=43353.63..43357.26 rows=7 width=27) (actual time=57.055..57.140 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=43353.63..43356.98 rows=28 width=27) (actual time=57.017..57.115 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=42353.57..42353.59 rows=7 width=27) (actual time=48.732..48.734 rows=2 loops=5)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     Worker 3:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=42353.40..42353.47 rows=7 width=27) (actual time=48.717..48.718 rows=2 loops=5)
                           Group Key: lineitem.l_shipmode
                           ->  Nested Loop  (cost=0.85..42228.01 rows=7165 width=27) (actual time=0.309..45.589 rows=6191 loops=5)
                                 ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..13564.09 rows=7165 width=15) (actual time=0.290..24.759 rows=6191 loops=5)
                                       Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                       Rows Removed by Filter: 15496
                                       Heap Fetches: 0
                                 ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=30953)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 1.452 ms
 Execution Time: 57.201 ms
(25 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64793.97..64793.97 rows=1 width=16) (actual time=1453.766..1453.769 rows=1 loops=1)
   ->  Sort  (cost=64793.97..64794.47 rows=200 width=16) (actual time=1453.764..1453.766 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64790.97..64792.97 rows=200 width=16) (actual time=1453.496..1453.503 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=61040.97..62540.97 rows=150000 width=12) (actual time=1410.418..1435.507 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4953.42..53692.49 rows=1469697 width=8) (actual time=36.453..1062.369 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1469697 width=8) (actual time=0.631..631.298 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=35.511..35.511 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.329..17.364 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 13.316 ms
 Execution Time: 1455.374 ms
(19 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64793.97..64793.97 rows=1 width=16) (actual time=1263.645..1263.648 rows=1 loops=1)
   ->  Sort  (cost=64793.97..64794.47 rows=200 width=16) (actual time=1263.643..1263.646 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64790.97..64792.97 rows=200 width=16) (actual time=1263.619..1263.626 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=61040.97..62540.97 rows=150000 width=12) (actual time=1220.252..1245.196 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4953.42..53692.49 rows=1469697 width=8) (actual time=31.239..882.225 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1469697 width=8) (actual time=0.012..476.752 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=30.849..30.850 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.023..13.440 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.709 ms
 Execution Time: 1264.766 ms
(19 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84377.14..84377.16 rows=1 width=32) (actual time=530.804..536.905 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=84377.14..84377.16 rows=1 width=32) (actual time=530.803..536.903 rows=1 loops=1)
         ->  Gather  (cost=84376.69..84377.10 rows=4 width=64) (actual time=529.583..536.883 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=83376.69..83376.70 rows=1 width=64) (actual time=519.689..519.691 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7411.53..83027.07 rows=19978 width=33) (actual time=58.015..504.577 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1437.53..77000.63 rows=19978 width=16) (actual time=21.656..452.618 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8159
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1417.55 rows=79912 width=0) (actual time=14.428..14.429 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=35.917..35.918 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.080..22.261 rows=40000 loops=5)
 Planning Time: 20.298 ms
 Execution Time: 537.630 ms
(18 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84377.14..84377.16 rows=1 width=32) (actual time=112.206..118.789 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=84377.14..84377.16 rows=1 width=32) (actual time=112.205..118.787 rows=1 loops=1)
         ->  Gather  (cost=84376.69..84377.10 rows=4 width=64) (actual time=111.447..118.770 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=83376.69..83376.70 rows=1 width=64) (actual time=107.869..107.873 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7411.53..83027.07 rows=19978 width=33) (actual time=39.492..100.325 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1437.53..77000.63 rows=19978 width=16) (actual time=15.321..67.352 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8734
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1417.55 rows=79912 width=0) (actual time=8.517..8.517 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=23.776..23.776 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14240kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.007..7.257 rows=40000 loops=5)
 Planning Time: 1.377 ms
 Execution Time: 118.830 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=242489.70..242602.23 rows=1 width=103) (actual time=1270.930..1279.001 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122614.26..122614.27 rows=1 width=32) (actual time=234.420..234.422 rows=1 loops=1)
           ->  HashAggregate  (cost=122364.24..122489.25 rows=10001 width=36) (actual time=231.170..233.818 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4099.41..120082.31 rows=228193 width=16) (actual time=28.132..117.762 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4042.36 rows=228193 width=0) (actual time=19.126..19.126 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119875.43..125501.70 rows=50 width=103) (actual time=1270.929..1278.998 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119875.14..125340.08 rows=50 width=36) (actual time=1270.227..1278.295 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119875.14..124665.01 rows=40004 width=36) (actual time=1008.124..1023.769 rows=41788 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118875.09..118900.09 rows=10001 width=36) (actual time=996.846..997.637 rows=8889 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1158kB
                           Worker 0:  Sort Method: quicksort  Memory: 1156kB
                           Worker 1:  Sort Method: quicksort  Memory: 1159kB
                           Worker 2:  Sort Method: quicksort  Memory: 1156kB
                           Worker 3:  Sort Method: quicksort  Memory: 1157kB
                           ->  Partial HashAggregate  (cost=118085.61..118210.63 rows=10001 width=36) (actual time=988.681..994.365 rows=9889 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=4099.41..117515.13 rows=57048 width=16) (actual time=42.756..938.032 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13392
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4042.36 rows=228193 width=0) (actual time=37.886..37.886 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.22 rows=1 width=71) (actual time=0.698..0.698 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 17.802 ms
 Execution Time: 1279.428 ms
(36 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=242489.70..242602.23 rows=1 width=103) (actual time=414.688..423.898 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122614.26..122614.27 rows=1 width=32) (actual time=218.529..218.530 rows=1 loops=1)
           ->  HashAggregate  (cost=122364.24..122489.25 rows=10001 width=36) (actual time=215.305..217.927 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4099.41..120082.31 rows=228193 width=16) (actual time=27.698..103.193 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4042.36 rows=228193 width=0) (actual time=18.708..18.708 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119875.43..125501.70 rows=50 width=103) (actual time=414.687..423.895 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119875.14..125340.08 rows=50 width=36) (actual time=414.659..423.866 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119875.14..124665.01 rows=40004 width=36) (actual time=168.590..185.414 rows=41643 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118875.09..118900.09 rows=10001 width=36) (actual time=160.843..161.646 rows=8931 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1161kB
                           Worker 0:  Sort Method: quicksort  Memory: 1148kB
                           Worker 1:  Sort Method: quicksort  Memory: 1163kB
                           Worker 2:  Sort Method: quicksort  Memory: 1150kB
                           Worker 3:  Sort Method: quicksort  Memory: 1151kB
                           ->  Partial HashAggregate  (cost=118085.61..118210.63 rows=10001 width=36) (actual time=151.905..158.507 rows=9857 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=4099.41..117515.13 rows=57048 width=16) (actual time=33.594..118.212 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=15196
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4042.36 rows=228193 width=0) (actual time=26.695..26.695 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.22 rows=1 width=71) (actual time=0.024..0.024 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 1.540 ms
 Execution Time: 424.032 ms
(36 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=30408.36..30408.36 rows=1 width=44) (actual time=428.684..429.137 rows=1 loops=1)
   ->  Sort  (cost=30408.36..30448.25 rows=15955 width=44) (actual time=428.683..429.135 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=29430.46..30328.58 rows=15955 width=44) (actual time=379.333..425.990 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=29430.46..29578.17 rows=59086 width=40) (actual time=379.309..388.195 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Gather  (cost=7684.64..24747.74 rows=59086 width=40) (actual time=45.154..112.441 rows=117930 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Parallel Hash Join  (cost=6684.64..17839.14 rows=14772 width=40) (actual time=35.467..102.577 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..11240.43 rows=100000 width=8) (actual time=5.971..55.340 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.430..5.085 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12310 width=40) (actual time=29.291..29.292 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12310 width=40) (actual time=0.220..27.111 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 17.509 ms
 Execution Time: 429.947 ms
(29 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=30408.36..30408.36 rows=1 width=44) (actual time=399.135..399.589 rows=1 loops=1)
   ->  Sort  (cost=30408.36..30448.25 rows=15955 width=44) (actual time=399.134..399.587 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=29430.46..30328.58 rows=15955 width=44) (actual time=351.254..396.492 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=29430.46..29578.17 rows=59086 width=40) (actual time=351.231..359.375 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Gather  (cost=7684.64..24747.74 rows=59086 width=40) (actual time=22.254..80.854 rows=117930 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Parallel Hash Join  (cost=6684.64..17839.14 rows=14772 width=40) (actual time=19.091..75.940 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..11240.43 rows=100000 width=8) (actual time=2.670..40.328 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.082..2.615 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12310 width=40) (actual time=15.990..15.990 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12310 width=40) (actual time=0.012..12.574 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 1.118 ms
 Execution Time: 399.636 ms
(29 rows)

query 17 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=178257.65..178257.66 rows=1 width=32) (actual time=2531.796..2537.383 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=178257.65..178257.66 rows=1 width=32) (actual time=2531.795..2537.381 rows=1 loops=1)
         ->  Gather  (cost=178257.43..178257.64 rows=2 width=32) (actual time=2528.994..2537.370 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=177257.43..177257.44 rows=1 width=32) (actual time=2520.350..2520.352 rows=1 loops=3)
                     ->  Nested Loop  (cost=5352.59..177255.34 rows=832 width=8) (actual time=242.664..2520.264 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=5352.16..177027.47 rows=83 width=40) (actual time=242.319..2491.207 rows=69 loops=3)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=5351.72..5351.94 rows=85 width=4) (actual time=27.275..27.311 rows=69 loops=3)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 29kB
                                       Worker 0:  Sort Method: quicksort  Memory: 27kB
                                       Worker 1:  Sort Method: quicksort  Memory: 27kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=85 width=4) (actual time=0.525..27.231 rows=69 loops=3)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 66597
                                 ->  GroupAggregate  (cost=0.43..169213.80 rows=196854 width=36) (actual time=1.104..2444.214 rows=198926 loops=3)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136254.35 rows=6001328 width=9) (actual time=1.068..1555.676 rows=5968847 loops=3)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.62 rows=10 width=17) (actual time=0.383..0.416 rows=3 loops=208)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 19.424 ms
 Execution Time: 2537.667 ms
(27 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=178257.65..178257.66 rows=1 width=32) (actual time=2240.332..2245.893 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=178257.65..178257.66 rows=1 width=32) (actual time=2240.332..2245.891 rows=1 loops=1)
         ->  Gather  (cost=178257.43..178257.64 rows=2 width=32) (actual time=2238.168..2245.881 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=177257.43..177257.44 rows=1 width=32) (actual time=2226.332..2226.333 rows=1 loops=3)
                     ->  Nested Loop  (cost=5352.59..177255.34 rows=832 width=8) (actual time=180.404..2226.290 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=5352.16..177027.47 rows=83 width=40) (actual time=180.386..2225.589 rows=69 loops=3)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=5351.72..5351.94 rows=85 width=4) (actual time=10.485..10.499 rows=69 loops=3)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 29kB
                                       Worker 0:  Sort Method: quicksort  Memory: 27kB
                                       Worker 1:  Sort Method: quicksort  Memory: 27kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=85 width=4) (actual time=0.080..10.461 rows=69 loops=3)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 66597
                                 ->  GroupAggregate  (cost=0.43..169213.80 rows=196854 width=36) (actual time=0.061..2197.987 rows=198194 loops=3)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136254.35 rows=6001328 width=9) (actual time=0.031..1341.294 rows=5946975 loops=3)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.62 rows=10 width=17) (actual time=0.008..0.009 rows=3 loops=208)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 1.392 ms
 Execution Time: 2245.957 ms
(27 rows)

query 18 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=768546.13..768546.38 rows=100 width=71) (actual time=2823.164..2826.206 rows=9 loops=1)
   ->  Sort  (cost=768546.13..773548.34 rows=2000887 width=71) (actual time=2823.163..2826.203 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=397473.65..692073.66 rows=2000887 width=71) (actual time=2823.131..2826.181 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=397473.65..647053.70 rows=2000888 width=71) (actual time=2823.106..2826.158 rows=9 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=396473.59..407728.59 rows=500222 width=71) (actual time=2809.460..2809.470 rows=2 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=396473.59..397724.15 rows=500222 width=44) (actual time=2809.449..2809.454 rows=13 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 26kB
                                 Worker 0:  Sort Method: quicksort  Memory: 25kB
                                 Worker 1:  Sort Method: quicksort  Memory: 27kB
                                 Worker 2:  Sort Method: quicksort  Memory: 26kB
                                 Worker 3:  Sort Method: quicksort  Memory: 25kB
                                 ->  Parallel Hash Join  (cost=239674.09..338129.56 rows=500222 width=44) (actual time=2709.487..2809.401 rows=13 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..91216.39 rows=1500332 width=9) (actual time=0.530..154.587 rows=1200243 loops=5)
                                             Heap Fetches: 0
                                       ->  Parallel Hash  (cost=237657.08..237657.08 rows=161326 width=43) (actual time=2561.719..2561.722 rows=2 loops=5)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4224kB
                                             ->  Parallel Hash Join  (cost=204993.72..237657.08 rows=161326 width=43) (actual time=2438.730..2561.323 rows=2 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Hash Join  (cost=199990.47..232230.34 rows=161326 width=24) (actual time=2413.026..2535.542 rows=2 loops=5)
                                                         Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=20) (actual time=0.947..172.467 rows=300000 loops=5)
                                                         ->  Hash  (cost=193739.08..193739.08 rows=500111 width=4) (actual time=2315.714..2315.714 rows=9 loops=5)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                                               ->  GroupAggregate  (cost=0.43..188737.97 rows=500111 width=4) (actual time=495.902..2315.698 rows=9 loops=5)
                                                                     Group Key: lineitem_1.l_orderkey
                                                                     Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                                     Rows Removed by Filter: 1499991
                                                                     ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136226.35 rows=6001328 width=9) (actual time=0.318..774.341 rows=6001215 loops=5)
                                                                           Heap Fetches: 0
                                                   ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=23) (actual time=25.373..25.374 rows=30000 loops=5)
                                                         Buckets: 262144  Batches: 1  Memory Usage: 10368kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=23) (actual time=0.073..16.367 rows=30000 loops=5)
 Planning Time: 27.296 ms
 Execution Time: 2826.602 ms
(42 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=768546.13..768546.38 rows=100 width=71) (actual time=2745.246..2752.486 rows=9 loops=1)
   ->  Sort  (cost=768546.13..773548.34 rows=2000887 width=71) (actual time=2745.245..2752.484 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=397473.65..692073.66 rows=2000887 width=71) (actual time=2745.218..2752.465 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=397473.65..647053.70 rows=2000888 width=71) (actual time=2745.208..2752.447 rows=9 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=396473.59..407728.59 rows=500222 width=71) (actual time=2740.180..2740.188 rows=2 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=396473.59..397724.15 rows=500222 width=44) (actual time=2740.167..2740.171 rows=13 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 25kB
                                 Worker 0:  Sort Method: quicksort  Memory: 26kB
                                 Worker 1:  Sort Method: quicksort  Memory: 25kB
                                 Worker 2:  Sort Method: quicksort  Memory: 26kB
                                 Worker 3:  Sort Method: quicksort  Memory: 26kB
                                 ->  Parallel Hash Join  (cost=239674.09..338129.56 rows=500222 width=44) (actual time=2622.424..2740.117 rows=13 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..91216.39 rows=1500332 width=9) (actual time=0.017..152.041 rows=1200243 loops=5)
                                             Heap Fetches: 0
                                       ->  Parallel Hash  (cost=237657.08..237657.08 rows=161326 width=43) (actual time=2490.282..2490.285 rows=2 loops=5)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4160kB
                                             ->  Parallel Hash Join  (cost=204993.72..237657.08 rows=161326 width=43) (actual time=2322.832..2367.649 rows=2 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Hash Join  (cost=199990.47..232230.34 rows=161326 width=24) (actual time=2305.200..2350.008 rows=2 loops=5)
                                                         Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=20) (actual time=0.010..20.348 rows=300000 loops=5)
                                                         ->  Hash  (cost=193739.08..193739.08 rows=500111 width=4) (actual time=2281.879..2281.880 rows=9 loops=5)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                                               ->  GroupAggregate  (cost=0.43..188737.97 rows=500111 width=4) (actual time=478.320..2281.865 rows=9 loops=5)
                                                                     Group Key: lineitem_1.l_orderkey
                                                                     Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                                     Rows Removed by Filter: 1499991
                                                                     ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136226.35 rows=6001328 width=9) (actual time=0.070..733.433 rows=6001215 loops=5)
                                                                           Heap Fetches: 0
                                                   ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=23) (actual time=16.468..16.468 rows=30000 loops=5)
                                                         Buckets: 262144  Batches: 1  Memory Usage: 10368kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=23) (actual time=0.011..5.031 rows=30000 loops=5)
 Planning Time: 1.918 ms
 Execution Time: 2752.560 ms
(42 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=9323.02..9323.03 rows=1 width=32) (actual time=127.826..129.333 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=9323.02..9323.03 rows=1 width=32) (actual time=127.825..129.332 rows=1 loops=1)
         ->  Gather  (cost=9322.79..9323.00 rows=2 width=32) (actual time=127.753..129.323 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=8322.79..8322.80 rows=1 width=32) (actual time=121.146..121.147 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.56..8322.44 rows=47 width=12) (actual time=3.941..121.068 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=198 width=30) (actual time=0.491..28.556 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.43 rows=1 width=21) (actual time=0.526..0.546 rows=0 loops=507)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning Time: 22.811 ms
 Execution Time: 130.317 ms
(17 rows)

SET
SET
SET


 Limit  (cost=9323.02..9323.03 rows=1 width=32) (actual time=22.013..23.914 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=9323.02..9323.03 rows=1 width=32) (actual time=22.012..23.912 rows=1 loops=1)
         ->  Gather  (cost=9322.79..9323.00 rows=2 width=32) (actual time=21.923..23.905 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=8322.79..8322.80 rows=1 width=32) (actual time=19.380..19.381 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.56..8322.44 rows=47 width=12) (actual time=0.204..19.346 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=198 width=30) (actual time=0.116..17.312 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.43 rows=1 width=21) (actual time=0.011..0.012 rows=0 loops=507)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning Time: 2.992 ms
 Execution Time: 23.966 ms
(17 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=276907.22..276907.23 rows=1 width=51) (actual time=3399.995..3399.998 rows=1 loops=1)
   ->  Sort  (cost=276907.22..276907.23 rows=1 width=51) (actual time=3399.994..3399.997 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=243108.53..276907.21 rows=1 width=51) (actual time=3224.502..3399.796 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.515..3.747 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.224..0.227 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.284..2.771 rows=10000 loops=1)
               ->  Materialize  (cost=243108.53..276451.90 rows=1 width=8) (actual time=5.965..7.511 rows=4371 loops=438)
                     ->  Merge Join  (cost=243108.53..276451.90 rows=1 width=8) (actual time=2612.568..3220.940 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=243107.68..259415.41 rows=483284 width=40) (actual time=2612.180..3116.398 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=243107.68..245372.30 rows=905847 width=13) (actual time=2612.165..2707.905 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16271.36..142419.07 rows=905847 width=13) (actual time=126.876..2199.791 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16044.90 rows=905847 width=0) (actual time=110.303..110.304 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.84..10583.32 rows=8080 width=16) (actual time=0.059..72.152 rows=23762 loops=1)
                                 ->  Nested Loop  (cost=0.84..10563.12 rows=8080 width=16) (actual time=0.057..69.000 rows=8748 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6438.42 rows=2020 width=4) (actual time=0.028..31.238 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..2.00 rows=4 width=12) (actual time=0.016..0.016 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 25.875 ms
 Execution Time: 3403.028 ms
(40 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=276907.22..276907.23 rows=1 width=51) (actual time=1454.893..1454.896 rows=1 loops=1)
   ->  Sort  (cost=276907.22..276907.23 rows=1 width=51) (actual time=1454.892..1454.894 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=243108.53..276907.21 rows=1 width=51) (actual time=1280.177..1454.728 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.016..1.712 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.006..0.605 rows=10000 loops=1)
               ->  Materialize  (cost=243108.53..276451.90 rows=1 width=8) (actual time=1.635..3.073 rows=4371 loops=438)
                     ->  Merge Join  (cost=243108.53..276451.90 rows=1 width=8) (actual time=715.942..1277.245 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=243107.68..259415.41 rows=483284 width=40) (actual time=715.584..1215.023 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=243107.68..245372.30 rows=905847 width=13) (actual time=715.569..810.586 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16271.36..142419.07 rows=905847 width=13) (actual time=91.943..344.208 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16044.90 rows=905847 width=0) (actual time=75.859..75.859 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.84..10583.32 rows=8080 width=16) (actual time=0.040..30.579 rows=23762 loops=1)
                                 ->  Nested Loop  (cost=0.84..10563.12 rows=8080 width=16) (actual time=0.038..27.748 rows=8748 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6438.42 rows=2020 width=4) (actual time=0.027..20.328 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..2.00 rows=4 width=12) (actual time=0.002..0.003 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 2.396 ms
 Execution Time: 1457.992 ms
(40 rows)

query 21 run 1
SET
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=61129.11..61129.11 rows=1 width=34) (actual time=1778.740..1831.796 rows=100 loops=1)
   ->  Sort  (cost=61129.11..61129.11 rows=1 width=34) (actual time=1778.738..1831.788 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  Finalize GroupAggregate  (cost=61128.57..61129.10 rows=1 width=34) (actual time=1776.699..1831.343 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Gather Merge  (cost=61128.57..61129.07 rows=4 width=34) (actual time=1776.682..1831.029 rows=1833 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=60128.51..60128.53 rows=1 width=34) (actual time=1764.602..1766.270 rows=367 loops=5)
                           Group Key: supplier.s_name
                           ->  Sort  (cost=60128.51..60128.52 rows=1 width=26) (actual time=1764.596..1766.096 rows=845 loops=5)
                                 Sort Key: supplier.s_name
                                 Sort Method: quicksort  Memory: 90kB
                                 Worker 0:  Sort Method: quicksort  Memory: 92kB
                                 Worker 1:  Sort Method: quicksort  Memory: 91kB
                                 Worker 2:  Sort Method: quicksort  Memory: 91kB
                                 Worker 3:  Sort Method: quicksort  Memory: 89kB
                                 ->  Nested Loop Semi Join  (cost=32248.72..60128.50 rows=1 width=26) (actual time=732.994..1762.662 rows=845 loops=5)
                                       Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 554
                                       ->  Nested Loop  (cost=32248.28..60126.06 rows=1 width=38) (actual time=726.714..1439.739 rows=1382 loops=5)
                                             Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                                             Rows Removed by Join Filter: 31716
                                             ->  Nested Loop  (cost=32248.28..60124.74 rows=1 width=42) (actual time=716.056..1313.343 rows=33098 loops=5)
                                                   ->  Nested Loop  (cost=32247.86..60122.38 rows=1 width=38) (actual time=715.412..1133.585 rows=67536 loops=5)
                                                         ->  Parallel Hash Anti Join  (cost=32247.57..60118.31 rows=1 width=8) (actual time=714.603..972.642 rows=67536 loops=5)
                                                               Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                                               Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                                               Rows Removed by Join Filter: 275171
                                                               ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..25995.75 rows=500111 width=8) (actual time=0.046..107.257 rows=758659 loops=5)
                                                                     Heap Fetches: 0
                                                               ->  Parallel Hash  (cost=25995.75..25995.75 rows=500111 width=8) (actual time=467.708..467.709 rows=758659 loops=5)
                                                                     Buckets: 524288 (originally 2097152)  Batches: 16 (originally 1)  Memory Usage: 13504kB
                                                                     ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..25995.75 rows=500111 width=8) (actual time=0.748..166.557 rows=758659 loops=5)
                                                                           Heap Fetches: 0
                                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4.07 rows=1 width=34) (actual time=0.002..0.002 rows=1 loops=337680)
                                                               Index Cond: (s_suppkey = l1.l_suppkey)
                                                   ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=337680)
                                                         Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                                         Heap Fetches: 0
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=165491)
                                                   Filter: (n_name = 'PERU'::bpchar)
                                                   Rows Removed by Filter: 24
                                       ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.233..0.233 rows=1 loops=6909)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Heap Fetches: 0
 Planning Time: 23.390 ms
 Execution Time: 1832.529 ms
(49 rows)

SET
SET
SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=61129.11..61129.11 rows=1 width=34) (actual time=1490.236..1545.971 rows=100 loops=1)
   ->  Sort  (cost=61129.11..61129.11 rows=1 width=34) (actual time=1490.235..1545.964 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  Finalize GroupAggregate  (cost=61128.57..61129.10 rows=1 width=34) (actual time=1488.220..1545.519 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Gather Merge  (cost=61128.57..61129.07 rows=4 width=34) (actual time=1488.208..1545.205 rows=1820 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=60128.51..60128.53 rows=1 width=34) (actual time=1479.770..1480.431 rows=364 loops=5)
                           Group Key: supplier.s_name
                           ->  Sort  (cost=60128.51..60128.52 rows=1 width=26) (actual time=1479.764..1480.255 rows=845 loops=5)
                                 Sort Key: supplier.s_name
                                 Sort Method: quicksort  Memory: 88kB
                                 Worker 0:  Sort Method: quicksort  Memory: 97kB
                                 Worker 1:  Sort Method: quicksort  Memory: 91kB
                                 Worker 2:  Sort Method: quicksort  Memory: 88kB
                                 Worker 3:  Sort Method: quicksort  Memory: 89kB
                                 ->  Nested Loop Semi Join  (cost=32248.72..60128.50 rows=1 width=26) (actual time=670.529..1477.154 rows=845 loops=5)
                                       Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 554
                                       ->  Nested Loop  (cost=32248.28..60126.06 rows=1 width=38) (actual time=670.219..1467.155 rows=1382 loops=5)
                                             Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                                             Rows Removed by Join Filter: 31716
                                             ->  Nested Loop  (cost=32248.28..60124.74 rows=1 width=42) (actual time=669.751..1325.525 rows=33098 loops=5)
                                                   ->  Nested Loop  (cost=32247.86..60122.38 rows=1 width=38) (actual time=669.697..1131.710 rows=67536 loops=5)
                                                         ->  Parallel Hash Anti Join  (cost=32247.57..60118.31 rows=1 width=8) (actual time=669.666..971.925 rows=67536 loops=5)
                                                               Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                                               Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                                               Rows Removed by Join Filter: 275171
                                                               ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..25995.75 rows=500111 width=8) (actual time=0.050..105.582 rows=758659 loops=5)
                                                                     Heap Fetches: 0
                                                               ->  Parallel Hash  (cost=25995.75..25995.75 rows=500111 width=8) (actual time=416.843..416.843 rows=758659 loops=5)
                                                                     Buckets: 524288 (originally 2097152)  Batches: 16 (originally 1)  Memory Usage: 13504kB
                                                                     ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..25995.75 rows=500111 width=8) (actual time=0.043..93.840 rows=758659 loops=5)
                                                                           Heap Fetches: 0
                                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4.07 rows=1 width=34) (actual time=0.002..0.002 rows=1 loops=337680)
                                                               Index Cond: (s_suppkey = l1.l_suppkey)
                                                   ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=337680)
                                                         Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                                         Heap Fetches: 0
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=165491)
                                                   Filter: (n_name = 'PERU'::bpchar)
                                                   Rows Removed by Filter: 24
                                       ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.007..0.007 rows=1 loops=6909)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Heap Fetches: 0
 Planning Time: 2.834 ms
 Execution Time: 1546.056 ms
(49 rows)

query 22 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12936.34..12936.47 rows=1 width=72) (actual time=117.186..119.785 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=48.906..48.986 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=48.779..48.966 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=42.388..42.389 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1987 width=6) (actual time=0.108..41.095 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  Finalize GroupAggregate  (cost=6693.51..6794.74 rows=758 width=72) (actual time=117.185..119.711 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Gather Merge  (cost=6693.51..6775.15 rows=632 width=72) (actual time=117.107..119.703 rows=4 loops=1)
               Workers Planned: 2
               Params Evaluated: $1
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=5693.49..5702.18 rows=316 width=72) (actual time=65.664..65.824 rows=4 loops=3)
                     Group Key: ("substring"((customer.c_phone)::text, 1, 2))
                     ->  Sort  (cost=5693.49..5694.28 rows=316 width=38) (actual time=65.591..65.633 rows=1078 loops=3)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 205kB
                           Worker 0:  Sort Method: quicksort  Memory: 144kB
                           Worker 1:  Sort Method: quicksort  Memory: 193kB
                           ->  Nested Loop Anti Join  (cost=0.43..5680.37 rows=316 width=38) (actual time=0.077..64.626 rows=2132 loops=3)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.020..21.709 rows=6359 loops=3)
                                       Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                       Rows Removed by Filter: 43641
                                 ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.39 rows=18 width=4) (actual time=0.006..0.006 rows=1 loops=19077)
                                       Index Cond: (o_custkey = customer.c_custkey)
                                       Heap Fetches: 0
 Planning Time: 14.314 ms
 Execution Time: 120.530 ms
(32 rows)

SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12936.34..12936.47 rows=1 width=72) (actual time=68.052..70.363 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=29.442..29.513 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=29.308..29.502 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=27.222..27.223 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1987 width=6) (actual time=0.016..26.046 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  Finalize GroupAggregate  (cost=6693.51..6794.74 rows=758 width=72) (actual time=68.051..70.291 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Gather Merge  (cost=6693.51..6775.15 rows=632 width=72) (actual time=67.963..70.282 rows=4 loops=1)
               Workers Planned: 2
               Params Evaluated: $1
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=5693.49..5702.18 rows=316 width=72) (actual time=35.935..36.100 rows=4 loops=3)
                     Group Key: ("substring"((customer.c_phone)::text, 1, 2))
                     ->  Sort  (cost=5693.49..5694.28 rows=316 width=38) (actual time=35.862..35.904 rows=1081 loops=3)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 206kB
                           Worker 0:  Sort Method: quicksort  Memory: 143kB
                           Worker 1:  Sort Method: quicksort  Memory: 144kB
                           ->  Nested Loop Anti Join  (cost=0.43..5680.37 rows=316 width=38) (actual time=0.057..35.144 rows=2132 loops=3)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.016..19.500 rows=6359 loops=3)
                                       Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                       Rows Removed by Filter: 43641
                                 ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.39 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                                       Index Cond: (o_custkey = customer.c_custkey)
                                       Heap Fetches: 0
 Planning Time: 0.749 ms
 Execution Time: 70.426 ms
(32 rows)

