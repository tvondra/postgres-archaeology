query 1 run 1
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3810339.46..3810339.47 rows=1 width=51) (actual time=222074.478..222074.479 rows=1 loops=1)
   ->  Sort  (cost=3810339.46..3810339.48 rows=6 width=51) (actual time=222074.476..222074.476 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=3810339.18..3810339.39 rows=6 width=51) (actual time=222074.408..222074.414 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..2329092.95 rows=59249849 width=51) (actual time=0.532..18834.185 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 222075.393 ms
(7 rows)

SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3810339.46..3810339.47 rows=1 width=51) (actual time=220003.165..220003.165 rows=1 loops=1)
   ->  Sort  (cost=3810339.46..3810339.48 rows=6 width=51) (actual time=220003.164..220003.164 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=3810339.18..3810339.39 rows=6 width=51) (actual time=220003.111..220003.117 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..2329092.95 rows=59249849 width=51) (actual time=0.011..16060.964 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 220003.292 ms
(7 rows)

query 2 run 1
SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=85507.00..85507.00 rows=1 width=215) (actual time=4225.384..4225.393 rows=100 loops=1)
   ->  Sort  (cost=85507.00..85507.00 rows=1 width=215) (actual time=4225.383..4225.387 rows=100 loops=1)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         ->  Nested Loop  (cost=0.00..85506.99 rows=1 width=215) (actual time=4.437..4219.525 rows=4737 loops=1)
               Join Filter: ("outer".n_regionkey = "inner".r_regionkey)
               ->  Nested Loop  (cost=0.00..85505.91 rows=1 width=219) (actual time=4.434..4205.472 rows=4737 loops=1)
                     Join Filter: ("outer".s_nationkey = "inner".n_nationkey)
                     ->  Nested Loop  (cost=0.00..85504.35 rows=1 width=190) (actual time=4.426..4163.257 rows=4737 loops=1)
                           ->  Nested Loop  (cost=0.00..85501.32 rows=1 width=37) (actual time=4.424..4149.945 rows=4737 loops=1)
                                 Join Filter: ("inner".ps_supplycost = (subplan))
                                 ->  Seq Scan on part  (cost=0.00..81082.91 rows=3 width=33) (actual time=0.479..719.449 rows=8046 loops=1)
                                       Filter: ((p_size = 16) AND ((p_type)::text ~~ '%NICKEL'::text))
                                 ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.36 rows=21 width=19) (actual time=0.275..0.276 rows=4 loops=8046)
                                       Index Cond: ("outer".p_partkey = partsupp.ps_partkey)
                                 SubPlan
                                   ->  Aggregate  (cost=69.96..69.96 rows=1 width=11) (actual time=0.036..0.036 rows=1 loops=32184)
                                         ->  Nested Loop  (cost=1.31..69.94 rows=5 width=11) (actual time=0.026..0.034 rows=1 loops=32184)
                                               Join Filter: ("inner".n_regionkey = "outer".r_regionkey)
                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=32184)
                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                               ->  Hash Join  (cost=1.31..68.62 rows=21 width=15) (actual time=0.008..0.031 rows=4 loops=32184)
                                                     Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                                                     ->  Nested Loop  (cost=0.00..66.99 rows=21 width=15) (actual time=0.007..0.029 rows=4 loops=32184)
                                                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.36 rows=21 width=15) (actual time=0.002..0.009 rows=4 loops=32184)
                                                                 Index Cond: ($0 = ps_partkey)
                                                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.02 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=128736)
                                                                 Index Cond: (supplier.s_suppkey = "outer".ps_suppkey)
                                                     ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.309..0.309 rows=0 loops=1)
                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8) (actual time=0.300..0.304 rows=25 loops=1)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.02 rows=1 width=161) (actual time=0.001..0.002 rows=1 loops=4737)
                                 Index Cond: (supplier.s_suppkey = "outer".ps_suppkey)
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37) (actual time=0.000..0.004 rows=25 loops=4737)
               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=4737)
                     Filter: (r_name = 'AMERICA'::bpchar)
 Total runtime: 4225.711 ms
(35 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=85507.00..85507.00 rows=1 width=215) (actual time=1064.119..1064.132 rows=100 loops=1)
   ->  Sort  (cost=85507.00..85507.00 rows=1 width=215) (actual time=1064.118..1064.122 rows=100 loops=1)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         ->  Nested Loop  (cost=0.00..85506.99 rows=1 width=215) (actual time=0.211..1059.408 rows=4737 loops=1)
               Join Filter: ("outer".n_regionkey = "inner".r_regionkey)
               ->  Nested Loop  (cost=0.00..85505.91 rows=1 width=219) (actual time=0.207..1049.413 rows=4737 loops=1)
                     Join Filter: ("outer".s_nationkey = "inner".n_nationkey)
                     ->  Nested Loop  (cost=0.00..85504.35 rows=1 width=190) (actual time=0.200..1018.684 rows=4737 loops=1)
                           ->  Nested Loop  (cost=0.00..85501.32 rows=1 width=37) (actual time=0.197..1009.448 rows=4737 loops=1)
                                 Join Filter: ("inner".ps_supplycost = (subplan))
                                 ->  Seq Scan on part  (cost=0.00..81082.91 rows=3 width=33) (actual time=0.015..507.485 rows=8046 loops=1)
                                       Filter: ((p_size = 16) AND ((p_type)::text ~~ '%NICKEL'::text))
                                 ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.36 rows=21 width=19) (actual time=0.005..0.006 rows=4 loops=8046)
                                       Index Cond: ("outer".p_partkey = partsupp.ps_partkey)
                                 SubPlan
                                   ->  Aggregate  (cost=69.96..69.96 rows=1 width=11) (actual time=0.013..0.014 rows=1 loops=32184)
                                         ->  Nested Loop  (cost=1.31..69.94 rows=5 width=11) (actual time=0.009..0.012 rows=1 loops=32184)
                                               Join Filter: ("inner".n_regionkey = "outer".r_regionkey)
                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=32184)
                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                               ->  Hash Join  (cost=1.31..68.62 rows=21 width=15) (actual time=0.003..0.011 rows=4 loops=32184)
                                                     Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                                                     ->  Nested Loop  (cost=0.00..66.99 rows=21 width=15) (actual time=0.003..0.009 rows=4 loops=32184)
                                                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.36 rows=21 width=15) (actual time=0.001..0.002 rows=4 loops=32184)
                                                                 Index Cond: ($0 = ps_partkey)
                                                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.02 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=128736)
                                                                 Index Cond: (supplier.s_suppkey = "outer".ps_suppkey)
                                                     ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.014..0.014 rows=0 loops=1)
                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8) (actual time=0.005..0.011 rows=25 loops=1)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.02 rows=1 width=161) (actual time=0.001..0.001 rows=1 loops=4737)
                                 Index Cond: (supplier.s_suppkey = "outer".ps_suppkey)
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37) (actual time=0.000..0.003 rows=25 loops=4737)
               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.000..0.001 rows=1 loops=4737)
                     Filter: (r_name = 'AMERICA'::bpchar)
 Total runtime: 1064.261 ms
(35 rows)

query 3 run 1
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4933737.73..4933737.76 rows=10 width=34) (actual time=213877.279..213877.281 rows=10 loops=1)
   ->  Sort  (cost=4933737.73..4941474.11 rows=3094551 width=34) (actual time=213877.277..213877.279 rows=10 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))), orders.o_orderdate
         ->  GroupAggregate  (cost=4391424.02..4453315.04 rows=3094551 width=34) (actual time=213433.151..213655.521 rows=113934 loops=1)
               ->  Sort  (cost=4391424.02..4399160.40 rows=3094551 width=34) (actual time=213433.134..213462.464 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=790281.08..3911001.33 rows=3094551 width=34) (actual time=14646.577..212763.632 rows=301530 loops=1)
                           Hash Cond: ("outer".l_orderkey = "inner".o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2329092.95 rows=32532772 width=26) (actual time=0.582..18045.287 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=778354.26..778354.26 rows=1426728 width=12) (actual time=14547.979..14547.979 rows=0 loops=1)
                                 ->  Hash Join  (cost=63081.25..778354.26 rows=1426728 width=12) (actual time=659.929..14290.403 rows=1451805 loops=1)
                                       Hash Cond: ("outer".o_custkey = "inner".c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..506285.50 rows=7233682 width=16) (actual time=0.691..4512.869 rows=7239437 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=60896.68..60896.68 rows=295830 width=4) (actual time=659.034..659.034 rows=0 loops=1)
                                             ->  Seq Scan on customer  (cost=0.00..60896.68 rows=295830 width=4) (actual time=0.341..612.306 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 213882.088 ms
(19 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4933737.73..4933737.76 rows=10 width=34) (actual time=212983.795..212983.797 rows=10 loops=1)
   ->  Sort  (cost=4933737.73..4941474.11 rows=3094551 width=34) (actual time=212983.794..212983.796 rows=10 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))), orders.o_orderdate
         ->  GroupAggregate  (cost=4391424.02..4453315.04 rows=3094551 width=34) (actual time=212539.097..212762.722 rows=113934 loops=1)
               ->  Sort  (cost=4391424.02..4399160.40 rows=3094551 width=34) (actual time=212539.081..212568.327 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=790281.08..3911001.33 rows=3094551 width=34) (actual time=14221.598..211873.332 rows=301530 loops=1)
                           Hash Cond: ("outer".l_orderkey = "inner".o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2329092.95 rows=32532772 width=26) (actual time=0.390..17827.545 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=778354.26..778354.26 rows=1426728 width=12) (actual time=14120.214..14120.214 rows=0 loops=1)
                                 ->  Hash Join  (cost=63081.25..778354.26 rows=1426728 width=12) (actual time=600.041..13858.256 rows=1451805 loops=1)
                                       Hash Cond: ("outer".o_custkey = "inner".c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..506285.50 rows=7233682 width=16) (actual time=0.422..4173.070 rows=7239437 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=60896.68..60896.68 rows=295830 width=4) (actual time=599.421..599.421 rows=0 loops=1)
                                             ->  Seq Scan on customer  (cost=0.00..60896.68 rows=295830 width=4) (actual time=0.355..552.287 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 212988.615 ms
(19 rows)

query 4 run 1
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1118085.13..1118085.14 rows=1 width=19) (actual time=103658.076..103658.076 rows=1 loops=1)
   ->  Sort  (cost=1118085.13..1118085.14 rows=1 width=19) (actual time=103658.075..103658.075 rows=1 loops=1)
         Sort Key: o_orderpriority
         ->  HashAggregate  (cost=1118085.12..1118085.12 rows=1 width=19) (actual time=103658.012..103658.014 rows=5 loops=1)
               ->  Index Scan using idx_orders_orderdate on orders  (cost=0.00..1116690.68 rows=278888 width=19) (actual time=2.752..102885.104 rows=513822 loops=1)
                     Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     SubPlan
                       ->  Index Scan using q4_idx_1 on lineitem  (cost=0.00..5.32 rows=66 width=152) (actual time=0.138..0.138 rows=1 loops=560424)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
 Total runtime: 103658.705 ms
(12 rows)

SET
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1118085.13..1118085.14 rows=1 width=19) (actual time=5822.204..5822.204 rows=1 loops=1)
   ->  Sort  (cost=1118085.13..1118085.14 rows=1 width=19) (actual time=5822.203..5822.203 rows=1 loops=1)
         Sort Key: o_orderpriority
         ->  HashAggregate  (cost=1118085.12..1118085.12 rows=1 width=19) (actual time=5822.160..5822.162 rows=5 loops=1)
               ->  Index Scan using idx_orders_orderdate on orders  (cost=0.00..1116690.68 rows=278888 width=19) (actual time=0.119..5603.493 rows=513822 loops=1)
                     Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     SubPlan
                       ->  Index Scan using q4_idx_1 on lineitem  (cost=0.00..5.32 rows=66 width=152) (actual time=0.007..0.007 rows=1 loops=560424)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
 Total runtime: 5822.329 ms
(12 rows)

query 5 run 1
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3634444.98..3634444.98 rows=1 width=51) (actual time=34971.317..34971.317 rows=1 loops=1)
   ->  Sort  (cost=3634444.98..3634445.04 rows=25 width=51) (actual time=34971.316..34971.316 rows=1 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  HashAggregate  (cost=3634444.21..3634444.40 rows=25 width=51) (actual time=34971.290..34971.293 rows=5 loops=1)
               ->  Hash Join  (cost=713537.53..3634076.54 rows=73534 width=51) (actual time=9635.570..34902.779 rows=72033 loops=1)
                     Hash Cond: (("outer".c_nationkey = "inner".s_nationkey) AND ("outer".l_suppkey = "inner".s_suppkey))
                     ->  Merge Join  (cost=708965.53..3530035.68 rows=1838484 width=63) (actual time=9574.017..32377.857 rows=1815327 loops=1)
                           Merge Cond: ("outer".l_orderkey = "inner".o_orderkey)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2643533.34 rows=59984156 width=30) (actual time=2.121..16241.447 rows=59986036 loops=1)
                           ->  Sort  (cost=708965.53..710114.82 rows=459715 width=41) (actual time=9571.015..9796.508 rows=1815325 loops=1)
                                 Sort Key: orders.o_orderkey
                                 ->  Hash Join  (cost=71328.65..656579.85 rows=459715 width=41) (actual time=780.382..8782.437 rows=453399 loops=1)
                                       Hash Cond: ("outer".o_custkey = "inner".c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..543783.20 rows=2298571 width=8) (actual time=0.695..5206.245 rows=2276638 loops=1)
                                             Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=67648.70..67648.70 rows=299979 width=41) (actual time=778.436..778.436 rows=0 loops=1)
                                             ->  Hash Join  (cost=2.50..67648.70 rows=299979 width=41) (actual time=0.870..720.483 rows=299436 loops=1)
                                                   Hash Cond: ("outer".c_nationkey = "inner".n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..57146.94 rows=1499894 width=8) (actual time=0.381..504.370 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.49..2.49 rows=5 width=33) (actual time=0.478..0.478 rows=0 loops=1)
                                                         ->  Hash Join  (cost=1.06..2.49 rows=5 width=33) (actual time=0.463..0.476 rows=5 loops=1)
                                                               Hash Cond: ("outer".n_regionkey = "inner".r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37) (actual time=0.216..0.224 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.236..0.236 rows=0 loops=1)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.232..0.234 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=3583.00..3583.00 rows=100000 width=8) (actual time=58.555..58.555 rows=0 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8) (actual time=0.354..43.834 rows=100000 loops=1)
 Total runtime: 34977.937 ms
(29 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3634444.98..3634444.98 rows=1 width=51) (actual time=33927.687..33927.687 rows=1 loops=1)
   ->  Sort  (cost=3634444.98..3634445.04 rows=25 width=51) (actual time=33927.685..33927.685 rows=1 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  HashAggregate  (cost=3634444.21..3634444.40 rows=25 width=51) (actual time=33927.667..33927.669 rows=5 loops=1)
               ->  Hash Join  (cost=713537.53..3634076.54 rows=73534 width=51) (actual time=9230.885..33861.327 rows=72033 loops=1)
                     Hash Cond: (("outer".c_nationkey = "inner".s_nationkey) AND ("outer".l_suppkey = "inner".s_suppkey))
                     ->  Merge Join  (cost=708965.53..3530035.68 rows=1838484 width=63) (actual time=9170.299..31366.656 rows=1815327 loops=1)
                           Merge Cond: ("outer".l_orderkey = "inner".o_orderkey)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2643533.34 rows=59984156 width=30) (actual time=1.362..15722.277 rows=59986036 loops=1)
                           ->  Sort  (cost=708965.53..710114.82 rows=459715 width=41) (actual time=9168.138..9390.665 rows=1815325 loops=1)
                                 Sort Key: orders.o_orderkey
                                 ->  Hash Join  (cost=71328.65..656579.85 rows=459715 width=41) (actual time=705.323..8379.228 rows=453399 loops=1)
                                       Hash Cond: ("outer".o_custkey = "inner".c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..543783.20 rows=2298571 width=8) (actual time=0.355..4840.711 rows=2276638 loops=1)
                                             Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=67648.70..67648.70 rows=299979 width=41) (actual time=703.772..703.772 rows=0 loops=1)
                                             ->  Hash Join  (cost=2.50..67648.70 rows=299979 width=41) (actual time=0.779..645.206 rows=299436 loops=1)
                                                   Hash Cond: ("outer".c_nationkey = "inner".n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..57146.94 rows=1499894 width=8) (actual time=0.337..432.139 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.49..2.49 rows=5 width=33) (actual time=0.432..0.432 rows=0 loops=1)
                                                         ->  Hash Join  (cost=1.06..2.49 rows=5 width=33) (actual time=0.417..0.430 rows=5 loops=1)
                                                               Hash Cond: ("outer".n_regionkey = "inner".r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37) (actual time=0.212..0.218 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.195..0.195 rows=0 loops=1)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.190..0.193 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=3583.00..3583.00 rows=100000 width=8) (actual time=57.528..57.528 rows=0 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8) (actual time=0.301..43.436 rows=100000 loops=1)
 Total runtime: 33933.370 ms
(29 rows)

query 6 run 1
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2427119.45..2427119.46 rows=1 width=22) (actual time=121601.309..121601.310 rows=1 loops=1)
   ->  Aggregate  (cost=2427119.45..2427119.46 rows=1 width=22) (actual time=121601.307..121601.307 rows=1 loops=1)
         ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..2424108.68 rows=1204308 width=22) (actual time=1.828..119859.655 rows=1194558 loops=1)
               Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 121601.336 ms
(5 rows)

SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2427119.45..2427119.46 rows=1 width=22) (actual time=5421.641..5421.641 rows=1 loops=1)
   ->  Aggregate  (cost=2427119.45..2427119.46 rows=1 width=22) (actual time=5421.641..5421.641 rows=1 loops=1)
         ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..2424108.68 rows=1204308 width=22) (actual time=0.094..4888.819 rows=1194558 loops=1)
               Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 5421.671 ms
(5 rows)

query 7 run 1
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3678213.11..3678213.14 rows=1 width=84) (actual time=45418.437..45418.438 rows=1 loops=1)
   ->  GroupAggregate  (cost=3678213.11..3679669.94 rows=58273 width=84) (actual time=45418.435..45418.435 rows=1 loops=1)
         ->  Sort  (cost=3678213.11..3678358.80 rows=58273 width=84) (actual time=45407.419..45409.034 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=2930261.34..3671891.49 rows=58273 width=84) (actual time=35385.800..45020.739 rows=57794 loops=1)
                     Hash Cond: (("outer".o_custkey = "inner".c_custkey) AND ("outer".n_nationkey = "inner".c_nationkey))
                     ->  Merge Join  (cost=2858290.93..3502492.74 rows=1456808 width=92) (actual time=34486.253..41286.467 rows=1455694 loops=1)
                           Merge Cond: ("outer".o_orderkey = "inner".l_orderkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..584914.20 rows=14999080 width=8) (actual time=1.635..3790.350 rows=14999997 loops=1)
                           ->  Sort  (cost=2858290.93..2861932.95 rows=1456808 width=92) (actual time=34484.606..34687.262 rows=1455694 loops=1)
                                 Sort Key: lineitem.l_orderkey
                                 ->  Hash Join  (cost=4204.28..2588960.73 rows=1456808 width=92) (actual time=45.751..30789.505 rows=1455694 loops=1)
                                       Hash Cond: ("outer".l_suppkey = "inner".s_suppkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..2479053.34 rows=18224674 width=34) (actual time=0.831..20234.856 rows=18230325 loops=1)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=4184.28..4184.28 rows=8000 width=66) (actual time=44.898..44.898 rows=0 loops=1)
                                             ->  Hash Join  (cost=21.28..4184.28 rows=8000 width=66) (actual time=0.725..43.594 rows=7981 loops=1)
                                                   Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8) (actual time=0.315..32.467 rows=100000 loops=1)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=66) (actual time=0.400..0.400 rows=0 loops=1)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=66) (actual time=0.347..0.399 rows=2 loops=1)
                                                               Join Filter: ((("outer".n_name = 'PERU'::bpchar) AND ("inner".n_name = 'MOROCCO'::bpchar)) OR (("outer".n_name = 'MOROCCO'::bpchar) AND ("inner".n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=33) (actual time=0.206..0.209 rows=25 loops=1)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=33) (actual time=0.000..0.002 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33) (actual time=0.004..0.015 rows=25 loops=1)
                     ->  Hash  (cost=57146.94..57146.94 rows=1499894 width=8) (actual time=881.673..881.673 rows=0 loops=1)
                           ->  Seq Scan on customer  (cost=0.00..57146.94 rows=1499894 width=8) (actual time=0.354..646.290 rows=1500000 loops=1)
 Total runtime: 45439.732 ms
(28 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3678213.11..3678213.14 rows=1 width=84) (actual time=44234.215..44234.215 rows=1 loops=1)
   ->  GroupAggregate  (cost=3678213.11..3679669.94 rows=58273 width=84) (actual time=44234.215..44234.215 rows=1 loops=1)
         ->  Sort  (cost=3678213.11..3678358.80 rows=58273 width=84) (actual time=44223.170..44224.731 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=2930261.34..3671891.49 rows=58273 width=84) (actual time=34189.940..43837.566 rows=57794 loops=1)
                     Hash Cond: (("outer".o_custkey = "inner".c_custkey) AND ("outer".n_nationkey = "inner".c_nationkey))
                     ->  Merge Join  (cost=2858290.93..3502492.74 rows=1456808 width=92) (actual time=33357.126..40198.721 rows=1455694 loops=1)
                           Merge Cond: ("outer".o_orderkey = "inner".l_orderkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..584914.20 rows=14999080 width=8) (actual time=1.829..3836.645 rows=14999997 loops=1)
                           ->  Sort  (cost=2858290.93..2861932.95 rows=1456808 width=92) (actual time=33355.284..33557.530 rows=1455694 loops=1)
                                 Sort Key: lineitem.l_orderkey
                                 ->  Hash Join  (cost=4204.28..2588960.73 rows=1456808 width=92) (actual time=40.858..29744.012 rows=1455694 loops=1)
                                       Hash Cond: ("outer".l_suppkey = "inner".s_suppkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..2479053.34 rows=18224674 width=34) (actual time=0.505..19421.989 rows=18230325 loops=1)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=4184.28..4184.28 rows=8000 width=66) (actual time=40.339..40.339 rows=0 loops=1)
                                             ->  Hash Join  (cost=21.28..4184.28 rows=8000 width=66) (actual time=0.903..39.052 rows=7981 loops=1)
                                                   Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8) (actual time=0.429..28.131 rows=100000 loops=1)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=66) (actual time=0.465..0.465 rows=0 loops=1)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=66) (actual time=0.412..0.464 rows=2 loops=1)
                                                               Join Filter: ((("outer".n_name = 'PERU'::bpchar) AND ("inner".n_name = 'MOROCCO'::bpchar)) OR (("outer".n_name = 'MOROCCO'::bpchar) AND ("inner".n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=33) (actual time=0.308..0.310 rows=25 loops=1)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=33) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33) (actual time=0.003..0.009 rows=25 loops=1)
                     ->  Hash  (cost=57146.94..57146.94 rows=1499894 width=8) (actual time=806.631..806.631 rows=0 loops=1)
                           ->  Seq Scan on customer  (cost=0.00..57146.94 rows=1499894 width=8) (actual time=0.368..571.313 rows=1500000 loops=1)
 Total runtime: 44255.007 ms
(28 rows)

query 8 run 1
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1853983.53..1853983.53 rows=1 width=55) (actual time=71804.020..71804.020 rows=1 loops=1)
   ->  Sort  (cost=1853983.53..1853985.37 rows=739 width=55) (actual time=71804.020..71804.020 rows=1 loops=1)
         Sort Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  HashAggregate  (cost=1853929.84..1853948.31 rows=739 width=55) (actual time=71803.995..71803.997 rows=2 loops=1)
               ->  Hash Join  (cost=712460.26..1853745.62 rows=24562 width=55) (actual time=11698.223..71782.673 rows=23842 loops=1)
                     Hash Cond: ("outer".l_orderkey = "inner".o_orderkey)
                     ->  Hash Join  (cost=4323.31..1104186.21 rows=399903 width=55) (actual time=49.703..59530.471 rows=389521 loops=1)
                           Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                           ->  Hash Join  (cost=4322.00..1098186.35 rows=399903 width=30) (actual time=49.453..59339.968 rows=389521 loops=1)
                                 Hash Cond: ("outer".l_suppkey = "inner".s_suppkey)
                                 ->  Nested Loop  (cost=0.00..1077127.77 rows=399903 width=30) (actual time=4.481..58608.776 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..76082.76 rows=13334 width=4) (actual time=1.537..728.180 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using q19_idx_1 on lineitem  (cost=0.00..74.62 rows=36 width=34) (actual time=0.430..4.414 rows=30 loops=13011)
                                             Index Cond: ("outer".p_partkey = lineitem.l_partkey)
                                 ->  Hash  (cost=3583.00..3583.00 rows=100000 width=8) (actual time=44.517..44.517 rows=0 loops=1)
                                       ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8) (actual time=0.358..31.986 rows=100000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=33) (actual time=0.024..0.024 rows=0 loops=1)
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33) (actual time=0.016..0.020 rows=25 loops=1)
                     ->  Hash  (cost=701334.88..701334.88 rows=921229 width=8) (actual time=11625.036..11625.036 rows=0 loops=1)
                           ->  Hash Join  (cost=69863.65..701334.88 rows=921229 width=8) (actual time=735.384..11467.280 rows=910360 loops=1)
                                 Hash Cond: ("outer".o_custkey = "inner".c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..543783.20 rows=4606145 width=12) (actual time=0.535..4992.901 rows=4557513 loops=1)
                                       Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                 ->  Hash  (cost=67648.70..67648.70 rows=299979 width=4) (actual time=733.870..733.870 rows=0 loops=1)
                                       ->  Hash Join  (cost=2.50..67648.70 rows=299979 width=4) (actual time=0.798..688.847 rows=299436 loops=1)
                                             Hash Cond: ("outer".c_nationkey = "inner".n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..57146.94 rows=1499894 width=8) (actual time=0.362..501.636 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.49..2.49 rows=5 width=4) (actual time=0.427..0.427 rows=0 loops=1)
                                                   ->  Hash Join  (cost=1.06..2.49 rows=5 width=4) (actual time=0.413..0.425 rows=5 loops=1)
                                                         Hash Cond: ("outer".n_regionkey = "inner".r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.199..0.203 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.205..0.205 rows=0 loops=1)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.201..0.203 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
 Total runtime: 71804.443 ms
(36 rows)

SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1853983.53..1853983.53 rows=1 width=55) (actual time=13629.303..13629.303 rows=1 loops=1)
   ->  Sort  (cost=1853983.53..1853985.37 rows=739 width=55) (actual time=13629.302..13629.302 rows=1 loops=1)
         Sort Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  HashAggregate  (cost=1853929.84..1853948.31 rows=739 width=55) (actual time=13629.286..13629.288 rows=2 loops=1)
               ->  Hash Join  (cost=712460.26..1853745.62 rows=24562 width=55) (actual time=10539.719..13608.438 rows=23842 loops=1)
                     Hash Cond: ("outer".l_orderkey = "inner".o_orderkey)
                     ->  Hash Join  (cost=4323.31..1104186.21 rows=399903 width=55) (actual time=42.990..2508.384 rows=389521 loops=1)
                           Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                           ->  Hash Join  (cost=4322.00..1098186.35 rows=399903 width=30) (actual time=42.755..2362.112 rows=389521 loops=1)
                                 Hash Cond: ("outer".l_suppkey = "inner".s_suppkey)
                                 ->  Nested Loop  (cost=0.00..1077127.77 rows=399903 width=30) (actual time=0.100..1859.626 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..76082.76 rows=13334 width=4) (actual time=0.064..416.692 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using q19_idx_1 on lineitem  (cost=0.00..74.62 rows=36 width=34) (actual time=0.010..0.101 rows=30 loops=13011)
                                             Index Cond: ("outer".p_partkey = lineitem.l_partkey)
                                 ->  Hash  (cost=3583.00..3583.00 rows=100000 width=8) (actual time=42.560..42.560 rows=0 loops=1)
                                       ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8) (actual time=0.011..30.202 rows=100000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=33) (actual time=0.015..0.015 rows=0 loops=1)
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33) (actual time=0.007..0.012 rows=25 loops=1)
                     ->  Hash  (cost=701334.88..701334.88 rows=921229 width=8) (actual time=10495.737..10495.737 rows=0 loops=1)
                           ->  Hash Join  (cost=69863.65..701334.88 rows=921229 width=8) (actual time=588.194..10342.318 rows=910360 loops=1)
                                 Hash Cond: ("outer".o_custkey = "inner".c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..543783.20 rows=4606145 width=12) (actual time=0.013..4061.757 rows=4557513 loops=1)
                                       Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                 ->  Hash  (cost=67648.70..67648.70 rows=299979 width=4) (actual time=587.962..587.962 rows=0 loops=1)
                                       ->  Hash Join  (cost=2.50..67648.70 rows=299979 width=4) (actual time=0.062..546.055 rows=299436 loops=1)
                                             Hash Cond: ("outer".c_nationkey = "inner".n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..57146.94 rows=1499894 width=8) (actual time=0.011..364.288 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.49..2.49 rows=5 width=4) (actual time=0.045..0.045 rows=0 loops=1)
                                                   ->  Hash Join  (cost=1.06..2.49 rows=5 width=4) (actual time=0.036..0.044 rows=5 loops=1)
                                                         Hash Cond: ("outer".n_regionkey = "inner".r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.013..0.019 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.017..0.017 rows=0 loops=1)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
 Total runtime: 13629.425 ms
(36 rows)

query 9 run 1
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=392430.30..392430.33 rows=1 width=76) (actual time=447722.538..447722.539 rows=1 loops=1)
   ->  GroupAggregate  (cost=392430.30..392430.94 rows=23 width=76) (actual time=447722.536..447722.536 rows=1 loops=1)
         ->  Sort  (cost=392430.30..392430.36 rows=23 width=76) (actual time=447710.730..447711.990 rows=11401 loops=1)
               Sort Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=0.00..392429.78 rows=23 width=76) (actual time=5.753..407598.783 rows=3248192 loops=1)
                     ->  Nested Loop  (cost=0.00..392359.98 rows=23 width=76) (actual time=4.220..313734.200 rows=3248192 loops=1)
                           Join Filter: ("outer".s_nationkey = "inner".n_nationkey)
                           ->  Nested Loop  (cost=0.00..392324.04 rows=23 width=51) (actual time=3.942..280326.242 rows=3248192 loops=1)
                                 ->  Nested Loop  (cost=0.00..392254.35 rows=23 width=55) (actual time=3.135..266512.039 rows=3248192 loops=1)
                                       ->  Nested Loop  (cost=0.00..134060.28 rows=63989 width=23) (actual time=1.642..3969.596 rows=433248 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..76082.76 rows=16001 width=4) (actual time=0.554..1609.812 rows=108312 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.36 rows=21 width=19) (actual time=0.016..0.019 rows=4 loops=108312)
                                                   Index Cond: ("outer".p_partkey = partsupp.ps_partkey)
                                       ->  Index Scan using q9_idx_1 on lineitem  (cost=0.00..4.02 rows=1 width=44) (actual time=0.094..0.597 rows=7 loops=433248)
                                             Index Cond: (("outer".p_partkey = lineitem.l_partkey) AND ("outer".ps_suppkey = lineitem.l_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.02 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=3248192)
                                       Index Cond: ("outer".ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33) (actual time=0.001..0.005 rows=25 loops=3248192)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.02 rows=1 width=8) (actual time=0.026..0.027 rows=1 loops=3248192)
                           Index Cond: (orders.o_orderkey = "outer".l_orderkey)
 Total runtime: 447784.016 ms
(22 rows)

SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=392430.30..392430.33 rows=1 width=76) (actual time=334428.890..334428.890 rows=1 loops=1)
   ->  GroupAggregate  (cost=392430.30..392430.94 rows=23 width=76) (actual time=334428.890..334428.890 rows=1 loops=1)
         ->  Sort  (cost=392430.30..392430.36 rows=23 width=76) (actual time=334417.099..334418.255 rows=11401 loops=1)
               Sort Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=0.00..392429.78 rows=23 width=76) (actual time=1.741..296185.588 rows=3248192 loops=1)
                     ->  Nested Loop  (cost=0.00..392359.98 rows=23 width=76) (actual time=1.685..242439.958 rows=3248192 loops=1)
                           Join Filter: ("outer".s_nationkey = "inner".n_nationkey)
                           ->  Nested Loop  (cost=0.00..392324.04 rows=23 width=51) (actual time=1.670..211725.324 rows=3248192 loops=1)
                                 ->  Nested Loop  (cost=0.00..392254.35 rows=23 width=55) (actual time=1.637..199802.447 rows=3248192 loops=1)
                                       ->  Nested Loop  (cost=0.00..134060.28 rows=63989 width=23) (actual time=0.898..3654.789 rows=433248 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..76082.76 rows=16001 width=4) (actual time=0.305..1511.501 rows=108312 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.36 rows=21 width=19) (actual time=0.014..0.017 rows=4 loops=108312)
                                                   Index Cond: ("outer".p_partkey = partsupp.ps_partkey)
                                       ->  Index Scan using q9_idx_1 on lineitem  (cost=0.00..4.02 rows=1 width=44) (actual time=0.072..0.445 rows=7 loops=433248)
                                             Index Cond: (("outer".p_partkey = lineitem.l_partkey) AND ("outer".ps_suppkey = lineitem.l_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.02 rows=1 width=8) (actual time=0.002..0.003 rows=1 loops=3248192)
                                       Index Cond: ("outer".ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33) (actual time=0.000..0.004 rows=25 loops=3248192)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.02 rows=1 width=8) (actual time=0.014..0.015 rows=1 loops=3248192)
                           Index Cond: (orders.o_orderkey = "outer".l_orderkey)
 Total runtime: 334489.416 ms
(22 rows)

query 10 run 1
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3795761.17..3795761.22 rows=20 width=212) (actual time=54150.896..54150.899 rows=20 loops=1)
   ->  Sort  (cost=3795761.17..3797117.97 rows=542722 width=212) (actual time=54150.895..54150.897 rows=20 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  GroupAggregate  (cost=3645583.63..3661865.29 rows=542722 width=212) (actual time=51474.749..52832.961 rows=381205 loops=1)
               ->  Sort  (cost=3645583.63..3646940.44 rows=542722 width=212) (actual time=51474.726..51652.945 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=696761.07..3511687.76 rows=542722 width=212) (actual time=7305.309..42671.924 rows=1145402 loops=1)
                           Hash Cond: ("outer".c_nationkey = "inner".n_nationkey)
                           ->  Hash Join  (cost=696759.76..3503545.62 rows=542722 width=187) (actual time=7304.989..41943.632 rows=1145402 loops=1)
                                 Hash Cond: ("outer".l_orderkey = "inner".o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..2329092.95 rows=14970046 width=26) (actual time=0.826..16856.448 rows=14808183 loops=1)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                 ->  Hash  (cost=681593.32..681593.32 rows=543774 width=169) (actual time=7295.958..7295.958 rows=0 loops=1)
                                       ->  Merge Join  (cost=600931.77..681593.32 rows=543774 width=169) (actual time=6118.537..7126.145 rows=573160 loops=1)
                                             Merge Cond: ("outer".c_custkey = "inner".o_custkey)
                                             ->  Index Scan using customer_pkey on customer  (cost=0.00..68762.41 rows=1499894 width=165) (actual time=0.902..431.768 rows=1499997 loops=1)
                                             ->  Sort  (cost=600931.77..602291.21 rows=543774 width=8) (actual time=6117.623..6175.192 rows=573160 loops=1)
                                                   Sort Key: orders.o_custkey
                                                   ->  Seq Scan on orders  (cost=0.00..543783.20 rows=543774 width=8) (actual time=0.458..5208.190 rows=573160 loops=1)
                                                         Filter: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=1.25..1.25 rows=25 width=33) (actual time=0.308..0.308 rows=0 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33) (actual time=0.299..0.305 rows=25 loops=1)
 Total runtime: 54215.623 ms
(23 rows)

SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3795761.17..3795761.22 rows=20 width=212) (actual time=53527.487..53527.490 rows=20 loops=1)
   ->  Sort  (cost=3795761.17..3797117.97 rows=542722 width=212) (actual time=53527.485..53527.486 rows=20 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  GroupAggregate  (cost=3645583.63..3661865.29 rows=542722 width=212) (actual time=50853.170..52211.135 rows=381205 loops=1)
               ->  Sort  (cost=3645583.63..3646940.44 rows=542722 width=212) (actual time=50853.146..51033.475 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=696761.07..3511687.76 rows=542722 width=212) (actual time=6891.079..42046.362 rows=1145402 loops=1)
                           Hash Cond: ("outer".c_nationkey = "inner".n_nationkey)
                           ->  Hash Join  (cost=696759.76..3503545.62 rows=542722 width=187) (actual time=6890.855..41318.866 rows=1145402 loops=1)
                                 Hash Cond: ("outer".l_orderkey = "inner".o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..2329092.95 rows=14970046 width=26) (actual time=0.516..16745.897 rows=14808183 loops=1)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                 ->  Hash  (cost=681593.32..681593.32 rows=543774 width=169) (actual time=6881.995..6881.995 rows=0 loops=1)
                                       ->  Merge Join  (cost=600931.77..681593.32 rows=543774 width=169) (actual time=5690.761..6710.785 rows=573160 loops=1)
                                             Merge Cond: ("outer".c_custkey = "inner".o_custkey)
                                             ->  Index Scan using customer_pkey on customer  (cost=0.00..68762.41 rows=1499894 width=165) (actual time=0.895..442.118 rows=1499997 loops=1)
                                             ->  Sort  (cost=600931.77..602291.21 rows=543774 width=8) (actual time=5689.854..5747.778 rows=573160 loops=1)
                                                   Sort Key: orders.o_custkey
                                                   ->  Seq Scan on orders  (cost=0.00..543783.20 rows=543774 width=8) (actual time=0.273..4784.964 rows=573160 loops=1)
                                                         Filter: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=1.25..1.25 rows=25 width=33) (actual time=0.208..0.208 rows=0 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33) (actual time=0.199..0.205 rows=25 loops=1)
 Total runtime: 53593.076 ms
(23 rows)

query 11 run 1
SET
                                                                        QUERY PLAN                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=708196.22..708196.22 rows=1 width=19) (actual time=6376.570..6376.570 rows=0 loops=1)
   InitPlan
     ->  Aggregate  (cost=317266.21..317266.22 rows=1 width=15) (actual time=2334.089..2334.089 rows=1 loops=1)
           ->  Hash Join  (cost=4134.31..316482.70 rows=313403 width=15) (actual time=21.648..2197.756 rows=320800 loops=1)
                 Hash Cond: ("outer".ps_suppkey = "inner".s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..269222.57 rows=7998357 width=19) (actual time=0.001..1119.833 rows=8000000 loops=1)
                 ->  Hash  (cost=4124.31..4124.31 rows=4000 width=4) (actual time=21.622..21.622 rows=0 loops=1)
                       ->  Hash Join  (cost=1.31..4124.31 rows=4000 width=4) (actual time=0.034..21.068 rows=4010 loops=1)
                             Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                             ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8) (actual time=0.002..12.568 rows=100000 loops=1)
                             ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.011..0.011 rows=0 loops=1)
                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                         Filter: (n_name = 'SAUDI ARABIA'::bpchar)
   ->  Sort  (cost=390930.00..391713.51 rows=313403 width=19) (actual time=6376.569..6376.569 rows=0 loops=1)
         Sort Key: sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))
         ->  GroupAggregate  (cost=349397.06..358015.64 rows=313403 width=19) (actual time=6376.132..6376.132 rows=0 loops=1)
               Filter: (sum((ps_supplycost * (ps_availqty)::numeric)) > $0)
               ->  Sort  (cost=349397.06..350180.57 rows=313403 width=19) (actual time=3865.079..3892.075 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     ->  Hash Join  (cost=4134.31..316482.70 rows=313403 width=19) (actual time=45.548..3573.648 rows=320800 loops=1)
                           Hash Cond: ("outer".ps_suppkey = "inner".s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..269222.57 rows=7998357 width=23) (actual time=0.731..2326.263 rows=8000000 loops=1)
                           ->  Hash  (cost=4124.31..4124.31 rows=4000 width=4) (actual time=44.742..44.742 rows=0 loops=1)
                                 ->  Hash Join  (cost=1.31..4124.31 rows=4000 width=4) (actual time=0.863..44.226 rows=4010 loops=1)
                                       Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8) (actual time=0.351..34.535 rows=100000 loops=1)
                                       ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.416..0.416 rows=0 loops=1)
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.414..0.415 rows=1 loops=1)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
 Total runtime: 6379.187 ms
(30 rows)

SET
                                                                        QUERY PLAN                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=708196.22..708196.22 rows=1 width=19) (actual time=5413.224..5413.224 rows=0 loops=1)
   InitPlan
     ->  Aggregate  (cost=317266.21..317266.22 rows=1 width=15) (actual time=2334.136..2334.136 rows=1 loops=1)
           ->  Hash Join  (cost=4134.31..316482.70 rows=313403 width=15) (actual time=21.651..2202.901 rows=320800 loops=1)
                 Hash Cond: ("outer".ps_suppkey = "inner".s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..269222.57 rows=7998357 width=19) (actual time=0.001..1119.335 rows=8000000 loops=1)
                 ->  Hash  (cost=4124.31..4124.31 rows=4000 width=4) (actual time=21.625..21.625 rows=0 loops=1)
                       ->  Hash Join  (cost=1.31..4124.31 rows=4000 width=4) (actual time=0.033..21.107 rows=4010 loops=1)
                             Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                             ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8) (actual time=0.001..12.609 rows=100000 loops=1)
                             ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.011..0.011 rows=0 loops=1)
                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                         Filter: (n_name = 'SAUDI ARABIA'::bpchar)
   ->  Sort  (cost=390930.00..391713.51 rows=313403 width=19) (actual time=5413.224..5413.224 rows=0 loops=1)
         Sort Key: sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))
         ->  GroupAggregate  (cost=349397.06..358015.64 rows=313403 width=19) (actual time=5413.196..5413.196 rows=0 loops=1)
               Filter: (sum((ps_supplycost * (ps_availqty)::numeric)) > $0)
               ->  Sort  (cost=349397.06..350180.57 rows=313403 width=19) (actual time=2904.947..2931.783 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     ->  Hash Join  (cost=4134.31..316482.70 rows=313403 width=19) (actual time=31.681..2636.984 rows=320800 loops=1)
                           Hash Cond: ("outer".ps_suppkey = "inner".s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..269222.57 rows=7998357 width=23) (actual time=0.004..1519.706 rows=8000000 loops=1)
                           ->  Hash  (cost=4124.31..4124.31 rows=4000 width=4) (actual time=31.645..31.645 rows=0 loops=1)
                                 ->  Hash Join  (cost=1.31..4124.31 rows=4000 width=4) (actual time=0.045..31.175 rows=4010 loops=1)
                                       Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8) (actual time=0.005..21.562 rows=100000 loops=1)
                                       ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.015..0.015 rows=0 loops=1)
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
 Total runtime: 5415.641 ms
(30 rows)

query 12 run 1
SET
                                                                                                                          QUERY PLAN                                                                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1808803.73..1808803.73 rows=1 width=33) (actual time=28898.198..28898.198 rows=1 loops=1)
   ->  Sort  (cost=1808803.73..1808803.73 rows=1 width=33) (actual time=28898.197..28898.197 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=1808803.70..1808803.72 rows=1 width=33) (actual time=28898.139..28898.140 rows=2 loops=1)
               ->  Merge Join  (cost=0.00..1806819.04 rows=264622 width=33) (actual time=4.087..28682.670 rows=311258 loops=1)
                     Merge Cond: ("outer".o_orderkey = "inner".l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..584914.20 rows=14999080 width=23) (actual time=1.563..3950.099 rows=14999967 loops=1)
                     ->  Index Scan using q4_idx_1 on lineitem  (cost=0.00..1181161.57 rows=264622 width=18) (actual time=2.464..23283.230 rows=311258 loops=1)
                           Filter: (((l_shipmode = 'SHIP'::bpchar) OR (l_shipmode = 'REG AIR'::bpchar)) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 28898.824 ms
(10 rows)

SET
                                                                                                                          QUERY PLAN                                                                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1808803.73..1808803.73 rows=1 width=33) (actual time=27938.074..27938.075 rows=1 loops=1)
   ->  Sort  (cost=1808803.73..1808803.73 rows=1 width=33) (actual time=27938.072..27938.072 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=1808803.70..1808803.72 rows=1 width=33) (actual time=27938.034..27938.034 rows=2 loops=1)
               ->  Merge Join  (cost=0.00..1806819.04 rows=264622 width=33) (actual time=3.089..27726.360 rows=311258 loops=1)
                     Merge Cond: ("outer".o_orderkey = "inner".l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..584914.20 rows=14999080 width=23) (actual time=1.352..3789.901 rows=14999967 loops=1)
                     ->  Index Scan using q4_idx_1 on lineitem  (cost=0.00..1181161.57 rows=264622 width=18) (actual time=1.672..22501.348 rows=311258 loops=1)
                           Filter: (((l_shipmode = 'SHIP'::bpchar) OR (l_shipmode = 'REG AIR'::bpchar)) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 27938.625 ms
(10 rows)

query 13 run 1
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3327369.68..3327369.69 rows=1 width=8) (actual time=45035.284..45035.285 rows=1 loops=1)
   ->  Sort  (cost=3327369.68..3327370.18 rows=200 width=8) (actual time=45035.282..45035.282 rows=1 loops=1)
         Sort Key: count(*), c_count
         ->  HashAggregate  (cost=3327361.54..3327362.04 rows=200 width=8) (actual time=45035.237..45035.243 rows=46 loops=1)
               ->  Subquery Scan c_orders  (cost=2928619.64..3319862.07 rows=1499894 width=8) (actual time=37121.979..44821.743 rows=1500000 loops=1)
                     ->  GroupAggregate  (cost=2928619.64..3304863.13 rows=1499894 width=8) (actual time=37121.978..44591.622 rows=1500000 loops=1)
                           ->  Merge Left Join  (cost=2928619.64..3226117.99 rows=14999081 width=8) (actual time=37121.959..42523.805 rows=15337604 loops=1)
                                 Merge Cond: ("outer".c_custkey = "inner".o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.00..68762.41 rows=1499894 width=4) (actual time=0.882..460.182 rows=1500000 loops=1)
                                 ->  Sort  (cost=2928619.64..2966117.34 rows=14999080 width=8) (actual time=37121.066..38495.167 rows=14837583 loops=1)
                                       Sort Key: orders.o_custkey
                                       ->  Seq Scan on orders  (cost=0.00..506285.50 rows=14999080 width=8) (actual time=0.499..13794.139 rows=14837583 loops=1)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 45120.887 ms
(14 rows)

SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3327369.68..3327369.69 rows=1 width=8) (actual time=43277.578..43277.578 rows=1 loops=1)
   ->  Sort  (cost=3327369.68..3327370.18 rows=200 width=8) (actual time=43277.578..43277.578 rows=1 loops=1)
         Sort Key: count(*), c_count
         ->  HashAggregate  (cost=3327361.54..3327362.04 rows=200 width=8) (actual time=43277.550..43277.555 rows=46 loops=1)
               ->  Subquery Scan c_orders  (cost=2928619.64..3319862.07 rows=1499894 width=8) (actual time=35287.239..43058.941 rows=1500000 loops=1)
                     ->  GroupAggregate  (cost=2928619.64..3304863.13 rows=1499894 width=8) (actual time=35287.237..42833.294 rows=1500000 loops=1)
                           ->  Merge Left Join  (cost=2928619.64..3226117.99 rows=14999081 width=8) (actual time=35287.218..40752.506 rows=15337604 loops=1)
                                 Merge Cond: ("outer".c_custkey = "inner".o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.00..68762.41 rows=1499894 width=4) (actual time=0.037..489.422 rows=1500000 loops=1)
                                 ->  Sort  (cost=2928619.64..2966117.34 rows=14999080 width=8) (actual time=35287.170..36680.382 rows=14837583 loops=1)
                                       Sort Key: orders.o_custkey
                                       ->  Seq Scan on orders  (cost=0.00..506285.50 rows=14999080 width=8) (actual time=0.011..12539.976 rows=14837583 loops=1)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 43362.343 ms
(14 rows)

query 14 run 1
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1647501.73..1647501.75 rows=1 width=46) (actual time=74015.191..74015.191 rows=1 loops=1)
   ->  Aggregate  (cost=1647501.73..1647501.75 rows=1 width=46) (actual time=74015.190..74015.190 rows=1 loops=1)
         ->  Merge Join  (cost=1541391.95..1643864.51 rows=727443 width=46) (actual time=72191.987..73468.221 rows=772942 loops=1)
               Merge Cond: ("outer".p_partkey = "inner".l_partkey)
               ->  Index Scan using part_pkey on part  (cost=0.00..86569.91 rows=2000061 width=28) (actual time=1.294..559.355 rows=1999999 loops=1)
               ->  Sort  (cost=1541391.95..1543210.56 rows=727443 width=26) (actual time=72190.675..72275.675 rows=772942 loops=1)
                     Sort Key: lineitem.l_partkey
                     ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..1458856.32 rows=727443 width=26) (actual time=2.084..69496.501 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
 Total runtime: 74022.801 ms
(10 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1647501.73..1647501.75 rows=1 width=46) (actual time=6014.000..6014.001 rows=1 loops=1)
   ->  Aggregate  (cost=1647501.73..1647501.75 rows=1 width=46) (actual time=6013.999..6013.999 rows=1 loops=1)
         ->  Merge Join  (cost=1541391.95..1643864.51 rows=727443 width=46) (actual time=4280.680..5470.704 rows=772942 loops=1)
               Merge Cond: ("outer".p_partkey = "inner".l_partkey)
               ->  Index Scan using part_pkey on part  (cost=0.00..86569.91 rows=2000061 width=28) (actual time=0.073..481.637 rows=1999999 loops=1)
               ->  Sort  (cost=1541391.95..1543210.56 rows=727443 width=26) (actual time=4280.589..4363.441 rows=772942 loops=1)
                     Sort Key: lineitem.l_partkey
                     ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..1458856.32 rows=727443 width=26) (actual time=0.070..2507.871 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
 Total runtime: 6020.744 ms
(10 rows)

query 15 run 1
SET
CREATE VIEW
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4987259.55..4987260.80 rows=1 width=112) (actual time=38875.267..38875.267 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=2490629.76..2490629.76 rows=1 width=32) (actual time=17405.914..17405.914 rows=1 loops=1)
           ->  Subquery Scan revenue0  (cost=2490555.20..2490620.44 rows=3728 width=32) (actual time=17344.875..17394.942 rows=100000 loops=1)
                 ->  HashAggregate  (cost=2490555.20..2490583.16 rows=3728 width=26) (actual time=17344.874..17380.148 rows=100000 loops=1)
                       ->  Seq Scan on lineitem  (cost=0.00..2479053.34 rows=2300371 width=26) (actual time=0.008..15365.260 rows=2265714 loops=1)
                             Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=2496629.79..2501294.71 rows=3729 width=112) (actual time=38875.265..38875.265 rows=1 loops=1)
         Merge Cond: ("outer".s_suppkey = "inner".supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4359.00 rows=100000 width=80) (actual time=0.829..22.073 rows=69998 loops=1)
         ->  Sort  (cost=2496629.79..2496639.11 rows=3728 width=36) (actual time=38847.172..38847.172 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=2496306.12..2496408.64 rows=3728 width=36) (actual time=38837.132..38847.141 rows=1 loops=1)
                     ->  HashAggregate  (cost=2496306.12..2496371.36 rows=3728 width=26) (actual time=38837.131..38847.138 rows=1 loops=1)
                           Filter: (sum((l_extendedprice * (1::numeric - l_discount))) = $0)
                           ->  Seq Scan on lineitem  (cost=0.00..2479053.34 rows=2300371 width=26) (actual time=0.509..19335.945 rows=2265714 loops=1)
                                 Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 38875.962 ms
(18 rows)

DROP VIEW
SET
CREATE VIEW
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4987259.55..4987260.80 rows=1 width=112) (actual time=35364.330..35364.330 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=2490629.76..2490629.76 rows=1 width=32) (actual time=17396.302..17396.302 rows=1 loops=1)
           ->  Subquery Scan revenue0  (cost=2490555.20..2490620.44 rows=3728 width=32) (actual time=17336.100..17385.543 rows=100000 loops=1)
                 ->  HashAggregate  (cost=2490555.20..2490583.16 rows=3728 width=26) (actual time=17336.099..17371.227 rows=100000 loops=1)
                       ->  Seq Scan on lineitem  (cost=0.00..2479053.34 rows=2300371 width=26) (actual time=0.007..15373.710 rows=2265714 loops=1)
                             Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=2496629.79..2501294.71 rows=3729 width=112) (actual time=35364.330..35364.330 rows=1 loops=1)
         Merge Cond: ("outer".s_suppkey = "inner".supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4359.00 rows=100000 width=80) (actual time=0.037..15.013 rows=69998 loops=1)
         ->  Sort  (cost=2496629.79..2496639.11 rows=3728 width=36) (actual time=35343.518..35343.518 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=2496306.12..2496408.64 rows=3728 width=36) (actual time=35333.441..35343.505 rows=1 loops=1)
                     ->  HashAggregate  (cost=2496306.12..2496371.36 rows=3728 width=26) (actual time=35333.440..35343.503 rows=1 loops=1)
                           Filter: (sum((l_extendedprice * (1::numeric - l_discount))) = $0)
                           ->  Seq Scan on lineitem  (cost=0.00..2479053.34 rows=2300371 width=26) (actual time=0.010..15933.176 rows=2265714 loops=1)
                                 Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 35364.558 ms
(18 rows)

DROP VIEW
query 16 run 1
SET
                                                                                                                             QUERY PLAN                                                                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=579549.67..579549.67 rows=1 width=46) (actual time=26274.511..26274.512 rows=1 loops=1)
   ->  Sort  (cost=579549.67..579613.77 rows=25640 width=46) (actual time=26274.509..26274.509 rows=1 loops=1)
         Sort Key: count(DISTINCT partsupp.ps_suppkey), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=570772.19..577672.04 rows=25640 width=46) (actual time=25623.681..26141.263 rows=27838 loops=1)
               ->  Sort  (cost=570772.19..572139.34 rows=546860 width=46) (actual time=25623.642..25733.750 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Merge Join  (cost=3833.00..507688.42 rows=546860 width=46) (actual time=93.154..7438.309 rows=1186319 loops=1)
                           Merge Cond: ("outer".p_partkey = "inner".ps_partkey)
                           ->  Index Scan using part_pkey on part  (cost=0.00..136571.44 rows=273494 width=46) (actual time=1.312..1971.303 rows=296733 loops=1)
                                 Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND ((p_size = 12) OR (p_size = 32) OR (p_size = 36) OR (p_size = 26) OR (p_size = 40) OR (p_size = 34) OR (p_size = 49) OR (p_size = 9)))
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=3833.00..354980.25 rows=3999179 width=8) (actual time=91.816..4297.725 rows=7995493 loops=1)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..3833.00 rows=1 width=4) (actual time=1.262..90.569 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
 Total runtime: 26289.333 ms
(16 rows)

SET
                                                                                                                             QUERY PLAN                                                                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=579549.67..579549.67 rows=1 width=46) (actual time=25025.524..25025.524 rows=1 loops=1)
   ->  Sort  (cost=579549.67..579613.77 rows=25640 width=46) (actual time=25025.522..25025.522 rows=1 loops=1)
         Sort Key: count(DISTINCT partsupp.ps_suppkey), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=570772.19..577672.04 rows=25640 width=46) (actual time=24377.195..24892.321 rows=27838 loops=1)
               ->  Sort  (cost=570772.19..572139.34 rows=546860 width=46) (actual time=24377.154..24487.717 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Merge Join  (cost=3833.00..507688.42 rows=546860 width=46) (actual time=80.276..6359.026 rows=1186319 loops=1)
                           Merge Cond: ("outer".p_partkey = "inner".ps_partkey)
                           ->  Index Scan using part_pkey on part  (cost=0.00..136571.44 rows=273494 width=46) (actual time=0.044..1735.406 rows=296733 loops=1)
                                 Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND ((p_size = 12) OR (p_size = 32) OR (p_size = 36) OR (p_size = 26) OR (p_size = 40) OR (p_size = 34) OR (p_size = 49) OR (p_size = 9)))
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=3833.00..354980.25 rows=3999179 width=8) (actual time=80.207..3476.214 rows=7995493 loops=1)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..3833.00 rows=1 width=4) (actual time=0.312..80.131 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
 Total runtime: 25040.349 ms
(16 rows)

query 17 run 1
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14716788.22..14716788.23 rows=1 width=13) (actual time=274501.428..274501.428 rows=1 loops=1)
   ->  Aggregate  (cost=14716788.22..14716788.23 rows=1 width=13) (actual time=274501.419..274501.419 rows=1 loops=1)
         ->  Nested Loop  (cost=14194568.92..14716747.73 rows=16196 width=13) (actual time=225685.739..274493.491 rows=5319 loops=1)
               ->  Merge Join  (cost=14194568.92..14673950.44 rows=1620 width=40) (actual time=225678.390..272282.345 rows=1996 loops=1)
                     Merge Cond: ("outer".agg_partkey = "inner".p_partkey)
                     ->  Subquery Scan part_agg  (cost=14113381.11..14588526.17 rows=1684259 width=36) (actual time=225009.274..271424.943 rows=1999333 loops=1)
                           ->  GroupAggregate  (cost=14113381.11..14571683.58 rows=1684259 width=14) (actual time=225009.273..271000.041 rows=1999333 loops=1)
                                 ->  Sort  (cost=14113381.11..14263341.50 rows=59984156 width=14) (actual time=225009.229..237076.492 rows=59965994 loops=1)
                                       Sort Key: l_partkey
                                       ->  Seq Scan on lineitem  (cost=0.00..2179132.56 rows=59984156 width=14) (actual time=0.499..15043.250 rows=59986052 loops=1)
                     ->  Sort  (cost=81187.81..81192.61 rows=1923 width=4) (actual time=648.368..649.054 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           ->  Seq Scan on part  (cost=0.00..81082.91 rows=1923 width=4) (actual time=1.456..647.810 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using q17_idx_1 on lineitem  (cost=0.00..26.24 rows=12 width=27) (actual time=0.741..1.102 rows=3 loops=1996)
                     Index Cond: (("outer".agg_partkey = lineitem.l_partkey) AND (lineitem.l_quantity < "outer".avg_quantity))
 Total runtime: 275583.032 ms
(17 rows)

SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14716788.22..14716788.23 rows=1 width=13) (actual time=275816.653..275816.654 rows=1 loops=1)
   ->  Aggregate  (cost=14716788.22..14716788.23 rows=1 width=13) (actual time=275816.652..275816.652 rows=1 loops=1)
         ->  Nested Loop  (cost=14194568.92..14716747.73 rows=16196 width=13) (actual time=227134.992..275810.409 rows=5319 loops=1)
               ->  Merge Join  (cost=14194568.92..14673950.44 rows=1620 width=40) (actual time=227133.234..274048.390 rows=1996 loops=1)
                     Merge Cond: ("outer".agg_partkey = "inner".p_partkey)
                     ->  Subquery Scan part_agg  (cost=14113381.11..14588526.17 rows=1684259 width=36) (actual time=226584.123..273307.679 rows=1999333 loops=1)
                           ->  GroupAggregate  (cost=14113381.11..14571683.58 rows=1684259 width=14) (actual time=226584.122..272883.690 rows=1999333 loops=1)
                                 ->  Sort  (cost=14113381.11..14263341.50 rows=59984156 width=14) (actual time=226584.086..238928.664 rows=59965994 loops=1)
                                       Sort Key: l_partkey
                                       ->  Seq Scan on lineitem  (cost=0.00..2179132.56 rows=59984156 width=14) (actual time=0.306..14498.867 rows=59986052 loops=1)
                     ->  Sort  (cost=81187.81..81192.61 rows=1923 width=4) (actual time=534.709..535.366 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           ->  Seq Scan on part  (cost=0.00..81082.91 rows=1923 width=4) (actual time=1.343..534.146 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using q17_idx_1 on lineitem  (cost=0.00..26.24 rows=12 width=27) (actual time=0.648..0.878 rows=3 loops=1996)
                     Index Cond: (("outer".agg_partkey = lineitem.l_partkey) AND (lineitem.l_quantity < "outer".avg_quantity))
 Total runtime: 276893.373 ms
(17 rows)

query 18 run 1
SET
                                                                                                           QUERY PLAN                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6940362.70..6940362.95 rows=100 width=57) (actual time=56744.396..56744.405 rows=99 loops=1)
   ->  Sort  (cost=6940362.70..6943395.21 rows=1213003 width=57) (actual time=56744.395..56744.399 rows=99 loops=1)
         Sort Key: orders.o_totalprice, orders.o_orderdate
         ->  GroupAggregate  (cost=6725967.35..6750227.41 rows=1213003 width=57) (actual time=56743.584..56743.926 rows=99 loops=1)
               ->  Sort  (cost=6725967.35..6728999.86 rows=1213003 width=57) (actual time=56743.575..56743.600 rows=693 loops=1)
                     Sort Key: customer.c_name, customer.c_custkey, orders.o_orderkey, orders.o_orderdate, orders.o_totalprice
                     ->  Merge Join  (cost=3724143.88..6535832.06 rows=1213003 width=57) (actual time=37008.909..56741.342 rows=693 loops=1)
                           Merge Cond: ("outer".l_orderkey = "inner".o_orderkey)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2643533.34 rows=59984156 width=14) (actual time=1.408..15724.170 rows=59916431 loops=1)
                           ->  Sort  (cost=3724143.88..3724902.16 rows=303312 width=51) (actual time=36562.873..36562.942 rows=687 loops=1)
                                 Sort Key: orders.o_orderkey
                                 ->  Merge Join  (cost=3612889.56..3689944.18 rows=303312 width=51) (actual time=36021.326..36562.790 rows=99 loops=1)
                                       Merge Cond: ("outer".c_custkey = "inner".o_custkey)
                                       ->  Index Scan using customer_pkey on customer  (cost=0.00..68762.41 rows=1499894 width=26) (actual time=0.902..411.992 rows=1481955 loops=1)
                                       ->  Sort  (cost=3612889.56..3613647.84 rows=303312 width=29) (actual time=36011.861..36011.893 rows=99 loops=1)
                                             Sort Key: orders.o_custkey
                                             ->  Merge IN Join  (cost=2949789.11..3580507.53 rows=303312 width=29) (actual time=962.010..36011.749 rows=99 loops=1)
                                                   Merge Cond: ("outer".o_orderkey = "inner".l_orderkey)
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.00..584914.20 rows=14999080 width=25) (actual time=1.595..3866.581 rows=14982724 loops=1)
                                                   ->  Materialize  (cost=2949789.11..2954304.23 rows=303312 width=4) (actual time=820.494..31033.050 rows=99 loops=1)
                                                         ->  Subquery Scan "IN_subquery"  (cost=0.00..2948003.80 rows=303312 width=4) (actual time=820.492..31032.934 rows=99 loops=1)
                                                               ->  GroupAggregate  (cost=0.00..2944970.68 rows=303312 width=14) (actual time=820.490..31032.819 rows=99 loops=1)
                                                                     Filter: (sum(l_quantity) > 313::numeric)
                                                                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2643533.34 rows=59984156 width=14) (actual time=0.005..16954.997 rows=59986052 loops=1)
 Total runtime: 56744.479 ms
(25 rows)

SET
                                                                                                           QUERY PLAN                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6940362.70..6940362.95 rows=100 width=57) (actual time=55990.711..55990.720 rows=99 loops=1)
   ->  Sort  (cost=6940362.70..6943395.21 rows=1213003 width=57) (actual time=55990.711..55990.714 rows=99 loops=1)
         Sort Key: orders.o_totalprice, orders.o_orderdate
         ->  GroupAggregate  (cost=6725967.35..6750227.41 rows=1213003 width=57) (actual time=55990.023..55990.366 rows=99 loops=1)
               ->  Sort  (cost=6725967.35..6728999.86 rows=1213003 width=57) (actual time=55990.013..55990.025 rows=693 loops=1)
                     Sort Key: customer.c_name, customer.c_custkey, orders.o_orderkey, orders.o_orderdate, orders.o_totalprice
                     ->  Merge Join  (cost=3724143.88..6535832.06 rows=1213003 width=57) (actual time=36191.537..55987.786 rows=693 loops=1)
                           Merge Cond: ("outer".l_orderkey = "inner".o_orderkey)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2643533.34 rows=59984156 width=14) (actual time=0.763..15779.746 rows=59916431 loops=1)
                           ->  Sort  (cost=3724143.88..3724902.16 rows=303312 width=51) (actual time=35743.063..35743.127 rows=687 loops=1)
                                 Sort Key: orders.o_orderkey
                                 ->  Merge Join  (cost=3612889.56..3689944.18 rows=303312 width=51) (actual time=35191.925..35743.001 rows=99 loops=1)
                                       Merge Cond: ("outer".c_custkey = "inner".o_custkey)
                                       ->  Index Scan using customer_pkey on customer  (cost=0.00..68762.41 rows=1499894 width=26) (actual time=0.731..421.214 rows=1481955 loops=1)
                                       ->  Sort  (cost=3612889.56..3613647.84 rows=303312 width=29) (actual time=35181.912..35181.936 rows=99 loops=1)
                                             Sort Key: orders.o_custkey
                                             ->  Merge IN Join  (cost=2949789.11..3580507.53 rows=303312 width=29) (actual time=882.148..35181.809 rows=99 loops=1)
                                                   Merge Cond: ("outer".o_orderkey = "inner".l_orderkey)
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.00..584914.20 rows=14999080 width=25) (actual time=1.274..3727.284 rows=14982724 loops=1)
                                                   ->  Materialize  (cost=2949789.11..2954304.23 rows=303312 width=4) (actual time=753.932..30334.149 rows=99 loops=1)
                                                         ->  Subquery Scan "IN_subquery"  (cost=0.00..2948003.80 rows=303312 width=4) (actual time=753.930..30334.037 rows=99 loops=1)
                                                               ->  GroupAggregate  (cost=0.00..2944970.68 rows=303312 width=14) (actual time=753.928..30333.920 rows=99 loops=1)
                                                                     Filter: (sum(l_quantity) > 313::numeric)
                                                                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2643533.34 rows=59984156 width=14) (actual time=0.003..16206.610 rows=59986052 loops=1)
 Total runtime: 55990.797 ms
(25 rows)

query 19 run 1
SET
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            

 Limit  (cost=2964988.15..2964988.16 rows=1 width=22) (actual time=29503.074..29503.074 rows=1 loops=1)
   ->  Aggregate  (cost=2964988.15..2964988.16 rows=1 width=22) (actual time=29503.073..29503.073 rows=1 loops=1)
         ->  Hash Join  (cost=98661.91..2964985.36 rows=1116 width=22) (actual time=3437.144..29501.833 rows=1063 loops=1)
               Hash Cond: ("outer".l_partkey = "inner".p_partkey)
               Join Filter: ((("inner".p_brand = 'Brand#24'::bpchar) AND (("inner".p_container = 'SM CASE'::bpchar) OR ("inner".p_container = 'SM BOX'::bpchar) OR ("inner".p_container = 'SM PACK'::bpchar) OR ("inner".p_container = 'SM PKG'::bpchar)) AND ("outer".l_quantity >= 10::numeric) AND ("outer".l_quantity <= 20::numeric) AND ("inner".p_size <= 5)) OR (("inner".p_brand = 'Brand#43'::bpchar) AND (("inner".p_container = 'MED BAG'::bpchar) OR ("inner".p_container = 'MED BOX'::bpchar) OR ("inner".p_container = 'MED PKG'::bpchar) OR ("inner".p_container = 'MED PACK'::bpchar)) AND ("outer".l_quantity >= 10::numeric) AND ("outer".l_quantity <= 20::numeric) AND ("inner".p_size <= 10)) OR (("inner".p_brand = 'Brand#44'::bpchar) AND (("inner".p_container = 'LG CASE'::bpchar) OR ("inner".p_container = 'LG BOX'::bpchar) OR ("inner".p_container = 'LG PACK'::bpchar) OR ("inner".p_container = 'LG PKG'::bpchar)) AND ("outer".l_quantity >= 20::numeric) AND ("outer".l_quantity <= 30::numeric) AND ("inner".p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..2629013.73 rows=2142079 width=36) (actual time=0.607..24601.403 rows=2141904 loops=1)
                     Filter: (((l_shipmode = 'AIR'::bpchar) OR (l_shipmode = 'AIR REG'::bpchar)) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
               ->  Hash  (cost=76082.76..76082.76 rows=2000061 width=36) (actual time=1452.062..1452.062 rows=0 loops=1)
                     ->  Seq Scan on part  (cost=0.00..76082.76 rows=2000061 width=36) (actual time=0.468..1110.201 rows=2000000 loops=1)
                           Filter: (p_size >= 1)
 Total runtime: 29503.112 ms
(11 rows)

SET


 Limit  (cost=2964988.15..2964988.16 rows=1 width=22) (actual time=26069.813..26069.814 rows=1 loops=1)
   ->  Aggregate  (cost=2964988.15..2964988.16 rows=1 width=22) (actual time=26069.812..26069.812 rows=1 loops=1)
         ->  Hash Join  (cost=98661.91..2964985.36 rows=1116 width=22) (actual time=2991.982..26068.576 rows=1063 loops=1)
               Hash Cond: ("outer".l_partkey = "inner".p_partkey)
               Join Filter: ((("inner".p_brand = 'Brand#24'::bpchar) AND (("inner".p_container = 'SM CASE'::bpchar) OR ("inner".p_container = 'SM BOX'::bpchar) OR ("inner".p_container = 'SM PACK'::bpchar) OR ("inner".p_container = 'SM PKG'::bpchar)) AND ("outer".l_quantity >= 10::numeric) AND ("outer".l_quantity <= 20::numeric) AND ("inner".p_size <= 5)) OR (("inner".p_brand = 'Brand#43'::bpchar) AND (("inner".p_container = 'MED BAG'::bpchar) OR ("inner".p_container = 'MED BOX'::bpchar) OR ("inner".p_container = 'MED PKG'::bpchar) OR ("inner".p_container = 'MED PACK'::bpchar)) AND ("outer".l_quantity >= 10::numeric) AND ("outer".l_quantity <= 20::numeric) AND ("inner".p_size <= 10)) OR (("inner".p_brand = 'Brand#44'::bpchar) AND (("inner".p_container = 'LG CASE'::bpchar) OR ("inner".p_container = 'LG BOX'::bpchar) OR ("inner".p_container = 'LG PACK'::bpchar) OR ("inner".p_container = 'LG PKG'::bpchar)) AND ("outer".l_quantity >= 20::numeric) AND ("outer".l_quantity <= 30::numeric) AND ("inner".p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..2629013.73 rows=2142079 width=36) (actual time=0.407..21343.409 rows=2141904 loops=1)
                     Filter: (((l_shipmode = 'AIR'::bpchar) OR (l_shipmode = 'AIR REG'::bpchar)) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
               ->  Hash  (cost=76082.76..76082.76 rows=2000061 width=36) (actual time=1375.544..1375.544 rows=0 loops=1)
                     ->  Seq Scan on part  (cost=0.00..76082.76 rows=2000061 width=36) (actual time=0.292..1033.968 rows=2000000 loops=1)
                           Filter: (p_size >= 1)
 Total runtime: 26069.858 ms
(11 rows)

query 20 run 1
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4227236.27..4227236.27 rows=1 width=57) (actual time=55605.184..55605.185 rows=1 loops=1)
   ->  Sort  (cost=4227236.27..4227236.27 rows=1 width=57) (actual time=55605.183..55605.183 rows=1 loops=1)
         Sort Key: supplier.s_name
         ->  Hash Join  (cost=4227234.54..4227236.26 rows=1 width=57) (actual time=55577.952..55599.385 rows=1821 loops=1)
               Hash Cond: ("outer".ps_suppkey = "inner".s_suppkey)
               ->  HashAggregate  (cost=4223100.23..4223100.23 rows=1 width=8) (actual time=55533.375..55544.140 rows=44712 loops=1)
                     ->  Nested Loop  (cost=4117735.63..4223100.22 rows=1 width=8) (actual time=43654.612..55492.008 rows=59002 loops=1)
                           Join Filter: (("outer".agg_suppkey = "inner".ps_suppkey) AND (("inner".ps_availqty)::numeric > "outer".agg_quantity))
                           ->  Merge Join  (cost=4117735.63..4223096.44 rows=1 width=44) (actual time=43653.195..50441.972 rows=59125 loops=1)
                                 Merge Cond: ("outer".agg_partkey = "inner".p_partkey)
                                 ->  Subquery Scan agg_lineitem  (cost=4041652.86..4144771.93 rows=896688 width=40) (actual time=43097.036..49344.854 rows=5448473 loops=1)
                                       ->  GroupAggregate  (cost=4041652.86..4135805.05 rows=896688 width=18) (actual time=43097.034..48193.830 rows=5448473 loops=1)
                                             ->  Sort  (cost=4041652.86..4064070.05 rows=8966875 width=18) (actual time=43097.019..44501.065 rows=9123091 loops=1)
                                                   Sort Key: l_partkey, l_suppkey
                                                   ->  Seq Scan on lineitem  (cost=0.00..2479053.34 rows=8966875 width=18) (actual time=0.599..19737.590 rows=9123688 loops=1)
                                                         Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Sort  (cost=76082.77..76082.78 rows=1 width=4) (actual time=555.760..580.570 rows=59320 loops=1)
                                       Sort Key: part.p_partkey
                                       ->  HashAggregate  (cost=76082.76..76082.76 rows=1 width=4) (actual time=521.592..534.475 rows=21718 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..76082.76 rows=1 width=4) (actual time=0.848..512.979 rows=21718 loops=1)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.36 rows=21 width=12) (actual time=0.075..0.083 rows=4 loops=59125)
                                 Index Cond: (partsupp.ps_partkey = "outer".p_partkey)
               ->  Hash  (cost=4124.31..4124.31 rows=4000 width=61) (actual time=44.560..44.560 rows=0 loops=1)
                     ->  Hash Join  (cost=1.31..4124.31 rows=4000 width=61) (actual time=0.530..44.045 rows=4095 loops=1)
                           Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                           ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=65) (actual time=0.315..34.302 rows=100000 loops=1)
                           ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.207..0.207 rows=0 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.200..0.206 rows=1 loops=1)
                                       Filter: (n_name = 'IRAQ'::bpchar)
 Total runtime: 55829.365 ms
(31 rows)

SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4227236.27..4227236.27 rows=1 width=57) (actual time=54087.341..54087.341 rows=1 loops=1)
   ->  Sort  (cost=4227236.27..4227236.27 rows=1 width=57) (actual time=54087.341..54087.341 rows=1 loops=1)
         Sort Key: supplier.s_name
         ->  Hash Join  (cost=4227234.54..4227236.26 rows=1 width=57) (actual time=54060.285..54081.506 rows=1821 loops=1)
               Hash Cond: ("outer".ps_suppkey = "inner".s_suppkey)
               ->  HashAggregate  (cost=4223100.23..4223100.23 rows=1 width=8) (actual time=54017.178..54027.644 rows=44712 loops=1)
                     ->  Nested Loop  (cost=4117735.63..4223100.22 rows=1 width=8) (actual time=42830.911..53963.893 rows=59002 loops=1)
                           Join Filter: (("outer".agg_suppkey = "inner".ps_suppkey) AND (("inner".ps_availqty)::numeric > "outer".agg_quantity))
                           ->  Merge Join  (cost=4117735.63..4223096.44 rows=1 width=44) (actual time=42830.005..49579.468 rows=59125 loops=1)
                                 Merge Cond: ("outer".agg_partkey = "inner".p_partkey)
                                 ->  Subquery Scan agg_lineitem  (cost=4041652.86..4144771.93 rows=896688 width=40) (actual time=42267.409..48489.712 rows=5448473 loops=1)
                                       ->  GroupAggregate  (cost=4041652.86..4135805.05 rows=896688 width=18) (actual time=42267.406..47351.034 rows=5448473 loops=1)
                                             ->  Sort  (cost=4041652.86..4064070.05 rows=8966875 width=18) (actual time=42267.391..43700.691 rows=9123091 loops=1)
                                                   Sort Key: l_partkey, l_suppkey
                                                   ->  Seq Scan on lineitem  (cost=0.00..2479053.34 rows=8966875 width=18) (actual time=0.435..18837.966 rows=9123688 loops=1)
                                                         Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Sort  (cost=76082.77..76082.78 rows=1 width=4) (actual time=562.195..587.173 rows=59320 loops=1)
                                       Sort Key: part.p_partkey
                                       ->  HashAggregate  (cost=76082.76..76082.76 rows=1 width=4) (actual time=526.458..539.983 rows=21718 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..76082.76 rows=1 width=4) (actual time=0.486..517.851 rows=21718 loops=1)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.36 rows=21 width=12) (actual time=0.065..0.072 rows=4 loops=59125)
                                 Index Cond: (partsupp.ps_partkey = "outer".p_partkey)
               ->  Hash  (cost=4124.31..4124.31 rows=4000 width=61) (actual time=43.090..43.090 rows=0 loops=1)
                     ->  Hash Join  (cost=1.31..4124.31 rows=4000 width=61) (actual time=0.449..42.553 rows=4095 loops=1)
                           Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                           ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=65) (actual time=0.276..32.906 rows=100000 loops=1)
                           ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.167..0.167 rows=0 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.163..0.165 rows=1 loops=1)
                                       Filter: (n_name = 'IRAQ'::bpchar)
 Total runtime: 54320.580 ms
(31 rows)

query 21 run 1
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17927612.66..17927612.91 rows=100 width=29) (actual time=155934.032..155934.042 rows=100 loops=1)
   ->  Sort  (cost=17927612.66..17927856.28 rows=97448 width=29) (actual time=155934.032..155934.036 rows=100 loops=1)
         Sort Key: count(*), supplier.s_name
         ->  GroupAggregate  (cost=17917038.65..17918013.13 rows=97448 width=29) (actual time=155915.804..155925.773 rows=3991 loops=1)
               ->  Sort  (cost=17917038.65..17917282.27 rows=97448 width=29) (actual time=155915.793..155919.151 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     ->  Nested Loop  (cost=4134.31..17907439.12 rows=97448 width=29) (actual time=48.207..155499.481 rows=39281 loops=1)
                           ->  Hash Join  (cost=4134.31..17301096.81 rows=199948 width=33) (actual time=46.373..148857.029 rows=80214 loops=1)
                                 Hash Cond: ("outer".l_suppkey = "inner".s_suppkey)
                                 ->  Seq Scan on lineitem l1  (cost=0.00..17269969.61 rows=4998680 width=8) (actual time=1.859..148096.632 rows=2016924 loops=1)
                                       Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                       SubPlan
                                         ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..12.45 rows=66 width=152) (actual time=0.002..0.002 rows=1 loops=36573988)
                                               Index Cond: (l_orderkey = $0)
                                               Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                         ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..11.96 rows=198 width=152) (actual time=0.001..0.001 rows=1 loops=37929348)
                                               Index Cond: (l_orderkey = $0)
                                               Filter: (l_suppkey <> $1)
                                 ->  Hash  (cost=4124.31..4124.31 rows=4000 width=33) (actual time=44.490..44.490 rows=0 loops=1)
                                       ->  Hash Join  (cost=1.31..4124.31 rows=4000 width=33) (actual time=0.812..43.989 rows=3991 loops=1)
                                             Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=37) (actual time=0.356..34.305 rows=100000 loops=1)
                                             ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.447..0.447 rows=0 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.199..0.201 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..3.02 rows=1 width=4) (actual time=0.082..0.082 rows=0 loops=80214)
                                 Index Cond: (orders.o_orderkey = "outer".l_orderkey)
                                 Filter: (o_orderstatus = 'F'::bpchar)
 Total runtime: 155934.769 ms
(29 rows)

SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17927612.66..17927612.91 rows=100 width=29) (actual time=153921.161..153921.170 rows=100 loops=1)
   ->  Sort  (cost=17927612.66..17927856.28 rows=97448 width=29) (actual time=153921.160..153921.165 rows=100 loops=1)
         Sort Key: count(*), supplier.s_name
         ->  GroupAggregate  (cost=17917038.65..17918013.13 rows=97448 width=29) (actual time=153903.051..153913.005 rows=3991 loops=1)
               ->  Sort  (cost=17917038.65..17917282.27 rows=97448 width=29) (actual time=153903.040..153906.376 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     ->  Nested Loop  (cost=4134.31..17907439.12 rows=97448 width=29) (actual time=44.731..153499.115 rows=39281 loops=1)
                           ->  Hash Join  (cost=4134.31..17301096.81 rows=199948 width=33) (actual time=43.359..148328.807 rows=80214 loops=1)
                                 Hash Cond: ("outer".l_suppkey = "inner".s_suppkey)
                                 ->  Seq Scan on lineitem l1  (cost=0.00..17269969.61 rows=4998680 width=8) (actual time=1.641..147573.083 rows=2016924 loops=1)
                                       Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                       SubPlan
                                         ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..12.45 rows=66 width=152) (actual time=0.002..0.002 rows=1 loops=36573988)
                                               Index Cond: (l_orderkey = $0)
                                               Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                         ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..11.96 rows=198 width=152) (actual time=0.001..0.001 rows=1 loops=37929348)
                                               Index Cond: (l_orderkey = $0)
                                               Filter: (l_suppkey <> $1)
                                 ->  Hash  (cost=4124.31..4124.31 rows=4000 width=33) (actual time=41.703..41.703 rows=0 loops=1)
                                       ->  Hash Join  (cost=1.31..4124.31 rows=4000 width=33) (actual time=0.695..41.172 rows=3991 loops=1)
                                             Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=37) (actual time=0.280..31.789 rows=100000 loops=1)
                                             ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.408..0.408 rows=0 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.168..0.170 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..3.02 rows=1 width=4) (actual time=0.064..0.064 rows=0 loops=80214)
                                 Index Cond: (orders.o_orderkey = "outer".l_orderkey)
                                 Filter: (o_orderstatus = 'F'::bpchar)
 Total runtime: 153921.868 ms
(29 rows)

query 22 run 1
SET
                                                                                                                                                                                                                        QUERY PLAN                                                                                                                                                                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3462915.04..3462915.06 rows=1 width=30) (actual time=15689.377..15689.377 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=139758.81..139758.81 rows=1 width=11) (actual time=3340.964..3340.964 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..139641.11 rows=47077 width=11) (actual time=0.034..3109.481 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (("substring"((c_phone)::text, 1, 2) = '21'::text) OR ("substring"((c_phone)::text, 1, 2) = '29'::text) OR ("substring"((c_phone)::text, 1, 2) = '26'::text) OR ("substring"((c_phone)::text, 1, 2) = '34'::text) OR ("substring"((c_phone)::text, 1, 2) = '14'::text) OR ("substring"((c_phone)::text, 1, 2) = '15'::text) OR ("substring"((c_phone)::text, 1, 2) = '17'::text)))
   ->  GroupAggregate  (cost=3323156.23..3323328.63 rows=8620 width=30) (actual time=15689.376..15689.376 rows=1 loops=1)
         ->  Sort  (cost=3323156.23..3323177.78 rows=8620 width=30) (actual time=15685.991..15686.834 rows=9006 loops=1)
               Sort Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Seq Scan on customer  (cost=0.00..3322592.77 rows=8620 width=30) (actual time=3342.283..15475.778 rows=63509 loops=1)
                     Filter: ((("substring"((c_phone)::text, 1, 2) = '21'::text) OR ("substring"((c_phone)::text, 1, 2) = '29'::text) OR ("substring"((c_phone)::text, 1, 2) = '26'::text) OR ("substring"((c_phone)::text, 1, 2) = '34'::text) OR ("substring"((c_phone)::text, 1, 2) = '14'::text) OR ("substring"((c_phone)::text, 1, 2) = '15'::text) OR ("substring"((c_phone)::text, 1, 2) = '17'::text)) AND (c_acctbal > $0) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..40.32 rows=19 width=124) (actual time=0.043..0.043 rows=1 loops=191129)
                             Index Cond: (o_custkey = $1)
 Total runtime: 15690.599 ms
(14 rows)

SET
                                                                                                                                                                                                                        QUERY PLAN                                                                                                                                                                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3462915.04..3462915.06 rows=1 width=30) (actual time=6948.576..6948.577 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=139758.81..139758.81 rows=1 width=11) (actual time=3149.003..3149.003 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..139641.11 rows=47077 width=11) (actual time=0.013..2924.429 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (("substring"((c_phone)::text, 1, 2) = '21'::text) OR ("substring"((c_phone)::text, 1, 2) = '29'::text) OR ("substring"((c_phone)::text, 1, 2) = '26'::text) OR ("substring"((c_phone)::text, 1, 2) = '34'::text) OR ("substring"((c_phone)::text, 1, 2) = '14'::text) OR ("substring"((c_phone)::text, 1, 2) = '15'::text) OR ("substring"((c_phone)::text, 1, 2) = '17'::text)))
   ->  GroupAggregate  (cost=3323156.23..3323328.63 rows=8620 width=30) (actual time=6948.574..6948.574 rows=1 loops=1)
         ->  Sort  (cost=3323156.23..3323177.78 rows=8620 width=30) (actual time=6945.234..6946.043 rows=9006 loops=1)
               Sort Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Seq Scan on customer  (cost=0.00..3322592.77 rows=8620 width=30) (actual time=3149.140..6769.402 rows=63509 loops=1)
                     Filter: ((("substring"((c_phone)::text, 1, 2) = '21'::text) OR ("substring"((c_phone)::text, 1, 2) = '29'::text) OR ("substring"((c_phone)::text, 1, 2) = '26'::text) OR ("substring"((c_phone)::text, 1, 2) = '34'::text) OR ("substring"((c_phone)::text, 1, 2) = '14'::text) OR ("substring"((c_phone)::text, 1, 2) = '15'::text) OR ("substring"((c_phone)::text, 1, 2) = '17'::text)) AND (c_acctbal > $0) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..40.32 rows=19 width=124) (actual time=0.003..0.003 rows=1 loops=191129)
                             Index Cond: (o_custkey = $1)
 Total runtime: 6949.355 ms
(14 rows)

