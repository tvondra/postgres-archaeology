query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191614.67..191615.35 rows=1 width=236) (actual time=2250.979..2251.339 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191614.67..191618.73 rows=6 width=236) (actual time=2250.978..2251.337 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=191614.67..191617.55 rows=24 width=236) (actual time=2250.949..2251.312 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=190614.62..190614.63 rows=6 width=236) (actual time=2243.164..2243.165 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=190614.37..190614.54 rows=6 width=236) (actual time=2243.138..2243.146 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.49 rows=1482522 width=25) (actual time=0.106..592.878 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 17.178 ms
 Execution Time: 2252.234 ms
(20 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191614.67..191615.35 rows=1 width=236) (actual time=2025.653..2025.725 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191614.67..191618.73 rows=6 width=236) (actual time=2025.652..2025.724 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=191614.67..191617.55 rows=24 width=236) (actual time=2025.616..2025.693 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=190614.62..190614.63 rows=6 width=236) (actual time=2020.212..2020.213 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=190614.37..190614.54 rows=6 width=236) (actual time=2020.189..2020.196 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.49 rows=1482522 width=25) (actual time=0.036..317.485 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 0.806 ms
 Execution Time: 2025.807 ms
(20 rows)

query 2 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18924.44..18924.44 rows=1 width=192) (actual time=174.603..174.617 rows=100 loops=1)
   ->  Sort  (cost=18924.44..18924.44 rows=1 width=192) (actual time=174.602..174.610 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=15.08..18924.43 rows=1 width=192) (actual time=5.203..174.243 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.451..0.457 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.265..0.266 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.181..0.183 rows=25 loops=1)
               ->  Materialize  (cost=15.08..18921.73 rows=1 width=170) (actual time=0.457..34.688 rows=489 loops=5)
                     ->  Nested Loop  (cost=15.08..18921.72 rows=1 width=170) (actual time=2.280..172.938 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.80..18920.45 rows=1 width=34) (actual time=1.897..132.460 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5471.92 rows=830 width=30) (actual time=0.336..26.218 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=14.38..16.19 rows=1 width=14) (actual time=0.001..0.002 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.94..13.95 rows=1 width=32) (actual time=0.129..0.129 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.97..13.94 rows=1 width=6) (actual time=0.116..0.127 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.97..12.83 rows=4 width=10) (actual time=0.098..0.124 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.83..12.21 rows=4 width=10) (actual time=0.096..0.118 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.089..0.090 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.41..2.43 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.082..0.082 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 22.748 ms
 Execution Time: 175.189 ms
(47 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18924.44..18924.44 rows=1 width=192) (actual time=23.230..23.244 rows=100 loops=1)
   ->  Sort  (cost=18924.44..18924.44 rows=1 width=192) (actual time=23.230..23.237 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=15.08..18924.43 rows=1 width=192) (actual time=0.167..22.920 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.009..0.014 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
               ->  Materialize  (cost=15.08..18921.73 rows=1 width=170) (actual time=0.012..4.527 rows=489 loops=5)
                     ->  Nested Loop  (cost=15.08..18921.72 rows=1 width=170) (actual time=0.058..22.362 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.80..18920.45 rows=1 width=34) (actual time=0.055..21.292 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5471.92 rows=830 width=30) (actual time=0.006..6.344 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=14.38..16.19 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.94..13.95 rows=1 width=32) (actual time=0.017..0.017 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.97..13.94 rows=1 width=6) (actual time=0.012..0.015 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.97..12.83 rows=4 width=10) (actual time=0.005..0.014 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.83..12.21 rows=4 width=10) (actual time=0.004..0.010 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.41..2.43 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.002..0.002 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 2.308 ms
 Execution Time: 23.303 ms
(47 rows)

query 3 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234807.31..234807.33 rows=10 width=44) (actual time=1108.723..1110.082 rows=10 loops=1)
   ->  Sort  (cost=234807.31..235598.64 rows=316532 width=44) (actual time=1108.722..1110.080 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=179977.86..227967.16 rows=316532 width=44) (actual time=1090.663..1107.232 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179977.86..220053.86 rows=316532 width=44) (actual time=1090.657..1098.294 rows=12054 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=178977.80..181351.79 rows=79133 width=44) (actual time=1081.654..1085.506 rows=2411 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=178977.80..179175.63 rows=79133 width=24) (actual time=1081.633..1081.910 rows=6107 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 632kB
                                 Worker 0:  Sort Method: quicksort  Memory: 668kB
                                 Worker 1:  Sort Method: quicksort  Memory: 646kB
                                 Worker 2:  Sort Method: quicksort  Memory: 696kB
                                 Worker 3:  Sort Method: quicksort  Memory: 705kB
                                 ->  Parallel Hash Join  (cost=37915.28..172539.54 rows=79133 width=24) (actual time=257.002..1079.189 rows=6107 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.49 rows=814813 width=16) (actual time=1.663..755.278 rows=652375 loops=5)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 547868
                                       ->  Parallel Hash  (cost=37327.87..37327.87 rows=46993 width=12) (actual time=253.984..253.986 rows=29213 loops=5)
                                             Buckets: 262144  Batches: 1  Memory Usage: 8960kB
                                             ->  Parallel Hash Join  (cost=4535.46..37327.87 rows=46993 width=12) (actual time=22.480..244.927 rows=29213 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=233523 width=16) (actual time=0.630..192.514 rows=144455 loops=5)
                                                         Filter: (o_orderdate < '1995-03-07'::date)
                                                         Rows Removed by Filter: 155545
                                                   ->  Parallel Hash  (cost=4378.25..4378.25 rows=12577 width=4) (actual time=21.720..21.721 rows=6028 loops=5)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1536kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12577 width=4) (actual time=0.090..20.044 rows=6028 loops=5)
                                                               Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                               Rows Removed by Filter: 23972
 Planning Time: 24.437 ms
 Execution Time: 1110.911 ms
(37 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234807.31..234807.33 rows=10 width=44) (actual time=461.073..462.847 rows=10 loops=1)
   ->  Sort  (cost=234807.31..235598.64 rows=316532 width=44) (actual time=461.072..462.845 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=179977.86..227967.16 rows=316532 width=44) (actual time=442.290..460.023 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179977.86..220053.86 rows=316532 width=44) (actual time=442.284..450.889 rows=12054 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=178977.80..181351.79 rows=79133 width=44) (actual time=437.227..441.122 rows=2411 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=178977.80..179175.63 rows=79133 width=24) (actual time=437.211..437.489 rows=6107 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 691kB
                                 Worker 0:  Sort Method: quicksort  Memory: 555kB
                                 Worker 1:  Sort Method: quicksort  Memory: 641kB
                                 Worker 2:  Sort Method: quicksort  Memory: 682kB
                                 Worker 3:  Sort Method: quicksort  Memory: 778kB
                                 ->  Parallel Hash Join  (cost=37915.28..172539.54 rows=79133 width=24) (actual time=98.615..435.254 rows=6107 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.49 rows=814813 width=16) (actual time=0.096..261.080 rows=652375 loops=5)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 547868
                                       ->  Parallel Hash  (cost=37327.87..37327.87 rows=46993 width=12) (actual time=97.715..97.718 rows=29213 loops=5)
                                             Buckets: 262144  Batches: 1  Memory Usage: 8960kB
                                             ->  Parallel Hash Join  (cost=4535.46..37327.87 rows=46993 width=12) (actual time=8.803..84.656 rows=29213 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=233523 width=16) (actual time=0.010..50.726 rows=144455 loops=5)
                                                         Filter: (o_orderdate < '1995-03-07'::date)
                                                         Rows Removed by Filter: 155545
                                                   ->  Parallel Hash  (cost=4378.25..4378.25 rows=12577 width=4) (actual time=8.686..8.687 rows=6028 loops=5)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1536kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12577 width=4) (actual time=0.013..5.775 rows=6028 loops=5)
                                                               Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                               Rows Removed by Filter: 23972
 Planning Time: 1.783 ms
 Execution Time: 462.922 ms
(37 rows)

query 4 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=60967.46..60967.84 rows=1 width=24) (actual time=927.131..963.873 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=60967.46..60969.36 rows=5 width=24) (actual time=927.130..963.871 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Gather Merge  (cost=60967.46..60969.23 rows=15 width=24) (actual time=927.122..963.864 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Sort  (cost=59967.42..59967.43 rows=5 width=24) (actual time=920.046..920.049 rows=4 loops=4)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=59967.31..59967.36 rows=5 width=24) (actual time=920.026..920.029 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Parallel Hash Semi Join  (cost=33203.03..59873.49 rows=18764 width=16) (actual time=868.884..917.727 rows=12850 loops=4)
                                 Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=916.64..27329.09 rows=18764 width=20) (actual time=13.011..427.778 rows=13993 loops=4)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=5822
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..902.10 rows=58167 width=0) (actual time=8.631..8.632 rows=55973 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Parallel Hash  (cost=26035.23..26035.23 rows=500093 width=4) (actual time=397.548..397.548 rows=948324 loops=4)
                                       Buckets: 1048576 (originally 2097152)  Batches: 8 (originally 1)  Memory Usage: 26880kB
                                       ->  Parallel Index Only Scan using q21_idx_2 on lineitem  (cost=0.43..26035.23 rows=500093 width=4) (actual time=0.594..156.803 rows=948324 loops=4)
                                             Heap Fetches: 0
 Planning Time: 21.135 ms
 Execution Time: 964.584 ms
(27 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=60967.46..60967.84 rows=1 width=24) (actual time=468.708..506.843 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=60967.46..60969.36 rows=5 width=24) (actual time=468.707..506.841 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Gather Merge  (cost=60967.46..60969.23 rows=15 width=24) (actual time=468.699..506.834 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Sort  (cost=59967.42..59967.43 rows=5 width=24) (actual time=464.578..464.581 rows=4 loops=4)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=59967.31..59967.36 rows=5 width=24) (actual time=464.559..464.562 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Parallel Hash Semi Join  (cost=33203.03..59873.49 rows=18764 width=16) (actual time=412.075..462.240 rows=12850 loops=4)
                                 Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=916.64..27329.09 rows=18764 width=20) (actual time=7.928..27.211 rows=13993 loops=4)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=5762
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..902.10 rows=58167 width=0) (actual time=4.437..4.437 rows=55973 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Parallel Hash  (cost=26035.23..26035.23 rows=500093 width=4) (actual time=343.177..343.177 rows=948324 loops=4)
                                       Buckets: 1048576 (originally 2097152)  Batches: 8 (originally 1)  Memory Usage: 26880kB
                                       ->  Parallel Index Only Scan using q21_idx_2 on lineitem  (cost=0.43..26035.23 rows=500093 width=4) (actual time=0.679..104.073 rows=948324 loops=4)
                                             Heap Fetches: 0
 Planning Time: 1.067 ms
 Execution Time: 506.907 ms
(27 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=73231.99..73231.99 rows=1 width=58) (actual time=801.514..808.852 rows=1 loops=1)
   ->  Sort  (cost=73231.99..73232.05 rows=25 width=58) (actual time=801.513..808.850 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=73193.30..73231.87 rows=25 width=58) (actual time=800.820..808.839 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=73193.30..73230.99 rows=75 width=58) (actual time=800.634..808.819 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=72193.26..72222.14 rows=25 width=58) (actual time=794.031..794.706 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=72193.26..72198.98 rows=2285 width=38) (actual time=793.859..793.941 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 192kB
                                 Worker 0:  Sort Method: quicksort  Memory: 195kB
                                 Worker 1:  Sort Method: quicksort  Memory: 196kB
                                 Worker 2:  Sort Method: quicksort  Memory: 201kB
                                 ->  Hash Join  (cost=8710.89..72065.78 rows=2285 width=38) (actual time=70.548..792.411 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=8237.89..71291.78 rows=57333 width=50) (actual time=66.787..776.505 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=8237.33..35771.53 rows=14331 width=38) (actual time=66.093..565.962 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=3497.20..30702.99 rows=71653 width=8) (actual time=30.524..507.198 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6388
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3441.67 rows=222124 width=0) (actual time=26.116..26.117 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=35.417..35.420 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.236..33.170 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.102..28.480 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.127..0.129 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.121..0.127 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.044..0.046 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.072..0.073 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.070..0.071 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.44 rows=4 width=20) (actual time=0.016..0.017 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.614..3.614 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.089..2.255 rows=10000 loops=4)
 Planning Time: 31.536 ms
 Execution Time: 809.743 ms
(50 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=73231.99..73231.99 rows=1 width=58) (actual time=134.971..145.594 rows=1 loops=1)
   ->  Sort  (cost=73231.99..73232.05 rows=25 width=58) (actual time=134.970..145.592 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=73193.30..73231.87 rows=25 width=58) (actual time=134.215..145.581 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=73193.30..73230.99 rows=75 width=58) (actual time=134.026..145.554 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=72193.26..72222.14 rows=25 width=58) (actual time=130.760..131.466 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=72193.26..72198.98 rows=2285 width=38) (actual time=130.586..130.671 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 196kB
                                 Worker 0:  Sort Method: quicksort  Memory: 195kB
                                 Worker 1:  Sort Method: quicksort  Memory: 197kB
                                 Worker 2:  Sort Method: quicksort  Memory: 195kB
                                 ->  Hash Join  (cost=8710.89..72065.78 rows=2285 width=38) (actual time=35.819..129.703 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=8237.89..71291.78 rows=57333 width=50) (actual time=32.890..118.395 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=8237.33..35771.53 rows=14331 width=38) (actual time=32.851..69.777 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=3497.20..30702.99 rows=71653 width=8) (actual time=21.202..44.672 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6582
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3441.67 rows=222124 width=0) (actual time=17.207..17.207 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.519..11.522 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.044..9.230 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.008..3.380 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.030..0.031 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.023..0.029 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.009..0.010 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.44 rows=4 width=20) (actual time=0.003..0.004 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.827..2.828 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.016..1.485 rows=10000 loops=4)
 Planning Time: 3.996 ms
 Execution Time: 145.686 ms
(50 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116461.64..116461.65 rows=1 width=32) (actual time=1092.151..1093.900 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=116461.64..116461.65 rows=1 width=32) (actual time=1092.150..1093.898 rows=1 loops=1)
         ->  Gather  (cost=116461.20..116461.61 rows=4 width=32) (actual time=1092.136..1093.889 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=115461.20..115461.21 rows=1 width=32) (actual time=1080.087..1080.088 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=23369.76..115311.24 rows=29992 width=12) (actual time=131.234..1061.759 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13249
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..23339.77 rows=119969 width=0) (actual time=125.899..125.899 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 16.316 ms
 Execution Time: 1094.753 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116461.64..116461.65 rows=1 width=32) (actual time=212.110..213.872 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=116461.64..116461.65 rows=1 width=32) (actual time=212.108..213.870 rows=1 loops=1)
         ->  Gather  (cost=116461.20..116461.61 rows=4 width=32) (actual time=206.137..213.853 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=115461.20..115461.21 rows=1 width=32) (actual time=202.130..202.131 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=23369.76..115311.24 rows=29992 width=12) (actual time=105.614..194.020 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=10737
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..23339.77 rows=119969 width=0) (actual time=97.040..97.041 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.805 ms
 Execution Time: 213.919 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=176451.93..176452.09 rows=1 width=92) (actual time=1129.179..1130.685 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=176451.93..177409.23 rows=6066 width=92) (actual time=1129.178..1130.683 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=176451.93..177227.28 rows=6064 width=92) (actual time=1128.994..1130.670 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=175451.88..175504.94 rows=1516 width=92) (actual time=1118.532..1118.920 rows=4 loops=5)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=175451.88..175455.67 rows=1516 width=72) (actual time=1118.385..1118.435 rows=1012 loops=5)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 220kB
                           Worker 0:  Sort Method: quicksort  Memory: 210kB
                           Worker 1:  Sort Method: quicksort  Memory: 209kB
                           Worker 2:  Sort Method: quicksort  Memory: 207kB
                           Worker 3:  Sort Method: quicksort  Memory: 201kB
                           ->  Hash Join  (cost=38272.27..175371.79 rows=1516 width=72) (actual time=281.635..1117.371 rows=1146 loops=5)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 1165
                                 ->  Parallel Hash Join  (cost=37907.17..174803.66 rows=36572 width=46) (actual time=277.043..1107.476 rows=29021 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135064.19 rows=457158 width=24) (actual time=0.520..780.162 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Parallel Hash  (cost=37423.29..37423.29 rows=38710 width=30) (actual time=275.926..275.928 rows=23695 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 8544kB
                                             ->  Parallel Hash Join  (cost=4477.77..37423.29 rows=38710 width=30) (actual time=26.528..267.009 rows=23695 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.451..194.827 rows=300000 loops=5)
                                                   ->  Parallel Hash  (cost=4415.27..4415.27 rows=5000 width=30) (actual time=25.976..25.978 rows=2379 loops=5)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 960kB
                                                         ->  Hash Join  (cost=1.40..4415.27 rows=5000 width=30) (actual time=0.363..25.076 rows=2379 loops=5)
                                                               Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.085..21.618 rows=30000 loops=5)
                                                               ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.271..0.271 rows=2 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.010 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                                 ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=2.882..2.883 rows=794 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                       ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.285..2.773 rows=794 loops=5)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.081..1.409 rows=10000 loops=5)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.200..0.201 rows=2 loops=5)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.196..0.198 rows=2 loops=5)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 31.514 ms
 Execution Time: 1131.494 ms
(51 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=176451.93..176452.09 rows=1 width=92) (actual time=437.682..439.296 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=176451.93..177409.23 rows=6066 width=92) (actual time=437.681..439.295 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=176451.93..177227.28 rows=6064 width=92) (actual time=437.505..439.280 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=175451.88..175504.94 rows=1516 width=92) (actual time=429.594..429.984 rows=4 loops=5)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=175451.88..175455.67 rows=1516 width=72) (actual time=429.446..429.494 rows=1015 loops=5)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 217kB
                           Worker 0:  Sort Method: quicksort  Memory: 197kB
                           Worker 1:  Sort Method: quicksort  Memory: 168kB
                           Worker 2:  Sort Method: quicksort  Memory: 235kB
                           Worker 3:  Sort Method: quicksort  Memory: 207kB
                           ->  Hash Join  (cost=38272.27..175371.79 rows=1516 width=72) (actual time=105.341..428.591 rows=1146 loops=5)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 1165
                                 ->  Parallel Hash Join  (cost=37907.17..174803.66 rows=36572 width=46) (actual time=102.084..417.617 rows=29021 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135064.19 rows=457158 width=24) (actual time=0.052..255.640 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Parallel Hash  (cost=37423.29..37423.29 rows=38710 width=30) (actual time=101.642..101.645 rows=23695 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 8576kB
                                             ->  Parallel Hash Join  (cost=4477.77..37423.29 rows=38710 width=30) (actual time=10.100..91.082 rows=23695 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.013..26.925 rows=300000 loops=5)
                                                   ->  Parallel Hash  (cost=4415.27..4415.27 rows=5000 width=30) (actual time=9.009..9.011 rows=2379 loops=5)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 928kB
                                                         ->  Hash Join  (cost=1.40..4415.27 rows=5000 width=30) (actual time=0.209..8.405 rows=2379 loops=5)
                                                               Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.007..3.383 rows=30000 loops=5)
                                                               ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.192..0.193 rows=2 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.010 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                                 ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=2.801..2.802 rows=794 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                       ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.028..2.696 rows=794 loops=5)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.011..1.438 rows=10000 loops=5)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.014..0.014 rows=2 loops=5)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.011..0.012 rows=2 loops=5)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 3.077 ms
 Execution Time: 439.379 ms
(51 rows)

query 8 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=46847.25..46847.39 rows=1 width=40) (actual time=438.425..443.501 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=46847.25..47198.52 rows=2392 width=40) (actual time=438.424..443.499 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=46847.25..47119.77 rows=1994 width=72) (actual time=438.221..443.489 rows=4 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=45847.22..45889.59 rows=997 width=72) (actual time=432.514..432.708 rows=2 loops=3)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=45847.22..45849.71 rows=997 width=46) (actual time=432.316..432.358 rows=828 loops=3)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 89kB
                           Worker 0:  Sort Method: quicksort  Memory: 91kB
                           Worker 1:  Sort Method: quicksort  Memory: 88kB
                           ->  Hash Join  (cost=41126.80..45797.56 rows=997 width=46) (actual time=396.833..431.862 rows=828 loops=3)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Parallel Hash Join  (cost=41125.23..45787.95 rows=997 width=20) (actual time=396.728..431.370 rows=828 loops=3)
                                       Hash Cond: (customer.c_custkey = orders.o_custkey)
                                       ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.830..34.145 rows=9984 loops=3)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.437..28.217 rows=50000 loops=3)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.379..0.380 rows=5 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.374..0.379 rows=5 loops=3)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.006..0.007 rows=25 loops=3)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.360..0.361 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.356..0.357 rows=1 loops=3)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                                       ->  Parallel Hash  (cost=41074.50..41074.50 rows=3858 width=24) (actual time=395.144..395.147 rows=4032 loops=3)
                                             Buckets: 16384  Batches: 1  Memory Usage: 928kB
                                             ->  Hash Join  (cost=7118.17..41074.50 rows=3858 width=24) (actual time=179.345..392.941 rows=4032 loops=3)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Hash Join  (cost=6670.17..40616.34 rows=3872 width=24) (actual time=174.946..386.612 rows=4032 loops=3)
                                                         Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=145978 width=12) (actual time=0.549..185.312 rows=152421 loops=3)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 347579
                                                         ->  Parallel Hash  (cost=6545.84..6545.84 rows=9947 width=20) (actual time=174.135..174.136 rows=13231 loops=3)
                                                               Buckets: 65536  Batches: 1  Memory Usage: 2752kB
                                                               ->  Nested Loop  (cost=0.98..6545.84 rows=9947 width=20) (actual time=0.831..168.462 rows=13231 loops=3)
                                                                     ->  Parallel Index Only Scan using q2_idx_1 on part  (cost=0.42..5425.73 rows=332 width=4) (actual time=0.283..13.353 rows=440 loops=3)
                                                                           Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                                           Heap Fetches: 0
                                                                     ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.06 rows=31 width=24) (actual time=0.288..0.347 rows=30 loops=1320)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=4.277..4.277 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.118..3.078 rows=10000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.079..0.079 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.071..0.074 rows=25 loops=3)
 Planning Time: 35.148 ms
 Execution Time: 444.205 ms
(56 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=46847.25..46847.39 rows=1 width=40) (actual time=125.619..133.301 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=46847.25..47198.52 rows=2392 width=40) (actual time=125.618..133.300 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=46847.25..47119.77 rows=1994 width=72) (actual time=125.427..133.290 rows=4 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=45847.22..45889.59 rows=997 width=72) (actual time=122.824..123.016 rows=2 loops=3)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=45847.22..45849.71 rows=997 width=46) (actual time=122.625..122.666 rows=828 loops=3)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 90kB
                           Worker 0:  Sort Method: quicksort  Memory: 88kB
                           Worker 1:  Sort Method: quicksort  Memory: 90kB
                           ->  Hash Join  (cost=41126.80..45797.56 rows=997 width=46) (actual time=109.489..122.251 rows=828 loops=3)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Parallel Hash Join  (cost=41125.23..45787.95 rows=997 width=20) (actual time=109.431..121.905 rows=828 loops=3)
                                       Hash Cond: (customer.c_custkey = orders.o_custkey)
                                       ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.044..11.084 rows=9984 loops=3)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.005..3.922 rows=50000 loops=3)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.032..0.033 rows=5 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.027..0.032 rows=5 loops=3)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.004..0.005 rows=25 loops=3)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.019..0.020 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.017..0.018 rows=1 loops=3)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                                       ->  Parallel Hash  (cost=41074.50..41074.50 rows=3858 width=24) (actual time=109.208..109.211 rows=4032 loops=3)
                                             Buckets: 16384  Batches: 1  Memory Usage: 896kB
                                             ->  Hash Join  (cost=7118.17..41074.50 rows=3858 width=24) (actual time=16.113..107.653 rows=4032 loops=3)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Hash Join  (cost=6670.17..40616.34 rows=3872 width=24) (actual time=13.389..103.501 rows=4032 loops=3)
                                                         Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=145978 width=12) (actual time=0.008..69.185 rows=152421 loops=3)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 347579
                                                         ->  Parallel Hash  (cost=6545.84..6545.84 rows=9947 width=20) (actual time=13.254..13.255 rows=13231 loops=3)
                                                               Buckets: 65536  Batches: 1  Memory Usage: 2720kB
                                                               ->  Nested Loop  (cost=0.98..6545.84 rows=9947 width=20) (actual time=0.084..9.658 rows=13231 loops=3)
                                                                     ->  Parallel Index Only Scan using q2_idx_1 on part  (cost=0.42..5425.73 rows=332 width=4) (actual time=0.063..3.916 rows=440 loops=3)
                                                                           Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                                           Heap Fetches: 0
                                                                     ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.06 rows=31 width=24) (actual time=0.005..0.009 rows=30 loops=1320)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.640..2.640 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.015..1.474 rows=10000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.031..0.031 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.023..0.026 rows=25 loops=3)
 Planning Time: 4.146 ms
 Execution Time: 133.387 ms
(56 rows)

query 9 run 1
SET
SET
SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=70394.45..70394.89 rows=1 width=66) (actual time=1053.434..1061.447 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=70394.45..97065.81 rows=60150 width=66) (actual time=1053.432..1061.445 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=70394.45..94208.69 rows=180450 width=66) (actual time=1052.991..1061.434 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=69394.41..72005.77 rows=60150 width=66) (actual time=1043.890..1046.125 rows=6 loops=4)
                     Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=69394.41..69589.25 rows=77937 width=57) (actual time=1043.627..1044.073 rows=2811 loops=4)
                           Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                           Sort Method: quicksort  Memory: 14463kB
                           Worker 0:  Sort Method: quicksort  Memory: 14663kB
                           Worker 1:  Sort Method: quicksort  Memory: 14360kB
                           Worker 2:  Sort Method: quicksort  Memory: 14638kB
                           ->  Parallel Hash Join  (cost=29693.30..63062.02 rows=77937 width=57) (actual time=691.951..959.456 rows=81482 loops=4)
                                 Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=1.088..146.898 rows=375000 loops=4)
                                 ->  Parallel Hash  (cost=28938.28..28938.28 rows=60401 width=53) (actual time=690.380..690.508 rows=81482 loops=4)
                                       Buckets: 524288 (originally 262144)  Batches: 1 (originally 1)  Memory Usage: 36768kB
                                       ->  Hash Join  (cost=14925.58..28938.28 rows=60401 width=53) (actual time=535.458..653.244 rows=81482 loops=4)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=14924.02..28751.29 rows=60401 width=31) (actual time=535.392..637.668 rows=81482 loops=4)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Hash Join  (cost=14476.02..28144.10 rows=60619 width=35) (actual time=531.491..616.981 rows=81482 loops=4)
                                                         Hash Cond: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND (partsupp.ps_partkey = lineitem.l_partkey))
                                                         ->  Parallel Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..12168.42 rows=200000 width=14) (actual time=0.678..35.852 rows=200000 loops=4)
                                                               Heap Fetches: 0
                                                         ->  Parallel Hash  (cost=13302.32..13302.32 rows=78218 width=33) (actual time=530.461..530.462 rows=81482 loops=4)
                                                               Buckets: 524288 (originally 262144)  Batches: 1 (originally 1)  Memory Usage: 29120kB
                                                               ->  Nested Loop  (cost=0.98..13302.32 rows=78218 width=33) (actual time=2.882..494.201 rows=81482 loops=4)
                                                                     ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4760.87 rows=2607 width=4) (actual time=0.152..18.334 rows=2720 loops=4)
                                                                           Filter: ((p_name)::text ~~ '%navy%'::text)
                                                                           Rows Removed by Filter: 47280
                                                                           Heap Fetches: 0
                                                                     ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.97 rows=31 width=29) (actual time=0.147..0.170 rows=30 loops=10880)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.871..3.872 rows=10000 loops=4)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.075..2.626 rows=10000 loops=4)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.060..0.061 rows=25 loops=4)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.051..0.055 rows=25 loops=4)
 Planning Time: 39.413 ms
 Execution Time: 1062.237 ms
(45 rows)

SET
SET
SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=70394.45..70394.89 rows=1 width=66) (actual time=468.053..478.609 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=70394.45..97065.81 rows=60150 width=66) (actual time=468.052..478.607 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=70394.45..94208.69 rows=180450 width=66) (actual time=467.625..478.598 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=69394.41..72005.77 rows=60150 width=66) (actual time=463.678..464.815 rows=4 loops=4)
                     Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=69394.41..69589.25 rows=77937 width=57) (actual time=463.425..463.601 rows=1712 loops=4)
                           Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                           Sort Method: quicksort  Memory: 14511kB
                           Worker 0:  Sort Method: quicksort  Memory: 14555kB
                           Worker 1:  Sort Method: quicksort  Memory: 14496kB
                           Worker 2:  Sort Method: quicksort  Memory: 14562kB
                           ->  Parallel Hash Join  (cost=29693.30..63062.02 rows=77937 width=57) (actual time=227.462..382.176 rows=81482 loops=4)
                                 Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.006..31.281 rows=375000 loops=4)
                                 ->  Parallel Hash  (cost=28938.28..28938.28 rows=60401 width=53) (actual time=227.027..227.032 rows=81482 loops=4)
                                       Buckets: 524288 (originally 262144)  Batches: 1 (originally 1)  Memory Usage: 36768kB
                                       ->  Hash Join  (cost=14925.58..28938.28 rows=60401 width=53) (actual time=88.596..189.877 rows=81482 loops=4)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=14924.02..28751.29 rows=60401 width=31) (actual time=88.565..174.385 rows=81482 loops=4)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Hash Join  (cost=14476.02..28144.10 rows=60619 width=35) (actual time=85.805..154.981 rows=81482 loops=4)
                                                         Hash Cond: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND (partsupp.ps_partkey = lineitem.l_partkey))
                                                         ->  Parallel Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..12168.42 rows=200000 width=14) (actual time=0.055..20.630 rows=200000 loops=4)
                                                               Heap Fetches: 0
                                                         ->  Parallel Hash  (cost=13302.32..13302.32 rows=78218 width=33) (actual time=85.419..85.420 rows=81482 loops=4)
                                                               Buckets: 524288 (originally 262144)  Batches: 1 (originally 1)  Memory Usage: 29088kB
                                                               ->  Nested Loop  (cost=0.98..13302.32 rows=78218 width=33) (actual time=0.073..52.830 rows=81482 loops=4)
                                                                     ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4760.87 rows=2607 width=4) (actual time=0.051..10.716 rows=2720 loops=4)
                                                                           Filter: ((p_name)::text ~~ '%navy%'::text)
                                                                           Rows Removed by Filter: 47280
                                                                           Heap Fetches: 0
                                                                     ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.97 rows=31 width=29) (actual time=0.004..0.012 rows=30 loops=10880)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.722..2.722 rows=10000 loops=4)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.013..1.479 rows=10000 loops=4)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.024..0.025 rows=25 loops=4)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.015..0.019 rows=25 loops=4)
 Planning Time: 5.329 ms
 Execution Time: 478.698 ms
(45 rows)

query 10 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=85145.38..85145.43 rows=20 width=202) (actual time=743.765..748.327 rows=20 loops=1)
   ->  Sort  (cost=85145.38..85283.77 rows=55356 width=202) (actual time=743.764..748.323 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=82980.42..83672.37 rows=55356 width=202) (actual time=712.529..736.608 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=6887.44..82288.47 rows=55356 width=182) (actual time=63.710..616.463 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5887.44..75752.87 rows=17857 width=182) (actual time=56.415..662.743 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5885.88..75696.49 rows=17857 width=160) (actual time=56.300..653.791 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=882.63..70646.37 rows=17857 width=16) (actual time=16.136..595.101 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=882.07..27283.87 rows=18053 width=8) (actual time=15.478..357.574 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=4265
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..868.08 rows=55965 width=0) (actual time=11.503..11.504 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..2.39 rows=1 width=16) (actual time=0.015..0.016 rows=2 loops=57111)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=39.648..39.649 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.098..18.703 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.062..0.062 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.054..0.057 rows=25 loops=4)
 Planning Time: 25.018 ms
 Execution Time: 749.505 ms
(30 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=85145.38..85145.43 rows=20 width=202) (actual time=202.600..206.715 rows=20 loops=1)
   ->  Sort  (cost=85145.38..85283.77 rows=55356 width=202) (actual time=202.599..206.712 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=82980.42..83672.37 rows=55356 width=202) (actual time=170.765..195.103 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=6887.44..82288.47 rows=55356 width=182) (actual time=43.894..96.716 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5887.44..75752.87 rows=17857 width=182) (actual time=40.953..133.474 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5885.88..75696.49 rows=17857 width=160) (actual time=40.883..126.667 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=882.63..70646.37 rows=17857 width=16) (actual time=12.173..84.703 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=882.07..27283.87 rows=18053 width=8) (actual time=12.113..26.875 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=1586
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..868.08 rows=55965 width=0) (actual time=8.487..8.487 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..2.39 rows=1 width=16) (actual time=0.003..0.004 rows=2 loops=57111)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=28.239..28.240 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29344kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.008..7.936 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.018..0.018 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.013 rows=25 loops=4)
 Planning Time: 1.977 ms
 Execution Time: 207.116 ms
(30 rows)

query 11 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18315.97..18315.97 rows=1 width=36) (actual time=494.014..494.159 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Finalize Aggregate  (cost=7251.46..7251.48 rows=1 width=32) (actual time=17.856..17.953 rows=1 loops=1)
           ->  Gather  (cost=7251.24..7251.45 rows=2 width=32) (actual time=17.587..17.942 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=6251.24..6251.25 rows=1 width=32) (actual time=15.299..15.301 rows=1 loops=3)
                       ->  Nested Loop  (cost=2.16..6151.24 rows=13333 width=10) (actual time=0.104..12.198 rows=10960 loops=3)
                             ->  Hash Join  (cost=1.74..496.20 rows=167 width=4) (actual time=0.089..1.129 rows=137 loops=3)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.41..482.08 rows=4167 width=8) (actual time=0.028..0.834 rows=3333 loops=3)
                                         Heap Fetches: 0
                                   ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.018..0.019 rows=1 loops=3)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=3)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..33.06 rows=80 width=14) (actual time=0.005..0.070 rows=80 loops=411)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11064.49..11091.16 rows=10667 width=36) (actual time=494.013..494.060 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize HashAggregate  (cost=10451.16..11011.16 rows=10667 width=36) (actual time=483.087..493.897 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Gather  (cost=7284.57..10117.83 rows=26666 width=36) (actual time=441.257..449.148 rows=32150 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial HashAggregate  (cost=6284.57..6451.23 rows=13333 width=36) (actual time=435.749..440.842 rows=10717 loops=3)
                           Group Key: partsupp.ps_partkey
                           ->  Nested Loop  (cost=2.16..6151.24 rows=13333 width=14) (actual time=0.528..424.765 rows=10960 loops=3)
                                 ->  Hash Join  (cost=1.74..496.20 rows=167 width=4) (actual time=0.228..1.954 rows=137 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Parallel Index Only Scan using q2_idx_3 on supplier  (cost=0.41..482.08 rows=4167 width=8) (actual time=0.119..1.476 rows=3333 loops=3)
                                             Heap Fetches: 0
                                       ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.084..0.085 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.082..0.083 rows=1 loops=3)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 24
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..33.06 rows=80 width=18) (actual time=0.122..3.067 rows=80 loops=411)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 17.006 ms
 Execution Time: 495.349 ms
(45 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18315.97..18315.97 rows=1 width=36) (actual time=75.570..75.709 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Finalize Aggregate  (cost=7251.46..7251.48 rows=1 width=32) (actual time=17.393..17.487 rows=1 loops=1)
           ->  Gather  (cost=7251.24..7251.45 rows=2 width=32) (actual time=17.385..17.480 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=6251.24..6251.25 rows=1 width=32) (actual time=14.853..14.855 rows=1 loops=3)
                       ->  Nested Loop  (cost=2.16..6151.24 rows=13333 width=10) (actual time=0.190..11.794 rows=10960 loops=3)
                             ->  Hash Join  (cost=1.74..496.20 rows=167 width=4) (actual time=0.173..1.192 rows=137 loops=3)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.41..482.08 rows=4167 width=8) (actual time=0.027..0.817 rows=3333 loops=3)
                                         Heap Fetches: 0
                                   ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.103..0.103 rows=1 loops=3)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=3)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..33.06 rows=80 width=14) (actual time=0.005..0.067 rows=80 loops=411)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11064.49..11091.16 rows=10667 width=36) (actual time=75.569..75.614 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize HashAggregate  (cost=10451.16..11011.16 rows=10667 width=36) (actual time=64.765..75.457 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Gather  (cost=7284.57..10117.83 rows=26666 width=36) (actual time=22.824..31.319 rows=32181 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial HashAggregate  (cost=6284.57..6451.23 rows=13333 width=36) (actual time=20.658..25.794 rows=10727 loops=3)
                           Group Key: partsupp.ps_partkey
                           ->  Nested Loop  (cost=2.16..6151.24 rows=13333 width=14) (actual time=0.071..14.195 rows=10960 loops=3)
                                 ->  Hash Join  (cost=1.74..496.20 rows=167 width=4) (actual time=0.060..1.081 rows=137 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Parallel Index Only Scan using q2_idx_3 on supplier  (cost=0.41..482.08 rows=4167 width=8) (actual time=0.023..0.809 rows=3333 loops=3)
                                             Heap Fetches: 0
                                       ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=3)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 24
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..33.06 rows=80 width=18) (actual time=0.005..0.084 rows=80 loops=411)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.100 ms
 Execution Time: 76.099 ms
(45 rows)

query 12 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=43873.05..43873.57 rows=1 width=27) (actual time=305.977..306.706 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=43873.05..43876.68 rows=7 width=27) (actual time=305.975..306.704 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=43873.05..43876.40 rows=28 width=27) (actual time=305.963..306.696 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=42872.99..42873.01 rows=7 width=27) (actual time=293.844..293.846 rows=2 loops=5)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     Worker 3:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=42872.82..42872.89 rows=7 width=27) (actual time=293.812..293.813 rows=2 loops=5)
                           Group Key: lineitem.l_shipmode
                           ->  Nested Loop  (cost=0.85..42745.23 rows=7291 width=27) (actual time=0.464..289.373 rows=6191 loops=5)
                                 ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..13579.12 rows=7291 width=15) (actual time=0.222..39.365 rows=6191 loops=5)
                                       Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                       Rows Removed by Filter: 15496
                                       Heap Fetches: 0
                                 ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=20) (actual time=0.040..0.040 rows=1 loops=30953)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 23.373 ms
 Execution Time: 307.532 ms
(25 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=43873.05..43873.57 rows=1 width=27) (actual time=52.049..55.793 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=43873.05..43876.68 rows=7 width=27) (actual time=52.048..55.790 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=43873.05..43876.40 rows=28 width=27) (actual time=52.040..55.785 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=42872.99..42873.01 rows=7 width=27) (actual time=47.523..47.524 rows=2 loops=5)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     Worker 3:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=42872.82..42872.89 rows=7 width=27) (actual time=47.493..47.494 rows=2 loops=5)
                           Group Key: lineitem.l_shipmode
                           ->  Nested Loop  (cost=0.85..42745.23 rows=7291 width=27) (actual time=0.046..44.729 rows=6191 loops=5)
                                 ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..13579.12 rows=7291 width=15) (actual time=0.031..24.836 rows=6191 loops=5)
                                       Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                       Rows Removed by Filter: 15496
                                       Heap Fetches: 0
                                 ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=30953)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 1.471 ms
 Execution Time: 56.119 ms
(25 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=65023.89..65023.89 rows=1 width=16) (actual time=1450.868..1450.871 rows=1 loops=1)
   ->  Sort  (cost=65023.89..65024.39 rows=200 width=16) (actual time=1450.866..1450.868 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=65020.89..65022.89 rows=200 width=16) (actual time=1450.842..1450.849 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=61270.89..62770.89 rows=150000 width=12) (actual time=1409.958..1433.668 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4953.42..53771.64 rows=1499850 width=8) (actual time=34.743..1048.894 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.897..624.170 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=33.460..33.461 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.357..16.780 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 16.840 ms
 Execution Time: 1452.607 ms
(19 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=65023.89..65023.89 rows=1 width=16) (actual time=1253.225..1253.227 rows=1 loops=1)
   ->  Sort  (cost=65023.89..65024.39 rows=200 width=16) (actual time=1253.223..1253.225 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=65020.89..65022.89 rows=200 width=16) (actual time=1253.199..1253.206 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=61270.89..62770.89 rows=150000 width=12) (actual time=1212.952..1236.196 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4953.42..53771.64 rows=1499850 width=8) (actual time=28.565..867.764 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.012..472.775 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=28.084..28.084 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.028..12.809 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.785 ms
 Execution Time: 1254.500 ms
(19 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=82265.57..82265.59 rows=1 width=32) (actual time=529.110..531.677 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=82265.57..82265.59 rows=1 width=32) (actual time=529.109..531.675 rows=1 loops=1)
         ->  Gather  (cost=82265.12..82265.53 rows=4 width=64) (actual time=529.084..531.654 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=81265.12..81265.13 rows=1 width=64) (actual time=516.971..516.973 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7339.22..80932.70 rows=18995 width=33) (actual time=54.592..501.662 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1365.23..74908.84 rows=18995 width=16) (actual time=20.948..452.882 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8883
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1346.23 rows=75980 width=0) (actual time=13.790..13.791 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=33.237..33.237 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.078..19.776 rows=40000 loops=5)
 Planning Time: 20.807 ms
 Execution Time: 532.353 ms
(18 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=82265.57..82265.59 rows=1 width=32) (actual time=114.854..120.567 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=82265.57..82265.59 rows=1 width=32) (actual time=114.853..120.564 rows=1 loops=1)
         ->  Gather  (cost=82265.12..82265.53 rows=4 width=64) (actual time=112.081..120.544 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=81265.12..81265.13 rows=1 width=64) (actual time=108.282..108.285 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7339.22..80932.70 rows=18995 width=33) (actual time=38.917..100.731 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1365.23..74908.84 rows=18995 width=16) (actual time=15.199..68.959 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=7470
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1346.23 rows=75980 width=0) (actual time=8.506..8.507 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=23.267..23.267 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14240kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.011..7.684 rows=40000 loops=5)
 Planning Time: 1.134 ms
 Execution Time: 120.609 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=242394.51..242507.42 rows=1 width=103) (actual time=1262.768..1270.234 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122551.99..122552.00 rows=1 width=32) (actual time=234.448..234.450 rows=1 loops=1)
           ->  HashAggregate  (cost=122301.09..122426.54 rows=10036 width=36) (actual time=231.185..233.827 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4072.54..120033.67 rows=226742 width=16) (actual time=27.031..119.039 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4015.85 rows=226742 width=0) (actual time=18.166..18.166 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119842.51..125487.91 rows=50 width=103) (actual time=1262.767..1270.230 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119842.23..125326.28 rows=50 width=36) (actual time=1262.155..1269.617 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119842.23..124648.85 rows=40144 width=36) (actual time=1001.478..1017.274 rows=41811 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118842.17..118867.26 rows=10036 width=36) (actual time=991.125..991.910 rows=8890 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1158kB
                           Worker 0:  Sort Method: quicksort  Memory: 1156kB
                           Worker 1:  Sort Method: quicksort  Memory: 1157kB
                           Worker 2:  Sort Method: quicksort  Memory: 1160kB
                           Worker 3:  Sort Method: quicksort  Memory: 1157kB
                           ->  Partial HashAggregate  (cost=118049.68..118175.13 rows=10036 width=36) (actual time=982.391..988.740 rows=9895 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=4072.54..117482.82 rows=56686 width=16) (actual time=42.957..932.247 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13593
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4015.85 rows=226742 width=0) (actual time=37.456..37.456 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.22 rows=1 width=71) (actual time=0.605..0.605 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 18.985 ms
 Execution Time: 1271.017 ms
(36 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=242394.51..242507.42 rows=1 width=103) (actual time=424.320..435.132 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122551.99..122552.00 rows=1 width=32) (actual time=218.740..218.741 rows=1 loops=1)
           ->  HashAggregate  (cost=122301.09..122426.54 rows=10036 width=36) (actual time=215.505..218.119 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4072.54..120033.67 rows=226742 width=16) (actual time=26.951..107.153 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4015.85 rows=226742 width=0) (actual time=18.113..18.114 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119842.51..125487.91 rows=50 width=103) (actual time=424.318..435.129 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119842.23..125326.28 rows=50 width=36) (actual time=424.298..435.108 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119842.23..124648.85 rows=40144 width=36) (actual time=179.035..198.124 rows=41763 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118842.17..118867.26 rows=10036 width=36) (actual time=171.921..172.690 rows=8892 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1159kB
                           Worker 0:  Sort Method: quicksort  Memory: 1153kB
                           Worker 1:  Sort Method: quicksort  Memory: 1157kB
                           Worker 2:  Sort Method: quicksort  Memory: 1154kB
                           Worker 3:  Sort Method: quicksort  Memory: 1159kB
                           ->  Partial HashAggregate  (cost=118049.68..118175.13 rows=10036 width=36) (actual time=163.612..168.702 rows=9882 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=4072.54..117482.82 rows=56686 width=16) (actual time=33.800..130.560 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=14456
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4015.85 rows=226742 width=0) (actual time=25.970..25.970 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.22 rows=1 width=71) (actual time=0.016..0.016 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 1.147 ms
 Execution Time: 435.495 ms
(36 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=30881.15..30881.15 rows=1 width=44) (actual time=432.438..432.904 rows=1 loops=1)
   ->  Sort  (cost=30881.15..30921.71 rows=16223 width=44) (actual time=432.437..432.902 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=29870.18..30800.04 rows=16223 width=44) (actual time=383.460..429.150 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=29870.18..30023.71 rows=61410 width=40) (actual time=383.438..392.319 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Gather  (cost=7690.69..24986.19 rows=61410 width=40) (actual time=43.526..112.320 rows=117930 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Parallel Hash Join  (cost=6690.69..17845.19 rows=15352 width=40) (actual time=35.033..103.457 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..11240.43 rows=100000 width=8) (actual time=6.921..57.795 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.534..6.248 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12794 width=40) (actual time=27.929..27.930 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12794 width=40) (actual time=0.142..25.468 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 17.131 ms
 Execution Time: 433.690 ms
(29 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=30881.15..30881.15 rows=1 width=44) (actual time=398.703..399.174 rows=1 loops=1)
   ->  Sort  (cost=30881.15..30921.71 rows=16223 width=44) (actual time=398.701..399.172 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=29870.18..30800.04 rows=16223 width=44) (actual time=350.245..395.392 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=29870.18..30023.71 rows=61410 width=40) (actual time=350.224..358.800 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Gather  (cost=7690.69..24986.19 rows=61410 width=40) (actual time=24.127..79.448 rows=117930 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Parallel Hash Join  (cost=6690.69..17845.19 rows=15352 width=40) (actual time=17.674..72.248 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..11240.43 rows=100000 width=8) (actual time=2.799..39.850 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.087..2.744 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12794 width=40) (actual time=14.603..14.604 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12794 width=40) (actual time=0.012..12.880 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 0.839 ms
 Execution Time: 399.224 ms
(29 rows)

query 17 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=178262.34..178262.35 rows=1 width=32) (actual time=2325.388..2328.899 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=178262.34..178262.35 rows=1 width=32) (actual time=2325.387..2328.897 rows=1 loops=1)
         ->  Gather  (cost=178262.12..178262.33 rows=2 width=32) (actual time=2325.376..2328.889 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=177262.12..177262.13 rows=1 width=32) (actual time=2288.622..2288.623 rows=1 loops=3)
                     ->  Nested Loop  (cost=5352.91..177259.90 rows=885 width=8) (actual time=459.253..2288.542 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=5352.35..177006.40 rows=88 width=40) (actual time=458.691..2250.256 rows=69 loops=3)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=5351.92..5352.15 rows=90 width=4) (actual time=23.197..23.232 rows=69 loops=3)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 30kB
                                       Worker 0:  Sort Method: quicksort  Memory: 27kB
                                       Worker 1:  Sort Method: quicksort  Memory: 26kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=90 width=4) (actual time=0.404..23.147 rows=69 loops=3)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 66597
                                 ->  GroupAggregate  (cost=0.43..169193.89 rows=196740 width=36) (actual time=0.567..2210.621 rows=196985 loops=3)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136237.20 rows=6001118 width=9) (actual time=0.525..1398.467 rows=5910823 loops=3)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.76 rows=10 width=17) (actual time=0.511..0.549 rows=3 loops=208)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 20.639 ms
 Execution Time: 2329.781 ms
(27 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=178262.34..178262.35 rows=1 width=32) (actual time=2052.877..2058.236 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=178262.34..178262.35 rows=1 width=32) (actual time=2052.876..2058.234 rows=1 loops=1)
         ->  Gather  (cost=178262.12..178262.33 rows=2 width=32) (actual time=2029.154..2058.221 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=177262.12..177262.13 rows=1 width=32) (actual time=2040.053..2040.054 rows=1 loops=3)
                     ->  Nested Loop  (cost=5352.91..177259.90 rows=885 width=8) (actual time=184.455..2040.015 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=5352.35..177006.40 rows=88 width=40) (actual time=184.438..2039.252 rows=69 loops=3)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=5351.92..5352.15 rows=90 width=4) (actual time=9.926..9.939 rows=69 loops=3)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 29kB
                                       Worker 0:  Sort Method: quicksort  Memory: 27kB
                                       Worker 1:  Sort Method: quicksort  Memory: 27kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=90 width=4) (actual time=0.107..9.903 rows=69 loops=3)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 66597
                                 ->  GroupAggregate  (cost=0.43..169193.89 rows=196740 width=36) (actual time=0.058..2014.696 rows=198158 loops=3)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136237.20 rows=6001118 width=9) (actual time=0.030..1224.745 rows=5945720 loops=3)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.76 rows=10 width=17) (actual time=0.009..0.010 rows=3 loops=208)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 1.418 ms
 Execution Time: 2058.294 ms
(27 rows)

query 18 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=768536.55..768536.80 rows=100 width=71) (actual time=2883.691..2890.979 rows=9 loops=1)
   ->  Sort  (cost=768536.55..773538.41 rows=2000745 width=71) (actual time=2883.690..2890.976 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=397490.68..692069.51 rows=2000745 width=71) (actual time=2883.663..2890.957 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=397490.68..647052.76 rows=2000744 width=71) (actual time=2883.653..2890.943 rows=9 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=396490.62..407744.80 rows=500186 width=71) (actual time=2875.434..2875.442 rows=2 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=396490.62..397741.08 rows=500186 width=44) (actual time=2875.420..2875.425 rows=13 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 26kB
                                 Worker 0:  Sort Method: quicksort  Memory: 26kB
                                 Worker 1:  Sort Method: quicksort  Memory: 25kB
                                 Worker 2:  Sort Method: quicksort  Memory: 25kB
                                 Worker 3:  Sort Method: quicksort  Memory: 26kB
                                 ->  Parallel Hash Join  (cost=239682.61..338150.25 rows=500186 width=44) (actual time=2728.119..2875.369 rows=13 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..91228.82 rows=1500280 width=9) (actual time=0.011..164.591 rows=1200243 loops=5)
                                             Heap Fetches: 0
                                       ->  Parallel Hash  (cost=237665.68..237665.68 rows=161320 width=43) (actual time=2570.799..2570.803 rows=2 loops=5)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4256kB
                                             ->  Parallel Hash Join  (cost=205002.34..237665.68 rows=161320 width=43) (actual time=2435.325..2570.417 rows=2 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Hash Join  (cost=199999.09..232238.96 rows=161320 width=24) (actual time=2404.165..2539.185 rows=2 loops=5)
                                                         Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=20) (actual time=1.008..182.518 rows=300000 loops=5)
                                                         ->  Hash  (cost=193747.92..193747.92 rows=500093 width=4) (actual time=2311.767..2311.768 rows=9 loops=5)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                                               ->  GroupAggregate  (cost=0.43..188746.99 rows=500093 width=4) (actual time=490.541..2311.752 rows=9 loops=5)
                                                                     Group Key: lineitem_1.l_orderkey
                                                                     Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                                     Rows Removed by Filter: 1499991
                                                                     ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136237.20 rows=6001118 width=9) (actual time=0.370..748.237 rows=6001215 loops=5)
                                                                           Heap Fetches: 0
                                                   ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=23) (actual time=30.868..30.869 rows=30000 loops=5)
                                                         Buckets: 262144  Batches: 1  Memory Usage: 10336kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=23) (actual time=0.079..21.409 rows=30000 loops=5)
 Planning Time: 25.019 ms
 Execution Time: 2891.926 ms
(42 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=768536.55..768536.80 rows=100 width=71) (actual time=2763.643..2767.835 rows=9 loops=1)
   ->  Sort  (cost=768536.55..773538.41 rows=2000745 width=71) (actual time=2763.642..2767.832 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=397490.68..692069.51 rows=2000745 width=71) (actual time=2763.608..2767.813 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=397490.68..647052.76 rows=2000744 width=71) (actual time=2763.594..2767.791 rows=9 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=396490.62..407744.80 rows=500186 width=71) (actual time=2754.489..2754.497 rows=2 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=396490.62..397741.08 rows=500186 width=44) (actual time=2754.473..2754.478 rows=13 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 26kB
                                 Worker 0:  Sort Method: quicksort  Memory: 25kB
                                 Worker 1:  Sort Method: quicksort  Memory: 26kB
                                 Worker 2:  Sort Method: quicksort  Memory: 26kB
                                 Worker 3:  Sort Method: quicksort  Memory: 26kB
                                 ->  Parallel Hash Join  (cost=239682.61..338150.25 rows=500186 width=44) (actual time=2575.615..2754.424 rows=13 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..91228.82 rows=1500280 width=9) (actual time=0.015..169.962 rows=1200243 loops=5)
                                             Heap Fetches: 0
                                       ->  Parallel Hash  (cost=237665.68..237665.68 rows=161320 width=43) (actual time=2446.978..2446.982 rows=2 loops=5)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4192kB
                                             ->  Parallel Hash Join  (cost=205002.34..237665.68 rows=161320 width=43) (actual time=2339.668..2382.152 rows=2 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Hash Join  (cost=199999.09..232238.96 rows=161320 width=24) (actual time=2321.389..2363.863 rows=2 loops=5)
                                                         Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=20) (actual time=0.009..19.926 rows=300000 loops=5)
                                                         ->  Hash  (cost=193747.92..193747.92 rows=500093 width=4) (actual time=2299.253..2299.254 rows=9 loops=5)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                                               ->  GroupAggregate  (cost=0.43..188746.99 rows=500093 width=4) (actual time=482.643..2299.240 rows=9 loops=5)
                                                                     Group Key: lineitem_1.l_orderkey
                                                                     Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                                     Rows Removed by Filter: 1499991
                                                                     ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136237.20 rows=6001118 width=9) (actual time=0.880..694.954 rows=6001215 loops=5)
                                                                           Heap Fetches: 0
                                                   ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=23) (actual time=17.385..17.385 rows=30000 loops=5)
                                                         Buckets: 262144  Batches: 1  Memory Usage: 10336kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=23) (actual time=0.010..5.767 rows=30000 loops=5)
 Planning Time: 1.628 ms
 Execution Time: 2767.908 ms
(42 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=9321.54..9321.55 rows=1 width=32) (actual time=130.846..132.319 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=9321.54..9321.55 rows=1 width=32) (actual time=130.845..132.317 rows=1 loops=1)
         ->  Gather  (cost=9321.31..9321.52 rows=2 width=32) (actual time=130.733..132.308 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=8321.31..8321.32 rows=1 width=32) (actual time=124.631..124.632 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.56..8320.96 rows=47 width=12) (actual time=4.712..124.551 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=197 width=30) (actual time=0.476..27.610 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.44 rows=1 width=21) (actual time=0.552..0.572 rows=0 loops=507)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning Time: 22.720 ms
 Execution Time: 133.159 ms
(17 rows)

SET
SET
SET


 Limit  (cost=9321.54..9321.55 rows=1 width=32) (actual time=20.503..22.317 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=9321.54..9321.55 rows=1 width=32) (actual time=20.501..22.315 rows=1 loops=1)
         ->  Gather  (cost=9321.31..9321.52 rows=2 width=32) (actual time=20.369..22.307 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=8321.31..8321.32 rows=1 width=32) (actual time=17.910..17.911 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.56..8320.96 rows=47 width=12) (actual time=0.500..17.871 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=197 width=30) (actual time=0.111..15.761 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.44 rows=1 width=21) (actual time=0.011..0.012 rows=0 loops=507)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning Time: 2.728 ms
 Execution Time: 22.406 ms
(17 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=276827.57..276827.58 rows=1 width=51) (actual time=3321.663..3321.667 rows=1 loops=1)
   ->  Sort  (cost=276827.57..276827.58 rows=1 width=51) (actual time=3321.662..3321.665 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=243014.92..276827.56 rows=1 width=51) (actual time=3153.191..3321.473 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.488..3.811 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.178..0.180 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.303..2.832 rows=10000 loops=1)
               ->  Materialize  (cost=243014.92..276372.25 rows=1 width=8) (actual time=5.963..7.338 rows=4371 loops=438)
                     ->  Merge Join  (cost=243014.92..276372.25 rows=1 width=8) (actual time=2611.885..3150.053 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=243014.07..259314.08 rows=483145 width=40) (actual time=2611.535..3059.830 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=243014.07..245277.28 rows=905283 width=13) (actual time=2611.521..2721.459 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16253.58..142392.83 rows=905283 width=13) (actual time=124.529..2200.656 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16027.26 rows=905283 width=0) (actual time=107.859..107.859 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.84..10599.32 rows=8080 width=16) (actual time=0.058..61.382 rows=23762 loops=1)
                                 ->  Nested Loop  (cost=0.84..10579.12 rows=8080 width=16) (actual time=0.055..59.151 rows=8748 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6454.42 rows=2020 width=4) (actual time=0.026..29.713 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..2.00 rows=4 width=12) (actual time=0.012..0.013 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 27.040 ms
 Execution Time: 3325.196 ms
(40 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=276827.57..276827.58 rows=1 width=51) (actual time=1378.561..1378.565 rows=1 loops=1)
   ->  Sort  (cost=276827.57..276827.58 rows=1 width=51) (actual time=1378.560..1378.563 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=243014.92..276827.56 rows=1 width=51) (actual time=1209.503..1378.414 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.019..1.689 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.009..0.584 rows=10000 loops=1)
               ->  Materialize  (cost=243014.92..276372.25 rows=1 width=8) (actual time=1.602..2.903 rows=4371 loops=438)
                     ->  Merge Join  (cost=243014.92..276372.25 rows=1 width=8) (actual time=701.680..1207.039 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=243014.07..259314.08 rows=483145 width=40) (actual time=701.355..1150.687 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=243014.07..245277.28 rows=905283 width=13) (actual time=701.343..809.017 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16253.58..142392.83 rows=905283 width=13) (actual time=89.599..324.958 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16027.26 rows=905283 width=0) (actual time=73.690..73.690 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.84..10599.32 rows=8080 width=16) (actual time=0.039..27.907 rows=23762 loops=1)
                                 ->  Nested Loop  (cost=0.84..10579.12 rows=8080 width=16) (actual time=0.036..25.905 rows=8748 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6454.42 rows=2020 width=4) (actual time=0.025..19.081 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..2.00 rows=4 width=12) (actual time=0.002..0.002 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 1.928 ms
 Execution Time: 1381.499 ms
(40 rows)

query 21 run 1
SET
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=61207.76..61207.77 rows=1 width=34) (actual time=1721.100..1785.681 rows=100 loops=1)
   ->  Sort  (cost=61207.76..61207.77 rows=1 width=34) (actual time=1721.099..1785.674 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  Finalize GroupAggregate  (cost=61207.23..61207.75 rows=1 width=34) (actual time=1719.183..1785.242 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Gather Merge  (cost=61207.23..61207.72 rows=4 width=34) (actual time=1719.175..1784.967 rows=1844 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=60207.17..60207.19 rows=1 width=34) (actual time=1707.982..1708.461 rows=369 loops=5)
                           Group Key: supplier.s_name
                           ->  Sort  (cost=60207.17..60207.17 rows=1 width=26) (actual time=1707.977..1708.315 rows=845 loops=5)
                                 Sort Key: supplier.s_name
                                 Sort Method: quicksort  Memory: 91kB
                                 Worker 0:  Sort Method: quicksort  Memory: 88kB
                                 Worker 1:  Sort Method: quicksort  Memory: 90kB
                                 Worker 2:  Sort Method: quicksort  Memory: 91kB
                                 Worker 3:  Sort Method: quicksort  Memory: 92kB
                                 ->  Nested Loop Semi Join  (cost=32287.97..60207.16 rows=1 width=26) (actual time=719.156..1704.979 rows=845 loops=5)
                                       Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 554
                                       ->  Nested Loop  (cost=32287.53..60204.72 rows=1 width=38) (actual time=717.304..1374.069 rows=1382 loops=5)
                                             Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                                             Rows Removed by Join Filter: 31716
                                             ->  Nested Loop  (cost=32287.53..60203.40 rows=1 width=42) (actual time=708.744..1260.279 rows=33098 loops=5)
                                                   ->  Nested Loop  (cost=32287.10..60201.04 rows=1 width=38) (actual time=708.248..1091.398 rows=67536 loops=5)
                                                         ->  Parallel Hash Anti Join  (cost=32286.82..60196.97 rows=1 width=8) (actual time=707.682..954.360 rows=67536 loops=5)
                                                               Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                                               Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                                               Rows Removed by Join Filter: 275172
                                                               ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..26035.23 rows=500093 width=8) (actual time=0.029..109.415 rows=758659 loops=5)
                                                                     Heap Fetches: 0
                                                               ->  Parallel Hash  (cost=26035.23..26035.23 rows=500093 width=8) (actual time=459.728..459.729 rows=758659 loops=5)
                                                                     Buckets: 524288 (originally 2097152)  Batches: 16 (originally 1)  Memory Usage: 13504kB
                                                                     ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..26035.23 rows=500093 width=8) (actual time=0.682..158.630 rows=758659 loops=5)
                                                                           Heap Fetches: 0
                                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4.07 rows=1 width=34) (actual time=0.002..0.002 rows=1 loops=337680)
                                                               Index Cond: (s_suppkey = l1.l_suppkey)
                                                   ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=337680)
                                                         Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                                         Heap Fetches: 0
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=165491)
                                                   Filter: (n_name = 'PERU'::bpchar)
                                                   Rows Removed by Filter: 24
                                       ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.238..0.239 rows=1 loops=6909)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Heap Fetches: 0
 Planning Time: 22.949 ms
 Execution Time: 1786.608 ms
(49 rows)

SET
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=61207.76..61207.77 rows=1 width=34) (actual time=1413.664..1470.629 rows=100 loops=1)
   ->  Sort  (cost=61207.76..61207.77 rows=1 width=34) (actual time=1413.663..1470.621 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  Finalize GroupAggregate  (cost=61207.23..61207.75 rows=1 width=34) (actual time=1411.689..1470.189 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Gather Merge  (cost=61207.23..61207.72 rows=4 width=34) (actual time=1411.683..1469.917 rows=1812 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=60207.17..60207.19 rows=1 width=34) (actual time=1404.306..1404.748 rows=362 loops=5)
                           Group Key: supplier.s_name
                           ->  Sort  (cost=60207.17..60207.17 rows=1 width=26) (actual time=1404.301..1404.605 rows=845 loops=5)
                                 Sort Key: supplier.s_name
                                 Sort Method: quicksort  Memory: 102kB
                                 Worker 0:  Sort Method: quicksort  Memory: 75kB
                                 Worker 1:  Sort Method: quicksort  Memory: 86kB
                                 Worker 2:  Sort Method: quicksort  Memory: 95kB
                                 Worker 3:  Sort Method: quicksort  Memory: 95kB
                                 ->  Nested Loop Semi Join  (cost=32287.97..60207.16 rows=1 width=26) (actual time=648.311..1400.780 rows=845 loops=5)
                                       Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 554
                                       ->  Nested Loop  (cost=32287.53..60204.72 rows=1 width=38) (actual time=647.825..1391.008 rows=1382 loops=5)
                                             Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                                             Rows Removed by Join Filter: 31716
                                             ->  Nested Loop  (cost=32287.53..60203.40 rows=1 width=42) (actual time=647.409..1265.430 rows=33098 loops=5)
                                                   ->  Nested Loop  (cost=32287.10..60201.04 rows=1 width=38) (actual time=647.373..1086.847 rows=67536 loops=5)
                                                         ->  Parallel Hash Anti Join  (cost=32286.82..60196.97 rows=1 width=8) (actual time=647.340..939.519 rows=67536 loops=5)
                                                               Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                                               Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                                               Rows Removed by Join Filter: 275172
                                                               ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..26035.23 rows=500093 width=8) (actual time=0.020..107.379 rows=758659 loops=5)
                                                                     Heap Fetches: 0
                                                               ->  Parallel Hash  (cost=26035.23..26035.23 rows=500093 width=8) (actual time=402.488..402.489 rows=758659 loops=5)
                                                                     Buckets: 524288 (originally 2097152)  Batches: 16 (originally 1)  Memory Usage: 13472kB
                                                                     ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..26035.23 rows=500093 width=8) (actual time=0.195..101.338 rows=758659 loops=5)
                                                                           Heap Fetches: 0
                                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4.07 rows=1 width=34) (actual time=0.002..0.002 rows=1 loops=337680)
                                                               Index Cond: (s_suppkey = l1.l_suppkey)
                                                   ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=337680)
                                                         Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                                         Heap Fetches: 0
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=165491)
                                                   Filter: (n_name = 'PERU'::bpchar)
                                                   Rows Removed by Filter: 24
                                       ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.005..0.005 rows=1 loops=6909)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Heap Fetches: 0
 Planning Time: 2.853 ms
 Execution Time: 1470.718 ms
(49 rows)

query 22 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12940.49..12940.63 rows=1 width=72) (actual time=112.524..114.969 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.84 rows=1 width=32) (actual time=50.224..50.299 rows=1 loops=1)
           ->  Gather  (cost=6242.60..6242.81 rows=2 width=32) (actual time=50.120..50.290 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.60..5242.61 rows=1 width=32) (actual time=45.067..45.068 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1990 width=6) (actual time=0.133..43.711 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  Finalize GroupAggregate  (cost=6697.66..6794.72 rows=727 width=72) (actual time=112.523..114.891 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Gather Merge  (cost=6697.66..6775.94 rows=606 width=72) (actual time=112.421..114.883 rows=4 loops=1)
               Workers Planned: 2
               Params Evaluated: $1
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=5697.63..5705.97 rows=303 width=72) (actual time=59.183..59.390 rows=4 loops=3)
                     Group Key: ("substring"((customer.c_phone)::text, 1, 2))
                     ->  Sort  (cost=5697.63..5698.39 rows=303 width=38) (actual time=59.110..59.159 rows=1210 loops=3)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 200kB
                           Worker 0:  Sort Method: quicksort  Memory: 193kB
                           Worker 1:  Sort Method: quicksort  Memory: 196kB
                           ->  Nested Loop Anti Join  (cost=0.43..5685.15 rows=303 width=38) (actual time=0.140..58.249 rows=2132 loops=3)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.015..21.938 rows=6359 loops=3)
                                       Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                       Rows Removed by Filter: 43641
                                 ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.38 rows=17 width=4) (actual time=0.005..0.005 rows=1 loops=19077)
                                       Index Cond: (o_custkey = customer.c_custkey)
                                       Heap Fetches: 0
 Planning Time: 14.568 ms
 Execution Time: 115.878 ms
(32 rows)

SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12940.49..12940.63 rows=1 width=72) (actual time=68.544..70.923 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.84 rows=1 width=32) (actual time=30.029..30.112 rows=1 loops=1)
           ->  Gather  (cost=6242.60..6242.81 rows=2 width=32) (actual time=29.916..30.104 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.60..5242.61 rows=1 width=32) (actual time=27.771..27.772 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1990 width=6) (actual time=0.014..26.595 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  Finalize GroupAggregate  (cost=6697.66..6794.72 rows=727 width=72) (actual time=68.543..70.838 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Gather Merge  (cost=6697.66..6775.94 rows=606 width=72) (actual time=68.465..70.831 rows=4 loops=1)
               Workers Planned: 2
               Params Evaluated: $1
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=5697.63..5705.97 rows=303 width=72) (actual time=35.762..35.939 rows=4 loops=3)
                     Group Key: ("substring"((customer.c_phone)::text, 1, 2))
                     ->  Sort  (cost=5697.63..5698.39 rows=303 width=38) (actual time=35.693..35.737 rows=1192 loops=3)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 205kB
                           Worker 0:  Sort Method: quicksort  Memory: 144kB
                           Worker 1:  Sort Method: quicksort  Memory: 193kB
                           ->  Nested Loop Anti Join  (cost=0.43..5685.15 rows=303 width=38) (actual time=0.057..34.984 rows=2132 loops=3)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.016..19.863 rows=6359 loops=3)
                                       Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                       Rows Removed by Filter: 43641
                                 ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.38 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                                       Index Cond: (o_custkey = customer.c_custkey)
                                       Heap Fetches: 0
 Planning Time: 0.770 ms
 Execution Time: 70.987 ms
(32 rows)

