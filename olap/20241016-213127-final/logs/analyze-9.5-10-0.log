query 1 run 1
SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4246211.70..4246211.70 rows=1 width=25) (actual time=105922.268..105922.269 rows=1 loops=1)
   ->  Sort  (cost=4246211.70..4246211.71 rows=6 width=25) (actual time=105922.267..105922.267 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=4246211.50..4246211.67 rows=6 width=25) (actual time=105922.238..105922.244 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..1874904.10 rows=59282685 width=25) (actual time=0.468..12394.891 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning time: 18.234 ms
 Execution time: 105922.324 ms
(11 rows)

SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4246211.70..4246211.70 rows=1 width=25) (actual time=104405.124..104405.125 rows=1 loops=1)
   ->  Sort  (cost=4246211.70..4246211.71 rows=6 width=25) (actual time=104405.123..104405.123 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=4246211.50..4246211.67 rows=6 width=25) (actual time=104405.096..104405.099 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..1874904.10 rows=59282685 width=25) (actual time=0.019..10711.850 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning time: 0.807 ms
 Execution time: 104405.174 ms
(11 rows)

query 2 run 1
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=491154.78..491154.78 rows=1 width=192) (actual time=64221.419..64221.430 rows=100 loops=1)
   ->  Sort  (cost=491154.78..491154.78 rows=1 width=192) (actual time=64221.419..64221.422 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Nested Loop  (cost=53.11..491154.77 rows=1 width=192) (actual time=38.624..64218.402 rows=4737 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.007..0.013 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.000..0.002 rows=25 loops=1)
               ->  Materialize  (cost=53.11..491152.07 rows=1 width=170) (actual time=5.307..12842.674 rows=4737 loops=5)
                     ->  Nested Loop  (cost=53.11..491152.07 rows=1 width=170) (actual time=26.530..64203.613 rows=4737 loops=1)
                           Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
                           Rows Removed by Join Filter: 473695263
                           ->  Nested Loop  (cost=53.11..486681.07 rows=1 width=34) (actual time=2.661..1268.054 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..54670.27 rows=7906 width=30) (actual time=0.661..294.162 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=52.56..54.63 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=52.11..52.12 rows=1 width=6) (actual time=0.115..0.115 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.54..52.10 rows=4 width=6) (actual time=0.102..0.111 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.54..50.82 rows=18 width=10) (actual time=0.082..0.108 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.97..49.01 rows=18 width=10) (actual time=0.081..0.105 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.75 rows=18 width=10) (actual time=0.070..0.071 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.54..2.56 rows=1 width=8) (actual time=0.008..0.008 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.018..0.018 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.009 rows=25 loops=1)
                                       SubPlan 1
                                         ->  Aggregate  (cost=52.11..52.12 rows=1 width=6) (actual time=0.115..0.115 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.54..52.10 rows=4 width=6) (actual time=0.102..0.111 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.54..50.82 rows=18 width=10) (actual time=0.082..0.108 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.97..49.01 rows=18 width=10) (actual time=0.081..0.105 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.75 rows=18 width=10) (actual time=0.070..0.071 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.54..2.56 rows=1 width=8) (actual time=0.008..0.008 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.018..0.018 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.009 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..4.831 rows=100000 loops=4737)
 Planning time: 24.618 ms
 Execution time: 64221.519 ms
(70 rows)

SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=491154.78..491154.78 rows=1 width=192) (actual time=63035.475..63035.489 rows=100 loops=1)
   ->  Sort  (cost=491154.78..491154.78 rows=1 width=192) (actual time=63035.474..63035.480 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Nested Loop  (cost=53.11..491154.77 rows=1 width=192) (actual time=18.241..63032.423 rows=4737 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.006..0.013 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.000..0.001 rows=25 loops=1)
               ->  Materialize  (cost=53.11..491152.07 rows=1 width=170) (actual time=2.224..12605.557 rows=4737 loops=5)
                     ->  Nested Loop  (cost=53.11..491152.07 rows=1 width=170) (actual time=11.115..63017.914 rows=4737 loops=1)
                           Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
                           Rows Removed by Join Filter: 473695263
                           ->  Nested Loop  (cost=53.11..486681.07 rows=1 width=34) (actual time=0.080..359.222 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..54670.27 rows=7906 width=30) (actual time=0.021..88.437 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=52.56..54.63 rows=1 width=14) (actual time=0.001..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=52.11..52.12 rows=1 width=6) (actual time=0.028..0.028 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.54..52.10 rows=4 width=6) (actual time=0.020..0.024 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.54..50.82 rows=18 width=10) (actual time=0.011..0.021 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.97..49.01 rows=18 width=10) (actual time=0.010..0.019 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.75 rows=18 width=10) (actual time=0.005..0.005 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.54..2.56 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.008..0.008 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.008 rows=25 loops=1)
                                       SubPlan 1
                                         ->  Aggregate  (cost=52.11..52.12 rows=1 width=6) (actual time=0.028..0.028 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.54..52.10 rows=4 width=6) (actual time=0.020..0.024 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.54..50.82 rows=18 width=10) (actual time=0.011..0.021 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.97..49.01 rows=18 width=10) (actual time=0.010..0.019 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.75 rows=18 width=10) (actual time=0.005..0.005 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.54..2.56 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.008..0.008 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.008 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..4.817 rows=100000 loops=4737)
 Planning time: 1.748 ms
 Execution time: 63035.583 ms
(70 rows)

query 3 run 1
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3467953.77..3467953.79 rows=10 width=24) (actual time=23170.177..23170.178 rows=10 loops=1)
   ->  Sort  (cost=3467953.77..3475737.43 rows=3113463 width=24) (actual time=23170.176..23170.177 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=3307269.06..3400672.95 rows=3113463 width=24) (actual time=22984.660..23151.768 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=3307269.06..3315052.72 rows=3113463 width=24) (actual time=22984.645..23001.158 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 31119kB
                     ->  Hash Join  (cost=573990.17..2925873.20 rows=3113463 width=24) (actual time=4577.400..22893.472 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1874904.10 rows=32467546 width=16) (actual time=0.005..12058.209 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 27451823
                           ->  Hash  (cost=548983.27..548983.27 rows=1438552 width=12) (actual time=4573.622..4573.622 rows=1451805 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                                 ->  Hash Join  (cost=58387.15..548983.27 rows=1438552 width=12) (actual time=527.321..4325.918 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..448785.28 rows=7313420 width=16) (actual time=0.008..2384.162 rows=7239437 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 7760563
                                       ->  Hash  (cost=54698.69..54698.69 rows=295077 width=4) (actual time=526.569..526.569 rows=300276 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                             ->  Seq Scan on customer  (cost=0.00..54698.69 rows=295077 width=4) (actual time=0.009..472.480 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 1199724
 Planning time: 29.138 ms
 Execution time: 23171.071 ms
(28 rows)

SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3467953.77..3467953.79 rows=10 width=24) (actual time=20238.302..20238.302 rows=10 loops=1)
   ->  Sort  (cost=3467953.77..3475737.43 rows=3113463 width=24) (actual time=20238.302..20238.302 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=3307269.06..3400672.95 rows=3113463 width=24) (actual time=20052.659..20219.845 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=3307269.06..3315052.72 rows=3113463 width=24) (actual time=20052.644..20069.223 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 31119kB
                     ->  Hash Join  (cost=573990.17..2925873.20 rows=3113463 width=24) (actual time=3766.518..19962.684 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1874904.10 rows=32467546 width=16) (actual time=0.004..10098.851 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 27451823
                           ->  Hash  (cost=548983.27..548983.27 rows=1438552 width=12) (actual time=3764.576..3764.576 rows=1451805 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                                 ->  Hash Join  (cost=58387.15..548983.27 rows=1438552 width=12) (actual time=281.555..3528.938 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..448785.28 rows=7313420 width=16) (actual time=0.009..1909.142 rows=7239437 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 7760563
                                       ->  Hash  (cost=54698.69..54698.69 rows=295077 width=4) (actual time=280.759..280.759 rows=300276 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                             ->  Seq Scan on customer  (cost=0.00..54698.69 rows=295077 width=4) (actual time=0.010..233.751 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 1199724
 Planning time: 1.720 ms
 Execution time: 20238.543 ms
(28 rows)

query 4 run 1
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1228674.06..1228674.06 rows=1 width=16) (actual time=16574.043..16574.044 rows=1 loops=1)
   ->  Sort  (cost=1228674.06..1228674.06 rows=1 width=16) (actual time=16574.043..16574.043 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1228674.04..1228674.05 rows=1 width=16) (actual time=16574.021..16574.021 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Merge Semi Join  (cost=331601.84..1225888.15 rows=557178 width=16) (actual time=4986.342..16432.363 rows=513822 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=331600.92..332994.44 rows=557407 width=20) (actual time=4985.922..5106.416 rows=560424 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: external sort  Disk: 16448kB
                           ->  Bitmap Heap Scan on orders  (cost=8771.86..278400.96 rows=557407 width=20) (actual time=166.912..4635.923 rows=560424 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=231887
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8632.50 rows=557407 width=0) (actual time=117.382..117.382 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using q4_idx_1 on lineitem  (cost=0.56..834110.07 rows=19993629 width=4) (actual time=0.373..9042.096 rows=37929279 loops=1)
 Planning time: 22.583 ms
 Execution time: 16577.097 ms
(19 rows)

SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1228674.06..1228674.06 rows=1 width=16) (actual time=10996.203..10996.203 rows=1 loops=1)
   ->  Sort  (cost=1228674.06..1228674.06 rows=1 width=16) (actual time=10996.202..10996.202 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1228674.04..1228674.05 rows=1 width=16) (actual time=10996.180..10996.180 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Merge Semi Join  (cost=331601.84..1225888.15 rows=557178 width=16) (actual time=1777.277..10870.443 rows=513822 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=331600.92..332994.44 rows=557407 width=20) (actual time=1777.216..1885.653 rows=560424 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: external sort  Disk: 16448kB
                           ->  Bitmap Heap Scan on orders  (cost=8771.86..278400.96 rows=557407 width=20) (actual time=160.228..1495.429 rows=560424 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=231887
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8632.50 rows=557407 width=0) (actual time=110.854..110.854 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using q4_idx_1 on lineitem  (cost=0.56..834110.07 rows=19993629 width=4) (actual time=0.042..6786.611 rows=37929279 loops=1)
 Planning time: 1.628 ms
 Execution time: 10998.698 ms
(19 rows)

query 5 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1651607.05..1651607.05 rows=1 width=38) (actual time=10448.885..10448.885 rows=1 loops=1)
   ->  Sort  (cost=1651607.05..1651607.11 rows=25 width=38) (actual time=10448.885..10448.885 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1651606.61..1651606.93 rows=25 width=38) (actual time=10448.869..10448.870 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Hash Join  (cost=104274.46..1650874.63 rows=73198 width=38) (actual time=1129.196..10337.875 rows=72033 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=99553.46..1631613.01 rows=1841153 width=50) (actual time=1084.015..9892.496 rows=1815327 loops=1)
                           ->  Hash Join  (cost=99552.90..408595.42 rows=460477 width=38) (actual time=1082.567..6447.619 rows=453399 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=36225.90..332029.71 rows=2302387 width=8) (actual time=500.402..5240.337 rows=2276638 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       Heap Blocks: exact=261246
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..35650.30 rows=2302387 width=0) (actual time=444.018..444.018 rows=2276638 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=59576.66..59576.66 rows=300027 width=38) (actual time=581.384..581.384 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                       ->  Hash Join  (cost=2.53..59576.66 rows=300027 width=38) (actual time=0.036..520.938 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50948.35 rows=1500135 width=8) (actual time=0.005..361.082 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.021..0.021 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.015..0.019 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.006..0.007 rows=4 loops=453399)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
                     ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=43.397..43.397 rows=100000 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.003..28.343 rows=100000 loops=1)
 Planning time: 31.788 ms
 Execution time: 10449.640 ms
(39 rows)

SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1651607.05..1651607.05 rows=1 width=38) (actual time=5314.785..5314.785 rows=1 loops=1)
   ->  Sort  (cost=1651607.05..1651607.11 rows=25 width=38) (actual time=5314.784..5314.784 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1651606.61..1651606.93 rows=25 width=38) (actual time=5314.766..5314.768 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Hash Join  (cost=104274.46..1650874.63 rows=73198 width=38) (actual time=970.407..5234.151 rows=72033 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=99553.46..1631613.01 rows=1841153 width=50) (actual time=931.743..4837.719 rows=1815327 loops=1)
                           ->  Hash Join  (cost=99552.90..408595.42 rows=460477 width=38) (actual time=931.682..2811.530 rows=453399 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=36225.90..332029.71 rows=2302387 width=8) (actual time=469.277..1815.615 rows=2276638 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       Heap Blocks: exact=261246
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..35650.30 rows=2302387 width=0) (actual time=413.121..413.121 rows=2276638 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=59576.66..59576.66 rows=300027 width=38) (actual time=461.716..461.716 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                       ->  Hash Join  (cost=2.53..59576.66 rows=300027 width=38) (actual time=0.033..404.296 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50948.35 rows=1500135 width=8) (actual time=0.004..248.242 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.020..0.020 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.015..0.018 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.002 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.003..0.004 rows=4 loops=453399)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
                     ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=38.183..38.183 rows=100000 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.004..21.960 rows=100000 loops=1)
 Planning time: 3.804 ms
 Execution time: 5314.926 ms
(39 rows)

query 6 run 1
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1191419.31..1191419.32 rows=1 width=12) (actual time=14107.539..14107.539 rows=1 loops=1)
   ->  Aggregate  (cost=1191419.31..1191419.32 rows=1 width=12) (actual time=14107.538..14107.538 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=235436.43..1185266.30 rows=1230601 width=12) (actual time=1414.198..13469.915 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 21866393
               Heap Blocks: exact=238202 lossy=424766
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..235128.78 rows=1230601 width=0) (actual time=1361.749..1361.749 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 19.186 ms
 Execution time: 14107.577 ms
(10 rows)

SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1191419.31..1191419.32 rows=1 width=12) (actual time=8635.675..8635.675 rows=1 loops=1)
   ->  Aggregate  (cost=1191419.31..1191419.32 rows=1 width=12) (actual time=8635.674..8635.674 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=235436.43..1185266.30 rows=1230601 width=12) (actual time=1272.748..8199.519 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 21866393
               Heap Blocks: exact=238202 lossy=424766
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..235128.78 rows=1230601 width=0) (actual time=1221.051..1221.051 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 1.051 ms
 Execution time: 8635.712 ms
(10 rows)

query 7 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2420822.43..2420822.43 rows=1 width=68) (actual time=34004.497..34004.498 rows=1 loops=1)
   ->  Sort  (cost=2420822.43..2420830.08 rows=3062 width=68) (actual time=34004.495..34004.495 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2420753.53..2420807.12 rows=3062 width=68) (actual time=34003.828..34003.834 rows=4 loops=1)
               Group Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=894694.07..2419844.05 rows=60632 width=68) (actual time=8073.520..33930.381 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=332675.04..1815911.28 rows=1456931 width=46) (actual time=3158.263..28161.727 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=328897.64..1728859.78 rows=18321276 width=24) (actual time=3123.105..25385.530 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Index Recheck: 30957726
                                 Heap Blocks: exact=274040 lossy=846026
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..324317.33 rows=18321276 width=0) (actual time=3063.357..3063.357 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=3677.40..3677.40 rows=8000 width=30) (actual time=35.092..35.092 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3677.40 rows=8000 width=30) (actual time=0.014..33.534 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.001..24.251 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.009..0.009 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.008 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=538813.64..538813.64 rows=1200111 width=30) (actual time=4909.936..4909.936 rows=1191175 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 22152kB
                           ->  Hash Join  (cost=59275.50..538813.64 rows=1200111 width=30) (actual time=521.003..4667.331 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411281.82 rows=15001382 width=8) (actual time=0.005..1619.617 rows=15000000 loops=1)
                                 ->  Hash  (cost=57775.37..57775.37 rows=120011 width=30) (actual time=520.930..520.930 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..57775.37 rows=120011 width=30) (actual time=0.017..495.973 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50948.35 rows=1500135 width=8) (actual time=0.001..357.761 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.012..0.012 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.010 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning time: 32.835 ms
 Execution time: 34005.365 ms
(45 rows)

SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2420822.43..2420822.43 rows=1 width=68) (actual time=20809.125..20809.126 rows=1 loops=1)
   ->  Sort  (cost=2420822.43..2420830.08 rows=3062 width=68) (actual time=20809.125..20809.125 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2420753.53..2420807.12 rows=3062 width=68) (actual time=20809.075..20809.083 rows=4 loops=1)
               Group Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=894694.07..2419844.05 rows=60632 width=68) (actual time=6944.609..20749.034 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=332675.04..1815911.28 rows=1456931 width=46) (actual time=2834.286..15964.782 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=328897.64..1728859.78 rows=18321276 width=24) (actual time=2807.817..13847.935 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Index Recheck: 30957726
                                 Heap Blocks: exact=274040 lossy=846026
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..324317.33 rows=18321276 width=0) (actual time=2747.892..2747.892 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=3677.40..3677.40 rows=8000 width=30) (actual time=26.439..26.439 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3677.40 rows=8000 width=30) (actual time=0.014..24.901 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.002..15.774 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.009..0.009 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.007 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=538813.64..538813.64 rows=1200111 width=30) (actual time=4107.721..4107.721 rows=1191175 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 22152kB
                           ->  Hash Join  (cost=59275.50..538813.64 rows=1200111 width=30) (actual time=391.175..3877.557 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411281.82 rows=15001382 width=8) (actual time=0.005..1200.522 rows=15000000 loops=1)
                                 ->  Hash  (cost=57775.37..57775.37 rows=120011 width=30) (actual time=391.108..391.108 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..57775.37 rows=120011 width=30) (actual time=0.017..368.107 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50948.35 rows=1500135 width=8) (actual time=0.002..236.235 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.012..0.012 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.010 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning time: 3.285 ms
 Execution time: 20809.290 ms
(45 rows)

query 8 run 1
SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=621082.58..621082.59 rows=1 width=42) (actual time=11529.338..11529.339 rows=1 loops=1)
   ->  Sort  (cost=621082.58..621084.40 rows=728 width=42) (actual time=11529.336..11529.336 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=621062.56..621078.94 rows=728 width=42) (actual time=11529.321..11529.322 rows=2 loops=1)
               Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=509423.22..620581.86 rows=24035 width=42) (actual time=7368.219..11489.007 rows=23842 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=509421.65..620129.64 rows=24035 width=20) (actual time=7368.176..11468.483 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=504950.65..615327.62 rows=24180 width=20) (actual time=7326.454..11415.641 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=1.12..100404.74 rows=399878 width=20) (actual time=2.727..3889.879 rows=389521 loops=1)
                                       ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..54314.42 rows=13334 width=4) (actual time=1.668..190.741 rows=13011 loops=1)
                                             Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.13 rows=33 width=24) (actual time=0.222..0.278 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Heap Fetches: 0
                                 ->  Hash  (cost=490066.87..490066.87 rows=907093 width=8) (actual time=7320.604..7320.604 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 2  Memory Usage: 25982kB
                                       ->  Hash Join  (cost=134687.96..490066.87 rows=907093 width=8) (actual time=1499.224..7119.479 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=71360.96..400660.95 rows=4535466 width=12) (actual time=932.020..5503.301 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=261268
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..70227.10 rows=4535466 width=0) (actual time=875.811..875.811 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59576.66..59576.66 rows=300027 width=4) (actual time=566.540..566.540 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.53..59576.66 rows=300027 width=4) (actual time=0.034..517.985 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50948.35 rows=1500135 width=8) (actual time=0.005..361.220 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.021..0.021 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.015..0.019 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.001 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=41.681..41.681 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.001..28.299 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.010..0.010 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.006 rows=25 loops=1)
 Planning time: 41.477 ms
 Execution time: 11530.222 ms
(51 rows)

SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=621082.58..621082.59 rows=1 width=42) (actual time=4594.932..4594.932 rows=1 loops=1)
   ->  Sort  (cost=621082.58..621084.40 rows=728 width=42) (actual time=4594.932..4594.932 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=621062.56..621078.94 rows=728 width=42) (actual time=4594.916..4594.917 rows=2 loops=1)
               Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=509423.22..620581.86 rows=24035 width=42) (actual time=4138.988..4574.882 rows=23842 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=509421.65..620129.64 rows=24035 width=20) (actual time=4138.960..4565.143 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=504950.65..615327.62 rows=24180 width=20) (actual time=4103.657..4521.656 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=1.12..100404.74 rows=399878 width=20) (actual time=0.118..278.988 rows=389521 loops=1)
                                       ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..54314.42 rows=13334 width=4) (actual time=0.083..91.016 rows=13011 loops=1)
                                             Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.13 rows=33 width=24) (actual time=0.006..0.011 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Heap Fetches: 0
                                 ->  Hash  (cost=490066.87..490066.87 rows=907093 width=8) (actual time=4102.049..4102.049 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 2  Memory Usage: 25982kB
                                       ->  Hash Join  (cost=134687.96..490066.87 rows=907093 width=8) (actual time=1300.350..3938.149 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=71360.96..400660.95 rows=4535466 width=12) (actual time=868.382..2536.825 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=261268
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..70227.10 rows=4535466 width=0) (actual time=812.240..812.240 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59576.66..59576.66 rows=300027 width=4) (actual time=431.267..431.267 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.53..59576.66 rows=300027 width=4) (actual time=0.033..384.911 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50948.35 rows=1500135 width=8) (actual time=0.005..234.077 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.020..0.020 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.014..0.018 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.003 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=35.260..35.260 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.001..20.694 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.010..0.010 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.007 rows=25 loops=1)
 Planning time: 4.038 ms
 Execution time: 4595.113 ms
(51 rows)

query 9 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=839198.75..839198.75 rows=1 width=53) (actual time=74839.696..74839.696 rows=1 loops=1)
   ->  Sort  (cost=839198.75..839199.08 rows=134 width=53) (actual time=74839.696..74839.696 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=839195.73..839198.08 rows=134 width=53) (actual time=74839.593..74839.621 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=9.39..839193.39 rows=134 width=53) (actual time=4.426..70155.446 rows=3248192 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 77956608
                     ->  Nested Loop  (cost=9.39..839141.15 rows=134 width=31) (actual time=4.392..59442.304 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=8.95..838548.52 rows=134 width=31) (actual time=3.818..18373.990 rows=3248192 loops=1)
                                 ->  Merge Join  (cost=8.41..838206.93 rows=134 width=35) (actual time=3.612..11554.262 rows=3248192 loops=1)
                                       Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                       Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                       Rows Removed by Join Filter: 9744576
                                       ->  Nested Loop  (cost=1.12..413598.91 rows=3029347 width=33) (actual time=3.012..6457.390 rows=3248192 loops=1)
                                             ->  Index Only Scan using q20_idx_2 on part  (cost=0.55..64483.79 rows=101014 width=4) (actual time=0.234..506.386 rows=108312 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 1891688
                                                   Heap Fetches: 0
                                             ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.13 rows=33 width=29) (actual time=0.033..0.051 rows=30 loops=108312)
                                                   Index Cond: (l_partkey = part.p_partkey)
                                                   Heap Fetches: 0
                                       ->  Materialize  (cost=0.43..201597.45 rows=7999258 width=14) (actual time=0.553..2411.216 rows=20559501 loops=1)
                                             ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..181599.30 rows=7999258 width=14) (actual time=0.550..957.775 rows=7999981 loops=1)
                                                   Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.54..2.54 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=3248192)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                                       Heap Fetches: 0
                           ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=8) (actual time=0.012..0.012 rows=1 loops=3248192)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=3248192)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.004..0.009 rows=25 loops=1)
 Planning time: 42.601 ms
 Execution time: 74840.433 ms
(35 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=839198.75..839198.75 rows=1 width=53) (actual time=41285.284..41285.284 rows=1 loops=1)
   ->  Sort  (cost=839198.75..839199.08 rows=134 width=53) (actual time=41285.283..41285.283 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=839195.73..839198.08 rows=134 width=53) (actual time=41285.183..41285.217 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=9.39..839193.39 rows=134 width=53) (actual time=0.191..37108.503 rows=3248192 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 77956608
                     ->  Nested Loop  (cost=9.39..839141.15 rows=134 width=31) (actual time=0.174..27060.277 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=8.95..838548.52 rows=134 width=31) (actual time=0.156..13561.560 rows=3248192 loops=1)
                                 ->  Merge Join  (cost=8.41..838206.93 rows=134 width=35) (actual time=0.143..7362.366 rows=3248192 loops=1)
                                       Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                       Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                       Rows Removed by Join Filter: 9744576
                                       ->  Nested Loop  (cost=1.12..413598.91 rows=3029347 width=33) (actual time=0.079..2653.022 rows=3248192 loops=1)
                                             ->  Index Only Scan using q20_idx_2 on part  (cost=0.55..64483.79 rows=101014 width=4) (actual time=0.033..455.291 rows=108312 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 1891688
                                                   Heap Fetches: 0
                                             ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.13 rows=33 width=29) (actual time=0.006..0.017 rows=30 loops=108312)
                                                   Index Cond: (l_partkey = part.p_partkey)
                                                   Heap Fetches: 0
                                       ->  Materialize  (cost=0.43..201597.45 rows=7999258 width=14) (actual time=0.045..2229.202 rows=20559501 loops=1)
                                             ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..181599.30 rows=7999258 width=14) (actual time=0.042..850.667 rows=7999981 loops=1)
                                                   Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.54..2.54 rows=1 width=8) (actual time=0.001..0.002 rows=1 loops=3248192)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                                       Heap Fetches: 0
                           ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=3248192)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=3248192)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.006 rows=25 loops=1)
 Planning time: 5.560 ms
 Execution time: 41285.381 ms
(35 rows)

query 10 run 1
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1818648.95..1818649.00 rows=20 width=182) (actual time=15808.865..15808.869 rows=20 loops=1)
   ->  Sort  (cost=1818648.95..1820050.36 rows=560566 width=182) (actual time=15808.863..15808.865 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 30kB
         ->  GroupAggregate  (cost=1781309.85..1803732.49 rows=560566 width=182) (actual time=14386.603..15710.944 rows=381205 loops=1)
               Group Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
               ->  Sort  (cost=1781309.85..1782711.26 rows=560566 width=182) (actual time=14386.580..14865.716 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     Sort Method: external merge  Disk: 218232kB
                     ->  Hash Join  (cost=387854.56..1692200.54 rows=560566 width=182) (actual time=5810.317..12904.761 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=387852.99..1684491.19 rows=560566 width=160) (actual time=5810.305..12713.924 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=285922.96..1536446.66 rows=560566 width=16) (actual time=4876.129..10968.833 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..1189616.23 rows=14747301 width=16) (actual time=1.164..4472.877 rows=14808183 loops=1)
                                             Index Cond: (l_returnflag = 'R'::bpchar)
                                             Heap Fetches: 0
                                       ->  Hash  (cost=278794.59..278794.59 rows=570224 width=8) (actual time=4873.647..4873.647 rows=573160 loops=1)
                                             Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                             ->  Bitmap Heap Scan on orders  (cost=8973.23..278794.59 rows=570224 width=8) (actual time=166.846..4715.167 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   Heap Blocks: exact=233346
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8830.67 rows=570224 width=0) (actual time=115.559..115.559 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=50948.35..50948.35 rows=1500135 width=148) (actual time=933.617..933.617 rows=1500000 loops=1)
                                       Buckets: 262144  Batches: 16  Memory Usage: 18791kB
                                       ->  Seq Scan on customer  (cost=0.00..50948.35 rows=1500135 width=148) (actual time=0.002..490.927 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.008..0.008 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.004 rows=25 loops=1)
 Planning time: 28.329 ms
 Execution time: 15843.072 ms
(33 rows)

SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1818648.95..1818649.00 rows=20 width=182) (actual time=11820.792..11820.796 rows=20 loops=1)
   ->  Sort  (cost=1818648.95..1820050.36 rows=560566 width=182) (actual time=11820.791..11820.793 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 30kB
         ->  GroupAggregate  (cost=1781309.85..1803732.49 rows=560566 width=182) (actual time=10397.236..11722.231 rows=381205 loops=1)
               Group Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
               ->  Sort  (cost=1781309.85..1782711.26 rows=560566 width=182) (actual time=10397.214..10879.416 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     Sort Method: external merge  Disk: 218232kB
                     ->  Hash Join  (cost=387854.56..1692200.54 rows=560566 width=182) (actual time=2381.960..8910.255 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=387852.99..1684491.19 rows=560566 width=160) (actual time=2381.945..8722.761 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=285922.96..1536446.66 rows=560566 width=16) (actual time=1585.412..7125.069 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..1189616.23 rows=14747301 width=16) (actual time=0.060..3955.830 rows=14808183 loops=1)
                                             Index Cond: (l_returnflag = 'R'::bpchar)
                                             Heap Fetches: 0
                                       ->  Hash  (cost=278794.59..278794.59 rows=570224 width=8) (actual time=1584.049..1584.049 rows=573160 loops=1)
                                             Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                             ->  Bitmap Heap Scan on orders  (cost=8973.23..278794.59 rows=570224 width=8) (actual time=154.704..1461.984 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   Heap Blocks: exact=233346
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8830.67 rows=570224 width=0) (actual time=103.381..103.381 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=50948.35..50948.35 rows=1500135 width=148) (actual time=796.065..796.065 rows=1500000 loops=1)
                                       Buckets: 262144  Batches: 16  Memory Usage: 18791kB
                                       ->  Seq Scan on customer  (cost=0.00..50948.35 rows=1500135 width=148) (actual time=0.002..361.751 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.009..0.009 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.006 rows=25 loops=1)
 Planning time: 2.149 ms
 Execution time: 11854.577 ms
(33 rows)

query 11 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=626793.52..626793.52 rows=1 width=14) (actual time=3481.315..3481.315 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293168.59..293168.60 rows=1 width=10) (actual time=1479.634..1479.634 rows=1 loops=1)
           ->  Hash Join  (cost=2357.31..290768.81 rows=319970 width=10) (actual time=2.820..1362.213 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255214.58 rows=7999258 width=14) (actual time=0.033..696.508 rows=8000000 loops=1)
                 ->  Hash  (cost=2307.31..2307.31 rows=4000 width=4) (actual time=2.757..2.757 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=4) (actual time=0.487..2.381 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=55.29..2266.00 rows=4000 width=8) (actual time=0.477..1.910 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=0.296..0.296 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=333624.92..334424.84 rows=319970 width=14) (actual time=3481.314..3481.314 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=320026.19..332025.07 rows=319970 width=14) (actual time=3481.305..3481.305 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Rows Removed by Filter: 301833
               ->  Sort  (cost=320026.19..320826.12 rows=319970 width=14) (actual time=1809.418..1827.012 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 25961kB
                     ->  Hash Join  (cost=2357.31..290768.81 rows=319970 width=14) (actual time=23.350..1763.052 rows=320800 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255214.58 rows=7999258 width=18) (actual time=0.244..1024.284 rows=8000000 loops=1)
                           ->  Hash  (cost=2307.31..2307.31 rows=4000 width=4) (actual time=23.020..23.020 rows=4010 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                 ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=4) (actual time=1.858..22.263 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.014 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 24
                                       ->  Bitmap Heap Scan on supplier  (cost=55.29..2266.00 rows=4000 width=8) (actual time=1.841..21.682 rows=4010 loops=1)
                                             Recheck Cond: (s_nationkey = nation.n_nationkey)
                                             Heap Blocks: exact=1869
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=1.607..1.607 rows=4010 loops=1)
                                                   Index Cond: (s_nationkey = nation.n_nationkey)
 Planning time: 17.088 ms
 Execution time: 3482.106 ms
(43 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=626793.52..626793.52 rows=1 width=14) (actual time=3066.285..3066.285 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293168.59..293168.60 rows=1 width=10) (actual time=1477.226..1477.226 rows=1 loops=1)
           ->  Hash Join  (cost=2357.31..290768.81 rows=319970 width=10) (actual time=2.793..1360.958 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255214.58 rows=7999258 width=14) (actual time=0.031..696.122 rows=8000000 loops=1)
                 ->  Hash  (cost=2307.31..2307.31 rows=4000 width=4) (actual time=2.733..2.733 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=4) (actual time=0.499..2.394 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=55.29..2266.00 rows=4000 width=8) (actual time=0.489..1.933 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=0.309..0.309 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=333624.92..334424.84 rows=319970 width=14) (actual time=3066.284..3066.284 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=320026.19..332025.07 rows=319970 width=14) (actual time=3066.277..3066.277 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Rows Removed by Filter: 301833
               ->  Sort  (cost=320026.19..320826.12 rows=319970 width=14) (actual time=1399.112..1417.270 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 25961kB
                     ->  Hash Join  (cost=2357.31..290768.81 rows=319970 width=14) (actual time=3.773..1355.794 rows=320800 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255214.58 rows=7999258 width=18) (actual time=0.029..692.078 rows=8000000 loops=1)
                           ->  Hash  (cost=2307.31..2307.31 rows=4000 width=4) (actual time=3.715..3.715 rows=4010 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                 ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=4) (actual time=0.719..3.352 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 24
                                       ->  Bitmap Heap Scan on supplier  (cost=55.29..2266.00 rows=4000 width=8) (actual time=0.712..2.910 rows=4010 loops=1)
                                             Recheck Cond: (s_nationkey = nation.n_nationkey)
                                             Heap Blocks: exact=1869
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=0.524..0.524 rows=4010 loops=1)
                                                   Index Cond: (s_nationkey = nation.n_nationkey)
 Planning time: 0.960 ms
 Execution time: 3066.349 ms
(43 rows)

query 12 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1206103.94..1206103.95 rows=1 width=27) (actual time=37327.776..37327.777 rows=1 loops=1)
   ->  Sort  (cost=1206103.94..1206103.95 rows=1 width=27) (actual time=37327.775..37327.775 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=1206103.92..1206103.93 rows=1 width=27) (actual time=37327.762..37327.763 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Merge Join  (cost=590590.79..1200969.37 rows=293403 width=27) (actual time=33499.136..37153.891 rows=311258 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..568552.17 rows=15001382 width=20) (actual time=0.324..2700.380 rows=14999967 loops=1)
                     ->  Sort  (cost=590512.74..591246.25 rows=293403 width=15) (actual time=33498.725..33530.433 rows=311258 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 25513kB
                           ->  Index Scan using q12_idx_1 on lineitem  (cost=0.56..563868.05 rows=293403 width=15) (actual time=2.882..33266.530 rows=311258 loops=1)
                                 Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Planning time: 22.495 ms
 Execution time: 37328.579 ms
(16 rows)

SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1206103.94..1206103.95 rows=1 width=27) (actual time=5440.057..5440.057 rows=1 loops=1)
   ->  Sort  (cost=1206103.94..1206103.95 rows=1 width=27) (actual time=5440.056..5440.056 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=1206103.92..1206103.93 rows=1 width=27) (actual time=5440.045..5440.045 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Merge Join  (cost=590590.79..1200969.37 rows=293403 width=27) (actual time=2175.729..5274.308 rows=311258 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..568552.17 rows=15001382 width=20) (actual time=0.026..2171.431 rows=14999967 loops=1)
                     ->  Sort  (cost=590512.74..591246.25 rows=293403 width=15) (actual time=2175.672..2206.973 rows=311258 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 25513kB
                           ->  Index Scan using q12_idx_1 on lineitem  (cost=0.56..563868.05 rows=293403 width=15) (actual time=0.045..2075.430 rows=311258 loops=1)
                                 Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Planning time: 1.573 ms
 Execution time: 5440.137 ms
(16 rows)

query 13 run 1
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2792628.46..2792628.46 rows=1 width=8) (actual time=23252.105..23252.105 rows=1 loops=1)
   ->  Sort  (cost=2792628.46..2792628.96 rows=200 width=8) (actual time=23252.104..23252.104 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2792625.46..2792627.46 rows=200 width=8) (actual time=23252.085..23252.089 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  GroupAggregate  (cost=2383140.35..2770123.43 rows=1500135 width=8) (actual time=13754.839..23038.980 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Merge Left Join  (cost=2383140.35..2680122.67 rows=14999883 width=8) (actual time=13754.822..21746.889 rows=15337604 loops=1)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30734.45 rows=1500135 width=4) (actual time=0.463..194.656 rows=1500000 loops=1)
                                 Heap Fetches: 0
                           ->  Materialize  (cost=2383139.92..2458139.34 rows=14999883 width=8) (actual time=13754.353..19663.572 rows=14837583 loops=1)
                                 ->  Sort  (cost=2383139.92..2420639.63 rows=14999883 width=8) (actual time=13754.349..18547.210 rows=14837583 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external merge  Disk: 260888kB
                                       ->  Seq Scan on orders  (cost=0.00..448785.28 rows=14999883 width=8) (actual time=0.271..5327.682 rows=14837583 loops=1)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                             Rows Removed by Filter: 162417
 Planning time: 14.555 ms
 Execution time: 23288.128 ms
(21 rows)

SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2792628.46..2792628.46 rows=1 width=8) (actual time=22560.904..22560.905 rows=1 loops=1)
   ->  Sort  (cost=2792628.46..2792628.96 rows=200 width=8) (actual time=22560.902..22560.902 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2792625.46..2792627.46 rows=200 width=8) (actual time=22560.673..22560.678 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  GroupAggregate  (cost=2383140.35..2770123.43 rows=1500135 width=8) (actual time=13120.903..22342.824 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Merge Left Join  (cost=2383140.35..2680122.67 rows=14999883 width=8) (actual time=13120.886..21049.176 rows=15337604 loops=1)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30734.45 rows=1500135 width=4) (actual time=0.030..157.038 rows=1500000 loops=1)
                                 Heap Fetches: 0
                           ->  Materialize  (cost=2383139.92..2458139.34 rows=14999883 width=8) (actual time=13120.852..19013.337 rows=14837583 loops=1)
                                 ->  Sort  (cost=2383139.92..2420639.63 rows=14999883 width=8) (actual time=13120.849..17884.555 rows=14837583 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external merge  Disk: 260888kB
                                       ->  Seq Scan on orders  (cost=0.00..448785.28 rows=14999883 width=8) (actual time=0.032..4858.224 rows=14837583 loops=1)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                             Rows Removed by Filter: 162417
 Planning time: 0.630 ms
 Execution time: 22596.719 ms
(21 rows)

query 14 run 1
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=876086.56..876086.58 rows=1 width=33) (actual time=8148.943..8148.943 rows=1 loops=1)
   ->  Aggregate  (cost=876086.56..876086.58 rows=1 width=33) (actual time=8148.942..8148.942 rows=1 loops=1)
         ->  Hash Join  (cost=112508.46..863557.77 rows=715931 width=33) (actual time=1123.129..7632.659 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=12852.86..732498.20 rows=715931 width=16) (actual time=283.422..6056.986 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416569
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..12673.88 rows=715931 width=0) (actual time=186.117..186.117 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60981.71..60981.71 rows=2000071 width=25) (actual time=838.298..838.298 rows=2000000 loops=1)
                     Buckets: 524288  Batches: 8  Memory Usage: 18555kB
                     ->  Seq Scan on part  (cost=0.00..60981.71 rows=2000071 width=25) (actual time=0.005..530.926 rows=2000000 loops=1)
 Planning time: 23.929 ms
 Execution time: 8149.977 ms
(14 rows)

SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=876086.56..876086.58 rows=1 width=33) (actual time=4101.985..4101.985 rows=1 loops=1)
   ->  Aggregate  (cost=876086.56..876086.58 rows=1 width=33) (actual time=4101.983..4101.983 rows=1 loops=1)
         ->  Hash Join  (cost=112508.46..863557.77 rows=715931 width=33) (actual time=956.218..3634.526 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=12852.86..732498.20 rows=715931 width=16) (actual time=272.590..2349.996 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416569
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..12673.88 rows=715931 width=0) (actual time=175.660..175.660 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60981.71..60981.71 rows=2000071 width=25) (actual time=682.859..682.859 rows=2000000 loops=1)
                     Buckets: 524288  Batches: 8  Memory Usage: 18555kB
                     ->  Seq Scan on part  (cost=0.00..60981.71 rows=2000071 width=25) (actual time=0.005..384.269 rows=2000000 loops=1)
 Planning time: 1.390 ms
 Execution time: 4102.061 ms
(14 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2465240.31..2465241.50 rows=1 width=103) (actual time=22130.147..22130.147 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1223887.90..1223887.91 rows=1 width=32) (actual time=8081.815..8081.815 rows=1 loops=1)
           ->  HashAggregate  (cost=1223791.57..1223839.73 rows=3853 width=16) (actual time=8041.992..8075.175 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=41231.55..1200824.76 rows=2296681 width=16) (actual time=539.599..6183.770 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 21153354
                       Heap Blocks: exact=243444 lossy=424814
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40657.38 rows=2296681 width=0) (actual time=485.079..485.079 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1241352.41..1245934.20 rows=3853 width=103) (actual time=22130.146..22130.146 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4274.29 rows=100000 width=71) (actual time=0.444..19.554 rows=69998 loops=1)
         ->  Sort  (cost=1241352.12..1241361.75 rows=3853 width=36) (actual time=22106.677..22106.677 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1241016.68..1241122.64 rows=3853 width=36) (actual time=22087.673..22106.670 rows=1 loops=1)
                     ->  HashAggregate  (cost=1241016.68..1241084.11 rows=3853 width=16) (actual time=22087.672..22106.668 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=41231.55..1200824.76 rows=2296681 width=16) (actual time=608.675..11743.355 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Rows Removed by Index Recheck: 21153354
                                 Heap Blocks: exact=243444 lossy=424814
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40657.38 rows=2296681 width=0) (actual time=554.015..554.015 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 18.931 ms
 Execution time: 22130.549 ms
(30 rows)

DROP VIEW
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2465240.31..2465241.50 rows=1 width=103) (actual time=16816.766..16816.766 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1223887.90..1223887.91 rows=1 width=32) (actual time=8103.176..8103.176 rows=1 loops=1)
           ->  HashAggregate  (cost=1223791.57..1223839.73 rows=3853 width=16) (actual time=8063.369..8096.593 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=41231.55..1200824.76 rows=2296681 width=16) (actual time=539.571..6184.894 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 21153354
                       Heap Blocks: exact=243444 lossy=424814
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40657.38 rows=2296681 width=0) (actual time=485.527..485.527 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1241352.41..1245934.20 rows=3853 width=103) (actual time=16816.765..16816.765 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4274.29 rows=100000 width=71) (actual time=0.030..10.780 rows=69998 loops=1)
         ->  Sort  (cost=1241352.12..1241361.75 rows=3853 width=36) (actual time=16802.189..16802.189 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1241016.68..1241122.64 rows=3853 width=36) (actual time=16783.444..16802.183 rows=1 loops=1)
                     ->  HashAggregate  (cost=1241016.68..1241084.11 rows=3853 width=16) (actual time=16783.444..16802.182 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=41231.55..1200824.76 rows=2296681 width=16) (actual time=565.948..6756.252 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Rows Removed by Index Recheck: 21153354
                                 Heap Blocks: exact=243444 lossy=424814
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40657.38 rows=2296681 width=0) (actual time=512.419..512.419 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 1.781 ms
 Execution time: 16817.148 ms
(30 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=381973.60..381973.60 rows=1 width=40) (actual time=11232.246..11232.247 rows=1 loops=1)
   ->  Sort  (cost=381973.60..382045.22 rows=28647 width=40) (actual time=11232.245..11232.245 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=373905.57..381830.36 rows=28647 width=40) (actual time=10410.540..11227.282 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=373905.57..375433.23 rows=611066 width=40) (actual time=10410.485..10930.755 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60504kB
                     ->  Hash Join  (cost=98273.88..303244.17 rows=611066 width=40) (actual time=932.032..3188.172 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..187332.47 rows=3999629 width=8) (actual time=39.173..1473.329 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=1.062..37.926 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90982.77..90982.77 rows=305572 width=40) (actual time=892.223..892.223 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90982.77 rows=305572 width=40) (actual time=0.013..828.717 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning time: 16.413 ms
 Execution time: 11241.076 ms
(26 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=381973.60..381973.60 rows=1 width=40) (actual time=10713.750..10713.751 rows=1 loops=1)
   ->  Sort  (cost=381973.60..382045.22 rows=28647 width=40) (actual time=10713.750..10713.750 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=373905.57..381830.36 rows=28647 width=40) (actual time=9892.239..10708.839 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=373905.57..375433.23 rows=611066 width=40) (actual time=9892.185..10412.864 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60504kB
                     ->  Hash Join  (cost=98273.88..303244.17 rows=611066 width=40) (actual time=638.276..2697.738 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..187332.47 rows=3999629 width=8) (actual time=22.006..1269.115 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.086..21.947 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90982.77..90982.77 rows=305572 width=40) (actual time=615.630..615.630 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90982.77 rows=305572 width=40) (actual time=0.013..559.778 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning time: 0.828 ms
 Execution time: 10722.756 ms
(26 rows)

query 17 run 1
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1787497.34..1787497.35 rows=1 width=8) (actual time=23388.212..23388.212 rows=1 loops=1)
   ->  Aggregate  (cost=1787497.34..1787497.35 rows=1 width=8) (actual time=23388.211..23388.211 rows=1 loops=1)
         ->  Nested Loop  (cost=71084.88..1787455.23 rows=16840 width=8) (actual time=523.851..23384.477 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=71084.32..1782196.17 rows=1685 width=40) (actual time=522.950..22159.979 rows=1996 loops=1)
                     Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=0.56..1688576.26 rows=1800796 width=9) (actual time=2.679..21522.930 rows=1999333 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361659.88 rows=59980888 width=9) (actual time=0.740..12248.887 rows=59965994 loops=1)
                                 Heap Fetches: 0
                     ->  Sort  (cost=71083.75..71088.43 rows=1871 width=4) (actual time=513.112..514.350 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 142kB
                           ->  Seq Scan on part  (cost=0.00..70982.07 rows=1871 width=4) (actual time=0.819..512.372 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.98 rows=11 width=17) (actual time=0.564..0.610 rows=3 loops=1996)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning time: 25.540 ms
 Execution time: 23388.899 ms
(21 rows)

SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1787497.34..1787497.35 rows=1 width=8) (actual time=20920.267..20920.268 rows=1 loops=1)
   ->  Aggregate  (cost=1787497.34..1787497.35 rows=1 width=8) (actual time=20920.267..20920.267 rows=1 loops=1)
         ->  Nested Loop  (cost=71084.88..1787455.23 rows=16840 width=8) (actual time=371.889..20919.007 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=71084.32..1782196.17 rows=1685 width=40) (actual time=371.859..20886.369 rows=1996 loops=1)
                     Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=0.56..1688576.26 rows=1800796 width=9) (actual time=0.079..20402.259 rows=1999333 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361659.88 rows=59980888 width=9) (actual time=0.046..11317.360 rows=59965994 loops=1)
                                 Heap Fetches: 0
                     ->  Sort  (cost=71083.75..71088.43 rows=1871 width=4) (actual time=365.284..365.777 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 142kB
                           ->  Seq Scan on part  (cost=0.00..70982.07 rows=1871 width=4) (actual time=0.155..364.658 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.98 rows=11 width=17) (actual time=0.014..0.015 rows=3 loops=1996)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning time: 1.559 ms
 Execution time: 20920.311 ms
(21 rows)

query 18 run 1
SET
SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10028303.65..10028306.65 rows=100 width=44) (actual time=29402.396..29402.667 rows=99 loops=1)
   ->  GroupAggregate  (cost=10028303.65..10928016.97 rows=29990444 width=44) (actual time=29402.395..29402.661 rows=99 loops=1)
         Group Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
         ->  Sort  (cost=10028303.65..10103279.76 rows=29990444 width=44) (actual time=29402.386..29402.415 rows=693 loops=1)
               Sort Key: orders.o_totalprice DESC, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 79kB
               ->  Hash Join  (cost=78861.38..5644820.48 rows=29990444 width=44) (actual time=3023.066..29401.884 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=371.35..4697657.78 rows=29990444 width=25) (actual time=642.283..28642.433 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=1.00..2867428.82 rows=7500691 width=24) (actual time=486.483..21235.513 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..568552.17 rows=15001382 width=20) (actual time=0.250..3126.365 rows=14982724 loops=1)
                                 ->  Materialize  (cost=0.56..2073932.93 rows=14995222 width=4) (actual time=382.897..17274.881 rows=99 loops=1)
                                       ->  GroupAggregate  (cost=0.56..1886492.65 rows=14995222 width=9) (actual time=382.894..17274.751 rows=99 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 14999901
                                             ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361659.88 rows=59980888 width=9) (actual time=0.867..6126.529 rows=59986052 loops=1)
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361659.88 rows=59980888 width=9) (actual time=0.010..4850.028 rows=59916431 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=50948.35..50948.35 rows=1500135 width=23) (actual time=654.350..654.350 rows=1500000 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                           ->  Seq Scan on customer  (cost=0.00..50948.35 rows=1500135 width=23) (actual time=0.006..413.882 rows=1500000 loops=1)
 Planning time: 26.184 ms
 Execution time: 29403.465 ms
(27 rows)

SET
SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10028303.65..10028306.65 rows=100 width=44) (actual time=27786.821..27787.099 rows=99 loops=1)
   ->  GroupAggregate  (cost=10028303.65..10928016.97 rows=29990444 width=44) (actual time=27786.821..27787.095 rows=99 loops=1)
         Group Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
         ->  Sort  (cost=10028303.65..10103279.76 rows=29990444 width=44) (actual time=27786.812..27786.849 rows=693 loops=1)
               Sort Key: orders.o_totalprice DESC, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 79kB
               ->  Hash Join  (cost=78861.38..5644820.48 rows=29990444 width=44) (actual time=2718.863..27786.318 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=371.35..4697657.78 rows=29990444 width=25) (actual time=590.823..27161.193 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=1.00..2867428.82 rows=7500691 width=24) (actual time=435.832..19807.214 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..568552.17 rows=15001382 width=20) (actual time=0.030..2364.679 rows=14982724 loops=1)
                                 ->  Materialize  (cost=0.56..2073932.93 rows=14995222 width=4) (actual time=360.383..16632.592 rows=99 loops=1)
                                       ->  GroupAggregate  (cost=0.56..1886492.65 rows=14995222 width=9) (actual time=360.381..16632.474 rows=99 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 14999901
                                             ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361659.88 rows=59980888 width=9) (actual time=0.047..5579.831 rows=59986052 loops=1)
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361659.88 rows=59980888 width=9) (actual time=0.010..4809.696 rows=59916431 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=50948.35..50948.35 rows=1500135 width=23) (actual time=519.176..519.176 rows=1500000 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                           ->  Seq Scan on customer  (cost=0.00..50948.35 rows=1500135 width=23) (actual time=0.005..287.559 rows=1500000 loops=1)
 Planning time: 2.365 ms
 Execution time: 27787.227 ms
(27 rows)

query 19 run 1
SET
SET

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=143943.50..143943.51 rows=1 width=12) (actual time=3432.005..3432.005 rows=1 loops=1)
   ->  Aggregate  (cost=143943.50..143943.51 rows=1 width=12) (actual time=3432.005..3432.005 rows=1 loops=1)
         ->  Nested Loop  (cost=0.69..143934.65 rows=1180 width=12) (actual time=13.408..3428.338 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125984.02 rows=4983 width=30) (actual time=0.974..990.551 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.69..3.59 rows=1 width=21) (actual time=0.487..0.509 rows=0 loops=4781)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning time: 24.326 ms
 Execution time: 3432.665 ms
(13 rows)

SET
SET


 Limit  (cost=143943.50..143943.51 rows=1 width=12) (actual time=610.827..610.827 rows=1 loops=1)
   ->  Aggregate  (cost=143943.50..143943.51 rows=1 width=12) (actual time=610.825..610.825 rows=1 loops=1)
         ->  Nested Loop  (cost=0.69..143934.65 rows=1180 width=12) (actual time=1.552..610.010 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125984.02 rows=4983 width=30) (actual time=0.256..565.136 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.69..3.59 rows=1 width=21) (actual time=0.008..0.009 rows=0 loops=4781)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning time: 3.114 ms
 Execution time: 610.869 ms
(13 rows)

query 20 run 1
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2843516.82..2843516.83 rows=1 width=51) (actual time=53276.129..53276.130 rows=1 loops=1)
   ->  Sort  (cost=2843516.82..2843521.82 rows=2000 width=51) (actual time=53276.127..53276.127 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2586890.68..2843506.82 rows=2000 width=51) (actual time=29366.511..53274.016 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=55) (actual time=2.611..26.470 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=55.29..2266.00 rows=4000 width=59) (actual time=2.603..25.458 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=1865
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=1.310..1.310 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Materialize  (cost=2586835.39..2839579.58 rows=27 width=8) (actual time=6.818..10.180 rows=44445 loops=4095)
                     ->  Merge Join  (cost=2586835.39..2839579.44 rows=27 width=8) (actual time=27920.920..35905.732 rows=59002 loops=1)
                           Merge Cond: (partsupp.ps_partkey = lineitem.l_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  Nested Loop  (cost=0.98..121110.08 rows=356690 width=16) (actual time=0.571..517.268 rows=86872 loops=1)
                                 ->  Index Only Scan using q20_idx_2 on part  (cost=0.55..64483.79 rows=20203 width=4) (actual time=0.268..275.724 rows=21718 loops=1)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 1978282
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.62 rows=18 width=12) (actual time=0.009..0.010 rows=4 loops=21718)
                                       Index Cond: (ps_partkey = part.p_partkey)
                                       Heap Fetches: 0
                           ->  Materialize  (cost=2586834.40..2702776.19 rows=909348 width=40) (actual time=27919.970..34958.456 rows=5625848 loops=1)
                                 ->  GroupAggregate  (cost=2586834.40..2691409.34 rows=909348 width=13) (actual time=27919.966..34317.921 rows=5448473 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       ->  Sort  (cost=2586834.40..2609568.08 rows=9093472 width=13) (actual time=27919.951..31041.539 rows=9123091 loops=1)
                                             Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                             Sort Method: external merge  Disk: 205048kB
                                             ->  Bitmap Heap Scan on lineitem  (cost=163242.65..1424787.73 rows=9093472 width=13) (actual time=1873.889..20934.863 rows=9123688 loops=1)
                                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                   Rows Removed by Index Recheck: 27869248
                                                   Heap Blocks: exact=412819 lossy=635976
                                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..160969.29 rows=9093472 width=0) (actual time=1778.182..1778.182 rows=9123688 loops=1)
                                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Planning time: 24.464 ms
 Execution time: 53304.069 ms
(43 rows)

SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2843516.82..2843516.83 rows=1 width=51) (actual time=42296.358..42296.358 rows=1 loops=1)
   ->  Sort  (cost=2843516.82..2843521.82 rows=2000 width=51) (actual time=42296.357..42296.357 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2586890.68..2843506.82 rows=2000 width=51) (actual time=18590.046..42294.488 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=55) (actual time=0.623..10.676 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=55.29..2266.00 rows=4000 width=59) (actual time=0.615..9.940 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=1865
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=0.427..0.427 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Materialize  (cost=2586835.39..2839579.58 rows=27 width=8) (actual time=4.198..7.506 rows=44445 loops=4095)
                     ->  Merge Join  (cost=2586835.39..2839579.44 rows=27 width=8) (actual time=17192.330..24965.201 rows=59002 loops=1)
                           Merge Cond: (partsupp.ps_partkey = lineitem.l_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  Nested Loop  (cost=0.98..121110.08 rows=356690 width=16) (actual time=0.043..370.298 rows=86872 loops=1)
                                 ->  Index Only Scan using q20_idx_2 on part  (cost=0.55..64483.79 rows=20203 width=4) (actual time=0.029..253.958 rows=21718 loops=1)
                                       Filter: ((p_name)::text ~~ 'olive%'::text)
                                       Rows Removed by Filter: 1978282
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.62 rows=18 width=12) (actual time=0.004..0.005 rows=4 loops=21718)
                                       Index Cond: (ps_partkey = part.p_partkey)
                                       Heap Fetches: 0
                           ->  Materialize  (cost=2586834.40..2702776.19 rows=909348 width=40) (actual time=17191.911..24166.992 rows=5625848 loops=1)
                                 ->  GroupAggregate  (cost=2586834.40..2691409.34 rows=909348 width=13) (actual time=17191.909..23524.628 rows=5448473 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       ->  Sort  (cost=2586834.40..2609568.08 rows=9093472 width=13) (actual time=17191.895..20293.115 rows=9123091 loops=1)
                                             Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                             Sort Method: external merge  Disk: 205048kB
                                             ->  Bitmap Heap Scan on lineitem  (cost=163242.65..1424787.73 rows=9093472 width=13) (actual time=1708.220..11358.194 rows=9123688 loops=1)
                                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                   Rows Removed by Index Recheck: 27869248
                                                   Heap Blocks: exact=412819 lossy=635976
                                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..160969.29 rows=9093472 width=0) (actual time=1613.374..1613.374 rows=9123688 loops=1)
                                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
 Planning time: 2.354 ms
 Execution time: 42322.643 ms
(43 rows)

query 21 run 1
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2357574.55..2357574.56 rows=1 width=26) (actual time=21953.168..21953.178 rows=100 loops=1)
   ->  Sort  (cost=2357574.55..2357574.56 rows=1 width=26) (actual time=21953.167..21953.173 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=2357574.53..2357574.54 rows=1 width=26) (actual time=21951.094..21951.773 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Nested Loop Anti Join  (cost=2396.19..2357574.53 rows=1 width=26) (actual time=40.526..21916.655 rows=39281 loops=1)
                     ->  Nested Loop Semi Join  (cost=2395.63..2357569.79 rows=1 width=34) (actual time=40.517..20557.035 rows=704306 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 80163
                           ->  Hash Join  (cost=2395.06..1312282.93 rows=390537 width=38) (actual time=40.175..17943.841 rows=730985 loops=1)
                                 Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                 ->  Merge Join  (cost=37.75..1269186.98 rows=9822204 width=12) (actual time=0.680..15941.575 rows=18321400 loops=1)
                                       Merge Cond: (orders.o_orderkey = l1.l_orderkey)
                                       ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..268469.59 rows=7369679 width=4) (actual time=0.257..1324.766 rows=7309184 loops=1)
                                             Index Cond: (o_orderstatus = 'F'::bpchar)
                                             Heap Fetches: 0
                                       ->  Index Scan using q4_idx_1 on lineitem l1  (cost=0.56..834110.07 rows=19993629 width=8) (actual time=0.418..10097.751 rows=37929347 loops=1)
                                 ->  Hash  (cost=2307.31..2307.31 rows=4000 width=30) (actual time=39.428..39.428 rows=3991 loops=1)
                                       Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                       ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=30) (actual time=2.139..38.405 rows=3991 loops=1)
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.007 rows=1 loops=1)
                                                   Filter: (n_name = 'PERU'::bpchar)
                                                   Rows Removed by Filter: 24
                                             ->  Bitmap Heap Scan on supplier  (cost=55.29..2266.00 rows=4000 width=34) (actual time=2.131..37.716 rows=3991 loops=1)
                                                   Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                   Heap Blocks: exact=1865
                                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=1.947..1.947 rows=3991 loops=1)
                                                         Index Cond: (s_nationkey = nation.n_nationkey)
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=730985)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
                     ->  Index Only Scan using q21_idx_1 on lineitem l3  (cost=0.56..2.65 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=704306)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 2
                           Heap Fetches: 0
 Planning time: 29.026 ms
 Execution time: 21953.274 ms
(39 rows)

SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2357574.55..2357574.56 rows=1 width=26) (actual time=18487.272..18487.284 rows=100 loops=1)
   ->  Sort  (cost=2357574.55..2357574.56 rows=1 width=26) (actual time=18487.270..18487.276 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=2357574.53..2357574.54 rows=1 width=26) (actual time=18485.180..18485.885 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Nested Loop Anti Join  (cost=2396.19..2357574.53 rows=1 width=26) (actual time=13.546..18455.920 rows=39281 loops=1)
                     ->  Nested Loop Semi Join  (cost=2395.63..2357569.79 rows=1 width=34) (actual time=13.539..17154.839 rows=704306 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 80163
                           ->  Hash Join  (cost=2395.06..1312282.93 rows=390537 width=38) (actual time=13.496..15074.784 rows=730985 loops=1)
                                 Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                 ->  Merge Join  (cost=37.75..1269186.98 rows=9822204 width=12) (actual time=0.075..13251.670 rows=18321400 loops=1)
                                       Merge Cond: (orders.o_orderkey = l1.l_orderkey)
                                       ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..268469.59 rows=7369679 width=4) (actual time=0.044..1205.786 rows=7309184 loops=1)
                                             Index Cond: (o_orderstatus = 'F'::bpchar)
                                             Heap Fetches: 0
                                       ->  Index Scan using q4_idx_1 on lineitem l1  (cost=0.56..834110.07 rows=19993629 width=8) (actual time=0.028..7641.824 rows=37929347 loops=1)
                                 ->  Hash  (cost=2307.31..2307.31 rows=4000 width=30) (actual time=13.387..13.387 rows=3991 loops=1)
                                       Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                       ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=30) (actual time=0.560..12.544 rows=3991 loops=1)
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=1)
                                                   Filter: (n_name = 'PERU'::bpchar)
                                                   Rows Removed by Filter: 24
                                             ->  Bitmap Heap Scan on supplier  (cost=55.29..2266.00 rows=4000 width=34) (actual time=0.553..12.008 rows=3991 loops=1)
                                                   Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                   Heap Blocks: exact=1865
                                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=0.367..0.367 rows=3991 loops=1)
                                                         Index Cond: (s_nationkey = nation.n_nationkey)
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=730985)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
                     ->  Index Only Scan using q21_idx_1 on lineitem l3  (cost=0.56..2.65 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=704306)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 2
                           Heap Fetches: 0
 Planning time: 3.035 ms
 Execution time: 18487.594 ms
(39 rows)

query 22 run 1
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=162013.63..162013.63 rows=1 width=22) (actual time=2338.283..2338.284 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75444.96..75444.97 rows=1 width=6) (actual time=1043.882..1043.883 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75325.54 rows=47766 width=6) (actual time=0.007..988.276 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  Sort  (cost=86568.66..86588.59 rows=7972 width=22) (actual time=2338.282..2338.282 rows=1 loops=1)
         Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=86389.29..86528.80 rows=7972 width=22) (actual time=2338.255..2338.264 rows=7 loops=1)
               Group Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Nested Loop Anti Join  (cost=0.43..86329.50 rows=7972 width=22) (actual time=1043.930..2306.761 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75325.54 rows=17502 width=26) (actual time=1043.909..1617.961 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.66 rows=18 width=4) (actual time=0.003..0.003 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 12.684 ms
 Execution time: 2338.333 ms
(20 rows)

SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=162013.63..162013.63 rows=1 width=22) (actual time=1705.392..1705.392 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75444.96..75444.97 rows=1 width=6) (actual time=789.210..789.210 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75325.54 rows=47766 width=6) (actual time=0.007..738.271 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  Sort  (cost=86568.66..86588.59 rows=7972 width=22) (actual time=1705.392..1705.392 rows=1 loops=1)
         Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=86389.29..86528.80 rows=7972 width=22) (actual time=1705.366..1705.376 rows=7 loops=1)
               Group Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Nested Loop Anti Join  (cost=0.43..86329.50 rows=7972 width=22) (actual time=789.247..1680.643 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75325.54 rows=17502 width=26) (actual time=789.235..1328.537 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.66 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 0.608 ms
 Execution time: 1705.440 ms
(20 rows)

