query 1 run 1
SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1906419.64..1906419.85 rows=1 width=236) (actual time=28211.836..28211.836 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1906419.64..1906420.89 rows=6 width=236) (actual time=28211.836..28211.836 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Sort  (cost=1906419.64..1906419.70 rows=24 width=236) (actual time=28211.810..28211.811 rows=6 loops=1)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 35kB
               ->  Gather  (cost=1906416.52..1906419.09 rows=24 width=236) (actual time=28210.198..28211.091 rows=20 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=1905416.52..1905416.69 rows=6 width=236) (actual time=28202.896..28202.903 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..1312597.32 rows=14820480 width=25) (actual time=0.112..6286.313 rows=11856890 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 140321
 Planning time: 19.446 ms
 Execution time: 28211.989 ms
(16 rows)

SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1906419.64..1906419.85 rows=1 width=236) (actual time=25955.134..25955.134 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1906419.64..1906420.89 rows=6 width=236) (actual time=25955.133..25955.133 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Sort  (cost=1906419.64..1906419.70 rows=24 width=236) (actual time=25955.108..25955.109 rows=6 loops=1)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 35kB
               ->  Gather  (cost=1906416.52..1906419.09 rows=24 width=236) (actual time=25954.238..25955.139 rows=20 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=1905416.52..1905416.69 rows=6 width=236) (actual time=25951.355..25951.364 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..1312597.32 rows=14820480 width=25) (actual time=0.026..3685.531 rows=11856890 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 140321
 Planning time: 1.195 ms
 Execution time: 25955.283 ms
(16 rows)

query 2 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=501116.61..501116.61 rows=1 width=192) (actual time=63301.705..63301.719 rows=100 loops=1)
   ->  Sort  (cost=501116.61..501116.61 rows=1 width=192) (actual time=63301.704..63301.710 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Nested Loop  (cost=53.11..501116.60 rows=1 width=192) (actual time=39.067..63298.569 rows=4737 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.007..0.015 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
               ->  Materialize  (cost=53.11..501113.90 rows=1 width=170) (actual time=5.353..12658.740 rows=4737 loops=5)
                     ->  Nested Loop  (cost=53.11..501113.89 rows=1 width=170) (actual time=26.761..63284.421 rows=4737 loops=1)
                           Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
                           Rows Removed by Join Filter: 473695263
                           ->  Nested Loop  (cost=53.11..496642.89 rows=1 width=34) (actual time=2.676..1325.410 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..54635.48 rows=8089 width=30) (actual time=0.702..292.937 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=52.56..54.63 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=52.11..52.12 rows=1 width=32) (actual time=0.122..0.122 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.54..52.10 rows=4 width=6) (actual time=0.108..0.118 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.54..50.82 rows=18 width=10) (actual time=0.087..0.115 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.97..49.01 rows=18 width=10) (actual time=0.086..0.112 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.75 rows=18 width=10) (actual time=0.075..0.076 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.54..2.56 rows=1 width=8) (actual time=0.008..0.008 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.020..0.020 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.005..0.013 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..4.890 rows=100000 loops=4737)
 Planning time: 25.156 ms
 Execution time: 63301.827 ms
(50 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=501116.61..501116.61 rows=1 width=192) (actual time=62436.046..62436.059 rows=100 loops=1)
   ->  Sort  (cost=501116.61..501116.61 rows=1 width=192) (actual time=62436.045..62436.053 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Nested Loop  (cost=53.11..501116.60 rows=1 width=192) (actual time=18.245..62433.032 rows=4737 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.009..0.015 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
               ->  Materialize  (cost=53.11..501113.90 rows=1 width=170) (actual time=2.241..12485.672 rows=4737 loops=5)
                     ->  Nested Loop  (cost=53.11..501113.89 rows=1 width=170) (actual time=11.203..62419.304 rows=4737 loops=1)
                           Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
                           Rows Removed by Join Filter: 473695263
                           ->  Nested Loop  (cost=53.11..496642.89 rows=1 width=34) (actual time=0.084..360.153 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.55..54635.48 rows=8089 width=30) (actual time=0.018..89.632 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=52.56..54.63 rows=1 width=14) (actual time=0.001..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=52.11..52.12 rows=1 width=32) (actual time=0.028..0.028 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.54..52.10 rows=4 width=6) (actual time=0.020..0.024 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.54..50.82 rows=18 width=10) (actual time=0.011..0.021 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.97..49.01 rows=18 width=10) (actual time=0.009..0.018 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.75 rows=18 width=10) (actual time=0.005..0.005 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.54..2.56 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.010..0.010 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.005 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..4.924 rows=100000 loops=4737)
 Planning time: 1.929 ms
 Execution time: 62436.145 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2882245.14..2882245.17 rows=10 width=44) (actual time=15816.893..15816.895 rows=10 loops=1)
   ->  Sort  (cost=2882245.14..2890170.03 rows=3169955 width=44) (actual time=15816.892..15816.892 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2718644.90..2813743.55 rows=3169955 width=44) (actual time=15608.830..15795.918 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=2718644.90..2726569.79 rows=3169955 width=24) (actual time=15608.812..15631.428 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 31119kB
                     ->  Gather  (cost=575388.08..2329917.67 rows=3169955 width=24) (actual time=5601.174..15517.396 rows=301530 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Hash Join  (cost=574388.08..2011922.17 rows=792489 width=24) (actual time=5811.423..15371.114 rows=60306 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..1312597.32 rows=8129035 width=16) (actual time=0.359..7866.452 rows=6506846 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 5490365
                                 ->  Hash  (cost=548962.96..548962.96 rows=1462649 width=12) (actual time=5804.654..5804.655 rows=1451805 loops=5)
                                       Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                                       ->  Hash Join  (cost=58503.75..548962.96 rows=1462649 width=12) (actual time=631.308..5473.203 rows=1451805 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Seq Scan on orders  (cost=0.00..448808.89 rows=7206356 width=16) (actual time=0.056..2918.271 rows=7239437 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 7760563
                                             ->  Hash  (cost=54697.94..54697.94 rows=304465 width=4) (actual time=630.100..630.100 rows=300276 loops=5)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                                   ->  Seq Scan on customer  (cost=0.00..54697.94 rows=304465 width=4) (actual time=0.041..575.787 rows=300276 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 1199724
 Planning time: 31.875 ms
 Execution time: 15817.198 ms
(31 rows)

SET
SET
SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2882245.14..2882245.17 rows=10 width=44) (actual time=10646.656..10646.657 rows=10 loops=1)
   ->  Sort  (cost=2882245.14..2890170.03 rows=3169955 width=44) (actual time=10646.655..10646.655 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2718644.90..2813743.55 rows=3169955 width=44) (actual time=10440.715..10627.355 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=2718644.90..2726569.79 rows=3169955 width=24) (actual time=10440.697..10463.340 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 31119kB
                     ->  Gather  (cost=575388.08..2329917.67 rows=3169955 width=24) (actual time=5025.192..10339.088 rows=301530 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Hash Join  (cost=574388.08..2011922.17 rows=792489 width=24) (actual time=5390.375..10218.730 rows=60306 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..1312597.32 rows=8129035 width=16) (actual time=0.059..3023.752 rows=6506846 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 5490365
                                 ->  Hash  (cost=548962.96..548962.96 rows=1462649 width=12) (actual time=5385.949..5385.949 rows=1451805 loops=5)
                                       Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                                       ->  Hash Join  (cost=58503.75..548962.96 rows=1462649 width=12) (actual time=372.104..5059.612 rows=1451805 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Seq Scan on orders  (cost=0.00..448808.89 rows=7206356 width=16) (actual time=0.049..2796.877 rows=7239437 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 7760563
                                             ->  Hash  (cost=54697.94..54697.94 rows=304465 width=4) (actual time=370.320..370.320 rows=300276 loops=5)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                                   ->  Seq Scan on customer  (cost=0.00..54697.94 rows=304465 width=4) (actual time=0.030..310.324 rows=300276 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 1199724
 Planning time: 2.000 ms
 Execution time: 10647.033 ms
(31 rows)

query 4 run 1
SET
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=623374.02..623374.06 rows=1 width=24) (actual time=3024.762..3024.762 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=623374.02..623374.22 rows=5 width=24) (actual time=3024.761..3024.761 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Sort  (cost=623374.02..623374.07 rows=20 width=24) (actual time=3024.756..3024.756 rows=6 loops=1)
               Sort Key: orders.o_orderpriority
               Sort Method: quicksort  Memory: 26kB
               ->  Gather  (cost=623371.54..623373.59 rows=20 width=24) (actual time=3024.717..3034.714 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=622371.54..622371.59 rows=5 width=24) (actual time=3012.145..3012.146 rows=5 loops=5)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=0.56..621706.01 rows=133106 width=16) (actual time=0.292..2962.002 rows=102764 loops=5)
                                 ->  Parallel Seq Scan on orders  (cost=0.00..317530.27 rows=133168 width=20) (actual time=0.025..1551.648 rows=112085 loops=5)
                                       Filter: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Rows Removed by Filter: 2887915
                                 ->  Index Only Scan using q21_idx_2 on lineitem  (cost=0.56..2.56 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=560424)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
 Planning time: 23.174 ms
 Execution time: 3035.016 ms
(20 rows)

SET
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=623374.02..623374.06 rows=1 width=24) (actual time=1055.201..1055.202 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=623374.02..623374.22 rows=5 width=24) (actual time=1055.201..1055.201 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Sort  (cost=623374.02..623374.07 rows=20 width=24) (actual time=1055.196..1055.196 rows=6 loops=1)
               Sort Key: orders.o_orderpriority
               Sort Method: quicksort  Memory: 26kB
               ->  Gather  (cost=623371.54..623373.59 rows=20 width=24) (actual time=1054.863..1066.336 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=622371.54..622371.59 rows=5 width=24) (actual time=1051.144..1051.144 rows=5 loops=5)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=0.56..621706.01 rows=133106 width=16) (actual time=0.058..1019.773 rows=102764 loops=5)
                                 ->  Parallel Seq Scan on orders  (cost=0.00..317530.27 rows=133168 width=20) (actual time=0.036..624.974 rows=112085 loops=5)
                                       Filter: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Rows Removed by Filter: 2887915
                                 ->  Index Only Scan using q21_idx_2 on lineitem  (cost=0.56..2.56 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=560424)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
 Planning time: 1.222 ms
 Execution time: 1066.424 ms
(20 rows)

query 5 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=694984.38..694984.39 rows=1 width=58) (actual time=5444.451..5444.451 rows=1 loops=1)
   ->  Sort  (cost=694984.38..694984.45 rows=25 width=58) (actual time=5444.450..5444.450 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=694982.95..694984.26 rows=25 width=58) (actual time=5444.423..5444.436 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=694982.95..694983.20 rows=100 width=58) (actual time=5444.412..5444.415 rows=25 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 28kB
                     ->  Gather  (cost=694743.52..694979.62 rows=100 width=58) (actual time=5431.588..5473.510 rows=25 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=693743.52..693969.62 rows=25 width=58) (actual time=5423.490..5431.416 rows=5 loops=5)
                                 Group Key: nation.n_name
                                 ->  Sort  (cost=693743.52..693788.68 rows=18063 width=38) (actual time=5421.785..5422.958 rows=14407 loops=5)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1515kB
                                       ->  Hash Join  (cost=68047.46..692466.40 rows=18063 width=38) (actual time=727.520..5412.596 rows=14407 loops=5)
                                             Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                             ->  Nested Loop  (cost=63326.47..684176.94 rows=451711 width=50) (actual time=682.757..5270.299 rows=363065 loops=5)
                                                   ->  Hash Join  (cost=63325.90..384104.34 rows=112980 width=38) (actual time=682.047..2055.576 rows=90680 loops=5)
                                                         Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..317530.27 rows=564900 width=8) (actual time=0.069..1251.944 rows=455328 loops=5)
                                                               Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                               Rows Removed by Filter: 2544672
                                                         ->  Hash  (cost=59575.71..59575.71 rows=300015 width=38) (actual time=681.013..681.013 rows=299436 loops=5)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                                               ->  Hash Join  (cost=2.53..59575.71 rows=300015 width=38) (actual time=0.073..617.935 rows=299436 loops=5)
                                                                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                                     ->  Seq Scan on customer  (cost=0.00..50947.75 rows=1500075 width=8) (actual time=0.032..422.088 rows=1500000 loops=5)
                                                                     ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.029..0.029 rows=5 loops=5)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.023..0.028 rows=5 loops=5)
                                                                                 Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.005..0.006 rows=25 loops=5)
                                                                                 ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=5)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=5)
                                                                                             Filter: (r_name = 'AMERICA'::bpchar)
                                                                                             Rows Removed by Filter: 4
                                                   ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.034..0.035 rows=4 loops=453399)
                                                         Index Cond: (l_orderkey = orders.o_orderkey)
                                                         Heap Fetches: 0
                                             ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=42.818..42.818 rows=100000 loops=5)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                                   ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.017..22.945 rows=100000 loops=5)
 Planning time: 37.291 ms
 Execution time: 5473.711 ms
(48 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=694984.38..694984.39 rows=1 width=58) (actual time=2094.898..2094.899 rows=1 loops=1)
   ->  Sort  (cost=694984.38..694984.45 rows=25 width=58) (actual time=2094.896..2094.896 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=694982.95..694984.26 rows=25 width=58) (actual time=2094.868..2094.882 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=694982.95..694983.20 rows=100 width=58) (actual time=2094.857..2094.860 rows=25 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 28kB
                     ->  Gather  (cost=694743.52..694979.62 rows=100 width=58) (actual time=2079.693..2126.614 rows=25 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=693743.52..693969.62 rows=25 width=58) (actual time=2076.499..2083.837 rows=5 loops=5)
                                 Group Key: nation.n_name
                                 ->  Sort  (cost=693743.52..693788.68 rows=18063 width=38) (actual time=2074.802..2075.994 rows=14407 loops=5)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1610kB
                                       ->  Hash Join  (cost=68047.46..692466.40 rows=18063 width=38) (actual time=507.851..2066.211 rows=14407 loops=5)
                                             Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                             ->  Nested Loop  (cost=63326.47..684176.94 rows=451711 width=50) (actual time=458.486..1926.332 rows=363065 loops=5)
                                                   ->  Hash Join  (cost=63325.90..384104.34 rows=112980 width=38) (actual time=458.427..1245.662 rows=90680 loops=5)
                                                         Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..317530.27 rows=564900 width=8) (actual time=0.057..668.098 rows=455328 loops=5)
                                                               Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                               Rows Removed by Filter: 2544672
                                                         ->  Hash  (cost=59575.71..59575.71 rows=300015 width=38) (actual time=457.489..457.489 rows=299436 loops=5)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                                               ->  Hash Join  (cost=2.53..59575.71 rows=300015 width=38) (actual time=0.068..387.519 rows=299436 loops=5)
                                                                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                                     ->  Seq Scan on customer  (cost=0.00..50947.75 rows=1500075 width=8) (actual time=0.028..113.503 rows=1500000 loops=5)
                                                                     ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.029..0.029 rows=5 loops=5)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.022..0.027 rows=5 loops=5)
                                                                                 Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.005..0.007 rows=25 loops=5)
                                                                                 ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=5)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=5)
                                                                                             Filter: (r_name = 'AMERICA'::bpchar)
                                                                                             Rows Removed by Filter: 4
                                                   ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.006..0.007 rows=4 loops=453399)
                                                         Index Cond: (l_orderkey = orders.o_orderkey)
                                                         Heap Fetches: 0
                                             ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=49.102..49.102 rows=100000 loops=5)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                                   ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.019..26.012 rows=100000 loops=5)
 Planning time: 3.797 ms
 Execution time: 2126.822 ms
(48 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1169258.43..1169258.44 rows=1 width=32) (actual time=14122.374..14122.375 rows=1 loops=1)
   ->  Aggregate  (cost=1169258.43..1169258.44 rows=1 width=32) (actual time=14122.372..14122.372 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=228372.84..1163325.30 rows=1186625 width=12) (actual time=1433.314..13458.161 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 21866393
               Heap Blocks: exact=238202 lossy=424766
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..228076.19 rows=1186625 width=0) (actual time=1381.431..1381.431 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 20.791 ms
 Execution time: 14122.437 ms
(10 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1169258.43..1169258.44 rows=1 width=32) (actual time=8912.106..8912.106 rows=1 loops=1)
   ->  Aggregate  (cost=1169258.43..1169258.44 rows=1 width=32) (actual time=8912.106..8912.106 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=228372.84..1163325.30 rows=1186625 width=12) (actual time=1294.289..8425.026 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 21866393
               Heap Blocks: exact=238202 lossy=424766
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..228076.19 rows=1186625 width=0) (actual time=1243.707..1243.707 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 1.417 ms
 Execution time: 8912.150 ms
(10 rows)

query 7 run 1
SET
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1777936.42..1777936.49 rows=1 width=92) (actual time=15272.590..15272.590 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1777936.42..1778716.69 rows=10068 width=92) (actual time=15272.588..15272.588 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=1777936.42..1778037.10 rows=40272 width=92) (actual time=15272.578..15272.578 rows=6 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 27kB
               ->  Gather  (cost=1770388.89..1774856.11 rows=40272 width=92) (actual time=15259.371..15312.162 rows=20 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=1769388.89..1769828.91 rows=10068 width=92) (actual time=15251.836..15257.979 rows=4 loops=5)
                           Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           ->  Sort  (cost=1769388.89..1769426.58 rows=15076 width=72) (actual time=15248.325..15249.562 rows=11559 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                                 Sort Method: quicksort  Memory: 2004kB
                                 ->  Hash Join  (cost=63052.53..1768342.62 rows=15076 width=72) (actual time=688.101..15236.657 rows=11559 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                       Rows Removed by Join Filter: 11632
                                       ->  Nested Loop  (cost=59275.13..1762551.75 rows=362260 width=46) (actual time=652.547..15099.716 rows=289625 loops=5)
                                             ->  Hash Join  (cost=59274.57..375116.96 rows=300066 width=30) (actual time=650.284..2511.305 rows=238235 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..298776.18 rows=3750818 width=8) (actual time=0.077..1094.925 rows=3000000 loops=5)
                                                   ->  Hash  (cost=57774.49..57774.49 rows=120006 width=30) (actual time=649.563..649.563 rows=119622 loops=5)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                                         ->  Hash Join  (cost=1.40..57774.49 rows=120006 width=30) (actual time=0.069..624.024 rows=119622 loops=5)
                                                               Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                               ->  Seq Scan on customer  (cost=0.00..50947.75 rows=1500075 width=8) (actual time=0.041..442.766 rows=1500000 loops=5)
                                                               ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.016..0.016 rows=2 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.012..0.014 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..4.61 rows=1 width=24) (actual time=0.052..0.052 rows=1 loops=1191175)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                                   Rows Removed by Filter: 3
                                       ->  Hash  (cost=3677.40..3677.40 rows=8000 width=30) (actual time=30.476..30.476 rows=7981 loops=5)
                                             Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                             ->  Hash Join  (cost=1.40..3677.40 rows=8000 width=30) (actual time=0.031..29.212 rows=7981 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.012..16.543 rows=100000 loops=5)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.013 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.013 rows=2 loops=5)
                                                               Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                               Rows Removed by Filter: 23
 Planning time: 36.500 ms
 Execution time: 15312.311 ms
(48 rows)

SET
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1777936.42..1777936.49 rows=1 width=92) (actual time=4392.920..4392.920 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1777936.42..1778716.69 rows=10068 width=92) (actual time=4392.918..4392.918 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=1777936.42..1778037.10 rows=40272 width=92) (actual time=4392.907..4392.908 rows=6 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 27kB
               ->  Gather  (cost=1770388.89..1774856.11 rows=40272 width=92) (actual time=4379.208..4429.790 rows=20 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=1769388.89..1769828.91 rows=10068 width=92) (actual time=4377.528..4383.751 rows=4 loops=5)
                           Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           ->  Sort  (cost=1769388.89..1769426.58 rows=15076 width=72) (actual time=4374.070..4376.054 rows=11559 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                                 Sort Method: quicksort  Memory: 1979kB
                                 ->  Hash Join  (cost=63052.53..1768342.62 rows=15076 width=72) (actual time=516.578..4363.932 rows=11559 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                       Rows Removed by Join Filter: 11632
                                       ->  Nested Loop  (cost=59275.13..1762551.75 rows=362260 width=46) (actual time=476.522..4233.466 rows=289625 loops=5)
                                             ->  Hash Join  (cost=59274.57..375116.96 rows=300066 width=30) (actual time=476.467..1597.657 rows=238235 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..298776.18 rows=3750818 width=8) (actual time=0.032..398.950 rows=3000000 loops=5)
                                                   ->  Hash  (cost=57774.49..57774.49 rows=120006 width=30) (actual time=476.129..476.129 rows=119622 loops=5)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                                         ->  Hash Join  (cost=1.40..57774.49 rows=120006 width=30) (actual time=0.039..451.581 rows=119622 loops=5)
                                                               Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                               ->  Seq Scan on customer  (cost=0.00..50947.75 rows=1500075 width=8) (actual time=0.019..265.404 rows=1500000 loops=5)
                                                               ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.012..0.012 rows=2 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.011 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..4.61 rows=1 width=24) (actual time=0.010..0.011 rows=1 loops=1191175)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                                   Rows Removed by Filter: 3
                                       ->  Hash  (cost=3677.40..3677.40 rows=8000 width=30) (actual time=39.746..39.746 rows=7981 loops=5)
                                             Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                             ->  Hash Join  (cost=1.40..3677.40 rows=8000 width=30) (actual time=0.042..37.609 rows=7981 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.019..20.347 rows=100000 loops=5)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.019..0.019 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.016..0.018 rows=2 loops=5)
                                                               Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                               Rows Removed by Filter: 23
 Planning time: 3.947 ms
 Execution time: 4429.940 ms
(48 rows)

query 8 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=572370.88..572370.96 rows=1 width=40) (actual time=8488.111..8488.112 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=572370.88..572569.37 rows=2406 width=40) (actual time=8488.109..8488.109 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=572370.88..572394.94 rows=9624 width=72) (actual time=8488.093..8488.094 rows=6 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 26kB
               ->  Gather  (cost=570586.68..571734.13 rows=9624 width=72) (actual time=8482.095..8530.330 rows=10 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=569586.68..569771.73 rows=2406 width=72) (actual time=8474.620..8476.401 rows=2 loops=5)
                           Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           ->  Sort  (cost=569586.68..569601.89 rows=6086 width=46) (actual time=8472.862..8473.262 rows=4768 loops=5)
                                 Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                                 Sort Method: quicksort  Memory: 556kB
                                 ->  Hash Join  (cost=67799.46..569204.13 rows=6086 width=46) (actual time=743.554..8469.557 rows=4768 loops=5)
                                       Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                       ->  Hash Join  (cost=67797.90..569088.46 rows=6086 width=20) (actual time=743.488..8461.898 rows=4768 loops=5)
                                             Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                             ->  Hash Join  (cost=63326.90..564533.78 rows=6086 width=20) (actual time=701.720..8417.022 rows=4768 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Nested Loop  (cost=1.00..501032.90 rows=30430 width=24) (actual time=2.886..7714.320 rows=23719 loops=5)
                                                         ->  Nested Loop  (cost=0.56..58751.82 rows=99974 width=20) (actual time=1.171..1153.035 rows=77904 loops=5)
                                                               ->  Parallel Seq Scan on part  (cost=0.00..47230.97 rows=3333 width=4) (actual time=0.306..135.118 rows=2602 loops=5)
                                                                     Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                     Rows Removed by Filter: 397398
                                                               ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.13 rows=33 width=24) (actual time=0.311..0.385 rows=30 loops=13011)
                                                                     Index Cond: (l_partkey = part.p_partkey)
                                                                     Heap Fetches: 0
                                                         ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=12) (actual time=0.084..0.084 rows=0 loops=389521)
                                                               Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 1
                                                   ->  Hash  (cost=59575.71..59575.71 rows=300015 width=4) (actual time=690.464..690.464 rows=299436 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                         ->  Hash Join  (cost=2.53..59575.71 rows=300015 width=4) (actual time=0.109..639.317 rows=299436 loops=5)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Seq Scan on customer  (cost=0.00..50947.75 rows=1500075 width=8) (actual time=0.053..443.823 rows=1500000 loops=5)
                                                               ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.040..0.040 rows=5 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.034..0.039 rows=5 loops=5)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.004..0.006 rows=25 loops=5)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=5)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=41.445..41.445 rows=100000 loops=5)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                                   ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.018..24.301 rows=100000 loops=5)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.029..0.029 rows=25 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.014..0.018 rows=25 loops=5)
 Planning time: 44.012 ms
 Execution time: 8530.506 ms
(55 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=572370.88..572370.96 rows=1 width=40) (actual time=1450.517..1450.517 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=572370.88..572569.37 rows=2406 width=40) (actual time=1450.516..1450.516 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=572370.88..572394.94 rows=9624 width=72) (actual time=1450.496..1450.498 rows=6 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 26kB
               ->  Gather  (cost=570586.68..571734.13 rows=9624 width=72) (actual time=1442.858..1488.015 rows=10 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=569586.68..569771.73 rows=2406 width=72) (actual time=1437.708..1439.464 rows=2 loops=5)
                           Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           ->  Sort  (cost=569586.68..569601.89 rows=6086 width=46) (actual time=1435.942..1436.346 rows=4768 loops=5)
                                 Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                                 Sort Method: quicksort  Memory: 563kB
                                 ->  Hash Join  (cost=67799.46..569204.13 rows=6086 width=46) (actual time=496.587..1433.732 rows=4768 loops=5)
                                       Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                       ->  Hash Join  (cost=67797.90..569088.46 rows=6086 width=20) (actual time=496.522..1429.088 rows=4768 loops=5)
                                             Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                             ->  Hash Join  (cost=63326.90..564533.78 rows=6086 width=20) (actual time=443.131..1372.775 rows=4768 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Nested Loop  (cost=1.00..501032.90 rows=30430 width=24) (actual time=0.160..922.064 rows=23719 loops=5)
                                                         ->  Nested Loop  (cost=0.56..58751.82 rows=99974 width=20) (actual time=0.132..194.348 rows=77904 loops=5)
                                                               ->  Parallel Seq Scan on part  (cost=0.00..47230.97 rows=3333 width=4) (actual time=0.081..98.838 rows=2602 loops=5)
                                                                     Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                     Rows Removed by Filter: 397398
                                                               ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.13 rows=33 width=24) (actual time=0.015..0.032 rows=30 loops=13011)
                                                                     Index Cond: (l_partkey = part.p_partkey)
                                                                     Heap Fetches: 0
                                                         ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=12) (actual time=0.009..0.009 rows=0 loops=389521)
                                                               Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 1
                                                   ->  Hash  (cost=59575.71..59575.71 rows=300015 width=4) (actual time=441.865..441.866 rows=299436 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                         ->  Hash Join  (cost=2.53..59575.71 rows=300015 width=4) (actual time=0.075..381.178 rows=299436 loops=5)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Seq Scan on customer  (cost=0.00..50947.75 rows=1500075 width=8) (actual time=0.028..107.115 rows=1500000 loops=5)
                                                               ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.035..0.035 rows=5 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.029..0.034 rows=5 loops=5)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.009 rows=25 loops=5)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=5)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=53.068..53.068 rows=100000 loops=5)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                                   ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.019..26.308 rows=100000 loops=5)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.028..0.028 rows=25 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.016..0.021 rows=25 loops=5)
 Planning time: 4.660 ms
 Execution time: 1488.193 ms
(55 rows)

query 9 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1268168.61..1268168.61 rows=1 width=66) (actual time=17878.037..17878.037 rows=1 loops=1)
   ->  Sort  (cost=1268168.61..1268318.98 rows=60150 width=66) (actual time=17878.035..17878.035 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize HashAggregate  (cost=1266815.23..1267867.86 rows=60150 width=66) (actual time=17876.898..17876.997 rows=175 loops=1)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Gather  (cost=1239296.61..1264409.23 rows=240600 width=66) (actual time=17787.866..17892.269 rows=875 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=1238296.61..1239349.23 rows=60150 width=66) (actual time=17768.861..17769.001 rows=175 loops=5)
                           Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
                           ->  Hash Join  (cost=663297.16..1222391.33 rows=908873 width=57) (actual time=5774.388..16957.500 rows=649638 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=5848.56..455637.09 rows=908873 width=53) (actual time=64.798..8322.775 rows=649638 loops=5)
                                       Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Hash Join  (cost=5847.99..142849.99 rows=121195 width=48) (actual time=63.172..647.696 rows=86650 loops=5)
                                             Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                             ->  Nested Loop  (cost=0.43..135336.00 rows=121195 width=18) (actual time=0.342..539.812 rows=86650 loops=5)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..47230.97 rows=30303 width=4) (actual time=0.070..288.066 rows=21662 loops=5)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 378338
                                                   ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..2.73 rows=18 width=14) (actual time=0.010..0.011 rows=4 loops=108312)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                             ->  Hash  (cost=4597.56..4597.56 rows=100000 width=30) (actual time=62.405..62.405 rows=100000 loops=5)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 7079kB
                                                   ->  Hash Join  (cost=1.56..4597.56 rows=100000 width=30) (actual time=0.049..44.674 rows=100000 loops=5)
                                                         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                         ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.022..16.412 rows=100000 loops=5)
                                                         ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.018..0.018 rows=25 loops=5)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.012 rows=25 loops=5)
                                       ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.57 rows=1 width=29) (actual time=0.076..0.087 rows=7 loops=433248)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                             Heap Fetches: 0
                                 ->  Hash  (cost=411300.71..411300.71 rows=15003271 width=8) (actual time=5706.107..5706.107 rows=15000000 loops=5)
                                       Buckets: 1048576  Batches: 32  Memory Usage: 26512kB
                                       ->  Seq Scan on orders  (cost=0.00..411300.71 rows=15003271 width=8) (actual time=0.036..3075.581 rows=15000000 loops=5)
 Planning time: 43.878 ms
 Execution time: 17894.399 ms
(40 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1268168.61..1268168.61 rows=1 width=66) (actual time=10635.269..10635.269 rows=1 loops=1)
   ->  Sort  (cost=1268168.61..1268318.98 rows=60150 width=66) (actual time=10635.269..10635.269 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize HashAggregate  (cost=1266815.23..1267867.86 rows=60150 width=66) (actual time=10634.861..10634.955 rows=175 loops=1)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Gather  (cost=1239296.61..1264409.23 rows=240600 width=66) (actual time=10298.278..10652.383 rows=875 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=1238296.61..1239349.23 rows=60150 width=66) (actual time=10357.109..10357.256 rows=175 loops=5)
                           Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
                           ->  Hash Join  (cost=663297.16..1222391.33 rows=908873 width=57) (actual time=5721.980..9540.963 rows=649638 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=5848.56..455637.09 rows=908873 width=53) (actual time=58.551..974.318 rows=649638 loops=5)
                                       Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Hash Join  (cost=5847.99..142849.99 rows=121195 width=48) (actual time=58.502..326.080 rows=86650 loops=5)
                                             Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                             ->  Nested Loop  (cost=0.43..135336.00 rows=121195 width=18) (actual time=0.043..219.248 rows=86650 loops=5)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..47230.97 rows=30303 width=4) (actual time=0.016..123.816 rows=21662 loops=5)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 378338
                                                   ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..2.73 rows=18 width=14) (actual time=0.003..0.004 rows=4 loops=108312)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                             ->  Hash  (cost=4597.56..4597.56 rows=100000 width=30) (actual time=58.100..58.101 rows=100000 loops=5)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 7079kB
                                                   ->  Hash Join  (cost=1.56..4597.56 rows=100000 width=30) (actual time=0.052..38.095 rows=100000 loops=5)
                                                         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                         ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.025..7.964 rows=100000 loops=5)
                                                         ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.019..0.019 rows=25 loops=5)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.015 rows=25 loops=5)
                                       ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.57 rows=1 width=29) (actual time=0.003..0.006 rows=7 loops=433248)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                             Heap Fetches: 0
                                 ->  Hash  (cost=411300.71..411300.71 rows=15003271 width=8) (actual time=5661.207..5661.207 rows=15000000 loops=5)
                                       Buckets: 1048576  Batches: 32  Memory Usage: 26512kB
                                       ->  Seq Scan on orders  (cost=0.00..411300.71 rows=15003271 width=8) (actual time=0.677..2999.218 rows=15000000 loops=5)
 Planning time: 4.741 ms
 Execution time: 10653.816 ms
(40 rows)

query 10 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=961193.54..961193.59 rows=20 width=201) (actual time=11600.079..11600.084 rows=20 loops=1)
   ->  Sort  (cost=961193.54..962496.76 rows=521287 width=201) (actual time=11600.079..11600.083 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 30kB
         ->  GroupAggregate  (cost=932986.89..947322.28 rows=521287 width=201) (actual time=10469.192..11491.841 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Sort  (cost=932986.89..934290.11 rows=521287 width=181) (actual time=10469.171..10793.941 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Sort Method: external merge  Disk: 218224kB
                     ->  Gather  (cost=102929.82..850396.21 rows=521287 width=181) (actual time=1087.508..9642.714 rows=1145402 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Hash Join  (cost=101929.82..797267.51 rows=130322 width=181) (actual time=1076.401..9695.309 rows=229080 loops=5)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Nested Loop  (cost=101928.25..795474.02 rows=130322 width=159) (actual time=1076.301..9614.054 rows=229080 loops=5)
                                       ->  Hash Join  (cost=101927.69..454705.26 rows=132287 width=151) (actual time=1073.937..2482.965 rows=114632 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..317530.27 rows=132287 width=8) (actual time=0.068..997.745 rows=114632 loops=5)
                                                   Filter: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   Rows Removed by Filter: 2885368
                                             ->  Hash  (cost=50947.75..50947.75 rows=1500075 width=147) (actual time=1073.228..1073.228 rows=1500000 loops=5)
                                                   Buckets: 262144  Batches: 16  Memory Usage: 18791kB
                                                   ->  Seq Scan on customer  (cost=0.00..50947.75 rows=1500075 width=147) (actual time=0.018..562.231 rows=1500000 loops=5)
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..2.57 rows=1 width=16) (actual time=0.061..0.062 rows=2 loops=573160)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.021..0.021 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.013 rows=25 loops=5)
 Planning time: 28.382 ms
 Execution time: 11630.324 ms
(31 rows)

SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=961193.54..961193.59 rows=20 width=201) (actual time=4988.219..4988.222 rows=20 loops=1)
   ->  Sort  (cost=961193.54..962496.76 rows=521287 width=201) (actual time=4988.218..4988.221 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 30kB
         ->  GroupAggregate  (cost=932986.89..947322.28 rows=521287 width=201) (actual time=3848.821..4883.962 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Sort  (cost=932986.89..934290.11 rows=521287 width=181) (actual time=3848.800..4184.322 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Sort Method: external merge  Disk: 218216kB
                     ->  Gather  (cost=102929.82..850396.21 rows=521287 width=181) (actual time=924.965..3077.805 rows=1145402 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Hash Join  (cost=101929.82..797267.51 rows=130322 width=181) (actual time=942.366..2859.358 rows=229080 loops=5)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Nested Loop  (cost=101928.25..795474.02 rows=130322 width=159) (actual time=942.264..2795.059 rows=229080 loops=5)
                                       ->  Hash Join  (cost=101927.69..454705.26 rows=132287 width=151) (actual time=942.172..1972.097 rows=114632 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..317530.27 rows=132287 width=8) (actual time=0.034..635.297 rows=114632 loops=5)
                                                   Filter: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   Rows Removed by Filter: 2885368
                                             ->  Hash  (cost=50947.75..50947.75 rows=1500075 width=147) (actual time=941.421..941.421 rows=1500000 loops=5)
                                                   Buckets: 262144  Batches: 16  Memory Usage: 18791kB
                                                   ->  Seq Scan on customer  (cost=0.00..50947.75 rows=1500075 width=147) (actual time=0.018..351.765 rows=1500000 loops=5)
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..2.57 rows=1 width=16) (actual time=0.006..0.007 rows=2 loops=573160)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.021..0.021 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.014 rows=25 loops=5)
 Planning time: 2.508 ms
 Execution time: 5023.652 ms
(31 rows)

query 11 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=488399.75..488399.76 rows=1 width=36) (actual time=2010.196..2010.196 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=207475.48..207475.49 rows=1 width=32) (actual time=484.184..484.184 rows=1 loops=1)
           ->  Gather  (cost=207475.05..207475.46 rows=4 width=32) (actual time=482.842..484.267 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=206475.05..206475.06 rows=1 width=32) (actual time=479.593..479.593 rows=1 loops=5)
                       ->  Hash Join  (cost=2357.31..205875.14 rows=79988 width=10) (actual time=4.462..447.411 rows=64160 loops=5)
                             Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                             ->  Parallel Seq Scan on partsupp partsupp_1  (cost=0.00..195219.05 rows=1999705 width=14) (actual time=0.030..242.664 rows=1600000 loops=5)
                             ->  Hash  (cost=2307.31..2307.31 rows=4000 width=4) (actual time=4.368..4.368 rows=4010 loops=5)
                                   Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                   ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=4) (actual time=0.547..3.926 rows=4010 loops=5)
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.015 rows=1 loops=5)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                                         ->  Bitmap Heap Scan on supplier supplier_1  (cost=55.29..2266.00 rows=4000 width=8) (actual time=0.532..3.444 rows=4010 loops=5)
                                               Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                               Heap Blocks: exact=1869
                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=0.337..0.338 rows=4010 loops=5)
                                                     Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=280924.26..281724.14 rows=319953 width=36) (actual time=2010.194..2010.194 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=268126.14..279324.49 rows=319953 width=36) (actual time=2010.185..2010.185 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Rows Removed by Filter: 301833
               ->  Sort  (cost=268126.14..268926.02 rows=319953 width=14) (actual time=1325.012..1344.476 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 25961kB
                     ->  Gather  (cost=3357.31..238870.44 rows=319953 width=14) (actual time=31.003..1250.949 rows=320800 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Hash Join  (cost=2357.31..205875.14 rows=79988 width=14) (actual time=24.998..1247.235 rows=64160 loops=5)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Parallel Seq Scan on partsupp  (cost=0.00..195219.05 rows=1999705 width=18) (actual time=0.278..1027.258 rows=1600000 loops=5)
                                 ->  Hash  (cost=2307.31..2307.31 rows=4000 width=4) (actual time=24.631..24.631 rows=4010 loops=5)
                                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                       ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=4) (actual time=1.039..23.784 rows=4010 loops=5)
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.017..0.019 rows=1 loops=5)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 24
                                             ->  Bitmap Heap Scan on supplier  (cost=55.29..2266.00 rows=4000 width=8) (actual time=1.019..23.045 rows=4010 loops=5)
                                                   Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                   Heap Blocks: exact=1869
                                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=0.808..0.808 rows=4010 loops=5)
                                                         Index Cond: (s_nationkey = nation.n_nationkey)
 Planning time: 16.869 ms
 Execution time: 2010.422 ms
(50 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=488399.75..488399.76 rows=1 width=36) (actual time=1200.805..1200.805 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=207475.48..207475.49 rows=1 width=32) (actual time=484.477..484.477 rows=1 loops=1)
           ->  Gather  (cost=207475.05..207475.46 rows=4 width=32) (actual time=483.320..484.557 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=206475.05..206475.06 rows=1 width=32) (actual time=479.394..479.395 rows=1 loops=5)
                       ->  Hash Join  (cost=2357.31..205875.14 rows=79988 width=10) (actual time=4.657..441.300 rows=64160 loops=5)
                             Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                             ->  Parallel Seq Scan on partsupp partsupp_1  (cost=0.00..195219.05 rows=1999705 width=14) (actual time=0.032..246.879 rows=1600000 loops=5)
                             ->  Hash  (cost=2307.31..2307.31 rows=4000 width=4) (actual time=4.565..4.565 rows=4010 loops=5)
                                   Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                   ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=4) (actual time=0.534..4.132 rows=4010 loops=5)
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.015 rows=1 loops=5)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                                         ->  Bitmap Heap Scan on supplier supplier_1  (cost=55.29..2266.00 rows=4000 width=8) (actual time=0.517..3.625 rows=4010 loops=5)
                                               Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                               Heap Blocks: exact=1869
                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=0.326..0.327 rows=4010 loops=5)
                                                     Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=280924.26..281724.14 rows=319953 width=36) (actual time=1200.804..1200.804 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=268126.14..279324.49 rows=319953 width=36) (actual time=1200.796..1200.796 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Rows Removed by Filter: 301833
               ->  Sort  (cost=268126.14..268926.02 rows=319953 width=14) (actual time=516.305..535.832 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 25961kB
                     ->  Gather  (cost=3357.31..238870.44 rows=319953 width=14) (actual time=4.794..445.349 rows=320800 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Hash Join  (cost=2357.31..205875.14 rows=79988 width=14) (actual time=4.012..440.528 rows=64160 loops=5)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Parallel Seq Scan on partsupp  (cost=0.00..195219.05 rows=1999705 width=18) (actual time=0.031..245.027 rows=1600000 loops=5)
                                 ->  Hash  (cost=2307.31..2307.31 rows=4000 width=4) (actual time=3.910..3.910 rows=4010 loops=5)
                                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                       ->  Nested Loop  (cost=55.29..2307.31 rows=4000 width=4) (actual time=0.539..3.489 rows=4010 loops=5)
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.015 rows=1 loops=5)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 24
                                             ->  Bitmap Heap Scan on supplier  (cost=55.29..2266.00 rows=4000 width=8) (actual time=0.523..2.996 rows=4010 loops=5)
                                                   Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                   Heap Blocks: exact=1869
                                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.29 rows=4000 width=0) (actual time=0.331..0.331 rows=4010 loops=5)
                                                         Index Cond: (s_nationkey = nation.n_nationkey)
 Planning time: 1.011 ms
 Execution time: 1201.021 ms
(50 rows)

query 12 run 1
SET
SET
SET
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=758828.68..758828.69 rows=1 width=27) (actual time=5613.069..5613.070 rows=1 loops=1)
   ->  Sort  (cost=758828.68..758828.70 rows=7 width=27) (actual time=5613.068..5613.068 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=758828.58..758828.65 rows=7 width=27) (actual time=5613.048..5613.049 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Merge Join  (cost=16.80..753701.66 rows=292967 width=27) (actual time=1.441..5425.062 rows=311258 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..568580.50 rows=15003271 width=20) (actual time=0.241..3589.010 rows=14999967 loops=1)
                     ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.56..143968.10 rows=292967 width=15) (actual time=1.105..846.511 rows=311258 loops=1)
                           Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                           Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                           Rows Removed by Filter: 778088
                           Heap Fetches: 0
 Planning time: 27.097 ms
 Execution time: 5613.328 ms
(16 rows)

SET
SET
SET
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=758828.68..758828.69 rows=1 width=27) (actual time=4457.683..4457.684 rows=1 loops=1)
   ->  Sort  (cost=758828.68..758828.70 rows=7 width=27) (actual time=4457.682..4457.682 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=758828.58..758828.65 rows=7 width=27) (actual time=4457.661..4457.662 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Merge Join  (cost=16.80..753701.66 rows=292967 width=27) (actual time=0.105..4278.833 rows=311258 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..568580.50 rows=15003271 width=20) (actual time=0.028..2626.583 rows=14999967 loops=1)
                     ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.56..143968.10 rows=292967 width=15) (actual time=0.053..714.645 rows=311258 loops=1)
                           Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                           Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                           Rows Removed by Filter: 778088
                           Heap Fetches: 0
 Planning time: 2.037 ms
 Execution time: 4458.034 ms
(16 rows)

query 13 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2769160.48..2769160.48 rows=1 width=16) (actual time=18527.320..18527.321 rows=1 loops=1)
   ->  Sort  (cost=2769160.48..2769160.98 rows=200 width=16) (actual time=18527.319..18527.319 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2769157.48..2769159.48 rows=200 width=16) (actual time=18527.286..18527.290 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  GroupAggregate  (cost=2363006.25..2746656.35 rows=1500075 width=12) (actual time=9654.846..18321.551 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Merge Left Join  (cost=2363006.25..2657396.48 rows=14851824 width=8) (actual time=9654.829..17004.643 rows=15337604 loops=1)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30733.55 rows=1500075 width=4) (actual time=0.392..190.863 rows=1500000 loops=1)
                                 Heap Fetches: 0
                           ->  Materialize  (cost=2363005.82..2437264.94 rows=14851824 width=8) (actual time=9654.432..14923.558 rows=14837583 loops=1)
                                 ->  Sort  (cost=2363005.82..2400135.38 rows=14851824 width=8) (actual time=9654.427..13786.208 rows=14837583 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external merge  Disk: 260704kB
                                       ->  Seq Scan on orders  (cost=0.00..448808.89 rows=14851824 width=8) (actual time=0.316..5169.345 rows=14837583 loops=1)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                             Rows Removed by Filter: 162417
 Planning time: 20.166 ms
 Execution time: 18563.130 ms
(21 rows)

SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2769160.48..2769160.48 rows=1 width=16) (actual time=17965.149..17965.149 rows=1 loops=1)
   ->  Sort  (cost=2769160.48..2769160.98 rows=200 width=16) (actual time=17965.147..17965.147 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2769157.48..2769159.48 rows=200 width=16) (actual time=17965.114..17965.120 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  GroupAggregate  (cost=2363006.25..2746656.35 rows=1500075 width=12) (actual time=9162.015..17759.331 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Merge Left Join  (cost=2363006.25..2657396.48 rows=14851824 width=8) (actual time=9161.984..16432.946 rows=15337604 loops=1)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30733.55 rows=1500075 width=4) (actual time=0.027..152.942 rows=1500000 loops=1)
                                 Heap Fetches: 0
                           ->  Materialize  (cost=2363005.82..2437264.94 rows=14851824 width=8) (actual time=9161.954..14393.946 rows=14837583 loops=1)
                                 ->  Sort  (cost=2363005.82..2400135.38 rows=14851824 width=8) (actual time=9161.948..13271.486 rows=14837583 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external merge  Disk: 260704kB
                                       ->  Seq Scan on orders  (cost=0.00..448808.89 rows=14851824 width=8) (actual time=0.033..4698.788 rows=14837583 loops=1)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                             Rows Removed by Filter: 162417
 Planning time: 0.788 ms
 Execution time: 18001.129 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=919734.01..919734.02 rows=1 width=32) (actual time=7918.983..7918.984 rows=1 loops=1)
   ->  Aggregate  (cost=919734.01..919734.02 rows=1 width=32) (actual time=7918.981..7918.981 rows=1 loops=1)
         ->  Hash Join  (cost=113806.25..905937.34 rows=788381 width=33) (actual time=1133.757..7420.088 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=14153.47..773086.85 rows=788381 width=16) (actual time=281.034..5880.757 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416569
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..13956.38 rows=788381 width=0) (actual time=184.385..184.385 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60980.90..60980.90 rows=1999990 width=25) (actual time=851.433..851.433 rows=2000000 loops=1)
                     Buckets: 524288  Batches: 8  Memory Usage: 18555kB
                     ->  Seq Scan on part  (cost=0.00..60980.90 rows=1999990 width=25) (actual time=0.010..541.583 rows=2000000 loops=1)
 Planning time: 27.768 ms
 Execution time: 7919.058 ms
(14 rows)

SET
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=919734.01..919734.02 rows=1 width=32) (actual time=4152.508..4152.509 rows=1 loops=1)
   ->  Aggregate  (cost=919734.01..919734.02 rows=1 width=32) (actual time=4152.506..4152.506 rows=1 loops=1)
         ->  Hash Join  (cost=113806.25..905937.34 rows=788381 width=33) (actual time=969.944..3681.317 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=14153.47..773086.85 rows=788381 width=16) (actual time=271.428..2377.703 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416569
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..13956.38 rows=788381 width=0) (actual time=175.407..175.408 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60980.90..60980.90 rows=1999990 width=25) (actual time=697.791..697.791 rows=2000000 loops=1)
                     Buckets: 524288  Batches: 8  Memory Usage: 18555kB
                     ->  Seq Scan on part  (cost=0.00..60980.90 rows=1999990 width=25) (actual time=0.008..394.920 rows=2000000 loops=1)
 Planning time: 1.585 ms
 Execution time: 4152.581 ms
(14 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2686593.15..2686593.70 rows=1 width=103) (actual time=23299.412..23299.413 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1223552.18..1223552.19 rows=1 width=32) (actual time=8237.256..8237.257 rows=1 loops=1)
           ->  HashAggregate  (cost=1221115.90..1222334.04 rows=97451 width=36) (actual time=8197.389..8230.597 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=40324.44..1198653.58 rows=2246232 width=16) (actual time=545.281..6288.299 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 21153354
                       Heap Blocks: exact=243444 lossy=424814
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39762.89 rows=2246232 width=0) (actual time=490.828..490.829 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1463040.97..1516144.02 rows=97451 width=103) (actual time=23299.410..23299.410 rows=1 loops=1)
         Merge Cond: (lineitem.l_suppkey = supplier.s_suppkey)
         ->  GroupAggregate  (cost=1463040.67..1509427.08 rows=97451 width=36) (actual time=23277.893..23277.893 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 69997
               ->  Sort  (cost=1463040.67..1468656.25 rows=2246232 width=16) (actual time=14043.888..14349.754 rows=1585450 loops=1)
                     Sort Key: lineitem.l_suppkey
                     Sort Method: external merge  Disk: 60808kB
                     ->  Bitmap Heap Scan on lineitem  (cost=40324.44..1198653.58 rows=2246232 width=16) (actual time=609.439..13091.602 rows=2265714 loops=1)
                           Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                           Rows Removed by Index Recheck: 21153354
                           Heap Blocks: exact=243444 lossy=424814
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39762.89 rows=2246232 width=0) (actual time=555.476..555.476 rows=2265714 loops=1)
                                 Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4274.29 rows=100000 width=71) (actual time=0.399..17.683 rows=69998 loops=1)
 Planning time: 22.719 ms
 Execution time: 23307.822 ms
(29 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2686593.15..2686593.70 rows=1 width=103) (actual time=16938.718..16938.718 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1223552.18..1223552.19 rows=1 width=32) (actual time=8260.889..8260.890 rows=1 loops=1)
           ->  HashAggregate  (cost=1221115.90..1222334.04 rows=97451 width=36) (actual time=8221.043..8254.220 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=40324.44..1198653.58 rows=2246232 width=16) (actual time=540.126..6288.997 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 21153354
                       Heap Blocks: exact=243444 lossy=424814
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39762.89 rows=2246232 width=0) (actual time=485.982..485.983 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1463040.97..1516144.02 rows=97451 width=103) (actual time=16938.718..16938.718 rows=1 loops=1)
         Merge Cond: (lineitem.l_suppkey = supplier.s_suppkey)
         ->  GroupAggregate  (cost=1463040.67..1509427.08 rows=97451 width=36) (actual time=16924.091..16924.091 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 69997
               ->  Sort  (cost=1463040.67..1468656.25 rows=2246232 width=16) (actual time=7666.389..7972.663 rows=1585450 loops=1)
                     Sort Key: lineitem.l_suppkey
                     Sort Method: external merge  Disk: 60808kB
                     ->  Bitmap Heap Scan on lineitem  (cost=40324.44..1198653.58 rows=2246232 width=16) (actual time=568.409..6878.966 rows=2265714 loops=1)
                           Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                           Rows Removed by Index Recheck: 21153354
                           Heap Blocks: exact=243444 lossy=424814
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39762.89 rows=2246232 width=0) (actual time=515.248..515.248 rows=2265714 loops=1)
                                 Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4274.29 rows=100000 width=71) (actual time=0.029..10.922 rows=69998 loops=1)
 Planning time: 1.504 ms
 Execution time: 16947.894 ms
(29 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=374484.64..374484.64 rows=1 width=44) (actual time=6257.644..6257.644 rows=1 loops=1)
   ->  Sort  (cost=374484.64..374869.07 rows=153770 width=44) (actual time=6257.643..6257.643 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=364751.55..373715.79 rows=153770 width=44) (actual time=5317.361..6252.979 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=364751.55..366236.86 rows=594123 width=40) (actual time=5317.299..5946.995 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60496kB
                     ->  Hash Join  (cost=91376.60..296168.96 rows=594123 width=40) (actual time=414.780..2574.930 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..187324.81 rows=3999410 width=8) (actual time=38.359..1401.682 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=1.385..37.700 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=84191.34..84191.34 rows=297104 width=40) (actual time=375.784..375.784 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Gather  (cost=1000.00..84191.34 rows=297104 width=40) (actual time=0.275..310.768 rows=296733 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Parallel Seq Scan on part  (cost=0.00..53480.94 rows=74276 width=40) (actual time=0.029..322.043 rows=59347 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 340653
 Planning time: 20.408 ms
 Execution time: 6266.211 ms
(29 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=374484.64..374484.64 rows=1 width=44) (actual time=5905.704..5905.705 rows=1 loops=1)
   ->  Sort  (cost=374484.64..374869.07 rows=153770 width=44) (actual time=5905.703..5905.703 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=364751.55..373715.79 rows=153770 width=44) (actual time=4968.149..5901.006 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=364751.55..366236.86 rows=594123 width=40) (actual time=4968.087..5597.843 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60496kB
                     ->  Hash Join  (cost=91376.60..296168.96 rows=594123 width=40) (actual time=257.132..2230.993 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..187324.81 rows=3999410 width=8) (actual time=21.540..1220.051 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.098..21.496 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=84191.34..84191.34 rows=297104 width=40) (actual time=234.974..234.974 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Gather  (cost=1000.00..84191.34 rows=297104 width=40) (actual time=0.282..167.622 rows=296733 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Parallel Seq Scan on part  (cost=0.00..53480.94 rows=74276 width=40) (actual time=0.017..155.202 rows=59347 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 340653
 Planning time: 0.857 ms
 Execution time: 5913.982 ms
(29 rows)

query 17 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1767665.28..1767665.29 rows=1 width=32) (actual time=23470.449..23470.449 rows=1 loops=1)
   ->  Aggregate  (cost=1767665.28..1767665.29 rows=1 width=32) (actual time=23470.447..23470.447 rows=1 loops=1)
         ->  Nested Loop  (cost=49790.62..1767619.59 rows=18274 width=8) (actual time=315.125..23466.571 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=49790.05..1761914.21 rows=1828 width=40) (actual time=314.453..22315.839 rows=1996 loops=1)
                     Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=0.56..1689168.19 rows=1834263 width=36) (actual time=1.984..21870.980 rows=1999333 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361727.32 rows=59985384 width=9) (actual time=1.125..12459.862 rows=59965994 loops=1)
                                 Heap Fetches: 0
                     ->  Sort  (cost=49789.49..49794.47 rows=1993 width=4) (actual time=305.028..306.422 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 142kB
                           ->  Gather  (cost=1000.00..49680.26 rows=1993 width=4) (actual time=1.354..304.517 rows=1996 loops=1)
                                 Workers Planned: 4
                                 Workers Launched: 4
                                 ->  Parallel Seq Scan on part  (cost=0.00..48480.96 rows=498 width=4) (actual time=0.464..291.727 rows=399 loops=5)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 399601
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.98 rows=11 width=17) (actual time=0.529..0.574 rows=3 loops=1996)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning time: 24.915 ms
 Execution time: 23470.623 ms
(24 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1767665.28..1767665.29 rows=1 width=32) (actual time=21163.079..21163.079 rows=1 loops=1)
   ->  Aggregate  (cost=1767665.28..1767665.29 rows=1 width=32) (actual time=21163.077..21163.077 rows=1 loops=1)
         ->  Nested Loop  (cost=49790.62..1767619.59 rows=18274 width=8) (actual time=141.828..21161.754 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=49790.05..1761914.21 rows=1828 width=40) (actual time=141.793..21128.601 rows=1996 loops=1)
                     Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=0.56..1689168.19 rows=1834263 width=36) (actual time=0.093..20864.720 rows=1999333 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361727.32 rows=59985384 width=9) (actual time=0.056..11529.392 rows=59965994 loops=1)
                                 Heap Fetches: 0
                     ->  Sort  (cost=49789.49..49794.47 rows=1993 width=4) (actual time=134.555..135.089 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 142kB
                           ->  Gather  (cost=1000.00..49680.26 rows=1993 width=4) (actual time=0.383..134.174 rows=1996 loops=1)
                                 Workers Planned: 4
                                 Workers Launched: 4
                                 ->  Parallel Seq Scan on part  (cost=0.00..48480.96 rows=498 width=4) (actual time=0.164..128.288 rows=399 loops=5)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 399601
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.98 rows=11 width=17) (actual time=0.014..0.015 rows=3 loops=1996)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning time: 2.286 ms
 Execution time: 21163.239 ms
(24 rows)

query 18 run 1
SET
SET
SET
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=11812587.15..11812587.40 rows=100 width=71) (actual time=29805.624..29805.636 rows=99 loops=1)
   ->  Sort  (cost=11812587.15..11887568.88 rows=29992692 width=71) (actual time=29805.622..29805.629 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  GroupAggregate  (cost=9991452.46..10666288.03 rows=29992692 width=71) (actual time=29805.357..29805.547 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=9991452.46..10066434.19 rows=29992692 width=44) (actual time=29805.346..29805.392 rows=693 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 79kB
                     ->  Hash Join  (cost=78655.07..5607623.89 rows=29992692 width=44) (actual time=3058.551..29805.139 rows=693 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=166.38..4660396.82 rows=29992692 width=25) (actual time=650.229..29039.192 rows=693 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Semi Join  (cost=1.00..2830105.90 rows=7501636 width=24) (actual time=502.296..21997.511 rows=99 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..568580.50 rows=15003271 width=20) (actual time=0.244..3092.132 rows=14982724 loops=1)
                                       ->  Materialize  (cost=0.56..2036562.89 rows=14996346 width=4) (actual time=398.775..18070.103 rows=99 loops=1)
                                             ->  GroupAggregate  (cost=0.56..1849108.57 rows=14996346 width=4) (actual time=398.772..18069.997 rows=99 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 14999901
                                                   ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361727.32 rows=59985384 width=9) (actual time=0.723..6134.540 rows=59986052 loops=1)
                                                         Heap Fetches: 0
                                 ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361727.32 rows=59985384 width=9) (actual time=0.011..4547.060 rows=59916431 loops=1)
                                       Heap Fetches: 0
                           ->  Hash  (cost=50947.75..50947.75 rows=1500075 width=23) (actual time=660.320..660.320 rows=1500000 loops=1)
                                 Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                                 ->  Seq Scan on customer  (cost=0.00..50947.75 rows=1500075 width=23) (actual time=0.010..419.873 rows=1500000 loops=1)
 Planning time: 30.687 ms
 Execution time: 29805.752 ms
(30 rows)

SET
SET
SET
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=11812587.15..11812587.40 rows=100 width=71) (actual time=28281.649..28281.660 rows=99 loops=1)
   ->  Sort  (cost=11812587.15..11887568.88 rows=29992692 width=71) (actual time=28281.647..28281.654 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  GroupAggregate  (cost=9991452.46..10666288.03 rows=29992692 width=71) (actual time=28281.380..28281.569 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=9991452.46..10066434.19 rows=29992692 width=44) (actual time=28281.363..28281.393 rows=693 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 79kB
                     ->  Hash Join  (cost=78655.07..5607623.89 rows=29992692 width=44) (actual time=2768.224..28281.170 rows=693 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=166.38..4660396.82 rows=29992692 width=25) (actual time=600.913..27644.161 rows=693 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Semi Join  (cost=1.00..2830105.90 rows=7501636 width=24) (actual time=451.476..20593.709 rows=99 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..568580.50 rows=15003271 width=20) (actual time=0.026..2344.454 rows=14982724 loops=1)
                                       ->  Materialize  (cost=0.56..2036562.89 rows=14996346 width=4) (actual time=377.126..17447.650 rows=99 loops=1)
                                             ->  GroupAggregate  (cost=0.56..1849108.57 rows=14996346 width=4) (actual time=377.124..17447.534 rows=99 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 14999901
                                                   ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361727.32 rows=59985384 width=9) (actual time=0.049..5578.217 rows=59986052 loops=1)
                                                         Heap Fetches: 0
                                 ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361727.32 rows=59985384 width=9) (actual time=0.009..4508.552 rows=59916431 loops=1)
                                       Heap Fetches: 0
                           ->  Hash  (cost=50947.75..50947.75 rows=1500075 width=23) (actual time=531.844..531.844 rows=1500000 loops=1)
                                 Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                                 ->  Seq Scan on customer  (cost=0.00..50947.75 rows=1500075 width=23) (actual time=0.010..296.860 rows=1500000 loops=1)
 Planning time: 2.204 ms
 Execution time: 28281.782 ms
(30 rows)

query 19 run 1
SET
SET
SET

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=67549.21..67549.22 rows=1 width=32) (actual time=914.968..914.969 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=67549.21..67549.22 rows=1 width=32) (actual time=914.967..914.967 rows=1 loops=1)
         ->  Gather  (cost=67548.78..67549.19 rows=4 width=32) (actual time=910.010..917.348 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=66548.78..66548.79 rows=1 width=32) (actual time=904.086..904.086 rows=1 loops=5)
                     ->  Nested Loop  (cost=0.69..66546.68 rows=280 width=12) (actual time=7.544..903.535 rows=213 loops=5)
                           ->  Parallel Seq Scan on part  (cost=0.00..62230.89 rows=1198 width=30) (actual time=0.390..266.327 rows=956 loops=5)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 399044
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.69..3.59 rows=1 width=21) (actual time=0.645..0.665 rows=0 loops=4781)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning time: 28.905 ms
 Execution time: 917.843 ms
(17 rows)

SET
SET
SET


 Limit  (cost=67549.21..67549.22 rows=1 width=32) (actual time=185.398..185.398 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=67549.21..67549.22 rows=1 width=32) (actual time=185.397..185.397 rows=1 loops=1)
         ->  Gather  (cost=67548.78..67549.19 rows=4 width=32) (actual time=179.995..187.571 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=66548.78..66548.79 rows=1 width=32) (actual time=175.085..175.085 rows=1 loops=5)
                     ->  Nested Loop  (cost=0.69..66546.68 rows=280 width=12) (actual time=1.027..174.028 rows=213 loops=5)
                           ->  Parallel Seq Scan on part  (cost=0.00..62230.89 rows=1198 width=30) (actual time=0.139..157.482 rows=956 loops=5)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 399044
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.69..3.59 rows=1 width=21) (actual time=0.016..0.017 rows=0 loops=4781)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning time: 3.425 ms
 Execution time: 187.643 ms
(17 rows)

query 20 run 1
SET
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2933654.93..2933654.93 rows=1 width=51) (actual time=50849.222..50849.223 rows=1 loops=1)
   ->  Sort  (cost=2933654.93..2933659.93 rows=2000 width=51) (actual time=50849.221..50849.221 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2692997.45..2933644.93 rows=2000 width=51) (actual time=28295.577..50847.363 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.282..25.083 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.268..16.484 rows=100000 loops=1)
               ->  Materialize  (cost=2692997.45..2928992.63 rows=3 width=8) (actual time=6.642..9.617 rows=44445 loops=4095)
                     ->  Merge Join  (cost=2692997.45..2928992.61 rows=3 width=8) (actual time=27198.065..33525.144 rows=59002 loops=1)
                           Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 123
                           ->  GroupAggregate  (cost=2579537.24..2742481.97 rows=4829622 width=40) (actual time=26431.603..32418.438 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=2579537.24..2602162.34 rows=9050040 width=13) (actual time=26431.589..29082.278 rows=9123091 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 205064kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=162459.48..1423353.08 rows=9050040 width=13) (actual time=1887.772..22937.970 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Rows Removed by Index Recheck: 27869248
                                             Heap Blocks: exact=412819 lossy=635976
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..160196.97 rows=9050040 width=0) (actual time=1793.473..1793.474 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Sort  (cost=113460.20..113662.19 rows=80796 width=16) (actual time=766.113..778.015 rows=86872 loops=1)
                                 Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                 Sort Method: quicksort  Memory: 7145kB
                                 ->  Nested Loop  (cost=1000.43..106874.52 rows=80796 width=16) (actual time=0.673..743.299 rows=86872 loops=1)
                                       ->  Gather  (cost=1000.00..50251.17 rows=20202 width=4) (actual time=0.340..26.871 rows=21718 loops=1)
                                             Workers Planned: 4
                                             Workers Launched: 4
                                             ->  Parallel Seq Scan on part  (cost=0.00..47230.97 rows=5050 width=4) (actual time=0.064..165.642 rows=4344 loops=5)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 395656
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.62 rows=18 width=12) (actual time=0.031..0.032 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning time: 30.488 ms
 Execution time: 50872.475 ms
(45 rows)

SET
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2933654.93..2933654.93 rows=1 width=51) (actual time=38459.916..38459.916 rows=1 loops=1)
   ->  Sort  (cost=2933654.93..2933659.93 rows=2000 width=51) (actual time=38459.914..38459.914 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2692997.45..2933644.93 rows=2000 width=51) (actual time=15871.659..38458.136 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.016..21.140 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.007..12.658 rows=100000 loops=1)
               ->  Materialize  (cost=2692997.45..2928992.63 rows=3 width=8) (actual time=3.609..6.586 rows=44445 loops=4095)
                     ->  Merge Join  (cost=2692997.45..2928992.61 rows=3 width=8) (actual time=14780.099..21102.095 rows=59002 loops=1)
                           Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 123
                           ->  GroupAggregate  (cost=2579537.24..2742481.97 rows=4829622 width=40) (actual time=14603.125..20583.705 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=2579537.24..2602162.34 rows=9050040 width=13) (actual time=14603.109..17248.111 rows=9123091 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 205064kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=162459.48..1423353.08 rows=9050040 width=13) (actual time=1717.169..11362.649 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Rows Removed by Index Recheck: 27869248
                                             Heap Blocks: exact=412819 lossy=635976
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..160196.97 rows=9050040 width=0) (actual time=1623.447..1623.447 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Sort  (cost=113460.20..113662.19 rows=80796 width=16) (actual time=176.622..188.473 rows=86872 loops=1)
                                 Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                 Sort Method: quicksort  Memory: 7145kB
                                 ->  Nested Loop  (cost=1000.43..106874.52 rows=80796 width=16) (actual time=0.310..153.506 rows=86872 loops=1)
                                       ->  Gather  (cost=1000.00..50251.17 rows=20202 width=4) (actual time=0.272..8.573 rows=21718 loops=1)
                                             Workers Planned: 4
                                             Workers Launched: 4
                                             ->  Parallel Seq Scan on part  (cost=0.00..47230.97 rows=5050 width=4) (actual time=0.045..107.100 rows=4344 loops=5)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 395656
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.62 rows=18 width=12) (actual time=0.006..0.006 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning time: 2.642 ms
 Execution time: 38483.254 ms
(45 rows)

query 21 run 1
SET
SET
SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1689109.90..1689109.91 rows=1 width=34) (actual time=28454.383..28454.395 rows=100 loops=1)
   ->  Sort  (cost=1689109.90..1689109.91 rows=1 width=34) (actual time=28454.381..28454.386 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  GroupAggregate  (cost=1689109.87..1689109.89 rows=1 width=34) (actual time=28446.526..28453.095 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=1689109.87..1689109.88 rows=1 width=26) (actual time=28446.519..28448.497 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Anti Join  (cost=1011800.51..1689109.86 rows=1 width=26) (actual time=12133.975..28324.053 rows=39281 loops=1)
                           ->  Gather  (cost=1011799.95..1689105.26 rows=1 width=34) (actual time=12133.231..25737.477 rows=704306 loops=1)
                                 Workers Planned: 1
                                 Workers Launched: 1
                                 ->  Nested Loop Semi Join  (cost=1010799.95..1688105.16 rows=1 width=34) (actual time=12129.088..26286.575 rows=352153 loops=2)
                                       Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 40082
                                       ->  Hash Join  (cost=1010799.38..1077749.36 rows=228039 width=38) (actual time=12128.636..14091.875 rows=365492 loops=2)
                                             Hash Cond: (supplier.s_suppkey = l1.l_suppkey)
                                             ->  Hash Join  (cost=1.32..3054.68 rows=2353 width=30) (actual time=0.087..20.838 rows=1996 loops=2)
                                                   Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=34) (actual time=0.026..15.822 rows=50000 loops=2)
                                                   ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=2)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=2)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                             ->  Hash  (cost=842329.58..842329.58 rows=9691638 width=12) (actual time=12125.333..12125.333 rows=18321400 loops=2)
                                                   Buckets: 1048576 (originally 1048576)  Batches: 64 (originally 32)  Memory Usage: 32404kB
                                                   ->  Merge Join  (cost=51.12..842329.58 rows=9691638 width=12) (actual time=0.824..9617.190 rows=18321400 loops=2)
                                                         Merge Cond: (orders.o_orderkey = l1.l_orderkey)
                                                         ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..267507.82 rows=7272085 width=4) (actual time=0.209..1354.406 rows=7309184 loops=2)
                                                               Index Cond: (o_orderstatus = 'F'::bpchar)
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..409745.49 rows=19995128 width=8) (actual time=0.609..4334.905 rows=37929347 loops=2)
                                                               Heap Fetches: 0
                                       ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.033..0.033 rows=1 loops=730985)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..2.58 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=704306)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning time: 32.718 ms
 Execution time: 28454.583 ms
(45 rows)

SET
SET
SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1689109.90..1689109.91 rows=1 width=34) (actual time=16407.449..16407.461 rows=100 loops=1)
   ->  Sort  (cost=1689109.90..1689109.91 rows=1 width=34) (actual time=16407.448..16407.453 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  GroupAggregate  (cost=1689109.87..1689109.89 rows=1 width=34) (actual time=16399.601..16406.112 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=1689109.87..1689109.88 rows=1 width=26) (actual time=16399.594..16401.571 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Anti Join  (cost=1011800.51..1689109.86 rows=1 width=26) (actual time=10925.360..16286.010 rows=39281 loops=1)
                           ->  Gather  (cost=1011799.95..1689105.26 rows=1 width=34) (actual time=10925.266..13980.774 rows=704306 loops=1)
                                 Workers Planned: 1
                                 Workers Launched: 1
                                 ->  Nested Loop Semi Join  (cost=1010799.95..1688105.16 rows=1 width=34) (actual time=10923.490..14610.615 rows=352153 loops=2)
                                       Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 40082
                                       ->  Hash Join  (cost=1010799.38..1077749.36 rows=228039 width=38) (actual time=10923.466..12862.628 rows=365492 loops=2)
                                             Hash Cond: (supplier.s_suppkey = l1.l_suppkey)
                                             ->  Hash Join  (cost=1.32..3054.68 rows=2353 width=30) (actual time=0.081..11.238 rows=1996 loops=2)
                                                   Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=34) (actual time=0.009..6.780 rows=50000 loops=2)
                                                   ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=2)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=2)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                             ->  Hash  (cost=842329.58..842329.58 rows=9691638 width=12) (actual time=10921.296..10921.296 rows=18321400 loops=2)
                                                   Buckets: 1048576 (originally 1048576)  Batches: 64 (originally 32)  Memory Usage: 32404kB
                                                   ->  Merge Join  (cost=51.12..842329.58 rows=9691638 width=12) (actual time=0.097..8470.907 rows=18321400 loops=2)
                                                         Merge Cond: (orders.o_orderkey = l1.l_orderkey)
                                                         ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..267507.82 rows=7272085 width=4) (actual time=0.052..1204.230 rows=7309184 loops=2)
                                                               Index Cond: (o_orderstatus = 'F'::bpchar)
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..409745.49 rows=19995128 width=8) (actual time=0.041..3378.405 rows=37929347 loops=2)
                                                               Heap Fetches: 0
                                       ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.004..0.004 rows=1 loops=730985)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..2.58 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=704306)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning time: 3.492 ms
 Execution time: 16407.663 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=133770.59..133770.62 rows=1 width=72) (actual time=1699.359..1699.360 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Finalize Aggregate  (cost=46821.50..46821.51 rows=1 width=32) (actual time=384.638..384.638 rows=1 loops=1)
           ->  Gather  (cost=46821.07..46821.48 rows=4 width=32) (actual time=384.623..384.723 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=45821.07..45821.08 rows=1 width=32) (actual time=373.410..373.410 rows=1 loops=5)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..45791.24 rows=11929 width=6) (actual time=0.536..360.054 rows=76485 loops=5)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 223515
   ->  GroupAggregate  (cost=86949.08..87158.36 rows=7610 width=72) (actual time=1699.359..1699.359 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=86949.08..86968.11 rows=7610 width=38) (actual time=1697.128..1697.567 rows=9006 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..86458.48 rows=7610 width=38) (actual time=384.719..1675.544 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75323.97 rows=17501 width=26) (actual time=384.674..977.762 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.66 rows=18 width=4) (actual time=0.003..0.003 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 16.983 ms
 Execution time: 1699.954 ms
(24 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=133770.59..133770.62 rows=1 width=72) (actual time=1149.570..1149.571 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Finalize Aggregate  (cost=46821.50..46821.51 rows=1 width=32) (actual time=235.692..235.692 rows=1 loops=1)
           ->  Gather  (cost=46821.07..46821.48 rows=4 width=32) (actual time=235.527..235.773 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=45821.07..45821.08 rows=1 width=32) (actual time=229.743..229.743 rows=1 loops=5)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..45791.24 rows=11929 width=6) (actual time=0.018..216.882 rows=76485 loops=5)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 223515
   ->  GroupAggregate  (cost=86949.08..87158.36 rows=7610 width=72) (actual time=1149.570..1149.570 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=86949.08..86968.11 rows=7610 width=38) (actual time=1147.241..1147.712 rows=9006 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..86458.48 rows=7610 width=38) (actual time=235.740..1129.447 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75323.97 rows=17501 width=26) (actual time=235.722..777.869 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.66 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 0.730 ms
 Execution time: 1149.712 ms
(24 rows)

