query 1 run 1
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=341668.31..341668.32 rows=1 width=33) (actual time=16044.019..16044.019 rows=1 loops=1)
   ->  Sort  (cost=341668.31..341668.33 rows=6 width=33) (actual time=16044.019..16044.019 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=341668.01..341668.28 rows=6 width=33) (actual time=16043.988..16043.994 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..193580.46 rows=5923502 width=33) (actual time=0.448..1300.852 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 16044.105 ms
(8 rows)

SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=341668.31..341668.32 rows=1 width=33) (actual time=15789.439..15789.439 rows=1 loops=1)
   ->  Sort  (cost=341668.31..341668.33 rows=6 width=33) (actual time=15789.438..15789.438 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=341668.01..341668.28 rows=6 width=33) (actual time=15789.202..15789.206 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..193580.46 rows=5923502 width=33) (actual time=0.026..1101.772 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 15789.492 ms
(8 rows)

query 2 run 1
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=70675.94..70675.95 rows=1 width=194) (actual time=626.542..626.553 rows=100 loops=1)
   ->  Sort  (cost=70675.94..70675.95 rows=1 width=194) (actual time=626.541..626.545 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method:  top-N heapsort  Memory: 53kB
         ->  Merge Join  (cost=45653.64..70675.93 rows=1 width=194) (actual time=454.744..625.911 rows=489 loops=1)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using q2_idx_1 on part  (cost=0.00..7905.70 rows=860 width=30) (actual time=0.872..47.657 rows=799 loops=1)
                     Index Cond: (p_size = 16)
                     Filter: ((p_type)::text ~~ '%NICKEL'::text)
               ->  Sort  (cost=45653.64..46053.12 rows=159792 width=176) (actual time=451.973..480.256 rows=162846 loops=1)
                     Sort Key: public.partsupp.ps_partkey
                     Sort Method:  external sort  Disk: 31120kB
                     ->  Hash Join  (cost=410.03..31842.95 rows=159792 width=176) (actual time=7.110..317.111 rows=162880 loops=1)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25835.00 rows=800000 width=16) (actual time=0.268..184.301 rows=800000 loops=1)
                           ->  Hash  (cost=385.03..385.03 rows=2000 width=168) (actual time=6.820..6.820 rows=2036 loops=1)
                                 ->  Hash Join  (cost=2.53..385.03 rows=2000 width=168) (actual time=0.855..6.194 rows=2036 loops=1)
                                       Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=146) (actual time=0.304..4.370 rows=10000 loops=1)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.543..0.543 rows=5 loops=1)
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.532..0.540 rows=5 loops=1)
                                                   Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.242..0.245 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.278..0.278 rows=1 loops=1)
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.274..0.276 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=23.73..23.74 rows=1 width=8) (actual time=0.126..0.126 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.00..23.72 rows=1 width=8) (actual time=0.115..0.124 rows=2 loops=650)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.00..22.61 rows=4 width=12) (actual time=0.109..0.121 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.00..21.49 rows=4 width=12) (actual time=0.107..0.117 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..4.36 rows=4 width=12) (actual time=0.104..0.105 rows=4 loops=650)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4.27 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=2600)
                                               Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                         Index Cond: (public.nation.n_nationkey = public.supplier.s_nationkey)
 Total runtime: 630.806 ms
(42 rows)

SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=70675.94..70675.95 rows=1 width=194) (actual time=415.563..415.573 rows=100 loops=1)
   ->  Sort  (cost=70675.94..70675.95 rows=1 width=194) (actual time=415.563..415.567 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method:  top-N heapsort  Memory: 53kB
         ->  Merge Join  (cost=45653.64..70675.93 rows=1 width=194) (actual time=345.061..415.079 rows=489 loops=1)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using q2_idx_1 on part  (cost=0.00..7905.70 rows=860 width=30) (actual time=0.023..16.087 rows=799 loops=1)
                     Index Cond: (p_size = 16)
                     Filter: ((p_type)::text ~~ '%NICKEL'::text)
               ->  Sort  (cost=45653.64..46053.12 rows=159792 width=176) (actual time=344.936..372.110 rows=162846 loops=1)
                     Sort Key: public.partsupp.ps_partkey
                     Sort Method:  external sort  Disk: 31120kB
                     ->  Hash Join  (cost=410.03..31842.95 rows=159792 width=176) (actual time=3.243..214.463 rows=162880 loops=1)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25835.00 rows=800000 width=16) (actual time=0.004..41.143 rows=800000 loops=1)
                           ->  Hash  (cost=385.03..385.03 rows=2000 width=168) (actual time=3.231..3.231 rows=2036 loops=1)
                                 ->  Hash Join  (cost=2.53..385.03 rows=2000 width=168) (actual time=0.026..2.628 rows=2036 loops=1)
                                       Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=146) (actual time=0.003..0.711 rows=10000 loops=1)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.021..0.021 rows=5 loops=1)
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.014..0.020 rows=5 loops=1)
                                                   Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.003..0.004 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=23.73..23.74 rows=1 width=8) (actual time=0.018..0.018 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.00..23.72 rows=1 width=8) (actual time=0.011..0.016 rows=2 loops=650)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.00..22.61 rows=4 width=12) (actual time=0.007..0.015 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.00..21.49 rows=4 width=12) (actual time=0.006..0.011 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..4.36 rows=4 width=12) (actual time=0.005..0.005 rows=4 loops=650)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4.27 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                               Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8) (actual time=0.000..0.001 rows=1 loops=2600)
                                         Index Cond: (public.nation.n_nationkey = public.supplier.s_nationkey)
 Total runtime: 419.691 ms
(42 rows)

query 3 run 1
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=316765.68..316765.70 rows=10 width=28) (actual time=2525.678..2525.679 rows=10 loops=1)
   ->  Sort  (cost=316765.68..317552.56 rows=314754 width=28) (actual time=2525.677..2525.678 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=300521.33..309963.95 rows=314754 width=28) (actual time=2506.336..2523.721 rows=11612 loops=1)
               ->  Sort  (cost=300521.33..301308.22 rows=314754 width=28) (actual time=2506.322..2507.435 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method:  quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=62835.69..271778.21 rows=314754 width=28) (actual time=658.803..2498.237 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..193580.46 rows=3257204 width=20) (actual time=0.460..1143.173 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=61023.82..61023.82 rows=144950 width=12) (actual time=657.356..657.356 rows=146063 loops=1)
                                 ->  Hash Join  (cost=5885.19..61023.82 rows=144950 width=12) (actual time=54.947..633.180 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..45583.00 rows=720545 width=16) (actual time=0.500..354.707 rows=722275 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5508.00..5508.00 rows=30175 width=4) (actual time=54.426..54.426 rows=30142 loops=1)
                                             ->  Seq Scan on customer  (cost=0.00..5508.00 rows=30175 width=4) (actual time=0.332..50.589 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 2525.726 ms
(21 rows)

SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=316765.68..316765.70 rows=10 width=28) (actual time=2048.388..2048.389 rows=10 loops=1)
   ->  Sort  (cost=316765.68..317552.56 rows=314754 width=28) (actual time=2048.387..2048.387 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=300521.33..309963.95 rows=314754 width=28) (actual time=2029.125..2046.399 rows=11612 loops=1)
               ->  Sort  (cost=300521.33..301308.22 rows=314754 width=28) (actual time=2029.112..2030.239 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method:  quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=62835.69..271778.21 rows=314754 width=28) (actual time=452.070..2021.532 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..193580.46 rows=3257204 width=20) (actual time=0.032..923.245 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=61023.82..61023.82 rows=144950 width=12) (actual time=451.810..451.810 rows=146063 loops=1)
                                 ->  Hash Join  (cost=5885.19..61023.82 rows=144950 width=12) (actual time=33.997..431.923 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..45583.00 rows=720545 width=16) (actual time=0.008..251.409 rows=722275 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5508.00..5508.00 rows=30175 width=4) (actual time=33.972..33.972 rows=30142 loops=1)
                                             ->  Seq Scan on customer  (cost=0.00..5508.00 rows=30175 width=4) (actual time=0.004..30.694 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 2048.440 ms
(21 rows)

query 4 run 1
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=77252.49..77252.50 rows=1 width=16) (actual time=2123.670..2123.671 rows=1 loops=1)
   ->  Sort  (cost=77252.49..77252.50 rows=1 width=16) (actual time=2123.669..2123.669 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=77252.47..77252.48 rows=1 width=16) (actual time=2123.631..2123.632 rows=5 loops=1)
               ->  Nested Loop Semi Join  (cost=888.63..77184.21 rows=13652 width=16) (actual time=14.329..2099.202 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=888.63..28567.91 rows=56419 width=20) (actual time=13.384..553.866 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..874.52 rows=56419 width=0) (actual time=9.982..9.982 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using q4_idx_1 on lineitem  (cost=0.00..4.27 rows=6 width=4) (actual time=0.027..0.027 rows=1 loops=55973)
                           Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
 Total runtime: 2123.725 ms
(13 rows)

SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=77252.49..77252.50 rows=1 width=16) (actual time=300.788..300.788 rows=1 loops=1)
   ->  Sort  (cost=77252.49..77252.50 rows=1 width=16) (actual time=300.788..300.788 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=77252.47..77252.48 rows=1 width=16) (actual time=300.766..300.766 rows=5 loops=1)
               ->  Nested Loop Semi Join  (cost=888.63..77184.21 rows=13652 width=16) (actual time=9.359..287.566 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=888.63..28567.91 rows=56419 width=20) (actual time=9.329..83.645 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..874.52 rows=56419 width=0) (actual time=6.212..6.212 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using q4_idx_1 on lineitem  (cost=0.00..4.27 rows=6 width=4) (actual time=0.003..0.003 rows=1 loops=55973)
                           Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
 Total runtime: 300.839 ms
(13 rows)

query 5 run 1
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=251202.61..251202.62 rows=1 width=42) (actual time=2364.041..2364.041 rows=1 loops=1)
   ->  Sort  (cost=251202.61..251202.68 rows=25 width=42) (actual time=2364.040..2364.040 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=251202.05..251202.49 rows=25 width=42) (actual time=2364.029..2364.029 rows=5 loops=1)
               ->  Hash Join  (cost=42777.67..251165.89 rows=7232 width=42) (actual time=699.726..2355.699 rows=7540 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=42302.67..245193.00 rows=180852 width=54) (actual time=693.535..2249.906 rows=182435 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..178577.77 rows=6001077 width=24) (actual time=0.450..663.845 rows=6001215 loops=1)
                           ->  Hash  (cost=41737.61..41737.61 rows=45205 width=38) (actual time=693.002..693.002 rows=45297 loops=1)
                                 ->  Hash Join  (cost=9932.10..41737.61 rows=45205 width=38) (actual time=93.267..680.380 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3559.07..33782.41 rows=226023 width=8) (actual time=32.722..508.298 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3502.56 rows=226023 width=0) (actual time=28.786..28.786 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5998.03..5998.03 rows=30000 width=38) (actual time=60.510..60.510 rows=29952 loops=1)
                                             ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=38) (actual time=1.008..55.500 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.482..37.790 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.517..0.517 rows=5 loops=1)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.506..0.514 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.242..0.247 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.251..0.251 rows=1 loops=1)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.246..0.248 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=5.942..5.942 rows=10000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.313..4.718 rows=10000 loops=1)
 Total runtime: 2364.118 ms
(31 rows)

SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=251202.61..251202.62 rows=1 width=42) (actual time=1560.646..1560.646 rows=1 loops=1)
   ->  Sort  (cost=251202.61..251202.68 rows=25 width=42) (actual time=1560.646..1560.646 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=251202.05..251202.49 rows=25 width=42) (actual time=1560.632..1560.633 rows=5 loops=1)
               ->  Hash Join  (cost=42777.67..251165.89 rows=7232 width=42) (actual time=230.080..1553.416 rows=7540 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=42302.67..245193.00 rows=180852 width=54) (actual time=227.014..1468.420 rows=182435 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..178577.77 rows=6001077 width=24) (actual time=0.027..448.856 rows=6001215 loops=1)
                           ->  Hash  (cost=41737.61..41737.61 rows=45205 width=38) (actual time=226.930..226.930 rows=45297 loops=1)
                                 ->  Hash Join  (cost=9932.10..41737.61 rows=45205 width=38) (actual time=62.883..219.446 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3559.07..33782.41 rows=226023 width=8) (actual time=22.876..125.706 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3502.56 rows=226023 width=0) (actual time=19.530..19.530 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5998.03..5998.03 rows=30000 width=38) (actual time=39.990..39.990 rows=29952 loops=1)
                                             ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=38) (actual time=0.030..35.577 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.003..7.891 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.023..0.023 rows=5 loops=1)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.016..0.022 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.002 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=3.024..3.024 rows=10000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.008..1.902 rows=10000 loops=1)
 Total runtime: 1560.960 ms
(31 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=120988.56..120988.57 rows=1 width=16) (actual time=1276.292..1276.293 rows=1 loops=1)
   ->  Aggregate  (cost=120988.56..120988.57 rows=1 width=16) (actual time=1276.290..1276.290 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=24685.08..120693.56 rows=117999 width=16) (actual time=139.354..1196.811 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..24655.58 rows=117999 width=0) (actual time=127.971..127.971 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 1276.323 ms
(7 rows)

SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=120988.56..120988.57 rows=1 width=16) (actual time=340.486..340.486 rows=1 loops=1)
   ->  Aggregate  (cost=120988.56..120988.57 rows=1 width=16) (actual time=340.485..340.485 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=24685.08..120693.56 rows=117999 width=16) (actual time=112.987..293.020 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..24655.58 rows=117999 width=0) (actual time=101.591..101.591 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 340.517 ms
(7 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=252525.30..252525.30 rows=1 width=72) (actual time=3661.990..3661.990 rows=1 loops=1)
   ->  Sort  (cost=252525.30..252539.98 rows=5874 width=72) (actual time=3661.989..3661.989 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=252363.76..252495.93 rows=5874 width=72) (actual time=3661.953..3661.962 rows=4 loops=1)
               ->  Hash Join  (cost=93312.75..252305.02 rows=5874 width=72) (actual time=951.561..3649.913 rows=5729 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=92837.75..247334.46 rows=146914 width=80) (actual time=945.171..3542.445 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=36695.28..182830.73 rows=1837897 width=28) (actual time=333.328..2418.529 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36235.80 rows=1837897 width=0) (actual time=310.497..310.497 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=54643.68..54643.68 rows=119904 width=60) (actual time=611.489..611.489 rows=118477 loops=1)
                                 ->  Hash Join  (cost=5986.68..54643.68 rows=119904 width=60) (actual time=55.925..585.677 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41833.00 rows=1500000 width=8) (actual time=0.703..278.367 rows=1500000 loops=1)
                                       ->  Hash  (cost=5836.80..5836.80 rows=11990 width=60) (actual time=55.212..55.212 rows=11896 loops=1)
                                             ->  Hash Join  (cost=21.30..5836.80 rows=11990 width=60) (actual time=0.955..52.852 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.513..37.356 rows=150000 loops=1)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60) (actual time=0.435..0.435 rows=2 loops=1)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60) (actual time=0.391..0.432 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.307..0.310 rows=25 loops=1)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.006 rows=25 loops=1)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=5.988..5.988 rows=10000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.306..4.827 rows=10000 loops=1)
 Total runtime: 3662.311 ms
(30 rows)

SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=252525.30..252525.30 rows=1 width=72) (actual time=1607.728..1607.728 rows=1 loops=1)
   ->  Sort  (cost=252525.30..252539.98 rows=5874 width=72) (actual time=1607.727..1607.727 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=252363.76..252495.93 rows=5874 width=72) (actual time=1607.692..1607.700 rows=4 loops=1)
               ->  Hash Join  (cost=93312.75..252305.02 rows=5874 width=72) (actual time=716.575..1601.168 rows=5729 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=92837.75..247334.46 rows=146914 width=80) (actual time=713.332..1547.795 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=36695.28..182830.73 rows=1837897 width=28) (actual time=252.585..728.558 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36235.80 rows=1837897 width=0) (actual time=230.525..230.525 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=54643.68..54643.68 rows=119904 width=60) (actual time=460.711..460.711 rows=118477 loops=1)
                                 ->  Hash Join  (cost=5986.68..54643.68 rows=119904 width=60) (actual time=34.175..439.197 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41833.00 rows=1500000 width=8) (actual time=0.002..69.509 rows=1500000 loops=1)
                                       ->  Hash  (cost=5836.80..5836.80 rows=11990 width=60) (actual time=34.167..34.167 rows=11896 loops=1)
                                             ->  Hash Join  (cost=21.30..5836.80 rows=11990 width=60) (actual time=0.134..32.238 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.003..7.103 rows=150000 loops=1)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60) (actual time=0.127..0.127 rows=2 loops=1)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60) (actual time=0.085..0.125 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.003 rows=25 loops=1)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.007 rows=25 loops=1)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=3.122..3.122 rows=10000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.009..1.959 rows=10000 loops=1)
 Total runtime: 1608.046 ms
(30 rows)

query 8 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=136525.46..136525.46 rows=1 width=46) (actual time=6541.823..6541.824 rows=1 loops=1)
   ->  Sort  (cost=136525.46..136527.26 rows=721 width=46) (actual time=6541.822..6541.822 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method:  quicksort  Memory: 25kB
         ->  HashAggregate  (cost=136496.62..136521.85 rows=721 width=46) (actual time=6541.809..6541.811 rows=2 loops=1)
               ->  Hash Join  (cost=51721.75..136478.68 rows=2392 width=46) (actual time=754.850..6532.097 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=51720.19..136432.27 rows=2392 width=24) (actual time=754.591..6527.330 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=51270.19..135922.47 rows=2392 width=24) (actual time=748.839..6518.469 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..84478.49 rows=39963 width=24) (actual time=3.240..5731.918 rows=39694 loops=1)
                                       ->  Index Scan using q2_idx_1 on part  (cost=0.00..6516.81 rows=1333 width=4) (actual time=1.767..89.795 rows=1320 loops=1)
                                             Index Cond: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..58.11 rows=30 width=28) (actual time=0.309..4.255 rows=30 loops=1320)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=50147.90..50147.90 rows=89783 width=8) (actual time=742.375..742.375 rows=91179 loops=1)
                                       ->  Hash Join  (cost=13438.75..50147.90 rows=89783 width=8) (actual time=113.260..723.949 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=7065.72..40632.46 rows=448916 width=12) (actual time=53.872..492.007 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6953.49 rows=448916 width=0) (actual time=50.027..50.027 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5998.03..5998.03 rows=30000 width=4) (actual time=59.308..59.308 rows=29952 loops=1)
                                                   ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=4) (actual time=0.675..55.663 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.451..38.999 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.220..0.220 rows=5 loops=1)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.210..0.219 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.008 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.204..0.204 rows=1 loops=1)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.201..0.202 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=5.744..5.744 rows=10000 loops=1)
                                 ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.303..4.650 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.247..0.247 rows=25 loops=1)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.232..0.236 rows=25 loops=1)
 Total runtime: 6542.126 ms
(39 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=136525.46..136525.46 rows=1 width=46) (actual time=442.317..442.317 rows=1 loops=1)
   ->  Sort  (cost=136525.46..136527.26 rows=721 width=46) (actual time=442.315..442.315 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method:  quicksort  Memory: 25kB
         ->  HashAggregate  (cost=136496.62..136521.85 rows=721 width=46) (actual time=442.307..442.307 rows=2 loops=1)
               ->  Hash Join  (cost=51721.75..136478.68 rows=2392 width=46) (actual time=313.487..439.628 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=51720.19..136432.27 rows=2392 width=24) (actual time=313.459..438.393 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=51270.19..135922.47 rows=2392 width=24) (actual time=310.493..433.592 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..84478.49 rows=39963 width=24) (actual time=0.054..106.000 rows=39694 loops=1)
                                       ->  Index Scan using q2_idx_1 on part  (cost=0.00..6516.81 rows=1333 width=4) (actual time=0.034..13.175 rows=1320 loops=1)
                                             Index Cond: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..58.11 rows=30 width=28) (actual time=0.007..0.065 rows=30 loops=1320)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=50147.90..50147.90 rows=89783 width=8) (actual time=310.373..310.373 rows=91179 loops=1)
                                       ->  Hash Join  (cost=13438.75..50147.90 rows=89783 width=8) (actual time=79.611..298.207 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=7065.72..40632.46 rows=448916 width=12) (actual time=40.451..161.531 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6953.49 rows=448916 width=0) (actual time=37.097..37.097 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5998.03..5998.03 rows=30000 width=4) (actual time=39.144..39.144 rows=29952 loops=1)
                                                   ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=4) (actual time=0.021..35.893 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.002..8.298 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.016..0.016 rows=5 loops=1)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.012..0.016 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.001 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=2.962..2.962 rows=10000 loops=1)
                                 ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.004..1.936 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.018..0.018 rows=25 loops=1)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.009..0.013 rows=25 loops=1)
 Total runtime: 442.625 ms
(39 rows)

query 9 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=93501.01..93501.01 rows=1 width=61) (actual time=17287.746..17287.746 rows=1 loops=1)
   ->  Sort  (cost=93501.01..93501.13 rows=48 width=61) (actual time=17287.745..17287.745 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=93499.45..93500.77 rows=48 width=61) (actual time=17287.659..17287.679 rows=175 loops=1)
               ->  Nested Loop  (cost=0.00..93499.09 rows=48 width=61) (actual time=4.410..16710.049 rows=325928 loops=1)
                     ->  Nested Loop  (cost=0.00..93437.39 rows=48 width=39) (actual time=4.041..16217.453 rows=325928 loops=1)
                           ->  Nested Loop  (cost=0.00..93250.81 rows=48 width=43) (actual time=3.399..15712.032 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=0.00..93059.74 rows=48 width=43) (actual time=2.203..11829.966 rows=325928 loops=1)
                                       ->  Nested Loop  (cost=0.00..23127.24 rows=16160 width=20) (actual time=1.291..329.832 rows=43520 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..6657.00 rows=4040 width=4) (actual time=0.239..87.608 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..4.03 rows=4 width=16) (actual time=0.019..0.021 rows=4 loops=10880)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..4.31 rows=1 width=35) (actual time=0.040..0.262 rows=7 loops=43520)
                                             Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using q21_idx_3 on orders  (cost=0.00..3.97 rows=1 width=8) (actual time=0.011..0.011 rows=1 loops=325928)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.87 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.27 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=325928)
                           Index Cond: (nation.n_nationkey = supplier.s_nationkey)
 Total runtime: 17287.811 ms
(23 rows)

SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=93501.01..93501.01 rows=1 width=61) (actual time=2768.884..2768.884 rows=1 loops=1)
   ->  Sort  (cost=93501.01..93501.13 rows=48 width=61) (actual time=2768.883..2768.883 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=93499.45..93500.77 rows=48 width=61) (actual time=2768.798..2768.821 rows=175 loops=1)
               ->  Nested Loop  (cost=0.00..93499.09 rows=48 width=61) (actual time=0.107..2378.190 rows=325928 loops=1)
                     ->  Nested Loop  (cost=0.00..93437.39 rows=48 width=39) (actual time=0.094..2045.690 rows=325928 loops=1)
                           ->  Nested Loop  (cost=0.00..93250.81 rows=48 width=43) (actual time=0.078..1684.682 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=0.00..93059.74 rows=48 width=43) (actual time=0.056..736.501 rows=325928 loops=1)
                                       ->  Nested Loop  (cost=0.00..23127.24 rows=16160 width=20) (actual time=0.037..113.107 rows=43520 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..6657.00 rows=4040 width=4) (actual time=0.015..55.404 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..4.03 rows=4 width=16) (actual time=0.004..0.005 rows=4 loops=10880)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..4.31 rows=1 width=35) (actual time=0.003..0.013 rows=7 loops=43520)
                                             Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using q21_idx_3 on orders  (cost=0.00..3.97 rows=1 width=8) (actual time=0.002..0.003 rows=1 loops=325928)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.87 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.27 rows=1 width=30) (actual time=0.000..0.001 rows=1 loops=325928)
                           Index Cond: (nation.n_nationkey = supplier.s_nationkey)
 Total runtime: 2768.950 ms
(23 rows)

query 10 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=252940.65..252940.70 rows=20 width=187) (actual time=2128.860..2128.862 rows=20 loops=1)
   ->  Sort  (cost=252940.65..253083.97 rows=57327 width=187) (actual time=2128.860..2128.860 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method:  top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=250411.98..251415.20 rows=57327 width=187) (actual time=2105.858..2119.051 rows=38076 loops=1)
               ->  Hash Join  (cost=36362.96..249265.44 rows=57327 width=187) (actual time=346.625..1956.220 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=36361.40..248475.63 rows=57327 width=165) (actual time=346.405..1931.235 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=29353.40..240106.12 rows=57327 width=20) (actual time=260.479..1773.046 rows=114347 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..193580.46 rows=1475465 width=20) (actual time=0.774..1123.714 rows=1478870 loops=1)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                 ->  Hash  (cost=28624.90..28624.90 rows=58280 width=8) (actual time=258.867..258.867 rows=57111 loops=1)
                                       ->  Bitmap Heap Scan on orders  (cost=917.70..28624.90 rows=58280 width=8) (actual time=13.308..245.840 rows=57111 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..903.13 rows=58280 width=0) (actual time=9.664..9.664 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=5133.00..5133.00 rows=150000 width=149) (actual time=85.909..85.909 rows=150000 loops=1)
                                 ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=149) (actual time=0.471..51.392 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.217..0.217 rows=25 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.201..0.207 rows=25 loops=1)
 Total runtime: 2129.017 ms
(23 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=252940.65..252940.70 rows=20 width=187) (actual time=1669.619..1669.621 rows=20 loops=1)
   ->  Sort  (cost=252940.65..253083.97 rows=57327 width=187) (actual time=1669.618..1669.618 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method:  top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=250411.98..251415.20 rows=57327 width=187) (actual time=1646.644..1659.823 rows=38076 loops=1)
               ->  Hash Join  (cost=36362.96..249265.44 rows=57327 width=187) (actual time=153.277..1502.192 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=36361.40..248475.63 rows=57327 width=165) (actual time=153.257..1478.108 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=29353.40..240106.12 rows=57327 width=20) (actual time=87.921..1343.193 rows=114347 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..193580.46 rows=1475465 width=20) (actual time=0.035..904.588 rows=1478870 loops=1)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                 ->  Hash  (cost=28624.90..28624.90 rows=58280 width=8) (actual time=87.775..87.775 rows=57111 loops=1)
                                       ->  Bitmap Heap Scan on orders  (cost=917.70..28624.90 rows=58280 width=8) (actual time=8.608..79.723 rows=57111 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..903.13 rows=58280 width=0) (actual time=5.623..5.623 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=5133.00..5133.00 rows=150000 width=149) (actual time=65.327..65.327 rows=150000 loops=1)
                                 ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=149) (actual time=0.004..32.435 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.016..0.016 rows=25 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.007..0.011 rows=25 loops=1)
 Total runtime: 1669.784 ms
(23 rows)

query 11 run 1
SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=30905.92..30905.92 rows=1 width=16) (actual time=772.336..772.336 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=14853.74..14853.76 rows=1 width=12) (actual time=29.166..29.166 rows=1 loops=1)
           ->  Nested Loop  (cost=0.00..14773.84 rows=31958 width=12) (actual time=0.013..17.167 rows=32880 loops=1)
                 ->  Nested Loop  (cost=0.00..430.71 rows=400 width=4) (actual time=0.010..0.175 rows=411 loops=1)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..424.40 rows=400 width=8) (actual time=0.003..0.127 rows=411 loops=1)
                             Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..34.86 rows=80 width=16) (actual time=0.003..0.033 rows=80 loops=411)
                       Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=16052.16..16132.06 rows=31958 width=16) (actual time=772.335..772.335 rows=1 loops=1)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=15013.53..15892.37 rows=31958 width=16) (actual time=766.473..771.990 rows=839 loops=1)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Nested Loop  (cost=0.00..14773.84 rows=31958 width=16) (actual time=1.960..709.327 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..430.71 rows=400 width=4) (actual time=1.064..5.940 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.211..0.214 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..424.40 rows=400 width=8) (actual time=0.850..5.644 rows=411 loops=1)
                                 Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..34.86 rows=80 width=20) (actual time=0.096..1.694 rows=80 loops=411)
                           Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
 Total runtime: 772.417 ms
(25 rows)

SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=30905.92..30905.92 rows=1 width=16) (actual time=104.617..104.617 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=14853.74..14853.76 rows=1 width=12) (actual time=29.101..29.101 rows=1 loops=1)
           ->  Nested Loop  (cost=0.00..14773.84 rows=31958 width=12) (actual time=0.013..17.089 rows=32880 loops=1)
                 ->  Nested Loop  (cost=0.00..430.71 rows=400 width=4) (actual time=0.009..0.168 rows=411 loops=1)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..424.40 rows=400 width=8) (actual time=0.004..0.128 rows=411 loops=1)
                             Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..34.86 rows=80 width=16) (actual time=0.003..0.033 rows=80 loops=411)
                       Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=16052.16..16132.06 rows=31958 width=16) (actual time=104.616..104.616 rows=1 loops=1)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=15013.53..15892.37 rows=31958 width=16) (actual time=98.928..104.493 rows=839 loops=1)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Nested Loop  (cost=0.00..14773.84 rows=31958 width=16) (actual time=0.048..53.421 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..430.71 rows=400 width=4) (actual time=0.028..0.597 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..424.40 rows=400 width=8) (actual time=0.015..0.530 rows=411 loops=1)
                                 Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..34.86 rows=80 width=20) (actual time=0.007..0.118 rows=80 loops=411)
                           Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
 Total runtime: 104.914 ms
(25 rows)

query 12 run 1
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=132302.39..132302.40 rows=1 width=27) (actual time=979.981..979.981 rows=1 loops=1)
   ->  Sort  (cost=132302.39..132302.40 rows=1 width=27) (actual time=979.981..979.981 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method:  quicksort  Memory: 25kB
         ->  HashAggregate  (cost=132302.36..132302.38 rows=1 width=27) (actual time=979.959..979.960 rows=2 loops=1)
               ->  Merge Join  (cost=70403.88..132103.68 rows=26491 width=27) (actual time=477.715..963.165 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..57566.33 rows=1500000 width=20) (actual time=0.949..383.894 rows=1499957 loops=1)
                     ->  Sort  (cost=70396.11..70462.34 rows=26491 width=15) (actual time=476.702..479.780 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method:  quicksort  Memory: 2219kB
                           ->  Bitmap Heap Scan on lineitem  (cost=30878.47..68449.92 rows=26491 width=15) (actual time=100.459..467.410 rows=30953 loops=1)
                                 Recheck Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate))
                                 ->  Bitmap Index Scan on q12_idx_1  (cost=0.00..30871.85 rows=26491 width=0) (actual time=96.082..96.082 rows=30953 loops=1)
                                       Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 980.046 ms
(16 rows)

SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=132302.39..132302.40 rows=1 width=27) (actual time=499.757..499.758 rows=1 loops=1)
   ->  Sort  (cost=132302.39..132302.40 rows=1 width=27) (actual time=499.756..499.756 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method:  quicksort  Memory: 25kB
         ->  HashAggregate  (cost=132302.36..132302.38 rows=1 width=27) (actual time=499.736..499.736 rows=2 loops=1)
               ->  Merge Join  (cost=70403.88..132103.68 rows=26491 width=27) (actual time=152.187..486.384 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..57566.33 rows=1500000 width=20) (actual time=0.021..237.956 rows=1499957 loops=1)
                     ->  Sort  (cost=70396.11..70462.34 rows=26491 width=15) (actual time=152.145..154.361 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method:  quicksort  Memory: 2219kB
                           ->  Bitmap Heap Scan on lineitem  (cost=30878.47..68449.92 rows=26491 width=15) (actual time=80.180..147.659 rows=30953 loops=1)
                                 Recheck Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate))
                                 ->  Bitmap Index Scan on q12_idx_1  (cost=0.00..30871.85 rows=26491 width=0) (actual time=76.381..76.381 rows=30953 loops=1)
                                       Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 499.815 ms
(16 rows)

query 13 run 1
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=155167.88..155167.89 rows=1 width=8) (actual time=1544.569..1544.569 rows=1 loops=1)
   ->  Sort  (cost=155167.88..155168.38 rows=200 width=8) (actual time=1544.568..1544.568 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=155164.38..155166.88 rows=200 width=8) (actual time=1544.551..1544.555 rows=42 loops=1)
               ->  HashAggregate  (cost=151039.38..152914.38 rows=150000 width=8) (actual time=1501.726..1525.952 rows=150000 loops=1)
                     ->  Hash Left Join  (cost=69696.54..143690.77 rows=1469723 width=8) (actual time=856.657..1290.550 rows=1533923 loops=1)
                           Hash Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=4) (actual time=0.359..41.996 rows=150000 loops=1)
                           ->  Hash  (cost=45583.00..45583.00 rows=1469723 width=8) (actual time=856.159..856.159 rows=1483918 loops=1)
                                 ->  Seq Scan on orders  (cost=0.00..45583.00 rows=1469723 width=8) (actual time=0.429..644.840 rows=1483918 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 1545.418 ms
(13 rows)

SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=155167.88..155167.89 rows=1 width=8) (actual time=1394.180..1394.180 rows=1 loops=1)
   ->  Sort  (cost=155167.88..155168.38 rows=200 width=8) (actual time=1394.179..1394.179 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=155164.38..155166.88 rows=200 width=8) (actual time=1394.161..1394.166 rows=42 loops=1)
               ->  HashAggregate  (cost=151039.38..152914.38 rows=150000 width=8) (actual time=1351.812..1375.692 rows=150000 loops=1)
                     ->  Hash Left Join  (cost=69696.54..143690.77 rows=1469723 width=8) (actual time=723.030..1144.820 rows=1533923 loops=1)
                           Hash Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=4) (actual time=0.013..29.665 rows=150000 loops=1)
                           ->  Hash  (cost=45583.00..45583.00 rows=1469723 width=8) (actual time=722.907..722.907 rows=1483918 loops=1)
                                 ->  Seq Scan on orders  (cost=0.00..45583.00 rows=1469723 width=8) (actual time=0.008..524.785 rows=1483918 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 1394.954 ms
(13 rows)

query 14 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=85477.82..85477.85 rows=1 width=37) (actual time=859.561..859.562 rows=1 loops=1)
   ->  Aggregate  (cost=85477.82..85477.85 rows=1 width=37) (actual time=859.560..859.560 rows=1 loops=1)
         ->  Hash Join  (cost=10087.58..85120.20 rows=71523 width=37) (actual time=105.573..782.555 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1430.58..75032.12 rows=71585 width=20) (actual time=23.064..623.662 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1412.68 rows=71585 width=0) (actual time=16.643..16.643 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6157.00..6157.00 rows=200000 width=25) (actual time=82.454..82.454 rows=200000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..6157.00 rows=200000 width=25) (actual time=0.383..55.624 rows=200000 loops=1)
 Total runtime: 859.598 ms
(11 rows)

SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=85477.82..85477.85 rows=1 width=37) (actual time=305.831..305.832 rows=1 loops=1)
   ->  Aggregate  (cost=85477.82..85477.85 rows=1 width=37) (actual time=305.830..305.830 rows=1 loops=1)
         ->  Hash Join  (cost=10087.58..85120.20 rows=71523 width=37) (actual time=76.287..250.056 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1430.58..75032.12 rows=71585 width=20) (actual time=16.665..132.932 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1412.68 rows=71585 width=0) (actual time=10.865..10.865 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6157.00..6157.00 rows=200000 width=25) (actual time=59.573..59.573 rows=200000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..6157.00 rows=200000 width=25) (actual time=0.007..35.443 rows=200000 loops=1)
 Total runtime: 305.867 ms
(11 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=253062.93..253064.16 rows=1 width=103) (actual time=1504.161..1504.161 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=126238.92..126238.93 rows=1 width=32) (actual time=224.560..224.560 rows=1 loops=1)
           ->  HashAggregate  (cost=126227.61..126234.21 rows=377 width=20) (actual time=222.821..223.952 rows=10000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=4521.90..125095.38 rows=226446 width=20) (actual time=34.202..91.749 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4465.29 rows=226446 width=0) (actual time=23.778..23.778 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=126823.99..127290.90 rows=377 width=103) (actual time=1504.159..1504.159 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..436.25 rows=10000 width=71) (actual time=0.631..4.667 rows=8449 loops=1)
         ->  Sort  (cost=126823.99..126824.94 rows=377 width=36) (actual time=1498.975..1498.975 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method:  quicksort  Memory: 25kB
               ->  Subquery Scan revenue0  (cost=126793.72..126807.86 rows=377 width=36) (actual time=1498.521..1498.970 rows=1 loops=1)
                     ->  HashAggregate  (cost=126793.72..126804.09 rows=377 width=20) (actual time=1498.520..1498.969 rows=1 loops=1)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=4521.90..125095.38 rows=226446 width=20) (actual time=53.887..1051.016 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4465.29 rows=226446 width=0) (actual time=42.473..42.473 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 1504.238 ms
(22 rows)

DROP VIEW
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=253062.93..253064.16 rows=1 width=103) (actual time=607.554..607.554 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=126238.92..126238.93 rows=1 width=32) (actual time=224.601..224.601 rows=1 loops=1)
           ->  HashAggregate  (cost=126227.61..126234.21 rows=377 width=20) (actual time=222.862..223.999 rows=10000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=4521.90..125095.38 rows=226446 width=20) (actual time=34.480..91.860 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4465.29 rows=226446 width=0) (actual time=23.365..23.365 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=126823.99..127290.90 rows=377 width=103) (actual time=607.553..607.553 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..436.25 rows=10000 width=71) (actual time=0.017..1.486 rows=8449 loops=1)
         ->  Sort  (cost=126823.99..126824.94 rows=377 width=36) (actual time=605.585..605.585 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method:  quicksort  Memory: 25kB
               ->  Subquery Scan revenue0  (cost=126793.72..126807.86 rows=377 width=36) (actual time=605.127..605.581 rows=1 loops=1)
                     ->  HashAggregate  (cost=126793.72..126804.09 rows=377 width=20) (actual time=605.126..605.580 rows=1 loops=1)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=4521.90..125095.38 rows=226446 width=20) (actual time=38.272..233.480 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4465.29 rows=226446 width=0) (actual time=28.180..28.180 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 607.632 ms
(22 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47635.80..47635.80 rows=1 width=40) (actual time=1303.072..1303.072 rows=1 loops=1)
   ->  Sort  (cost=47635.80..47642.50 rows=2679 width=40) (actual time=1303.072..1303.072 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=46919.39..47622.40 rows=2679 width=40) (actual time=1248.428..1300.228 rows=18220 loops=1)
               ->  Sort  (cost=46919.39..47053.30 rows=53562 width=40) (actual time=1248.409..1256.158 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method:  quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9841.77..42712.39 rows=53562 width=40) (actual time=99.781..485.759 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=350.00..28185.00 rows=400000 width=8) (actual time=6.120..254.311 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..350.00 rows=1 width=4) (actual time=1.266..5.808 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9157.00..9157.00 rows=26781 width=40) (actual time=93.634..93.634 rows=29492 loops=1)
                                 ->  Seq Scan on part  (cost=0.00..9157.00 rows=26781 width=40) (actual time=0.311..88.011 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
 Total runtime: 1303.142 ms
(19 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47635.80..47635.80 rows=1 width=40) (actual time=1164.762..1164.762 rows=1 loops=1)
   ->  Sort  (cost=47635.80..47642.50 rows=2679 width=40) (actual time=1164.761..1164.761 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=46919.39..47622.40 rows=2679 width=40) (actual time=1110.113..1161.785 rows=18220 loops=1)
               ->  Sort  (cost=46919.39..47053.30 rows=53562 width=40) (actual time=1110.094..1117.888 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method:  quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9841.77..42712.39 rows=53562 width=40) (actual time=72.930..348.686 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=350.00..28185.00 rows=400000 width=8) (actual time=2.819..165.439 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..350.00 rows=1 width=4) (actual time=0.113..2.809 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9157.00..9157.00 rows=26781 width=40) (actual time=70.086..70.086 rows=29492 loops=1)
                                 ->  Seq Scan on part  (cost=0.00..9157.00 rows=26781 width=40) (actual time=0.012..65.024 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
 Total runtime: 1164.820 ms
(19 rows)

query 17 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=225834.83..225834.85 rows=1 width=10) (actual time=5324.270..5324.270 rows=1 loops=1)
   ->  Aggregate  (cost=225834.83..225834.85 rows=1 width=10) (actual time=5324.268..5324.268 rows=1 loops=1)
         ->  Nested Loop  (cost=215742.52..225830.11 rows=1889 width=10) (actual time=5133.439..5323.674 rows=592 loops=1)
               ->  Hash Join  (cost=215742.52..221499.35 rows=189 width=40) (actual time=5132.366..5256.260 rows=208 loops=1)
                     Hash Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=208583.16..211585.74 rows=200172 width=11) (actual time=5076.652..5187.049 rows=200000 loops=1)
                           ->  Seq Scan on lineitem  (cost=0.00..178577.77 rows=6001077 width=11) (actual time=0.764..682.239 rows=6001215 loops=1)
                     ->  Hash  (cost=7157.00..7157.00 rows=189 width=4) (actual time=55.533..55.533 rows=208 loops=1)
                           ->  Seq Scan on part  (cost=0.00..7157.00 rows=189 width=4) (actual time=1.068..55.450 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using q17_idx_1 on lineitem  (cost=0.00..22.76 rows=10 width=21) (actual time=0.295..0.322 rows=3 loops=208)
                     Index Cond: ((public.lineitem.l_partkey = part.p_partkey) AND (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity)))))
 Total runtime: 5324.902 ms
(13 rows)

SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=225834.83..225834.85 rows=1 width=10) (actual time=4971.380..4971.380 rows=1 loops=1)
   ->  Aggregate  (cost=225834.83..225834.85 rows=1 width=10) (actual time=4971.379..4971.379 rows=1 loops=1)
         ->  Nested Loop  (cost=215742.52..225830.11 rows=1889 width=10) (actual time=4840.688..4971.231 rows=592 loops=1)
               ->  Hash Join  (cost=215742.52..221499.35 rows=189 width=40) (actual time=4840.665..4969.382 rows=208 loops=1)
                     Hash Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=208583.16..211585.74 rows=200172 width=11) (actual time=4806.873..4922.502 rows=200000 loops=1)
                           ->  Seq Scan on lineitem  (cost=0.00..178577.77 rows=6001077 width=11) (actual time=0.025..485.706 rows=6001215 loops=1)
                     ->  Hash  (cost=7157.00..7157.00 rows=189 width=4) (actual time=33.597..33.597 rows=208 loops=1)
                           ->  Seq Scan on part  (cost=0.00..7157.00 rows=189 width=4) (actual time=0.135..33.555 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using q17_idx_1 on lineitem  (cost=0.00..22.76 rows=10 width=21) (actual time=0.007..0.008 rows=3 loops=208)
                     Index Cond: ((public.lineitem.l_partkey = part.p_partkey) AND (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity)))))
 Total runtime: 4972.011 ms
(13 rows)

query 18 run 1
SET
SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1086393.25..1086396.25 rows=100 width=48) (actual time=4821.453..4821.478 rows=9 loops=1)
   ->  GroupAggregate  (cost=1086393.25..1176409.39 rows=3000538 width=48) (actual time=4821.452..4821.476 rows=9 loops=1)
         ->  Sort  (cost=1086393.25..1093894.60 rows=3000538 width=48) (actual time=4821.441..4821.445 rows=63 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method:  quicksort  Memory: 33kB
               ->  Hash Join  (cost=386365.65..697653.53 rows=3000538 width=48) (actual time=3794.332..4821.319 rows=63 loops=1)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..178577.77 rows=6001077 width=11) (actual time=0.527..646.233 rows=6001215 loops=1)
                     ->  Hash  (cost=370398.65..370398.65 rows=750000 width=45) (actual time=3486.126..3486.126 rows=9 loops=1)
                           ->  Hash Join  (cost=292123.46..370398.65 rows=750000 width=45) (actual time=3177.589..3481.933 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=285115.46..345578.15 rows=750000 width=26) (actual time=3114.248..3418.571 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41833.00 rows=1500000 width=22) (actual time=0.708..265.340 rows=1500000 loops=1)
                                       ->  Hash  (cost=280578.34..280578.34 rows=362969 width=4) (actual time=3027.904..3027.904 rows=9 loops=1)
                                             ->  GroupAggregate  (cost=0.00..276948.65 rows=362969 width=11) (actual time=647.337..3027.887 rows=9 loops=1)
                                                   Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..241498.73 rows=6001077 width=11) (actual time=0.799..1602.475 rows=6001215 loops=1)
                                 ->  Hash  (cost=5133.00..5133.00 rows=150000 width=23) (actual time=63.329..63.329 rows=150000 loops=1)
                                       ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=23) (actual time=0.455..43.460 rows=150000 loops=1)
 Total runtime: 4821.540 ms
(21 rows)

SET
SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1086393.25..1086396.25 rows=100 width=48) (actual time=4014.397..4014.422 rows=9 loops=1)
   ->  GroupAggregate  (cost=1086393.25..1176409.39 rows=3000538 width=48) (actual time=4014.397..4014.422 rows=9 loops=1)
         ->  Sort  (cost=1086393.25..1093894.60 rows=3000538 width=48) (actual time=4014.385..4014.387 rows=63 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method:  quicksort  Memory: 33kB
               ->  Hash Join  (cost=386365.65..697653.53 rows=3000538 width=48) (actual time=2989.520..4014.260 rows=63 loops=1)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..178577.77 rows=6001077 width=11) (actual time=0.006..641.604 rows=6001215 loops=1)
                     ->  Hash  (cost=370398.65..370398.65 rows=750000 width=45) (actual time=2683.074..2683.074 rows=9 loops=1)
                           ->  Hash Join  (cost=292123.46..370398.65 rows=750000 width=45) (actual time=2480.312..2682.994 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=285115.46..345578.15 rows=750000 width=26) (actual time=2435.307..2637.971 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41833.00 rows=1500000 width=22) (actual time=0.001..67.924 rows=1500000 loops=1)
                                       ->  Hash  (cost=280578.34..280578.34 rows=362969 width=4) (actual time=2380.554..2380.554 rows=9 loops=1)
                                             ->  GroupAggregate  (cost=0.00..276948.65 rows=362969 width=11) (actual time=502.916..2380.543 rows=9 loops=1)
                                                   Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..241498.73 rows=6001077 width=11) (actual time=0.019..1001.325 rows=6001215 loops=1)
                                 ->  Hash  (cost=5133.00..5133.00 rows=150000 width=23) (actual time=44.990..44.990 rows=150000 loops=1)
                                       ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=23) (actual time=0.005..25.808 rows=150000 loops=1)
 Total runtime: 4014.477 ms
(21 rows)

query 19 run 1
SET
SET


 Limit  (cost=313600.41..313600.42 rows=1 width=16) (actual time=1756.207..1756.208 rows=1 loops=1)
   ->  Aggregate  (cost=313600.41..313600.42 rows=1 width=16) (actual time=1756.207..1756.207 rows=1 loops=1)
         ->  Hash Join  (cost=10912.77..313600.14 rows=105 width=16) (actual time=86.072..1755.859 rows=111 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..298599.31 rows=108715 width=27) (actual time=0.538..1623.104 rows=89766 loops=1)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=9657.00..9657.00 rows=100462 width=30) (actual time=85.098..85.098 rows=60513 loops=1)
                     ->  Seq Scan on part  (cost=0.00..9657.00 rows=100462 width=30) (actual time=0.219..75.175 rows=60513 loops=1)
                           Filter: ((p_size >= 1) AND (((p_size <= 5) AND (p_size >= 1)) OR ((p_size <= 10) AND (p_size >= 1)) OR ((p_size <= 15) AND (p_size >= 1))))
 Total runtime: 1756.254 ms
(11 rows)

SET
SET


 Limit  (cost=313600.41..313600.42 rows=1 width=16) (actual time=1482.797..1482.797 rows=1 loops=1)
   ->  Aggregate  (cost=313600.41..313600.42 rows=1 width=16) (actual time=1482.796..1482.796 rows=1 loops=1)
         ->  Hash Join  (cost=10912.77..313600.14 rows=105 width=16) (actual time=64.327..1482.532 rows=111 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..298599.31 rows=108715 width=27) (actual time=0.076..1374.712 rows=89766 loops=1)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=9657.00..9657.00 rows=100462 width=30) (actual time=64.004..64.004 rows=60513 loops=1)
                     ->  Seq Scan on part  (cost=0.00..9657.00 rows=100462 width=30) (actual time=0.011..55.126 rows=60513 loops=1)
                           Filter: ((p_size >= 1) AND (((p_size <= 5) AND (p_size >= 1)) OR ((p_size <= 10) AND (p_size >= 1)) OR ((p_size <= 15) AND (p_size >= 1))))
 Total runtime: 1482.840 ms
(11 rows)

query 20 run 1
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=174845.27..174845.27 rows=1 width=51) (actual time=3551.699..3551.700 rows=1 loops=1)
   ->  Sort  (cost=174845.27..174845.27 rows=1 width=51) (actual time=3551.697..3551.697 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  Nested Loop  (cost=174840.69..174845.26 rows=1 width=51) (actual time=3534.472..3551.529 rows=196 loops=1)
               ->  Nested Loop  (cost=174840.69..174844.98 rows=1 width=55) (actual time=3525.921..3547.563 rows=4421 loops=1)
                     ->  HashAggregate  (cost=174840.69..174840.70 rows=1 width=8) (actual time=3525.173..3525.836 rows=4421 loops=1)
                           ->  Hash Join  (cost=171852.00..174840.68 rows=1 width=8) (actual time=3243.990..3523.329 rows=5898 loops=1)
                                 Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  HashAggregate  (cost=157620.37..158999.76 rows=91959 width=15) (actual time=2595.947..2803.331 rows=544869 loops=1)
                                       ->  Bitmap Heap Scan on lineitem  (cost=18362.62..150723.46 rows=919589 width=15) (actual time=174.447..2075.688 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..18132.72 rows=919589 width=0) (actual time=154.173..154.173 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=14110.37..14110.37 rows=8084 width=16) (actual time=647.976..647.976 rows=8748 loops=1)
                                       ->  Nested Loop  (cost=6662.05..14110.37 rows=8084 width=16) (actual time=54.004..644.016 rows=8748 loops=1)
                                             ->  HashAggregate  (cost=6662.05..6682.25 rows=2020 width=4) (actual time=52.827..53.733 rows=2187 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6657.00 rows=2020 width=4) (actual time=0.283..52.085 rows=2187 loops=1)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.63 rows=4 width=12) (actual time=0.249..0.268 rows=4 loops=2187)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4.27 rows=1 width=59) (actual time=0.005..0.005 rows=1 loops=4421)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=4421)
                     Index Cond: (nation.n_nationkey = supplier.s_nationkey)
                     Filter: (nation.n_name = 'IRAQ'::bpchar)
 Total runtime: 3552.132 ms
(28 rows)

SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=174845.27..174845.27 rows=1 width=51) (actual time=1296.049..1296.049 rows=1 loops=1)
   ->  Sort  (cost=174845.27..174845.27 rows=1 width=51) (actual time=1296.047..1296.047 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  Nested Loop  (cost=174840.69..174845.26 rows=1 width=51) (actual time=1286.609..1295.894 rows=196 loops=1)
               ->  Nested Loop  (cost=174840.69..174844.98 rows=1 width=55) (actual time=1286.382..1292.830 rows=4421 loops=1)
                     ->  HashAggregate  (cost=174840.69..174840.70 rows=1 width=8) (actual time=1286.355..1286.969 rows=4421 loops=1)
                           ->  Hash Join  (cost=171852.00..174840.68 rows=1 width=8) (actual time=1004.881..1284.498 rows=5898 loops=1)
                                 Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  HashAggregate  (cost=157620.37..158999.76 rows=91959 width=15) (actual time=956.649..1164.973 rows=544869 loops=1)
                                       ->  Bitmap Heap Scan on lineitem  (cost=18362.62..150723.46 rows=919589 width=15) (actual time=127.807..507.493 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..18132.72 rows=919589 width=0) (actual time=108.476..108.476 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=14110.37..14110.37 rows=8084 width=16) (actual time=48.167..48.167 rows=8748 loops=1)
                                       ->  Nested Loop  (cost=6662.05..14110.37 rows=8084 width=16) (actual time=31.803..46.705 rows=8748 loops=1)
                                             ->  HashAggregate  (cost=6662.05..6682.25 rows=2020 width=4) (actual time=31.783..32.117 rows=2187 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6657.00 rows=2020 width=4) (actual time=0.032..31.269 rows=2187 loops=1)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.63 rows=4 width=12) (actual time=0.005..0.006 rows=4 loops=2187)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4.27 rows=1 width=59) (actual time=0.001..0.001 rows=1 loops=4421)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=4421)
                     Index Cond: (nation.n_nationkey = supplier.s_nationkey)
                     Filter: (nation.n_name = 'IRAQ'::bpchar)
 Total runtime: 1296.500 ms
(28 rows)

query 21 run 1
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=441182.49..441182.49 rows=1 width=26) (actual time=3981.975..3981.981 rows=100 loops=1)
   ->  Sort  (cost=441182.49..441182.49 rows=1 width=26) (actual time=3981.975..3981.981 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method:  top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=441182.47..441182.48 rows=1 width=26) (actual time=3981.447..3981.491 rows=421 loops=1)
               ->  Nested Loop Anti Join  (cost=95337.61..441182.46 rows=1 width=26) (actual time=770.899..3977.169 rows=4227 loops=1)
                     Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                     ->  Nested Loop Semi Join  (cost=95337.61..441177.62 rows=1 width=34) (actual time=770.059..3829.506 rows=73962 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           ->  Hash Join  (cost=95337.61..248398.79 rows=38807 width=38) (actual time=769.452..3474.985 rows=76644 loops=1)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=40660.86..192533.83 rows=80014 width=34) (actual time=293.765..2881.768 rows=159165 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Bitmap Heap Scan on lineitem l1  (cost=40419.98..183991.47 rows=2000359 width=8) (actual time=287.754..2471.529 rows=3793296 loops=1)
                                             Recheck Cond: (l_receiptdate > l_commitdate)
                                             ->  Bitmap Index Scan on q21_idx_2  (cost=0.00..39919.89 rows=2000359 width=0) (actual time=264.950..264.950 rows=3793296 loops=1)
                                       ->  Hash  (cost=235.88..235.88 rows=400 width=30) (actual time=5.667..5.667 rows=421 loops=1)
                                             ->  Nested Loop  (cost=7.35..235.88 rows=400 width=30) (actual time=1.930..5.587 rows=421 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.241..0.243 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=7.35..229.57 rows=400 width=34) (actual time=1.683..5.266 rows=421 loops=1)
                                                         Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.25 rows=400 width=0) (actual time=1.317..1.317 rows=421 loops=1)
                                                               Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=45583.00..45583.00 rows=727500 width=4) (actual time=475.574..475.574 rows=729413 loops=1)
                                       ->  Seq Scan on orders  (cost=0.00..45583.00 rows=727500 width=4) (actual time=0.403..370.920 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..4.71 rows=17 width=8) (actual time=0.004..0.004 rows=1 loops=76644)
                                 Index Cond: (l2.l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..4.76 rows=6 width=8) (actual time=0.001..0.002 rows=1 loops=73962)
                           Index Cond: (l3.l_orderkey = l1.l_orderkey)
                           Filter: (l3.l_receiptdate > l3.l_commitdate)
 Total runtime: 3982.154 ms
(33 rows)

SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=441182.49..441182.49 rows=1 width=26) (actual time=1911.820..1911.829 rows=100 loops=1)
   ->  Sort  (cost=441182.49..441182.49 rows=1 width=26) (actual time=1911.819..1911.822 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method:  top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=441182.47..441182.48 rows=1 width=26) (actual time=1911.306..1911.370 rows=421 loops=1)
               ->  Nested Loop Anti Join  (cost=95337.61..441182.46 rows=1 width=26) (actual time=577.618..1908.820 rows=4227 loops=1)
                     Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                     ->  Nested Loop Semi Join  (cost=95337.61..441177.62 rows=1 width=34) (actual time=577.281..1795.312 rows=73962 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           ->  Hash Join  (cost=95337.61..248398.79 rows=38807 width=38) (actual time=577.261..1617.746 rows=76644 loops=1)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=40660.86..192533.83 rows=80014 width=34) (actual time=234.257..1180.279 rows=159165 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Bitmap Heap Scan on lineitem l1  (cost=40419.98..183991.47 rows=2000359 width=8) (actual time=233.262..863.528 rows=3793296 loops=1)
                                             Recheck Cond: (l_receiptdate > l_commitdate)
                                             ->  Bitmap Index Scan on q21_idx_2  (cost=0.00..39919.89 rows=2000359 width=0) (actual time=210.916..210.916 rows=3793296 loops=1)
                                       ->  Hash  (cost=235.88..235.88 rows=400 width=30) (actual time=0.943..0.943 rows=421 loops=1)
                                             ->  Nested Loop  (cost=7.35..235.88 rows=400 width=30) (actual time=0.083..0.872 rows=421 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=7.35..229.57 rows=400 width=34) (actual time=0.071..0.814 rows=421 loops=1)
                                                         Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.25 rows=400 width=0) (actual time=0.048..0.048 rows=421 loops=1)
                                                               Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=45583.00..45583.00 rows=727500 width=4) (actual time=342.911..342.911 rows=729413 loops=1)
                                       ->  Seq Scan on orders  (cost=0.00..45583.00 rows=727500 width=4) (actual time=0.006..250.568 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..4.71 rows=17 width=8) (actual time=0.002..0.002 rows=1 loops=76644)
                                 Index Cond: (l2.l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..4.76 rows=6 width=8) (actual time=0.001..0.001 rows=1 loops=73962)
                           Index Cond: (l3.l_orderkey = l1.l_orderkey)
                           Filter: (l3.l_receiptdate > l3.l_commitdate)
 Total runtime: 1911.993 ms
(33 rows)

query 22 run 1
SET
SET
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18981.52..18981.53 rows=1 width=24) (actual time=786.943..786.943 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7582.26..7582.27 rows=1 width=8) (actual time=117.856..117.856 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..7570.50 rows=4704 width=8) (actual time=0.016..103.482 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=11399.25..11401.12 rows=747 width=24) (actual time=786.943..786.943 rows=1 loops=1)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11380.58..11395.52 rows=747 width=24) (actual time=786.917..786.919 rows=7 loops=1)
               ->  Nested Loop Anti Join  (cost=0.00..11374.97 rows=747 width=24) (actual time=118.750..781.360 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7570.50 rows=1724 width=28) (actual time=118.194..194.444 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..25.82 rows=18 width=4) (actual time=0.030..0.030 rows=1 loops=19077)
                           Index Cond: (orders.o_custkey = public.customer.c_custkey)
 Total runtime: 787.027 ms
(15 rows)

SET
SET
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18981.52..18981.53 rows=1 width=24) (actual time=209.585..209.585 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7582.26..7582.27 rows=1 width=8) (actual time=94.971..94.971 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..7570.50 rows=4704 width=8) (actual time=0.008..81.162 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=11399.25..11401.12 rows=747 width=24) (actual time=209.584..209.584 rows=1 loops=1)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11380.58..11395.52 rows=747 width=24) (actual time=209.561..209.562 rows=7 loops=1)
               ->  Nested Loop Anti Join  (cost=0.00..11374.97 rows=747 width=24) (actual time=95.020..206.644 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7570.50 rows=1724 width=28) (actual time=95.001..149.880 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..25.82 rows=18 width=4) (actual time=0.003..0.003 rows=1 loops=19077)
                           Index Cond: (orders.o_custkey = public.customer.c_custkey)
 Total runtime: 209.642 ms
(15 rows)

