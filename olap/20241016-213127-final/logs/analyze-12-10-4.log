query 1 run 1
SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1905620.35..1905621.02 rows=1 width=236) (actual time=22025.717..22025.801 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1905620.35..1905624.40 rows=6 width=236) (actual time=22025.715..22025.799 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=1905620.35..1905623.22 rows=24 width=236) (actual time=22025.674..22025.760 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=1904620.29..1904620.30 rows=6 width=236) (actual time=22016.942..22016.943 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=1904620.04..1904620.21 rows=6 width=236) (actual time=22016.616..22016.624 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..1312592.52 rows=14800688 width=25) (actual time=0.113..5585.743 rows=11856890 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 140321
 Planning Time: 23.638 ms
 Execution Time: 22027.640 ms
(20 rows)

SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1905620.35..1905621.02 rows=1 width=236) (actual time=19888.433..19889.207 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1905620.35..1905624.40 rows=6 width=236) (actual time=19888.431..19889.205 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=1905620.35..1905623.22 rows=24 width=236) (actual time=19888.399..19889.175 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=1904620.29..1904620.30 rows=6 width=236) (actual time=19884.943..19884.944 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=1904620.04..1904620.21 rows=6 width=236) (actual time=19883.907..19883.916 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..1312592.52 rows=14800688 width=25) (actual time=0.033..2893.999 rows=11856890 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 140321
 Planning Time: 1.194 ms
 Execution Time: 19889.303 ms
(20 rows)

query 2 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=446630.15..446630.16 rows=1 width=193) (actual time=1373.941..1373.955 rows=100 loops=1)
   ->  Sort  (cost=446630.15..446630.16 rows=1 width=193) (actual time=1373.940..1373.948 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Nested Loop  (cost=53.13..446630.14 rows=1 width=193) (actual time=5.331..1371.867 rows=4737 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.394..0.401 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.208..0.209 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.180..0.183 rows=25 loops=1)
               ->  Materialize  (cost=53.13..446627.44 rows=1 width=171) (actual time=0.474..273.544 rows=4737 loops=5)
                     ->  Nested Loop  (cost=53.13..446627.44 rows=1 width=171) (actual time=2.365..1361.788 rows=4737 loops=1)
                           ->  Nested Loop  (cost=52.83..446623.43 rows=1 width=34) (actual time=1.947..1096.108 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..54305.17 rows=7198 width=30) (actual time=0.271..228.913 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=52.41..54.49 rows=1 width=14) (actual time=0.001..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=51.96..51.97 rows=1 width=32) (actual time=0.104..0.104 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.41..51.95 rows=4 width=6) (actual time=0.093..0.102 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.41..50.65 rows=19 width=10) (actual time=0.079..0.100 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.85..49.03 rows=19 width=10) (actual time=0.078..0.098 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.77 rows=19 width=10) (actual time=0.072..0.073 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.42..2.43 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.009..0.010 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.005 rows=25 loops=1)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4.01 rows=1 width=145) (actual time=0.055..0.055 rows=1 loops=4737)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 24.225 ms
 Execution Time: 1375.299 ms
(49 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=446630.15..446630.16 rows=1 width=193) (actual time=227.021..227.034 rows=100 loops=1)
   ->  Sort  (cost=446630.15..446630.16 rows=1 width=193) (actual time=227.020..227.027 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Nested Loop  (cost=53.13..446630.14 rows=1 width=193) (actual time=0.150..225.335 rows=4737 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.009..0.015 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.004 rows=25 loops=1)
               ->  Materialize  (cost=53.13..446627.44 rows=1 width=171) (actual time=0.015..44.485 rows=4737 loops=5)
                     ->  Nested Loop  (cost=53.13..446627.44 rows=1 width=171) (actual time=0.071..218.748 rows=4737 loops=1)
                           ->  Nested Loop  (cost=52.83..446623.43 rows=1 width=34) (actual time=0.065..205.169 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..54305.17 rows=7198 width=30) (actual time=0.007..61.685 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=52.41..54.49 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=51.96..51.97 rows=1 width=32) (actual time=0.016..0.016 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.41..51.95 rows=4 width=6) (actual time=0.011..0.014 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.41..50.65 rows=19 width=10) (actual time=0.005..0.013 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.85..49.03 rows=19 width=10) (actual time=0.005..0.011 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.77 rows=19 width=10) (actual time=0.003..0.003 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.42..2.43 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.010..0.010 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.005 rows=25 loops=1)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4.01 rows=1 width=145) (actual time=0.002..0.002 rows=1 loops=4737)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 2.020 ms
 Execution Time: 227.129 ms
(49 rows)

query 3 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2345649.19..2345649.22 rows=10 width=44) (actual time=11022.010..11032.716 rows=10 loops=1)
   ->  Sort  (cost=2345649.19..2353598.98 rows=3179914 width=44) (actual time=11022.009..11032.714 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=1794827.05..2276932.39 rows=3179914 width=44) (actual time=10841.634..11008.286 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=1794827.05..2197434.57 rows=3179912 width=44) (actual time=10841.625..10920.192 rows=118454 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=1793826.99..1817676.33 rows=794978 width=44) (actual time=10831.384..10874.430 rows=23691 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=1793826.99..1795814.44 rows=794978 width=24) (actual time=10831.371..10834.344 rows=60306 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 6281kB
                                 Worker 0:  Sort Method: quicksort  Memory: 6252kB
                                 Worker 1:  Sort Method: quicksort  Memory: 6271kB
                                 Worker 2:  Sort Method: quicksort  Memory: 6332kB
                                 Worker 3:  Sort Method: quicksort  Memory: 6104kB
                                 ->  Parallel Hash Join  (cost=359029.93..1704269.44 rows=794978 width=24) (actual time=2352.807..10812.114 rows=60306 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..1312592.52 rows=8175876 width=16) (actual time=0.512..7613.354 rows=6506846 loops=5)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 5490365
                                       ->  Parallel Hash  (cost=354472.08..354472.08 rows=364628 width=12) (actual time=2348.382..2348.551 rows=290361 loops=5)
                                             Buckets: 2097152  Batches: 1  Memory Usage: 84608kB
                                             ->  Parallel Hash Join  (cost=41579.21..354472.08 rows=364628 width=12) (actual time=284.724..2238.820 rows=290361 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..308142.74 rows=1809570 width=16) (actual time=1.061..1592.039 rows=1447887 loops=5)
                                                         Filter: (o_orderdate < '1995-03-07'::date)
                                                         Rows Removed by Filter: 1552113
                                                   ->  Parallel Hash  (cost=40634.64..40634.64 rows=75565 width=4) (actual time=283.153..283.154 rows=60055 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 15904kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..40634.64 rows=75565 width=4) (actual time=0.556..263.093 rows=60055 loops=5)
                                                               Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                               Rows Removed by Filter: 239945
 Planning Time: 31.505 ms
 Execution Time: 11033.795 ms
(37 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2345649.19..2345649.22 rows=10 width=44) (actual time=4704.704..4714.969 rows=10 loops=1)
   ->  Sort  (cost=2345649.19..2353598.98 rows=3179914 width=44) (actual time=4704.702..4714.967 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=1794827.05..2276932.39 rows=3179914 width=44) (actual time=4527.756..4690.841 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=1794827.05..2197434.57 rows=3179912 width=44) (actual time=4527.750..4603.492 rows=118464 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=1793826.99..1817676.33 rows=794978 width=44) (actual time=4520.748..4563.200 rows=23693 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=1793826.99..1795814.44 rows=794978 width=24) (actual time=4520.734..4523.531 rows=60306 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 6314kB
                                 Worker 0:  Sort Method: quicksort  Memory: 6087kB
                                 Worker 1:  Sort Method: quicksort  Memory: 5977kB
                                 Worker 2:  Sort Method: quicksort  Memory: 6363kB
                                 Worker 3:  Sort Method: quicksort  Memory: 6499kB
                                 ->  Parallel Hash Join  (cost=359029.93..1704269.44 rows=794978 width=24) (actual time=1111.982..4503.318 rows=60306 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..1312592.52 rows=8175876 width=16) (actual time=0.035..2427.949 rows=6506846 loops=5)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 5490365
                                       ->  Parallel Hash  (cost=354472.08..354472.08 rows=364628 width=12) (actual time=1109.757..1109.760 rows=290361 loops=5)
                                             Buckets: 2097152  Batches: 1  Memory Usage: 84576kB
                                             ->  Parallel Hash Join  (cost=41579.21..354472.08 rows=364628 width=12) (actual time=95.436..979.885 rows=290361 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..308142.74 rows=1809570 width=16) (actual time=0.049..480.403 rows=1447887 loops=5)
                                                         Filter: (o_orderdate < '1995-03-07'::date)
                                                         Rows Removed by Filter: 1552113
                                                   ->  Parallel Hash  (cost=40634.64..40634.64 rows=75565 width=4) (actual time=94.698..94.699 rows=60055 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 15904kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..40634.64 rows=75565 width=4) (actual time=0.015..68.544 rows=60055 loops=5)
                                                               Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                               Rows Removed by Filter: 239945
 Planning Time: 1.495 ms
 Execution Time: 4715.045 ms
(37 rows)

query 4 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=610517.80..610518.31 rows=1 width=24) (actual time=5186.950..5223.832 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=610517.80..610520.35 rows=5 width=24) (actual time=5186.948..5223.830 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Gather Merge  (cost=610517.80..610520.20 rows=20 width=24) (actual time=5186.933..5223.812 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=609517.74..609517.76 rows=5 width=24) (actual time=5171.386..5171.388 rows=4 loops=5)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     Worker 3:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=609517.64..609517.69 rows=5 width=24) (actual time=5171.364..5171.366 rows=5 loops=5)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=9265.04..608782.22 rows=147084 width=16) (actual time=150.208..5107.251 rows=102764 loops=5)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=9264.48..272739.32 rows=147123 width=20) (actual time=149.047..3865.315 rows=112085 loops=5)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=46505
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..9117.35 rows=588492 width=0) (actual time=104.989..104.990 rows=560424 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Only Scan using q21_idx_2 on lineitem  (cost=0.56..2.56 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=560424)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
 Planning Time: 24.796 ms
 Execution Time: 5225.683 ms
(26 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=610517.80..610518.31 rows=1 width=24) (actual time=1127.763..1165.626 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=610517.80..610520.35 rows=5 width=24) (actual time=1127.762..1165.624 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Gather Merge  (cost=610517.80..610520.20 rows=20 width=24) (actual time=1127.753..1165.617 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=609517.74..609517.76 rows=5 width=24) (actual time=1120.131..1120.133 rows=4 loops=5)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     Worker 3:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=609517.64..609517.69 rows=5 width=24) (actual time=1120.106..1120.108 rows=5 loops=5)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=9265.04..608782.22 rows=147084 width=16) (actual time=149.322..1080.281 rows=102764 loops=5)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=9264.48..272739.32 rows=147123 width=20) (actual time=149.278..604.655 rows=112085 loops=5)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=48137
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..9117.35 rows=588492 width=0) (actual time=99.559..99.560 rows=560424 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Only Scan using q21_idx_2 on lineitem  (cost=0.56..2.56 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=560424)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
 Planning Time: 1.677 ms
 Execution Time: 1165.711 ms
(26 rows)

query 5 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=661568.18..661568.18 rows=1 width=58) (actual time=7708.676..7751.245 rows=1 loops=1)
   ->  Sort  (cost=661568.18..661568.24 rows=25 width=58) (actual time=7708.675..7751.243 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=661327.31..661568.06 rows=25 width=58) (actual time=7699.287..7751.224 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=661327.31..661566.99 rows=100 width=58) (actual time=7695.389..7751.184 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=660327.25..660555.02 rows=25 width=58) (actual time=7684.455..7690.521 rows=5 loops=5)
                           Group Key: nation.n_name
                           ->  Sort  (cost=660327.25..660372.74 rows=18197 width=38) (actual time=7682.376..7683.895 rows=14407 loops=5)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 1497kB
                                 Worker 0:  Sort Method: quicksort  Memory: 1489kB
                                 Worker 1:  Sort Method: quicksort  Memory: 1511kB
                                 Worker 2:  Sort Method: quicksort  Memory: 1536kB
                                 Worker 3:  Sort Method: quicksort  Memory: 1517kB
                                 ->  Parallel Hash Join  (cost=82302.07..659039.68 rows=18197 width=38) (actual time=662.806..7670.724 rows=14407 loops=5)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=78610.47..652959.84 rows=454904 width=50) (actual time=645.240..7537.730 rows=363065 loops=5)
                                             ->  Parallel Hash Join  (cost=78609.91..350826.94 rows=113756 width=38) (actual time=644.797..5299.124 rows=90680 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=35816.45..305616.16 rows=568781 width=8) (actual time=347.283..4798.311 rows=455328 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=52477
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..35247.66 rows=2275123 width=0) (actual time=286.078..286.078 rows=2276638 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=41855.94..41855.94 rows=75002 width=38) (actual time=296.942..296.945 rows=59887 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 25280kB
                                                         ->  Hash Join  (cost=2.51..41855.94 rows=75002 width=38) (actual time=1.692..269.323 rows=59887 loops=5)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..39697.11 rows=375012 width=8) (actual time=1.090..231.616 rows=300000 loops=5)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.590..0.592 rows=5 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.584..0.590 rows=5 loops=5)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.337..0.339 rows=25 loops=5)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.240..0.240 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.235..0.236 rows=1 loops=5)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.023..0.024 rows=4 loops=453399)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=15.512..15.513 rows=20000 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 5056kB
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.089..9.804 rows=20000 loops=5)
 Planning Time: 37.340 ms
 Execution Time: 7752.385 ms
(51 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=661568.18..661568.18 rows=1 width=58) (actual time=2149.071..2189.587 rows=1 loops=1)
   ->  Sort  (cost=661568.18..661568.24 rows=25 width=58) (actual time=2149.069..2189.585 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=661327.31..661568.06 rows=25 width=58) (actual time=2138.391..2189.564 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=661327.31..661566.99 rows=100 width=58) (actual time=2137.029..2189.525 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=660327.25..660555.02 rows=25 width=58) (actual time=2125.546..2131.313 rows=5 loops=5)
                           Group Key: nation.n_name
                           ->  Sort  (cost=660327.25..660372.74 rows=18197 width=38) (actual time=2123.558..2124.253 rows=14407 loops=5)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 1499kB
                                 Worker 0:  Sort Method: quicksort  Memory: 1557kB
                                 Worker 1:  Sort Method: quicksort  Memory: 1538kB
                                 Worker 2:  Sort Method: quicksort  Memory: 1511kB
                                 Worker 3:  Sort Method: quicksort  Memory: 1445kB
                                 ->  Parallel Hash Join  (cost=82302.07..659039.68 rows=18197 width=38) (actual time=490.679..2114.937 rows=14407 loops=5)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=78610.47..652959.84 rows=454904 width=50) (actual time=472.423..1982.922 rows=363065 loops=5)
                                             ->  Parallel Hash Join  (cost=78609.91..350826.94 rows=113756 width=38) (actual time=472.368..1081.368 rows=90680 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=35816.45..305616.16 rows=568781 width=8) (actual time=319.350..762.920 rows=455328 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=51202
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..35247.66 rows=2275123 width=0) (actual time=259.093..259.093 rows=2276638 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=41855.94..41855.94 rows=75002 width=38) (actual time=152.437..152.440 rows=59887 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 25280kB
                                                         ->  Hash Join  (cost=2.51..41855.94 rows=75002 width=38) (actual time=0.082..123.125 rows=59887 loops=5)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..39697.11 rows=375012 width=8) (actual time=0.031..87.636 rows=300000 loops=5)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.041..0.043 rows=5 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.034..0.040 rows=5 loops=5)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.014..0.016 rows=25 loops=5)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=5)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.008..0.009 rows=4 loops=453399)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=17.474..17.474 rows=20000 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4992kB
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.033..8.309 rows=20000 loops=5)
 Planning Time: 4.456 ms
 Execution Time: 2189.679 ms
(51 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1366649.49..1366649.50 rows=1 width=32) (actual time=10639.117..10684.762 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1366649.49..1366649.50 rows=1 width=32) (actual time=10639.115..10684.759 rows=1 loops=1)
         ->  Gather  (cost=1366649.06..1366649.47 rows=4 width=32) (actual time=10636.075..10684.727 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1365649.06..1365649.07 rows=1 width=32) (actual time=10627.905..10627.906 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=230877.12..1364168.29 rows=296153 width=12) (actual time=1360.402..10487.103 rows=238912 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Rows Removed by Index Recheck: 2744818
                           Heap Blocks: exact=80031 lossy=54070
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..230580.96 rows=1184613 width=0) (actual time=1269.971..1269.971 rows=1194558 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 21.895 ms
 Execution Time: 10685.871 ms
(14 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1366649.49..1366649.50 rows=1 width=32) (actual time=3162.120..3206.325 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1366649.49..1366649.50 rows=1 width=32) (actual time=3162.119..3206.323 rows=1 loops=1)
         ->  Gather  (cost=1366649.06..1366649.47 rows=4 width=32) (actual time=3160.347..3206.309 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1365649.06..1365649.07 rows=1 width=32) (actual time=3156.283..3156.284 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=230877.12..1364168.29 rows=296153 width=12) (actual time=1230.670..3064.287 rows=238912 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Rows Removed by Index Recheck: 2744818
                           Heap Blocks: exact=83728 lossy=56420
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..230580.96 rows=1184613 width=0) (actual time=1136.346..1136.346 rows=1194558 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 1.192 ms
 Execution Time: 3206.375 ms
(14 rows)

query 7 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1733764.37..1733764.95 rows=1 width=92) (actual time=11187.898..11203.402 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1733764.37..1739671.96 rows=10044 width=92) (actual time=11187.897..11203.400 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=1733764.37..1738993.99 rows=40176 width=92) (actual time=11186.145..11203.389 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=1732764.31..1733208.58 rows=10044 width=92) (actual time=11173.658..11177.669 rows=3 loops=5)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=1732764.31..1732802.67 rows=15343 width=72) (actual time=11171.755..11172.637 rows=9251 loops=5)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 2056kB
                           Worker 0:  Sort Method: quicksort  Memory: 2016kB
                           Worker 1:  Sort Method: quicksort  Memory: 2093kB
                           Worker 2:  Sort Method: quicksort  Memory: 1964kB
                           Worker 3:  Sort Method: quicksort  Memory: 1920kB
                           ->  Parallel Hash Join  (cost=361605.05..1731697.56 rows=15343 width=72) (actual time=2569.355..11160.912 rows=11559 loops=5)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 11632
                                 ->  Parallel Hash Join  (cost=358555.00..1726841.23 rows=368684 width=46) (actual time=2542.592..11052.122 rows=289625 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..1350082.43 rows=4608557 width=24) (actual time=0.462..7976.236 rows=3646065 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 8351145
                                       ->  Parallel Hash  (cost=354805.03..354805.03 rows=299998 width=30) (actual time=2539.897..2539.918 rows=238235 loops=5)
                                             Buckets: 2097152  Batches: 1  Memory Usage: 91072kB
                                             ->  Parallel Hash Join  (cost=41224.81..354805.03 rows=299998 width=30) (actual time=285.400..2431.804 rows=238235 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..298767.79 rows=3749980 width=8) (actual time=0.536..1456.520 rows=3000000 loops=5)
                                                   ->  Parallel Hash  (cost=40849.80..40849.80 rows=30001 width=30) (actual time=284.601..284.603 rows=23924 loops=5)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 8608kB
                                                         ->  Hash Join  (cost=1.40..40849.80 rows=30001 width=30) (actual time=0.766..274.707 rows=23924 loops=5)
                                                               Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..39697.11 rows=375012 width=8) (actual time=0.730..240.895 rows=300000 loops=5)
                                                               ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.023..0.024 rows=2 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.016..0.020 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                                 ->  Parallel Hash  (cost=2991.23..2991.23 rows=4706 width=30) (actual time=23.587..23.589 rows=1596 loops=5)
                                       Buckets: 8192  Batches: 1  Memory Usage: 672kB
                                       ->  Hash Join  (cost=1.40..2991.23 rows=4706 width=30) (actual time=2.906..23.044 rows=1596 loops=5)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=2.742..20.592 rows=20000 loops=5)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.156..0.157 rows=2 loops=5)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.152..0.154 rows=2 loops=5)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 36.929 ms
 Execution Time: 11204.594 ms
(51 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1733764.37..1733764.95 rows=1 width=92) (actual time=4526.878..4542.064 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1733764.37..1739671.96 rows=10044 width=92) (actual time=4526.877..4542.062 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=1733764.37..1738993.99 rows=40176 width=92) (actual time=4525.235..4542.050 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=1732764.31..1733208.58 rows=10044 width=92) (actual time=4516.596..4521.267 rows=4 loops=5)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=1732764.31..1732802.67 rows=15343 width=72) (actual time=4514.960..4515.659 rows=10454 loops=5)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 1942kB
                           Worker 0:  Sort Method: quicksort  Memory: 1967kB
                           Worker 1:  Sort Method: quicksort  Memory: 2036kB
                           Worker 2:  Sort Method: quicksort  Memory: 2033kB
                           Worker 3:  Sort Method: quicksort  Memory: 2071kB
                           ->  Parallel Hash Join  (cost=361605.05..1731697.56 rows=15343 width=72) (actual time=1325.502..4506.289 rows=11559 loops=5)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 11632
                                 ->  Parallel Hash Join  (cost=358555.00..1726841.23 rows=368684 width=46) (actual time=1317.801..4414.424 rows=289625 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..1350082.43 rows=4608557 width=24) (actual time=0.040..2481.064 rows=3646065 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 8351145
                                       ->  Parallel Hash  (cost=354805.03..354805.03 rows=299998 width=30) (actual time=1315.846..1315.886 rows=238235 loops=5)
                                             Buckets: 2097152  Batches: 1  Memory Usage: 91072kB
                                             ->  Parallel Hash Join  (cost=41224.81..354805.03 rows=299998 width=30) (actual time=98.885..1196.037 rows=238235 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..298767.79 rows=3749980 width=8) (actual time=0.954..353.470 rows=3000000 loops=5)
                                                   ->  Parallel Hash  (cost=40849.80..40849.80 rows=30001 width=30) (actual time=97.596..97.598 rows=23924 loops=5)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 8608kB
                                                         ->  Hash Join  (cost=1.40..40849.80 rows=30001 width=30) (actual time=0.036..88.492 rows=23924 loops=5)
                                                               Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..39697.11 rows=375012 width=8) (actual time=0.011..37.248 rows=300000 loops=5)
                                                               ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.016..0.017 rows=2 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.012..0.014 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                                 ->  Parallel Hash  (cost=2991.23..2991.23 rows=4706 width=30) (actual time=5.985..5.986 rows=1596 loops=5)
                                       Buckets: 8192  Batches: 1  Memory Usage: 608kB
                                       ->  Hash Join  (cost=1.40..2991.23 rows=4706 width=30) (actual time=0.028..5.519 rows=1596 loops=5)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.005..1.851 rows=20000 loops=5)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.014..0.015 rows=2 loops=5)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.011..0.012 rows=2 loops=5)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 3.406 ms
 Execution Time: 4542.154 ms
(51 rows)

query 8 run 1
SET
SET
SET
                                                                                                    QUERY PLAN                                                                                                     
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=428648.85..428649.15 rows=1 width=40) (actual time=5266.618..5280.420 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=428648.85..429372.97 rows=2406 width=40) (actual time=5266.617..5280.419 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=428648.85..429288.76 rows=2406 width=72) (actual time=5263.918..5280.409 rows=3 loops=1)
               Workers Planned: 1
               Workers Launched: 1
               ->  Partial GroupAggregate  (cost=427648.84..428018.08 rows=2406 width=72) (actual time=5259.165..5261.818 rows=2 loops=2)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=427648.84..427684.52 rows=14272 width=46) (actual time=5256.546..5257.017 rows=11921 loops=2)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 1334kB
                           Worker 0:  Sort Method: quicksort  Memory: 1298kB
                           ->  Hash Join  (cost=423483.32..426664.00 rows=14272 width=46) (actual time=5225.171..5254.467 rows=11921 loops=2)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Parallel Hash Join  (cost=423481.76..426547.27 rows=14272 width=20) (actual time=5225.047..5250.616 rows=11921 loops=2)
                                       Hash Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.251..15.898 rows=50000 loops=2)
                                       ->  Parallel Hash  (cost=423405.94..423405.94 rows=6066 width=20) (actual time=5224.386..5224.391 rows=11921 loops=2)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1600kB
                                             ->  Hash Join  (cost=382052.33..423405.94 rows=6066 width=20) (actual time=4750.087..5219.786 rows=11921 loops=2)
                                                   Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                   ->  Parallel Hash Join  (cost=382049.82..423229.05 rows=30327 width=24) (actual time=4749.711..5213.247 rows=59296 loops=2)
                                                         Hash Cond: (customer.c_custkey = orders.o_custkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39697.11 rows=375012 width=8) (actual time=0.591..300.081 rows=750000 loops=2)
                                                         ->  Parallel Hash  (cost=381670.73..381670.73 rows=30327 width=24) (actual time=4748.688..4748.691 rows=59296 loops=2)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 8256kB
                                                               ->  Parallel Hash Join  (cost=59806.67..381670.73 rows=30327 width=24) (actual time=2435.073..4720.962 rows=59296 loops=2)
                                                                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                                     ->  Parallel Seq Scan on orders  (cost=0.00..317517.69 rows=1138814 width=12) (actual time=0.425..1799.100 rows=2278756 loops=2)
                                                                           Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                                           Rows Removed by Filter: 5221244
                                                                     ->  Parallel Hash  (cost=58558.37..58558.37 rows=99864 width=20) (actual time=2433.203..2433.204 rows=194760 loops=2)
                                                                           Buckets: 524288  Batches: 1  Memory Usage: 25472kB
                                                                           ->  Nested Loop  (cost=0.56..58558.37 rows=99864 width=20) (actual time=1.567..2352.203 rows=194760 loops=2)
                                                                                 ->  Parallel Seq Scan on part  (cost=0.00..47231.10 rows=3330 width=4) (actual time=0.559..354.534 rows=6506 loops=2)
                                                                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                                       Rows Removed by Filter: 993494
                                                                                 ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.09 rows=31 width=24) (actual time=0.242..0.302 rows=30 loops=13011)
                                                                                       Index Cond: (l_partkey = part.p_partkey)
                                                                                       Heap Fetches: 0
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.332..0.334 rows=5 loops=2)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.096..0.103 rows=5 loops=2)
                                                               Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=2)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.090..0.090 rows=1 loops=2)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.088..0.089 rows=1 loops=2)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.100..0.101 rows=25 loops=2)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.091..0.094 rows=25 loops=2)
 Planning Time: 40.211 ms
 Execution Time: 5281.569 ms
(55 rows)

SET
SET
SET
                                                                                                    QUERY PLAN                                                                                                     
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=428648.85..428649.15 rows=1 width=40) (actual time=1934.796..1949.881 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=428648.85..429372.97 rows=2406 width=40) (actual time=1934.795..1949.879 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=428648.85..429288.76 rows=2406 width=72) (actual time=1932.155..1949.867 rows=3 loops=1)
               Workers Planned: 1
               Workers Launched: 1
               ->  Partial GroupAggregate  (cost=427648.84..428018.08 rows=2406 width=72) (actual time=1929.811..1932.850 rows=2 loops=2)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=427648.84..427684.52 rows=14272 width=46) (actual time=1927.200..1928.044 rows=11921 loops=2)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 1306kB
                           Worker 0:  Sort Method: quicksort  Memory: 1326kB
                           ->  Hash Join  (cost=423483.32..426664.00 rows=14272 width=46) (actual time=1908.644..1925.692 rows=11921 loops=2)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Parallel Hash Join  (cost=423481.76..426547.27 rows=14272 width=20) (actual time=1908.594..1922.252 rows=11921 loops=2)
                                       Hash Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.007..3.489 rows=50000 loops=2)
                                       ->  Parallel Hash  (cost=423405.94..423405.94 rows=6066 width=20) (actual time=1908.131..1908.516 rows=11921 loops=2)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1600kB
                                             ->  Hash Join  (cost=382052.33..423405.94 rows=6066 width=20) (actual time=1682.981..1905.296 rows=11921 loops=2)
                                                   Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                   ->  Parallel Hash Join  (cost=382049.82..423229.05 rows=30327 width=24) (actual time=1682.826..1899.955 rows=59296 loops=2)
                                                         Hash Cond: (customer.c_custkey = orders.o_custkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39697.11 rows=375012 width=8) (actual time=0.004..51.444 rows=750000 loops=2)
                                                         ->  Parallel Hash  (cost=381670.73..381670.73 rows=30327 width=24) (actual time=1682.211..1682.593 rows=59296 loops=2)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 8224kB
                                                               ->  Parallel Hash Join  (cost=59806.67..381670.73 rows=30327 width=24) (actual time=274.820..1659.432 rows=59296 loops=2)
                                                                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                                     ->  Parallel Seq Scan on orders  (cost=0.00..317517.69 rows=1138814 width=12) (actual time=0.046..939.693 rows=2278756 loops=2)
                                                                           Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                                           Rows Removed by Filter: 5221244
                                                                     ->  Parallel Hash  (cost=58558.37..58558.37 rows=99864 width=20) (actual time=273.513..273.514 rows=194760 loops=2)
                                                                           Buckets: 524288  Batches: 1  Memory Usage: 25472kB
                                                                           ->  Nested Loop  (cost=0.56..58558.37 rows=99864 width=20) (actual time=0.073..220.105 rows=194760 loops=2)
                                                                                 ->  Parallel Seq Scan on part  (cost=0.00..47231.10 rows=3330 width=4) (actual time=0.041..130.220 rows=6506 loops=2)
                                                                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                                       Rows Removed by Filter: 993494
                                                                                 ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.09 rows=31 width=24) (actual time=0.004..0.011 rows=30 loops=13011)
                                                                                       Index Cond: (l_partkey = part.p_partkey)
                                                                                       Heap Fetches: 0
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.136..0.137 rows=5 loops=2)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.015..0.021 rows=5 loops=2)
                                                               Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=2)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=2)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=2)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.022..0.023 rows=25 loops=2)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.015 rows=25 loops=2)
 Planning Time: 4.384 ms
 Execution Time: 1949.985 ms
(55 rows)

query 9 run 1
SET
SET
SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=514274.41..514274.95 rows=1 width=66) (actual time=10573.920..10951.395 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=514274.41..546541.19 rows=60150 width=66) (actual time=10573.919..10951.393 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=514274.41..543082.57 rows=240600 width=66) (actual time=10573.899..10951.375 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=513274.36..513424.73 rows=60150 width=66) (actual time=10558.932..10561.267 rows=140 loops=5)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: quicksort  Memory: 49kB
                     Worker 0:  Sort Method: quicksort  Memory: 49kB
                     Worker 1:  Sort Method: quicksort  Memory: 49kB
                     Worker 2:  Sort Method: quicksort  Memory: 49kB
                     Worker 3:  Sort Method: quicksort  Memory: 49kB
                     ->  Partial HashAggregate  (cost=507446.94..508499.57 rows=60150 width=66) (actual time=10558.151..10561.056 rows=175 loops=5)
                           Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
                           ->  Parallel Hash Join  (cost=187042.94..502145.30 rows=302951 width=57) (actual time=8424.353..9859.007 rows=649638 loops=5)
                                 Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Parallel Seq Scan on orders  (cost=0.00..298767.79 rows=3749980 width=8) (actual time=0.681..2059.796 rows=3000000 loops=5)
                                 ->  Parallel Hash  (cost=183256.06..183256.06 rows=302951 width=53) (actual time=5636.513..5636.895 rows=649638 loops=5)
                                       Buckets: 262144 (originally 2097152)  Batches: 16 (originally 1)  Memory Usage: 21216kB
                                       ->  Nested Loop  (cost=3547.52..183256.06 rows=302951 width=53) (actual time=22.836..5283.967 rows=649638 loops=5)
                                             Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                             ->  Hash Join  (cost=3546.96..78979.34 rows=40404 width=48) (actual time=21.317..462.126 rows=86650 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                   ->  Parallel Hash Join  (cost=3545.40..78853.74 rows=40404 width=26) (actual time=19.816..432.872 rows=86650 loops=5)
                                                         Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                         ->  Nested Loop  (cost=0.86..75203.14 rows=40404 width=18) (actual time=0.721..361.267 rows=86650 loops=5)
                                                               ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.43..45556.68 rows=10101 width=4) (actual time=0.236..173.361 rows=21662 loops=5)
                                                                     Filter: ((p_name)::text ~~ '%navy%'::text)
                                                                     Rows Removed by Filter: 378338
                                                                     Heap Fetches: 0
                                                               ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..2.75 rows=19 width=14) (actual time=0.007..0.008 rows=4 loops=108312)
                                                                     Index Cond: (ps_partkey = part.p_partkey)
                                                                     Heap Fetches: 0
                                                         ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=18.837..18.837 rows=20000 loops=5)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 4992kB
                                                               ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.603..12.750 rows=20000 loops=5)
                                                   ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=1.488..1.489 rows=25 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=1.476..1.479 rows=25 loops=5)
                                             ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.57 rows=1 width=29) (actual time=0.047..0.054 rows=7 loops=433248)
                                                   Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                                   Heap Fetches: 0
 Planning Time: 44.869 ms
 Execution Time: 10953.042 ms
(45 rows)

SET
SET
SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=514274.41..514274.95 rows=1 width=66) (actual time=4817.638..5172.344 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=514274.41..546541.19 rows=60150 width=66) (actual time=4817.637..5172.342 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=514274.41..543082.57 rows=240600 width=66) (actual time=4817.617..5172.324 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=513274.36..513424.73 rows=60150 width=66) (actual time=4807.798..4809.011 rows=140 loops=5)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: quicksort  Memory: 49kB
                     Worker 0:  Sort Method: quicksort  Memory: 49kB
                     Worker 1:  Sort Method: quicksort  Memory: 49kB
                     Worker 2:  Sort Method: quicksort  Memory: 49kB
                     Worker 3:  Sort Method: quicksort  Memory: 49kB
                     ->  Partial HashAggregate  (cost=507446.94..508499.57 rows=60150 width=66) (actual time=4807.007..4808.795 rows=175 loops=5)
                           Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
                           ->  Parallel Hash Join  (cost=187042.94..502145.30 rows=302951 width=57) (actual time=2576.947..4088.360 rows=649638 loops=5)
                                 Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Parallel Seq Scan on orders  (cost=0.00..298767.79 rows=3749980 width=8) (actual time=0.048..425.199 rows=3000000 loops=5)
                                 ->  Parallel Hash  (cost=183256.06..183256.06 rows=302951 width=53) (actual time=1328.281..1328.457 rows=649638 loops=5)
                                       Buckets: 262144 (originally 2097152)  Batches: 16 (originally 1)  Memory Usage: 21216kB
                                       ->  Nested Loop  (cost=3547.52..183256.06 rows=302951 width=53) (actual time=10.982..941.234 rows=649638 loops=5)
                                             Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                             ->  Hash Join  (cost=3546.96..78979.34 rows=40404 width=48) (actual time=10.958..303.009 rows=86650 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                   ->  Parallel Hash Join  (cost=3545.40..78853.74 rows=40404 width=26) (actual time=10.926..278.367 rows=86650 loops=5)
                                                         Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                         ->  Nested Loop  (cost=0.86..75203.14 rows=40404 width=18) (actual time=0.371..219.164 rows=86650 loops=5)
                                                               ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.43..45556.68 rows=10101 width=4) (actual time=0.345..127.588 rows=21662 loops=5)
                                                                     Filter: ((p_name)::text ~~ '%navy%'::text)
                                                                     Rows Removed by Filter: 378338
                                                                     Heap Fetches: 0
                                                               ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..2.75 rows=19 width=14) (actual time=0.003..0.003 rows=4 loops=108312)
                                                                     Index Cond: (ps_partkey = part.p_partkey)
                                                                     Heap Fetches: 0
                                                         ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=10.356..10.357 rows=20000 loops=5)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 5024kB
                                                               ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.009..3.505 rows=20000 loops=5)
                                                   ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.023..0.024 rows=25 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.015..0.018 rows=25 loops=5)
                                             ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.57 rows=1 width=29) (actual time=0.003..0.006 rows=7 loops=433248)
                                                   Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                                   Heap Fetches: 0
 Planning Time: 5.709 ms
 Execution Time: 5173.051 ms
(45 rows)

query 10 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=781922.13..781922.18 rows=20 width=201) (actual time=7931.854..7988.405 rows=20 loops=1)
   ->  Sort  (cost=781922.13..783261.25 rows=535648 width=201) (actual time=7931.853..7988.402 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  Finalize GroupAggregate  (cost=688133.23..767668.73 rows=535648 width=201) (actual time=7158.460..7853.169 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather Merge  (cost=688133.23..755616.65 rows=535648 width=201) (actual time=7158.454..7487.404 rows=381205 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=687133.17..690815.75 rows=133912 width=201) (actual time=7134.756..7332.469 rows=76241 loops=5)
                           Group Key: customer.c_custkey, nation.n_name
                           ->  Sort  (cost=687133.17..687467.95 rows=133912 width=181) (actual time=7134.730..7163.418 rows=229080 loops=5)
                                 Sort Key: customer.c_custkey, nation.n_name
                                 Sort Method: external merge  Disk: 41944kB
                                 Worker 0:  Sort Method: external merge  Disk: 32584kB
                                 Worker 1:  Sort Method: external merge  Disk: 43552kB
                                 Worker 2:  Sort Method: external merge  Disk: 46320kB
                                 Worker 3:  Sort Method: external merge  Disk: 54128kB
                                 ->  Hash Join  (cost=632474.35..675729.94 rows=133912 width=181) (actual time=6600.307..7000.230 rows=229080 loops=5)
                                       Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                       ->  Parallel Hash Join  (cost=632472.79..675317.28 rows=133912 width=159) (actual time=6600.242..6949.071 rows=229080 loops=5)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..39697.11 rows=375012 width=147) (actual time=0.464..185.727 rows=300000 loops=5)
                                             ->  Parallel Hash  (cost=630798.89..630798.89 rows=133912 width=16) (actual time=6598.622..6598.624 rows=229080 loops=5)
                                                   Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 85216kB
                                                   ->  Nested Loop  (cost=8769.77..630798.89 rows=133912 width=16) (actual time=162.228..6473.075 rows=229080 loops=5)
                                                         ->  Parallel Bitmap Heap Scan on orders  (cost=8769.20..272125.78 rows=139238 width=8) (actual time=160.872..4287.096 rows=114632 loops=5)
                                                               Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                               Heap Blocks: exact=46931
                                                               ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8629.96 rows=556953 width=0) (actual time=109.887..109.887 rows=573160 loops=1)
                                                                     Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..2.57 rows=1 width=16) (actual time=0.018..0.018 rows=2 loops=573160)
                                                               Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                                               Heap Fetches: 0
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.047..0.047 rows=25 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.036..0.039 rows=25 loops=5)
 Planning Time: 32.942 ms
 Execution Time: 7994.632 ms
(39 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=781922.13..781922.18 rows=20 width=201) (actual time=2813.300..2874.904 rows=20 loops=1)
   ->  Sort  (cost=781922.13..783261.25 rows=535648 width=201) (actual time=2813.299..2874.901 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  Finalize GroupAggregate  (cost=688133.23..767668.73 rows=535648 width=201) (actual time=2111.962..2739.508 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather Merge  (cost=688133.23..755616.65 rows=535648 width=201) (actual time=2111.952..2376.462 rows=381205 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=687133.17..690815.75 rows=133912 width=201) (actual time=2089.061..2289.366 rows=76241 loops=5)
                           Group Key: customer.c_custkey, nation.n_name
                           ->  Sort  (cost=687133.17..687467.95 rows=133912 width=181) (actual time=2089.037..2117.908 rows=229080 loops=5)
                                 Sort Key: customer.c_custkey, nation.n_name
                                 Sort Method: external merge  Disk: 26456kB
                                 Worker 0:  Sort Method: external merge  Disk: 55064kB
                                 Worker 1:  Sort Method: external merge  Disk: 47800kB
                                 Worker 2:  Sort Method: external merge  Disk: 48168kB
                                 Worker 3:  Sort Method: external merge  Disk: 41048kB
                                 ->  Hash Join  (cost=632474.35..675729.94 rows=133912 width=181) (actual time=1660.451..1930.724 rows=229080 loops=5)
                                       Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                       ->  Parallel Hash Join  (cost=632472.79..675317.28 rows=133912 width=159) (actual time=1660.411..1873.261 rows=229080 loops=5)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..39697.11 rows=375012 width=147) (actual time=0.027..61.620 rows=300000 loops=5)
                                             ->  Parallel Hash  (cost=630798.89..630798.89 rows=133912 width=16) (actual time=1658.817..1658.818 rows=229080 loops=5)
                                                   Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 85184kB
                                                   ->  Nested Loop  (cost=8769.77..630798.89 rows=133912 width=16) (actual time=153.431..1541.768 rows=229080 loops=5)
                                                         ->  Parallel Bitmap Heap Scan on orders  (cost=8769.20..272125.78 rows=139238 width=8) (actual time=153.349..531.093 rows=114632 loops=5)
                                                               Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                               Heap Blocks: exact=53648
                                                               ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8629.96 rows=556953 width=0) (actual time=101.901..101.901 rows=573160 loops=1)
                                                                     Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..2.57 rows=1 width=16) (actual time=0.008..0.008 rows=2 loops=573160)
                                                               Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                                               Heap Fetches: 0
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.021..0.022 rows=25 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.009..0.012 rows=25 loops=5)
 Planning Time: 2.680 ms
 Execution Time: 2878.476 ms
(39 rows)

query 11 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=432686.73..432686.74 rows=1 width=36) (actual time=3747.192..3764.909 rows=0 loops=1)
   InitPlan 1 (returns $3)
     ->  Finalize Aggregate  (cost=188261.82..188261.83 rows=1 width=32) (actual time=156.235..156.324 rows=1 loops=1)
           ->  Gather  (cost=188261.38..188261.79 rows=4 width=32) (actual time=156.225..156.316 rows=4 loops=1)
                 Workers Planned: 4
                 Workers Launched: 3
                 ->  Partial Aggregate  (cost=187261.38..187261.39 rows=1 width=32) (actual time=152.382..152.383 rows=1 loops=4)
                       ->  Nested Loop  (cost=0.99..186661.38 rows=80000 width=10) (actual time=0.088..130.804 rows=80200 loops=4)
                             ->  Nested Loop  (cost=0.55..33462.92 rows=1000 width=4) (actual time=0.076..33.475 rows=1002 loops=4)
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.42..4514.42 rows=25000 width=8) (actual time=0.026..5.310 rows=25000 loops=4)
                                         Heap Fetches: 0
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..1.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=100000)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
                                         Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                         Rows Removed by Filter: 1
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..152.39 rows=81 width=14) (actual time=0.005..0.086 rows=80 loops=4010)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=244424.90..244691.57 rows=106666 width=36) (actual time=3747.191..3764.819 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=194176.53..243891.57 rows=106666 width=36) (actual time=3747.184..3764.811 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $3)
               Rows Removed by Filter: 301833
               ->  Gather Merge  (cost=194176.53..234291.61 rows=320000 width=36) (actual time=3260.642..3398.628 rows=316562 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=193176.47..195176.47 rows=80000 width=36) (actual time=3250.785..3312.498 rows=63312 loops=5)
                           Group Key: partsupp.ps_partkey
                           ->  Sort  (cost=193176.47..193376.47 rows=80000 width=14) (actual time=3250.774..3255.381 rows=64160 loops=5)
                                 Sort Key: partsupp.ps_partkey
                                 Sort Method: quicksort  Memory: 4480kB
                                 Worker 0:  Sort Method: quicksort  Memory: 4548kB
                                 Worker 1:  Sort Method: quicksort  Memory: 4439kB
                                 Worker 2:  Sort Method: quicksort  Memory: 6166kB
                                 Worker 3:  Sort Method: quicksort  Memory: 6159kB
                                 ->  Nested Loop  (cost=0.99..186661.38 rows=80000 width=14) (actual time=1.375..3220.352 rows=64160 loops=5)
                                       ->  Nested Loop  (cost=0.55..33462.92 rows=1000 width=4) (actual time=0.318..36.623 rows=802 loops=5)
                                             ->  Parallel Index Only Scan using q2_idx_3 on supplier  (cost=0.42..4514.42 rows=25000 width=8) (actual time=0.209..9.974 rows=20000 loops=5)
                                                   Heap Fetches: 0
                                             ->  Index Scan using nation_pkey on nation  (cost=0.14..1.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=100000)
                                                   Index Cond: (n_nationkey = supplier.s_nationkey)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..152.39 rows=81 width=18) (actual time=0.242..3.949 rows=80 loops=4010)
                                             Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 17.917 ms
 Execution Time: 3765.851 ms
(48 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=432686.73..432686.74 rows=1 width=36) (actual time=648.436..669.885 rows=0 loops=1)
   InitPlan 1 (returns $3)
     ->  Finalize Aggregate  (cost=188261.82..188261.83 rows=1 width=32) (actual time=148.155..148.244 rows=1 loops=1)
           ->  Gather  (cost=188261.38..188261.79 rows=4 width=32) (actual time=148.145..148.236 rows=4 loops=1)
                 Workers Planned: 4
                 Workers Launched: 3
                 ->  Partial Aggregate  (cost=187261.38..187261.39 rows=1 width=32) (actual time=145.169..145.170 rows=1 loops=4)
                       ->  Nested Loop  (cost=0.99..186661.38 rows=80000 width=10) (actual time=0.080..123.784 rows=80200 loops=4)
                             ->  Nested Loop  (cost=0.55..33462.92 rows=1000 width=4) (actual time=0.070..33.539 rows=1002 loops=4)
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.42..4514.42 rows=25000 width=8) (actual time=0.024..5.371 rows=25000 loops=4)
                                         Heap Fetches: 0
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..1.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=100000)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
                                         Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                         Rows Removed by Filter: 1
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..152.39 rows=81 width=14) (actual time=0.005..0.080 rows=80 loops=4010)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=244424.90..244691.57 rows=106666 width=36) (actual time=648.435..669.794 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=194176.53..243891.57 rows=106666 width=36) (actual time=648.428..669.787 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $3)
               Rows Removed by Filter: 301833
               ->  Gather Merge  (cost=194176.53..234291.61 rows=320000 width=36) (actual time=173.647..311.558 rows=316651 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=193176.47..195176.47 rows=80000 width=36) (actual time=165.546..227.979 rows=63330 loops=5)
                           Group Key: partsupp.ps_partkey
                           ->  Sort  (cost=193176.47..193376.47 rows=80000 width=14) (actual time=165.536..170.094 rows=64160 loops=5)
                                 Sort Key: partsupp.ps_partkey
                                 Sort Method: quicksort  Memory: 4259kB
                                 Worker 0:  Sort Method: quicksort  Memory: 4465kB
                                 Worker 1:  Sort Method: quicksort  Memory: 4015kB
                                 Worker 2:  Sort Method: quicksort  Memory: 4345kB
                                 Worker 3:  Sort Method: quicksort  Memory: 7171kB
                                 ->  Nested Loop  (cost=0.99..186661.38 rows=80000 width=14) (actual time=0.102..145.583 rows=64160 loops=5)
                                       ->  Nested Loop  (cost=0.55..33462.92 rows=1000 width=4) (actual time=0.084..38.196 rows=802 loops=5)
                                             ->  Parallel Index Only Scan using q2_idx_3 on supplier  (cost=0.42..4514.42 rows=25000 width=8) (actual time=0.024..8.304 rows=20000 loops=5)
                                                   Heap Fetches: 0
                                             ->  Index Scan using nation_pkey on nation  (cost=0.14..1.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=100000)
                                                   Index Cond: (n_nationkey = supplier.s_nationkey)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..152.39 rows=81 width=18) (actual time=0.006..0.118 rows=80 loops=4010)
                                             Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.186 ms
 Execution Time: 669.966 ms
(48 rows)

query 12 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=453148.03..453148.55 rows=1 width=27) (actual time=3357.190..3378.511 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=453148.03..453151.67 rows=7 width=27) (actual time=3357.189..3378.509 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=453148.03..453151.39 rows=28 width=27) (actual time=3357.173..3378.497 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=452147.98..452147.99 rows=7 width=27) (actual time=3341.809..3341.811 rows=2 loops=5)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     Worker 3:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=452147.81..452147.88 rows=7 width=27) (actual time=3341.792..3341.793 rows=2 loops=5)
                           Group Key: lineitem.l_shipmode
                           ->  Nested Loop  (cost=0.87..450908.53 rows=70816 width=27) (actual time=0.592..3290.483 rows=62252 loops=5)
                                 ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.43..138844.26 rows=70816 width=15) (actual time=0.299..457.491 rows=62252 loops=5)
                                       Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                       Rows Removed by Filter: 155618
                                       Heap Fetches: 0
                                 ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=20) (actual time=0.045..0.045 rows=1 loops=311258)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 26.721 ms
 Execution Time: 3379.567 ms
(25 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=453148.03..453148.55 rows=1 width=27) (actual time=503.744..529.054 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=453148.03..453151.67 rows=7 width=27) (actual time=503.743..529.052 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=453148.03..453151.39 rows=28 width=27) (actual time=503.727..529.040 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=452147.98..452147.99 rows=7 width=27) (actual time=493.025..493.027 rows=2 loops=5)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     Worker 3:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=452147.81..452147.88 rows=7 width=27) (actual time=493.009..493.011 rows=2 loops=5)
                           Group Key: lineitem.l_shipmode
                           ->  Nested Loop  (cost=0.87..450908.53 rows=70816 width=27) (actual time=0.056..461.815 rows=62252 loops=5)
                                 ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.43..138844.26 rows=70816 width=15) (actual time=0.037..248.489 rows=62252 loops=5)
                                       Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                       Rows Removed by Filter: 155618
                                       Heap Fetches: 0
                                 ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=311258)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 1.626 ms
 Execution Time: 529.135 ms
(25 rows)

query 13 run 1
SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1691256.07..1691256.07 rows=1 width=16) (actual time=6159.741..6257.011 rows=1 loops=1)
   ->  Sort  (cost=1691256.07..1691256.57 rows=200 width=16) (actual time=6159.740..6257.009 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1691253.07..1691255.07 rows=200 width=16) (actual time=6159.715..6256.991 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  Finalize GroupAggregate  (cost=865948.75..1668752.38 rows=1500046 width=12) (actual time=4731.275..6064.644 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Gather Merge  (cost=865948.75..1623751.00 rows=6000184 width=12) (actual time=4731.262..5725.820 rows=1500000 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=864948.69..908071.18 rows=1500046 width=12) (actual time=4710.364..5392.313 rows=300000 loops=5)
                                 Group Key: customer.c_custkey
                                 ->  Sort  (cost=864948.69..874322.70 rows=3749604 width=8) (actual time=4710.352..4999.296 rows=3067521 loops=5)
                                       Sort Key: customer.c_custkey
                                       Sort Method: external merge  Disk: 50072kB
                                       Worker 0:  Sort Method: external merge  Disk: 59200kB
                                       Worker 1:  Sort Method: external merge  Disk: 52552kB
                                       Worker 2:  Sort Method: external merge  Disk: 54896kB
                                       Worker 3:  Sort Method: external merge  Disk: 51552kB
                                       ->  Parallel Hash Left Join  (cost=369660.22..418906.18 rows=3749604 width=8) (actual time=2661.211..3804.842 rows=3067521 loops=5)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Index Only Scan using customer_pkey on customer  (cost=0.43..19482.77 rows=375012 width=4) (actual time=0.700..69.779 rows=300000 loops=5)
                                                   Heap Fetches: 0
                                             ->  Parallel Hash  (cost=308142.74..308142.74 rows=3749604 width=8) (actual time=2451.511..2451.511 rows=2967517 loops=5)
                                                   Buckets: 1048576  Batches: 32  Memory Usage: 26528kB
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..308142.74 rows=3749604 width=8) (actual time=0.157..1909.109 rows=2967517 loops=5)
                                                         Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                                         Rows Removed by Filter: 32483
 Planning Time: 17.630 ms
 Execution Time: 6265.691 ms
(31 rows)

SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1691256.07..1691256.07 rows=1 width=16) (actual time=5607.827..5709.620 rows=1 loops=1)
   ->  Sort  (cost=1691256.07..1691256.57 rows=200 width=16) (actual time=5607.826..5709.618 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1691253.07..1691255.07 rows=200 width=16) (actual time=5607.807..5709.605 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  Finalize GroupAggregate  (cost=865948.75..1668752.38 rows=1500046 width=12) (actual time=4096.537..5507.525 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Gather Merge  (cost=865948.75..1623751.00 rows=6000184 width=12) (actual time=4096.531..5168.514 rows=1500000 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=864948.69..908071.18 rows=1500046 width=12) (actual time=4072.240..4752.239 rows=300000 loops=5)
                                 Group Key: customer.c_custkey
                                 ->  Sort  (cost=864948.69..874322.70 rows=3749604 width=8) (actual time=4072.228..4358.690 rows=3067521 loops=5)
                                       Sort Key: customer.c_custkey
                                       Sort Method: external merge  Disk: 56928kB
                                       Worker 0:  Sort Method: external merge  Disk: 54656kB
                                       Worker 1:  Sort Method: external merge  Disk: 54856kB
                                       Worker 2:  Sort Method: external merge  Disk: 46848kB
                                       Worker 3:  Sort Method: external merge  Disk: 54984kB
                                       ->  Parallel Hash Left Join  (cost=369660.22..418906.18 rows=3749604 width=8) (actual time=2030.998..3232.779 rows=3067521 loops=5)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Index Only Scan using customer_pkey on customer  (cost=0.43..19482.77 rows=375012 width=4) (actual time=0.104..41.862 rows=300000 loops=5)
                                                   Heap Fetches: 0
                                             ->  Parallel Hash  (cost=308142.74..308142.74 rows=3749604 width=8) (actual time=1849.293..1849.293 rows=2967517 loops=5)
                                                   Buckets: 1048576  Batches: 32  Memory Usage: 26528kB
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..308142.74 rows=3749604 width=8) (actual time=0.037..1263.011 rows=2967517 loops=5)
                                                         Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                                         Rows Removed by Filter: 32483
 Planning Time: 0.691 ms
 Execution Time: 5718.236 ms
(31 rows)

query 14 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=944943.61..944943.63 rows=1 width=32) (actual time=5289.765..5328.706 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=944943.61..944943.63 rows=1 width=32) (actual time=5289.763..5328.703 rows=1 loops=1)
         ->  Gather  (cost=944943.16..944943.57 rows=4 width=64) (actual time=5280.570..5328.675 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=943943.16..943943.17 rows=1 width=64) (actual time=5274.091..5274.094 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=66428.53..940485.50 rows=197580 width=33) (actual time=672.745..5122.709 rows=154588 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=14197.36..887735.68 rows=197580 width=16) (actual time=297.024..4579.507 rows=154588 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=83261
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..13999.77 rows=790321 width=0) (actual time=191.637..191.637 rows=772942 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=45981.08..45981.08 rows=500008 width=25) (actual time=373.519..373.520 rows=400000 loops=5)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 137312kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..45981.08 rows=500008 width=25) (actual time=0.868..238.668 rows=400000 loops=5)
 Planning Time: 25.635 ms
 Execution Time: 5329.659 ms
(18 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=944943.61..944943.63 rows=1 width=32) (actual time=1698.223..1754.507 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=944943.61..944943.63 rows=1 width=32) (actual time=1698.222..1754.504 rows=1 loops=1)
         ->  Gather  (cost=944943.16..944943.57 rows=4 width=64) (actual time=1697.153..1754.487 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=943943.16..943943.17 rows=1 width=64) (actual time=1689.237..1689.239 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=66428.53..940485.50 rows=197580 width=33) (actual time=557.972..1594.854 rows=154588 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=14197.36..887735.68 rows=197580 width=16) (actual time=277.284..1186.551 rows=154588 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=78026
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..13999.77 rows=790321 width=0) (actual time=172.299..172.299 rows=772942 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=45981.08..45981.08 rows=500008 width=25) (actual time=278.062..278.063 rows=400000 loops=5)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 137312kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..45981.08 rows=500008 width=25) (actual time=0.042..130.667 rows=400000 loops=5)
 Planning Time: 1.905 ms
 Execution Time: 1754.558 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2750508.10..2750620.53 rows=1 width=104) (actual time=13198.324..13255.229 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=1393774.13..1393774.14 rows=1 width=32) (actual time=2899.601..2909.519 rows=1 loops=1)
           ->  Finalize HashAggregate  (cost=1391284.73..1392529.43 rows=99576 width=36) (actual time=2857.055..2903.278 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Gather  (cost=1347222.35..1388297.45 rows=398304 width=36) (actual time=2491.324..2592.279 rows=398470 loops=1)
                       Workers Planned: 4
                       Workers Launched: 3
                       ->  Partial HashAggregate  (cost=1346222.35..1347467.05 rows=99576 width=36) (actual time=2487.043..2538.433 rows=99618 loops=4)
                             Group Key: lineitem_1.l_suppkey
                             ->  Parallel Bitmap Heap Scan on lineitem lineitem_1  (cost=40871.43..1340533.85 rows=568850 width=16) (actual time=441.634..2044.230 rows=566428 loops=4)
                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                   Rows Removed by Index Recheck: 3305913
                                   Heap Blocks: exact=110436 lossy=73413
                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40302.58 rows=2275401 width=0) (actual time=345.958..345.958 rows=2265714 loops=1)
                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=1356733.96..1412725.19 rows=498 width=104) (actual time=13198.323..13245.307 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=1356733.67..1411145.83 rows=498 width=36) (actual time=13197.730..13244.714 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $1)
               Rows Removed by Filter: 69997
               ->  Gather Merge  (cost=1356733.67..1404424.45 rows=398304 width=36) (actual time=10068.615..10180.378 rows=346209 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1355733.61..1355982.55 rows=99576 width=36) (actual time=10037.322..10044.720 rows=69781 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 10805kB
                           Worker 0:  Sort Method: quicksort  Memory: 10803kB
                           Worker 1:  Sort Method: quicksort  Memory: 10798kB
                           Worker 2:  Sort Method: quicksort  Memory: 10799kB
                           Worker 3:  Sort Method: quicksort  Memory: 10803kB
                           ->  Partial HashAggregate  (cost=1346222.35..1347467.05 rows=99576 width=36) (actual time=9942.708..10010.524 rows=98930 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=40871.43..1340533.85 rows=568850 width=16) (actual time=491.098..9458.057 rows=453143 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Rows Removed by Index Recheck: 2644730
                                       Heap Blocks: exact=80604 lossy=53599
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40302.58 rows=2275401 width=0) (actual time=398.187..398.188 rows=2265714 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.16 rows=1 width=72) (actual time=0.585..0.585 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 22.111 ms
 Execution Time: 13257.528 ms
(43 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2750508.10..2750620.53 rows=1 width=104) (actual time=5945.026..6000.921 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=1393774.13..1393774.14 rows=1 width=32) (actual time=2903.480..2913.394 rows=1 loops=1)
           ->  Finalize HashAggregate  (cost=1391284.73..1392529.43 rows=99576 width=36) (actual time=2861.571..2907.342 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Gather  (cost=1347222.35..1388297.45 rows=398304 width=36) (actual time=2499.194..2597.475 rows=398571 loops=1)
                       Workers Planned: 4
                       Workers Launched: 3
                       ->  Partial HashAggregate  (cost=1346222.35..1347467.05 rows=99576 width=36) (actual time=2495.000..2545.973 rows=99643 loops=4)
                             Group Key: lineitem_1.l_suppkey
                             ->  Parallel Bitmap Heap Scan on lineitem lineitem_1  (cost=40871.43..1340533.85 rows=568850 width=16) (actual time=444.967..2051.525 rows=566428 loops=4)
                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                   Rows Removed by Index Recheck: 3305913
                                   Heap Blocks: exact=109016 lossy=73320
                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40302.58 rows=2275401 width=0) (actual time=348.614..348.614 rows=2265714 loops=1)
                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=1356733.96..1412725.19 rows=498 width=104) (actual time=5945.025..5991.004 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=1356733.67..1411145.83 rows=498 width=36) (actual time=5944.989..5990.967 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $1)
               Rows Removed by Filter: 69997
               ->  Gather Merge  (cost=1356733.67..1404424.45 rows=398304 width=36) (actual time=2814.778..2924.717 rows=346120 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1355733.61..1355982.55 rows=99576 width=36) (actual time=2785.139..2792.322 rows=69798 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 10816kB
                           Worker 0:  Sort Method: quicksort  Memory: 10789kB
                           Worker 1:  Sort Method: quicksort  Memory: 10760kB
                           Worker 2:  Sort Method: quicksort  Memory: 10819kB
                           Worker 3:  Sort Method: quicksort  Memory: 10806kB
                           ->  Partial HashAggregate  (cost=1346222.35..1347467.05 rows=99576 width=36) (actual time=2690.842..2756.641 rows=98884 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=40871.43..1340533.85 rows=568850 width=16) (actual time=453.814..2303.129 rows=453143 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Rows Removed by Index Recheck: 2644730
                                       Heap Blocks: exact=84549 lossy=56520
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40302.58 rows=2275401 width=0) (actual time=360.408..360.408 rows=2265714 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.16 rows=1 width=72) (actual time=0.031..0.031 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 1.615 ms
 Execution Time: 6003.049 ms
(43 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=309658.76..309658.76 rows=1 width=44) (actual time=4626.465..4629.583 rows=1 loops=1)
   ->  Sort  (cost=309658.76..310044.87 rows=154443 width=44) (actual time=4626.464..4629.582 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=299834.23..308886.54 rows=154443 width=44) (actual time=3996.338..4624.233 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=299834.23..301335.80 rows=600631 width=40) (actual time=3996.288..4341.792 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Gather  (cost=58891.15..230452.80 rows=600631 width=40) (actual time=411.255..1170.968 rows=1186319 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Parallel Hash Join  (cost=57891.15..169389.70 rows=150158 width=40) (actual time=403.247..1154.493 rows=237264 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..112345.03 rows=999994 width=8) (actual time=43.333..599.414 rows=1599104 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 896
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=2.417..42.419 rows=56 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 99944
                                 ->  Parallel Hash  (cost=53481.19..53481.19 rows=75080 width=40) (actual time=359.141..359.142 rows=59347 loops=5)
                                       Buckets: 524288  Batches: 1  Memory Usage: 26336kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..53481.19 rows=75080 width=40) (actual time=0.269..333.934 rows=59347 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 340653
 Planning Time: 17.656 ms
 Execution Time: 4638.744 ms
(29 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=309658.76..309658.76 rows=1 width=44) (actual time=4350.173..4353.166 rows=1 loops=1)
   ->  Sort  (cost=309658.76..310044.87 rows=154443 width=44) (actual time=4350.172..4353.164 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=299834.23..308886.54 rows=154443 width=44) (actual time=3716.055..4347.760 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=299834.23..301335.80 rows=600631 width=40) (actual time=3716.005..4061.458 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Gather  (cost=58891.15..230452.80 rows=600631 width=40) (actual time=197.006..831.746 rows=1186319 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Parallel Hash Join  (cost=57891.15..169389.70 rows=150158 width=40) (actual time=189.842..803.798 rows=237264 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..112345.03 rows=999994 width=8) (actual time=27.262..437.097 rows=1599104 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 896
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.083..26.105 rows=56 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 99944
                                 ->  Parallel Hash  (cost=53481.19..53481.19 rows=75080 width=40) (actual time=161.950..161.951 rows=59347 loops=5)
                                       Buckets: 524288  Batches: 1  Memory Usage: 26400kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..53481.19 rows=75080 width=40) (actual time=0.203..129.601 rows=59347 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 340653
 Planning Time: 0.962 ms
 Execution Time: 4361.240 ms
(29 rows)

query 17 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1766742.82..1766742.84 rows=1 width=32) (actual time=32341.993..32373.165 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1766742.82..1766742.84 rows=1 width=32) (actual time=32341.992..32373.163 rows=1 loops=1)
         ->  Gather  (cost=1766742.39..1766742.80 rows=4 width=32) (actual time=32214.249..32373.149 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1765742.39..1765742.40 rows=1 width=32) (actual time=32222.511..32222.513 rows=1 loops=5)
                     ->  Nested Loop  (cost=48503.52..1765730.65 rows=4696 width=8) (actual time=730.794..32222.040 rows=1064 loops=5)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=48502.95..1764283.71 rows=470 width=40) (actual time=721.398..30903.679 rows=399 loops=5)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=48502.39..48503.58 rows=478 width=4) (actual time=308.187..308.409 rows=399 loops=5)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 44kB
                                       Worker 0:  Sort Method: quicksort  Memory: 46kB
                                       Worker 1:  Sort Method: quicksort  Memory: 41kB
                                       Worker 2:  Sort Method: quicksort  Memory: 42kB
                                       Worker 3:  Sort Method: quicksort  Memory: 43kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..48481.12 rows=478 width=4) (actual time=0.562..307.890 rows=399 loops=5)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 399601
                                 ->  GroupAggregate  (cost=0.56..1691220.28 rows=1964317 width=36) (actual time=2.726..30380.129 rows=1996512 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361836.28 rows=59983848 width=9) (actual time=1.018..19472.054 rows=59881097 loops=5)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.95 rows=10 width=17) (actual time=3.187..3.299 rows=3 loops=1996)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 24.235 ms
 Execution Time: 32373.494 ms
(29 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1766742.82..1766742.84 rows=1 width=32) (actual time=31581.844..31581.936 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1766742.82..1766742.84 rows=1 width=32) (actual time=31581.843..31581.934 rows=1 loops=1)
         ->  Gather  (cost=1766742.39..1766742.80 rows=4 width=32) (actual time=31581.831..31581.927 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1765742.39..1765742.40 rows=1 width=32) (actual time=30360.301..30360.303 rows=1 loops=5)
                     ->  Nested Loop  (cost=48503.52..1765730.65 rows=4696 width=8) (actual time=581.417..30359.935 rows=1064 loops=5)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=48502.95..1764283.71 rows=470 width=40) (actual time=581.367..30340.236 rows=399 loops=5)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=48502.39..48503.58 rows=478 width=4) (actual time=137.257..137.426 rows=399 loops=5)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 43kB
                                       Worker 0:  Sort Method: quicksort  Memory: 46kB
                                       Worker 1:  Sort Method: quicksort  Memory: 38kB
                                       Worker 2:  Sort Method: quicksort  Memory: 46kB
                                       Worker 3:  Sort Method: quicksort  Memory: 43kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..48481.12 rows=478 width=4) (actual time=1.228..137.079 rows=399 loops=5)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 399601
                                 ->  GroupAggregate  (cost=0.56..1691220.28 rows=1964317 width=36) (actual time=0.084..29993.223 rows=1975102 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361836.28 rows=59983848 width=9) (actual time=0.044..18992.887 rows=59238834 loops=5)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.95 rows=10 width=17) (actual time=0.043..0.047 rows=3 loops=1996)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 1.818 ms
 Execution Time: 31581.999 ms
(29 rows)

query 18 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=7831029.84..7831030.09 rows=100 width=71) (actual time=28308.933..28441.280 rows=99 loops=1)
   ->  Sort  (cost=7831029.84..7881003.20 rows=19989343 width=71) (actual time=28308.932..28441.272 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  Finalize GroupAggregate  (cost=4123927.66..7067051.53 rows=19989343 width=71) (actual time=28308.694..28441.176 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=4123927.66..6617291.30 rows=19989344 width=71) (actual time=28308.681..28441.082 rows=99 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=4122927.61..4235367.67 rows=4997336 width=71) (actual time=28293.658..28294.789 rows=20 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=4122927.61..4135420.95 rows=4997336 width=44) (actual time=28293.645..28294.736 rows=139 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 32kB
                                 Worker 0:  Sort Method: quicksort  Memory: 33kB
                                 Worker 1:  Sort Method: quicksort  Memory: 36kB
                                 Worker 2:  Sort Method: quicksort  Memory: 40kB
                                 Worker 3:  Sort Method: quicksort  Memory: 35kB
                                 ->  Parallel Hash Join  (cost=412001.44..3457100.82 rows=4997336 width=44) (actual time=27786.155..28294.663 rows=139 loops=5)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Hash Join  (cost=367616.67..3399598.01 rows=4997336 width=25) (actual time=27460.621..27968.415 rows=139 loops=5)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Merge Join  (cost=1.13..2948072.00 rows=4998654 width=13) (actual time=1386.291..25068.539 rows=139 loops=5)
                                                   Merge Cond: (lineitem.l_orderkey = lineitem_1.l_orderkey)
                                                   ->  Parallel Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..911687.42 rows=14995962 width=9) (actual time=1.294..1332.451 rows=11983287 loops=5)
                                                         Heap Fetches: 0
                                                   ->  GroupAggregate  (cost=0.56..1886424.95 rows=4998654 width=4) (actual time=487.261..23065.434 rows=99 loops=5)
                                                         Group Key: lineitem_1.l_orderkey
                                                         Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                         Rows Removed by Filter: 14999901
                                                         ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361566.28 rows=59983848 width=9) (actual time=0.015..7801.071 rows=59986052 loops=5)
                                                               Heap Fetches: 0
                                             ->  Parallel Hash  (cost=298767.79..298767.79 rows=3749980 width=20) (actual time=2276.133..2276.134 rows=3000000 loops=5)
                                                   Buckets: 524288  Batches: 32  Memory Usage: 29888kB
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..298767.79 rows=3749980 width=20) (actual time=1.703..1616.474 rows=3000000 loops=5)
                                       ->  Parallel Hash  (cost=39697.11..39697.11 rows=375012 width=23) (actual time=323.143..323.144 rows=300000 loops=5)
                                             Buckets: 2097152  Batches: 1  Memory Usage: 98624kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..39697.11 rows=375012 width=23) (actual time=1.022..220.093 rows=300000 loops=5)
 Planning Time: 30.950 ms
 Execution Time: 28441.658 ms
(40 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=7831029.84..7831030.09 rows=100 width=71) (actual time=26562.409..26716.736 rows=99 loops=1)
   ->  Sort  (cost=7831029.84..7881003.20 rows=19989343 width=71) (actual time=26562.407..26716.727 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  Finalize GroupAggregate  (cost=4123927.66..7067051.53 rows=19989343 width=71) (actual time=26562.187..26716.635 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=4123927.66..6617291.30 rows=19989344 width=71) (actual time=26562.180..26716.548 rows=99 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=4122927.61..4235367.67 rows=4997336 width=71) (actual time=26550.618..26551.529 rows=20 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=4122927.61..4135420.95 rows=4997336 width=44) (actual time=26550.605..26551.481 rows=139 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 32kB
                                 Worker 0:  Sort Method: quicksort  Memory: 38kB
                                 Worker 1:  Sort Method: quicksort  Memory: 39kB
                                 Worker 2:  Sort Method: quicksort  Memory: 34kB
                                 Worker 3:  Sort Method: quicksort  Memory: 34kB
                                 ->  Parallel Hash Join  (cost=412001.44..3457100.82 rows=4997336 width=44) (actual time=26018.476..26551.410 rows=139 loops=5)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Hash Join  (cost=367616.67..3399598.01 rows=4997336 width=25) (actual time=25784.455..26316.640 rows=139 loops=5)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Merge Join  (cost=1.13..2948072.00 rows=4998654 width=13) (actual time=1336.135..24368.047 rows=139 loops=5)
                                                   Merge Cond: (lineitem.l_orderkey = lineitem_1.l_orderkey)
                                                   ->  Parallel Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..911687.42 rows=14995962 width=9) (actual time=0.058..1316.755 rows=11983287 loops=5)
                                                         Heap Fetches: 0
                                                   ->  GroupAggregate  (cost=0.56..1886424.95 rows=4998654 width=4) (actual time=480.879..22374.001 rows=99 loops=5)
                                                         Group Key: lineitem_1.l_orderkey
                                                         Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                         Rows Removed by Filter: 14999901
                                                         ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361566.28 rows=59983848 width=9) (actual time=0.014..7055.815 rows=59986052 loops=5)
                                                               Heap Fetches: 0
                                             ->  Parallel Hash  (cost=298767.79..298767.79 rows=3749980 width=20) (actual time=1305.167..1305.167 rows=3000000 loops=5)
                                                   Buckets: 524288  Batches: 32  Memory Usage: 29888kB
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..298767.79 rows=3749980 width=20) (actual time=0.030..549.093 rows=3000000 loops=5)
                                       ->  Parallel Hash  (cost=39697.11..39697.11 rows=375012 width=23) (actual time=231.855..231.856 rows=300000 loops=5)
                                             Buckets: 2097152  Batches: 1  Memory Usage: 98656kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..39697.11 rows=375012 width=23) (actual time=0.035..120.262 rows=300000 loops=5)
 Planning Time: 2.377 ms
 Execution Time: 26716.815 ms
(40 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=67382.91..67382.92 rows=1 width=32) (actual time=865.181..868.765 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=67382.91..67382.92 rows=1 width=32) (actual time=865.180..868.763 rows=1 loops=1)
         ->  Gather  (cost=67382.48..67382.89 rows=4 width=32) (actual time=860.557..868.745 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=66382.48..66382.49 rows=1 width=32) (actual time=853.465..853.466 rows=1 loops=5)
                     ->  Nested Loop  (cost=0.56..66380.33 rows=287 width=12) (actual time=6.395..853.077 rows=213 loops=5)
                           ->  Parallel Seq Scan on part  (cost=0.00..62231.33 rows=1200 width=30) (actual time=0.457..218.358 rows=956 loops=5)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 399044
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.45 rows=1 width=21) (actual time=0.637..0.662 rows=0 loops=4781)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning Time: 29.067 ms
 Execution Time: 869.698 ms
(17 rows)

SET
SET
SET


 Limit  (cost=67382.91..67382.92 rows=1 width=32) (actual time=160.918..163.165 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=67382.91..67382.92 rows=1 width=32) (actual time=160.916..163.163 rows=1 loops=1)
         ->  Gather  (cost=67382.48..67382.89 rows=4 width=32) (actual time=155.598..163.141 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=66382.48..66382.49 rows=1 width=32) (actual time=151.699..151.700 rows=1 loops=5)
                     ->  Nested Loop  (cost=0.56..66380.33 rows=287 width=12) (actual time=0.746..151.537 rows=213 loops=5)
                           ->  Parallel Seq Scan on part  (cost=0.00..62231.33 rows=1200 width=30) (actual time=0.125..137.397 rows=956 loops=5)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 399044
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.45 rows=1 width=21) (actual time=0.013..0.014 rows=0 loops=4781)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning Time: 2.749 ms
 Execution Time: 163.221 ms
(17 rows)

query 20 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3107739.98..3107739.99 rows=1 width=52) (actual time=34495.793..34495.941 rows=1 loops=1)
   ->  Sort  (cost=3107739.98..3107739.99 rows=1 width=52) (actual time=34495.792..34495.939 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=1626197.84..3107739.97 rows=1 width=52) (actual time=10288.390..34493.906 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=56) (actual time=0.616..34.693 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.210..0.213 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=60) (actual time=0.398..26.948 rows=100000 loops=1)
               ->  Materialize  (cost=1626197.84..3103087.67 rows=3 width=8) (actual time=2.079..5.950 rows=44445 loops=4095)
                     ->  Merge Join  (cost=1626197.84..3103087.65 rows=3 width=8) (actual time=8514.309..17933.509 rows=59002 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  Finalize GroupAggregate  (cost=1625196.92..2950974.60 rows=4884804 width=40) (actual time=8509.763..17505.240 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Gather Merge  (cost=1625196.92..2784741.62 rows=9296092 width=40) (actual time=8509.753..11782.223 rows=8159812 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Partial GroupAggregate  (cost=1624196.86..1676487.38 rows=2324023 width=40) (actual time=8424.012..9876.693 rows=1632049 loops=5)
                                             Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                             ->  Sort  (cost=1624196.86..1630006.92 rows=2324023 width=13) (actual time=8423.986..8670.572 rows=1824715 loops=5)
                                                   Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                                   Sort Method: external merge  Disk: 40528kB
                                                   Worker 0:  Sort Method: external merge  Disk: 41080kB
                                                   Worker 1:  Sort Method: external merge  Disk: 39736kB
                                                   Worker 2:  Sort Method: external merge  Disk: 41048kB
                                                   Worker 3:  Sort Method: external merge  Disk: 43000kB
                                                   ->  Parallel Seq Scan on lineitem  (cost=0.00..1350082.43 rows=2324023 width=13) (actual time=0.100..7626.509 rows=1824738 loops=5)
                                                         Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                         Rows Removed by Filter: 10172473
                           ->  Materialize  (cost=1000.92..70676.84 rows=80806 width=16) (actual time=3.923..48.191 rows=237286 loops=1)
                                 ->  Gather Merge  (cost=1000.92..70474.82 rows=80806 width=16) (actual time=3.918..28.421 rows=86872 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 3
                                       ->  Nested Loop  (cost=0.86..59849.99 rows=20202 width=16) (actual time=0.312..220.853 rows=21718 loops=4)
                                             ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.43..45556.68 rows=5050 width=4) (actual time=0.274..93.385 rows=5430 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 494570
                                                   Heap Fetches: 0
                                             ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.64 rows=19 width=12) (actual time=0.022..0.023 rows=4 loops=21718)
                                                   Index Cond: (ps_partkey = part.p_partkey)
                                                   Heap Fetches: 0
 Planning Time: 32.176 ms
 Execution Time: 34501.921 ms
(50 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3107739.98..3107739.99 rows=1 width=52) (actual time=29278.599..29278.743 rows=1 loops=1)
   ->  Sort  (cost=3107739.98..3107739.99 rows=1 width=52) (actual time=29278.597..29278.741 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=1626197.84..3107739.97 rows=1 width=52) (actual time=5147.708..29276.969 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=56) (actual time=0.015..17.823 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=60) (actual time=0.005..6.598 rows=100000 loops=1)
               ->  Materialize  (cost=1626197.84..3103087.67 rows=3 width=8) (actual time=0.827..4.683 rows=44445 loops=4095)
                     ->  Merge Join  (cost=1626197.84..3103087.65 rows=3 width=8) (actual time=3388.027..12751.769 rows=59002 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  Finalize GroupAggregate  (cost=1625196.92..2950974.60 rows=4884804 width=40) (actual time=3383.135..12333.034 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Gather Merge  (cost=1625196.92..2784741.62 rows=9296092 width=40) (actual time=3383.118..6631.112 rows=8158435 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Partial GroupAggregate  (cost=1624196.86..1676487.38 rows=2324023 width=40) (actual time=3316.641..4768.086 rows=1631771 loops=5)
                                             Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                             ->  Sort  (cost=1624196.86..1630006.92 rows=2324023 width=13) (actual time=3316.612..3563.311 rows=1824710 loops=5)
                                                   Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                                   Sort Method: external merge  Disk: 40528kB
                                                   Worker 0:  Sort Method: external merge  Disk: 41680kB
                                                   Worker 1:  Sort Method: external merge  Disk: 41360kB
                                                   Worker 2:  Sort Method: external merge  Disk: 43328kB
                                                   Worker 3:  Sort Method: external merge  Disk: 38488kB
                                                   ->  Parallel Seq Scan on lineitem  (cost=0.00..1350082.43 rows=2324023 width=13) (actual time=0.039..2379.311 rows=1824738 loops=5)
                                                         Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                         Rows Removed by Filter: 10172473
                           ->  Materialize  (cost=1000.92..70676.84 rows=80806 width=16) (actual time=4.280..39.325 rows=237286 loops=1)
                                 ->  Gather Merge  (cost=1000.92..70474.82 rows=80806 width=16) (actual time=4.275..19.510 rows=86872 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 3
                                       ->  Nested Loop  (cost=0.86..59849.99 rows=20202 width=16) (actual time=0.078..75.656 rows=21718 loops=4)
                                             ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.43..45556.68 rows=5050 width=4) (actual time=0.055..57.237 rows=5430 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 494570
                                                   Heap Fetches: 0
                                             ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.64 rows=19 width=12) (actual time=0.002..0.003 rows=4 loops=21718)
                                                   Index Cond: (ps_partkey = part.p_partkey)
                                                   Heap Fetches: 0
 Planning Time: 2.031 ms
 Execution Time: 29284.473 ms
(50 rows)

query 21 run 1
SET
SET
SET
                                                                                                  QUERY PLAN                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=650876.07..650876.07 rows=1 width=34) (actual time=21248.204..21455.580 rows=100 loops=1)
   ->  Sort  (cost=650876.07..650876.07 rows=1 width=34) (actual time=21248.202..21455.573 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=650876.04..650876.06 rows=1 width=34) (actual time=21241.139..21454.376 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=650876.04..650876.04 rows=1 width=26) (actual time=21241.128..21449.989 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Semi Join  (cost=346415.49..650876.03 rows=1 width=26) (actual time=4797.962..21262.491 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 27756
                           ->  Nested Loop  (cost=346414.92..650873.38 rows=1 width=38) (actual time=4797.639..9360.619 rows=65960 loops=1)
                                 ->  Gather  (cost=346414.49..650870.94 rows=1 width=34) (actual time=4797.218..5063.571 rows=134155 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Parallel Hash Anti Join  (cost=345414.49..649870.84 rows=1 width=34) (actual time=4772.681..5427.967 rows=26831 loops=5)
                                             Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                             Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                             Rows Removed by Join Filter: 109332
                                             ->  Parallel Hash Join  (cost=3021.13..283325.88 rows=199946 width=34) (actual time=19.744..1719.780 rows=302853 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..260384.19 rows=4998654 width=8) (actual time=0.087..965.460 rows=7585870 loops=5)
                                                         Heap Fetches: 0
                                                   ->  Parallel Hash  (cost=2991.15..2991.15 rows=2353 width=30) (actual time=19.566..19.568 rows=798 loops=5)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 352kB
                                                         ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=30) (actual time=0.857..19.210 rows=798 loops=5)
                                                               Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=34) (actual time=0.446..16.765 rows=20000 loops=5)
                                                               ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.207..0.208 rows=1 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.203..0.205 rows=1 loops=5)
                                                                           Filter: (n_name = 'PERU'::bpchar)
                                                                           Rows Removed by Filter: 24
                                             ->  Parallel Hash  (cost=260384.19..260384.19 rows=4998654 width=8) (actual time=2893.442..2893.442 rows=7585870 loops=5)
                                                   Buckets: 1048576  Batches: 64  Memory Usage: 31520kB
                                                   ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..260384.19 rows=4998654 width=8) (actual time=0.239..1750.136 rows=7585870 loops=5)
                                                         Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.45 rows=1 width=4) (actual time=0.031..0.031 rows=0 loops=134155)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.179..0.179 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 31.172 ms
 Execution Time: 21456.805 ms
(46 rows)

SET
SET
SET
                                                                                                  QUERY PLAN                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=650876.07..650876.07 rows=1 width=34) (actual time=5726.081..5955.964 rows=100 loops=1)
   ->  Sort  (cost=650876.07..650876.07 rows=1 width=34) (actual time=5726.080..5955.957 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=650876.04..650876.06 rows=1 width=34) (actual time=5719.088..5954.758 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=650876.04..650876.04 rows=1 width=26) (actual time=5719.075..5950.392 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Semi Join  (cost=346415.49..650876.03 rows=1 width=26) (actual time=4192.601..5783.355 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 27756
                           ->  Nested Loop  (cost=346414.92..650873.38 rows=1 width=38) (actual time=4192.572..5516.348 rows=65960 loops=1)
                                 ->  Gather  (cost=346414.49..650870.94 rows=1 width=34) (actual time=4192.532..5059.663 rows=134155 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Parallel Hash Anti Join  (cost=345414.49..649870.84 rows=1 width=34) (actual time=4168.391..5039.281 rows=26831 loops=5)
                                             Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                             Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                             Rows Removed by Join Filter: 109307
                                             ->  Parallel Hash Join  (cost=3021.13..283325.88 rows=199946 width=34) (actual time=6.129..1694.061 rows=302853 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..260384.19 rows=4998654 width=8) (actual time=0.021..973.371 rows=7585870 loops=5)
                                                         Heap Fetches: 0
                                                   ->  Parallel Hash  (cost=2991.15..2991.15 rows=2353 width=30) (actual time=5.982..5.984 rows=798 loops=5)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 352kB
                                                         ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=30) (actual time=0.052..4.998 rows=798 loops=5)
                                                               Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=34) (actual time=0.013..2.256 rows=20000 loops=5)
                                                               ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.023..0.024 rows=1 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.020..0.021 rows=1 loops=5)
                                                                           Filter: (n_name = 'PERU'::bpchar)
                                                                           Rows Removed by Filter: 24
                                             ->  Parallel Hash  (cost=260384.19..260384.19 rows=4998654 width=8) (actual time=2320.898..2320.899 rows=7585870 loops=5)
                                                   Buckets: 1048576  Batches: 64  Memory Usage: 31520kB
                                                   ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..260384.19 rows=4998654 width=8) (actual time=0.034..1111.856 rows=7585870 loops=5)
                                                         Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=134155)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.004..0.004 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 2.858 ms
 Execution Time: 5956.267 ms
(46 rows)

query 22 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=96518.37..96518.52 rows=1 width=72) (actual time=868.547..882.236 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=46821.28..46821.29 rows=1 width=32) (actual time=376.906..377.004 rows=1 loops=1)
           ->  Gather  (cost=46820.85..46821.26 rows=4 width=32) (actual time=376.891..376.992 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=45820.85..45820.86 rows=1 width=32) (actual time=365.554..365.555 rows=1 loops=5)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..45791.05 rows=11918 width=6) (actual time=0.113..357.213 rows=76485 loops=5)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 223515
   ->  Finalize GroupAggregate  (cost=49697.08..50836.53 rows=7423 width=72) (actual time=868.546..882.137 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Gather Merge  (cost=49697.08..50632.39 rows=7424 width=72) (actual time=868.035..882.126 rows=5 loops=1)
               Workers Planned: 4
               Params Evaluated: $1
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=48697.02..48748.06 rows=1856 width=72) (actual time=487.919..488.777 rows=3 loops=4)
                     Group Key: ("substring"((customer.c_phone)::text, 1, 2))
                     ->  Sort  (cost=48697.02..48701.66 rows=1856 width=38) (actual time=487.430..487.689 rows=6224 loops=4)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 1131kB
                           Worker 0:  Sort Method: quicksort  Memory: 1138kB
                           Worker 1:  Sort Method: quicksort  Memory: 1119kB
                           Worker 2:  Sort Method: quicksort  Memory: 1127kB
                           ->  Nested Loop Anti Join  (cost=0.43..48596.26 rows=1856 width=38) (actual time=0.077..480.836 rows=15877 loops=4)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..45791.05 rows=4375 width=26) (actual time=0.014..171.676 rows=47782 loops=4)
                                       Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                       Rows Removed by Filter: 327218
                                 ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.64 rows=17 width=4) (actual time=0.006..0.006 rows=1 loops=191129)
                                       Index Cond: (o_custkey = customer.c_custkey)
                                       Heap Fetches: 0
 Planning Time: 16.904 ms
 Execution Time: 883.336 ms
(33 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=96518.37..96518.52 rows=1 width=72) (actual time=524.890..537.940 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=46821.28..46821.29 rows=1 width=32) (actual time=223.694..223.788 rows=1 loops=1)
           ->  Gather  (cost=46820.85..46821.26 rows=4 width=32) (actual time=219.954..223.765 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=45820.85..45820.86 rows=1 width=32) (actual time=215.203..215.204 rows=1 loops=5)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..45791.05 rows=11918 width=6) (actual time=0.015..205.533 rows=76485 loops=5)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 223515
   ->  Finalize GroupAggregate  (cost=49697.08..50836.53 rows=7423 width=72) (actual time=524.888..537.844 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Gather Merge  (cost=49697.08..50632.39 rows=7424 width=72) (actual time=524.349..537.832 rows=6 loops=1)
               Workers Planned: 4
               Params Evaluated: $1
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=48697.02..48748.06 rows=1856 width=72) (actual time=294.415..296.134 rows=5 loops=5)
                     Group Key: ("substring"((customer.c_phone)::text, 1, 2))
                     ->  Sort  (cost=48697.02..48701.66 rows=1856 width=38) (actual time=294.024..294.419 rows=8945 loops=5)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 1061kB
                           Worker 0:  Sort Method: quicksort  Memory: 1079kB
                           Worker 1:  Sort Method: quicksort  Memory: 1074kB
                           Worker 2:  Sort Method: quicksort  Memory: 797kB
                           Worker 3:  Sort Method: quicksort  Memory: 888kB
                           ->  Nested Loop Anti Join  (cost=0.43..48596.26 rows=1856 width=38) (actual time=0.072..288.535 rows=12702 loops=5)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..45791.05 rows=4375 width=26) (actual time=0.017..155.683 rows=38226 loops=5)
                                       Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                       Rows Removed by Filter: 261774
                                 ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.64 rows=17 width=4) (actual time=0.003..0.003 rows=1 loops=191129)
                                       Index Cond: (o_custkey = customer.c_custkey)
                                       Heap Fetches: 0
 Planning Time: 0.801 ms
 Execution Time: 538.009 ms
(34 rows)

