query 1 run 1
SET
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424764.34..424764.34 rows=1 width=236) (actual time=7253.685..7253.686 rows=1 loops=1)
   ->  Sort  (cost=424764.34..424764.36 rows=6 width=236) (actual time=7253.684..7253.684 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424764.15..424764.31 rows=6 width=236) (actual time=7253.657..7253.664 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..187573.83 rows=5929758 width=25) (actual time=0.508..1157.090 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning Time: 16.762 ms
 Execution Time: 7254.681 ms
(11 rows)

SET
SET
SET
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424764.34..424764.34 rows=1 width=236) (actual time=6668.886..6668.887 rows=1 loops=1)
   ->  Sort  (cost=424764.34..424764.36 rows=6 width=236) (actual time=6668.885..6668.885 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424764.15..424764.31 rows=6 width=236) (actual time=6668.859..6668.867 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..187573.83 rows=5929758 width=25) (actual time=0.024..963.559 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning Time: 0.799 ms
 Execution Time: 6668.950 ms
(11 rows)

query 2 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18316.41..18316.41 rows=1 width=192) (actual time=176.866..176.879 rows=100 loops=1)
   ->  Sort  (cost=18316.41..18316.41 rows=1 width=192) (actual time=176.866..176.873 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=15.08..18316.40 rows=1 width=192) (actual time=4.653..176.308 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.346..0.351 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.176..0.177 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.167..0.168 rows=25 loops=1)
               ->  Materialize  (cost=15.08..18313.70 rows=1 width=170) (actual time=0.388..35.122 rows=489 loops=5)
                     ->  Nested Loop  (cost=15.08..18313.70 rows=1 width=170) (actual time=1.936..175.119 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.80..18312.43 rows=1 width=34) (actual time=1.571..134.464 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5472.58 rows=792 width=30) (actual time=0.268..25.081 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=14.38..16.20 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.94..13.95 rows=1 width=32) (actual time=0.133..0.133 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.97..13.94 rows=1 width=6) (actual time=0.121..0.131 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.97..12.83 rows=4 width=10) (actual time=0.102..0.128 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.83..12.21 rows=4 width=10) (actual time=0.100..0.121 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.092..0.094 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.41..2.43 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.082..0.082 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 24.981 ms
 Execution Time: 178.131 ms
(47 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18316.41..18316.41 rows=1 width=192) (actual time=23.693..23.706 rows=100 loops=1)
   ->  Sort  (cost=18316.41..18316.41 rows=1 width=192) (actual time=23.692..23.699 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=15.08..18316.40 rows=1 width=192) (actual time=0.168..23.170 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.010..0.015 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
               ->  Materialize  (cost=15.08..18313.70 rows=1 width=170) (actual time=0.013..4.578 rows=489 loops=5)
                     ->  Nested Loop  (cost=15.08..18313.70 rows=1 width=170) (actual time=0.062..22.627 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.80..18312.43 rows=1 width=34) (actual time=0.055..21.537 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5472.58 rows=792 width=30) (actual time=0.007..6.319 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=14.38..16.20 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.94..13.95 rows=1 width=32) (actual time=0.017..0.017 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.97..13.94 rows=1 width=6) (actual time=0.012..0.016 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.97..12.83 rows=4 width=10) (actual time=0.006..0.014 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.83..12.21 rows=4 width=10) (actual time=0.004..0.010 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.41..2.43 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.002..0.002 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 1.794 ms
 Execution Time: 23.764 ms
(47 rows)

query 3 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=302265.89..302265.92 rows=10 width=44) (actual time=1946.973..1946.977 rows=10 loops=1)
   ->  Sort  (cost=302265.89..303051.26 rows=314145 width=44) (actual time=1946.971..1946.974 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=286052.98..295477.33 rows=314145 width=44) (actual time=1929.254..1944.866 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=286052.98..286838.35 rows=314145 width=24) (actual time=1929.241..1930.450 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=54426.67..257369.86 rows=314145 width=24) (actual time=539.513..1921.942 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187573.83 rows=3260932 width=16) (actual time=0.631..1098.141 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 2739342
                           ->  Hash  (cost=52620.37..52620.37 rows=144504 width=12) (actual time=537.667..537.669 rows=146063 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                                 ->  Hash Join  (cost=5848.06..52620.37 rows=144504 width=12) (actual time=53.025..508.948 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=720478 width=16) (actual time=0.589..341.126 rows=722275 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 777725
                                       ->  Hash  (cost=5472.00..5472.00 rows=30085 width=4) (actual time=52.396..52.396 rows=30142 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30085 width=4) (actual time=0.423..47.985 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
 Planning Time: 25.664 ms
 Execution Time: 1947.775 ms
(28 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=302265.89..302265.92 rows=10 width=44) (actual time=1495.703..1495.707 rows=10 loops=1)
   ->  Sort  (cost=302265.89..303051.26 rows=314145 width=44) (actual time=1495.702..1495.705 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=286052.98..295477.33 rows=314145 width=44) (actual time=1477.951..1493.561 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=286052.98..286838.35 rows=314145 width=24) (actual time=1477.938..1479.145 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=54426.67..257369.86 rows=314145 width=24) (actual time=300.811..1471.198 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187573.83 rows=3260932 width=16) (actual time=0.034..896.223 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 2739342
                           ->  Hash  (cost=52620.37..52620.37 rows=144504 width=12) (actual time=300.247..300.249 rows=146063 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                                 ->  Hash Join  (cost=5848.06..52620.37 rows=144504 width=12) (actual time=24.503..275.862 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=720478 width=16) (actual time=0.007..162.713 rows=722275 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 777725
                                       ->  Hash  (cost=5472.00..5472.00 rows=30085 width=4) (actual time=24.477..24.478 rows=30142 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30085 width=4) (actual time=0.003..21.298 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
 Planning Time: 1.580 ms
 Execution Time: 1495.779 ms
(28 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79788.99..79789.00 rows=1 width=24) (actual time=1122.623..1122.625 rows=1 loops=1)
   ->  Sort  (cost=79788.99..79789.01 rows=5 width=24) (actual time=1122.622..1122.624 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=79788.92..79788.97 rows=5 width=24) (actual time=1122.605..1122.607 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Merge Semi Join  (cost=32444.92..79501.44 rows=57495 width=16) (actual time=545.721..1111.144 rows=51398 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=32444.49..32588.22 rows=57495 width=20) (actual time=545.395..550.091 rows=55973 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: quicksort  Memory: 5909kB
                           ->  Bitmap Heap Scan on orders  (cost=905.75..27899.18 rows=57495 width=20) (actual time=12.122..530.592 rows=55973 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=23186
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..891.38 rows=57495 width=0) (actual time=8.813..8.813 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q21_idx_2 on lineitem  (cost=0.43..41001.97 rows=2000369 width=4) (actual time=0.318..384.128 rows=3793256 loops=1)
                           Heap Fetches: 0
 Planning Time: 19.967 ms
 Execution Time: 1123.499 ms
(20 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79788.99..79789.00 rows=1 width=24) (actual time=538.063..538.064 rows=1 loops=1)
   ->  Sort  (cost=79788.99..79789.01 rows=5 width=24) (actual time=538.062..538.063 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=79788.92..79788.97 rows=5 width=24) (actual time=538.046..538.048 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Merge Semi Join  (cost=32444.92..79501.44 rows=57495 width=16) (actual time=48.922..529.739 rows=51398 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=32444.49..32588.22 rows=57495 width=20) (actual time=48.899..52.122 rows=55973 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: quicksort  Memory: 5909kB
                           ->  Bitmap Heap Scan on orders  (cost=905.75..27899.18 rows=57495 width=20) (actual time=7.331..40.778 rows=55973 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=23186
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..891.38 rows=57495 width=0) (actual time=4.731..4.732 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q21_idx_2 on lineitem  (cost=0.43..41001.97 rows=2000369 width=4) (actual time=0.015..304.115 rows=3793256 loops=1)
                           Heap Fetches: 0
 Planning Time: 1.084 ms
 Execution Time: 538.119 ms
(20 rows)

query 5 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=155541.88..155541.88 rows=1 width=58) (actual time=1132.982..1132.986 rows=1 loops=1)
   ->  Sort  (cost=155541.88..155541.94 rows=25 width=58) (actual time=1132.980..1132.985 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=155450.41..155541.76 rows=25 width=58) (actual time=1130.477..1132.971 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=155450.41..155468.61 rows=7283 width=38) (actual time=1129.867..1130.160 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 782kB
                     ->  Hash Join  (cost=10393.09..154983.19 rows=7283 width=38) (actual time=96.632..1125.996 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=9920.09..153554.41 rows=182051 width=50) (actual time=91.111..1083.733 rows=182435 loops=1)
                                 ->  Hash Join  (cost=9919.54..40771.61 rows=45504 width=38) (actual time=90.381..676.115 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3582.53..33126.36 rows=227522 width=8) (actual time=27.648..549.150 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3525.65 rows=227522 width=0) (actual time=24.057..24.057 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=62.693..62.696 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=1.028..57.031 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.460..40.072 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.561..0.562 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.549..0.559 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.248..0.251 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.288..0.288 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.280..0.283 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.44 rows=4 width=20) (actual time=0.007..0.008 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.475..5.476 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.278..4.191 rows=10000 loops=1)
 Planning Time: 30.630 ms
 Execution Time: 1133.783 ms
(42 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=155541.88..155541.88 rows=1 width=58) (actual time=322.293..322.297 rows=1 loops=1)
   ->  Sort  (cost=155541.88..155541.94 rows=25 width=58) (actual time=322.291..322.295 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=155450.41..155541.76 rows=25 width=58) (actual time=319.871..322.273 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=155450.41..155468.61 rows=7283 width=38) (actual time=319.272..319.550 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 782kB
                     ->  Hash Join  (cost=10393.09..154983.19 rows=7283 width=38) (actual time=54.104..316.638 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=9920.09..153554.41 rows=182051 width=50) (actual time=51.452..289.524 rows=182435 loops=1)
                                 ->  Hash Join  (cost=9919.54..40771.61 rows=45504 width=38) (actual time=51.432..145.738 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3582.53..33126.36 rows=227522 width=8) (actual time=17.927..70.141 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3525.65 rows=227522 width=0) (actual time=15.043..15.044 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=33.474..33.476 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=0.030..28.974 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.006..8.505 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.020..0.021 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.014..0.019 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.44 rows=4 width=20) (actual time=0.002..0.003 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.620..2.620 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.017..1.415 rows=10000 loops=1)
 Planning Time: 3.451 ms
 Execution Time: 322.375 ms
(42 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116425.96..116425.97 rows=1 width=32) (actual time=1284.745..1284.746 rows=1 loops=1)
   ->  Aggregate  (cost=116425.96..116425.97 rows=1 width=32) (actual time=1284.743..1284.744 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=22684.10..115837.87 rows=117618 width=12) (actual time=129.947..1218.023 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22654.69 rows=117618 width=0) (actual time=120.421..120.422 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 15.222 ms
 Execution Time: 1285.450 ms
(9 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116425.96..116425.97 rows=1 width=32) (actual time=205.875..205.876 rows=1 loops=1)
   ->  Aggregate  (cost=116425.96..116425.97 rows=1 width=32) (actual time=205.873..205.874 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=22684.10..115837.87 rows=117618 width=12) (actual time=96.696..174.186 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22654.69 rows=117618 width=0) (actual time=87.887..87.888 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.756 ms
 Execution Time: 205.913 ms
(9 rows)

query 7 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=238295.32..238295.35 rows=1 width=92) (actual time=3203.021..3203.027 rows=1 loops=1)
   ->  GroupAggregate  (cost=238295.32..238509.73 rows=6126 width=92) (actual time=3203.020..3203.025 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=238295.32..238310.63 rows=6126 width=72) (actual time=3202.356..3202.413 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 998kB
               ->  Hash Join  (cost=88561.63..237909.97 rows=6126 width=72) (actual time=751.494..3198.142 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=88196.53..236726.74 rows=147194 width=46) (actual time=746.083..3168.978 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=33031.63..173190.46 rows=1839922 width=24) (actual time=205.290..2384.650 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32571.65 rows=1839922 width=0) (actual time=187.421..187.421 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=540.357..540.360 rows=118477 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                 ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=55.039..516.687 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.760..290.615 rows=1500000 loops=1)
                                       ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=54.263..54.265 rows=11896 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.519..52.126 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.497..38.053 rows=150000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.015..0.016 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.013 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=5.023..5.024 rows=794 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 57kB
                           ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.477..4.894 rows=794 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.253..3.665 rows=10000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.216..0.216 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.208..0.211 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Planning Time: 33.704 ms
 Execution Time: 3203.804 ms
(44 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=238295.32..238295.35 rows=1 width=92) (actual time=957.173..957.179 rows=1 loops=1)
   ->  GroupAggregate  (cost=238295.32..238509.73 rows=6126 width=92) (actual time=957.172..957.177 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=238295.32..238310.63 rows=6126 width=72) (actual time=956.536..956.592 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 998kB
               ->  Hash Join  (cost=88561.63..237909.97 rows=6126 width=72) (actual time=451.125..953.600 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=88196.53..236726.74 rows=147194 width=46) (actual time=449.125..936.438 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=33031.63..173190.46 rows=1839922 width=24) (actual time=145.464..425.866 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32571.65 rows=1839922 width=0) (actual time=128.595..128.595 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=303.562..303.565 rows=118477 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                 ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=28.004..285.092 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.006..79.409 rows=1500000 loops=1)
                                       ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=27.984..27.986 rows=11896 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.027..26.464 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..8.277 rows=150000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.011..0.012 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.009 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=1.922..1.923 rows=794 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 57kB
                           ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.021..1.830 rows=794 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.008..0.581 rows=10000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.010..0.011 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.008 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Planning Time: 2.577 ms
 Execution Time: 957.277 ms
(44 rows)

query 8 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=59474.28..59474.33 rows=1 width=40) (actual time=1217.354..1217.360 rows=1 loops=1)
   ->  GroupAggregate  (cost=59474.28..59583.29 rows=2406 width=40) (actual time=1217.353..1217.358 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=59474.28..59480.38 rows=2439 width=46) (actual time=1216.808..1216.865 rows=1235 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 291kB
               ->  Hash Join  (cost=24387.88..59337.06 rows=2439 width=46) (actual time=582.277..1215.569 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=24386.32..59315.81 rows=2439 width=20) (actual time=582.045..1213.366 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=23938.32..58861.41 rows=2439 width=20) (actual time=576.802..1207.107 rows=2485 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=17601.31..52454.28 rows=12194 width=24) (actual time=517.589..1144.641 rows=12097 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=7219.79..40230.85 rows=458670 width=12) (actual time=46.925..598.485 rows=457263 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7105.13 rows=458670 width=0) (actual time=43.354..43.354 rows=457263 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=9883.05..9883.05 rows=39877 width=20) (actual time=470.515..470.516 rows=39694 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 2645kB
                                             ->  Nested Loop  (cost=0.98..9883.05 rows=39877 width=20) (actual time=2.083..454.471 rows=39694 loops=1)
                                                   ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5435.71 rows=1329 width=4) (actual time=1.014..35.523 rows=1320 loops=1)
                                                         Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.05 rows=30 width=24) (actual time=0.254..0.310 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=59.191..59.193 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                       ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.913..55.200 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.435..38.899 rows=150000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.474..0.475 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.468..0.474 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.004 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.462..0.462 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.212..0.213 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.229..5.229 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.295..4.020 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.221..0.221 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.203..0.209 rows=25 loops=1)
 Planning Time: 39.855 ms
 Execution Time: 1218.284 ms
(51 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=59474.28..59474.33 rows=1 width=40) (actual time=222.923..222.929 rows=1 loops=1)
   ->  GroupAggregate  (cost=59474.28..59583.29 rows=2406 width=40) (actual time=222.922..222.927 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=59474.28..59480.38 rows=2439 width=46) (actual time=222.388..222.446 rows=1235 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 291kB
               ->  Hash Join  (cost=24387.88..59337.06 rows=2439 width=46) (actual time=95.118..221.761 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=24386.32..59315.81 rows=2439 width=20) (actual time=95.094..220.775 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=23938.32..58861.41 rows=2439 width=20) (actual time=92.602..217.440 rows=2485 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=17601.31..52454.28 rows=12194 width=24) (actual time=60.694..182.934 rows=12097 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=7219.79..40230.85 rows=458670 width=12) (actual time=31.849..103.205 rows=457263 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7105.13 rows=458670 width=0) (actual time=28.783..28.784 rows=457263 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=9883.05..9883.05 rows=39877 width=20) (actual time=28.794..28.795 rows=39694 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 2645kB
                                             ->  Nested Loop  (cost=0.98..9883.05 rows=39877 width=20) (actual time=0.033..21.437 rows=39694 loops=1)
                                                   ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5435.71 rows=1329 width=4) (actual time=0.021..6.912 rows=1320 loops=1)
                                                         Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.05 rows=30 width=24) (actual time=0.003..0.008 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=31.886..31.888 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                       ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.227..28.779 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..8.531 rows=150000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.221..0.223 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.216..0.221 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.003 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.211..0.211 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.003..0.005 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.485..2.485 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.007..1.405 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.014..0.014 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.006..0.008 rows=25 loops=1)
 Planning Time: 3.918 ms
 Execution Time: 223.024 ms
(51 rows)

query 9 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=144323.33..144323.33 rows=1 width=66) (actual time=2164.892..2164.896 rows=1 loops=1)
   ->  Sort  (cost=144323.33..144473.71 rows=60150 width=66) (actual time=2164.891..2164.895 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=142969.96..144022.58 rows=60150 width=66) (actual time=2164.406..2164.819 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=82322.82..136605.26 rows=363697 width=57) (actual time=1084.411..1899.553 rows=325928 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=82321.26..133668.66 rows=363697 width=31) (actual time=1083.190..1807.879 rows=325928 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=81873.26..132265.55 rows=363697 width=35) (actual time=1077.960..1723.297 rows=325928 loops=1)
                                 Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.469..298.031 rows=1500000 loops=1)
                                 ->  Hash  (cost=77327.04..77327.04 rows=363697 width=35) (actual time=1076.837..1076.839 rows=325928 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 26989kB
                                       ->  Hash Join  (cost=51157.58..77327.04 rows=363697 width=35) (actual time=739.017..1004.050 rows=325928 loops=1)
                                             Hash Cond: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND (partsupp.ps_partkey = lineitem.l_partkey))
                                             ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..18168.42 rows=800000 width=14) (actual time=0.297..90.846 rows=800000 loops=1)
                                                   Heap Fetches: 0
                                             ->  Hash  (cost=45701.70..45701.70 rows=363697 width=33) (actual time=738.086..738.087 rows=325928 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 25716kB
                                                   ->  Nested Loop  (cost=0.98..45701.70 rows=363697 width=33) (actual time=2.668..660.511 rows=325928 loops=1)
                                                         ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6454.42 rows=12121 width=4) (actual time=0.018..50.814 rows=10880 loops=1)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 189120
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.94 rows=30 width=29) (actual time=0.040..0.052 rows=30 loops=10880)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.221..5.221 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.250..4.011 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.321..0.322 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.312..0.315 rows=25 loops=1)
 Planning Time: 36.616 ms
 Execution Time: 2166.280 ms
(37 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=144323.33..144323.33 rows=1 width=66) (actual time=1425.860..1425.865 rows=1 loops=1)
   ->  Sort  (cost=144323.33..144473.71 rows=60150 width=66) (actual time=1425.859..1425.863 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=142969.96..144022.58 rows=60150 width=66) (actual time=1425.385..1425.790 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=82322.82..136605.26 rows=363697 width=57) (actual time=552.551..1168.959 rows=325928 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=82321.26..133668.66 rows=363697 width=31) (actual time=552.521..1082.576 rows=325928 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=81873.26..132265.55 rows=363697 width=35) (actual time=550.121..1011.577 rows=325928 loops=1)
                                 Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.002..83.683 rows=1500000 loops=1)
                                 ->  Hash  (cost=77327.04..77327.04 rows=363697 width=35) (actual time=549.527..549.530 rows=325928 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 26989kB
                                       ->  Hash Join  (cost=51157.58..77327.04 rows=363697 width=35) (actual time=240.804..478.231 rows=325928 loops=1)
                                             Hash Cond: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND (partsupp.ps_partkey = lineitem.l_partkey))
                                             ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..18168.42 rows=800000 width=14) (actual time=0.020..67.314 rows=800000 loops=1)
                                                   Heap Fetches: 0
                                             ->  Hash  (cost=45701.70..45701.70 rows=363697 width=33) (actual time=240.159..240.160 rows=325928 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 25716kB
                                                   ->  Nested Loop  (cost=0.98..45701.70 rows=363697 width=33) (actual time=0.030..171.009 rows=325928 loops=1)
                                                         ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6454.42 rows=12121 width=4) (actual time=0.017..36.426 rows=10880 loops=1)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 189120
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.94 rows=30 width=29) (actual time=0.003..0.009 rows=30 loops=10880)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.392..2.392 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.008..1.336 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.016..0.016 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.007..0.010 rows=25 loops=1)
 Planning Time: 4.552 ms
 Execution Time: 1426.600 ms
(37 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=161856.40..161856.45 rows=20 width=202) (actual time=1516.462..1516.469 rows=20 loops=1)
   ->  Sort  (cost=161856.40..161998.80 rows=56959 width=202) (actual time=1516.461..1516.466 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=159628.76..160340.74 rows=56959 width=202) (actual time=1486.489..1505.332 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Hash Join  (cost=35598.29..158916.77 rows=56959 width=182) (actual time=609.589..1402.684 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=35596.72..158740.34 rows=56959 width=160) (actual time=609.367..1378.792 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=28624.72..151618.83 rows=56959 width=16) (actual time=517.508..1251.076 rows=114347 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..119101.58 rows=1483073 width=16) (actual time=0.504..566.195 rows=1478870 loops=1)
                                       Index Cond: (l_returnflag = 'R'::bpchar)
                                       Heap Fetches: 0
                                 ->  Hash  (cost=27904.05..27904.05 rows=57609 width=8) (actual time=516.718..516.719 rows=57111 loops=1)
                                       Buckets: 65536  Batches: 1  Memory Usage: 2743kB
                                       ->  Bitmap Heap Scan on orders  (cost=908.92..27904.05 rows=57609 width=8) (actual time=11.777..500.771 rows=57111 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=23377
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..894.52 rows=57609 width=0) (actual time=8.494..8.494 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=91.540..91.540 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.340..50.834 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.217..0.217 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.199..0.205 rows=25 loops=1)
 Planning Time: 26.762 ms
 Execution Time: 1517.685 ms
(30 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=161856.40..161856.45 rows=20 width=202) (actual time=751.203..751.209 rows=20 loops=1)
   ->  Sort  (cost=161856.40..161998.80 rows=56959 width=202) (actual time=751.201..751.206 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=159628.76..160340.74 rows=56959 width=202) (actual time=720.770..739.643 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Hash Join  (cost=35598.29..158916.77 rows=56959 width=182) (actual time=110.411..648.333 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=35596.72..158740.34 rows=56959 width=160) (actual time=110.392..626.022 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=28624.72..151618.83 rows=56959 width=16) (actual time=45.519..527.293 rows=114347 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..119101.58 rows=1483073 width=16) (actual time=0.021..336.482 rows=1478870 loops=1)
                                       Index Cond: (l_returnflag = 'R'::bpchar)
                                       Heap Fetches: 0
                                 ->  Hash  (cost=27904.05..27904.05 rows=57609 width=8) (actual time=45.241..45.242 rows=57111 loops=1)
                                       Buckets: 65536  Batches: 1  Memory Usage: 2743kB
                                       ->  Bitmap Heap Scan on orders  (cost=908.92..27904.05 rows=57609 width=8) (actual time=6.904..37.941 rows=57111 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=23377
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..894.52 rows=57609 width=0) (actual time=4.271..4.271 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=64.567..64.568 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.005..25.653 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.014..0.015 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.006..0.009 rows=25 loops=1)
 Planning Time: 1.632 ms
 Execution Time: 751.672 ms
(30 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29188.63..29188.63 rows=1 width=36) (actual time=742.048..742.053 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=14020.21..14020.23 rows=1 width=32) (actual time=27.532..27.534 rows=1 loops=1)
           ->  Nested Loop  (cost=7.81..13780.21 rows=32000 width=10) (actual time=0.767..19.995 rows=32880 loops=1)
                 ->  Nested Loop  (cost=7.38..234.45 rows=400 width=4) (actual time=0.759..1.001 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=7.38..229.14 rows=400 width=8) (actual time=0.750..0.942 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.711..0.711 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..33.06 rows=80 width=14) (actual time=0.003..0.037 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=15168.40..15195.07 rows=10667 width=36) (actual time=742.047..742.049 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=14555.07..15115.07 rows=10667 width=36) (actual time=731.293..741.898 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=0.42..13995.07 rows=32000 width=14) (actual time=0.980..673.409 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..449.31 rows=400 width=4) (actual time=0.638..4.287 rows=411 loops=1)
                           Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                           Rows Removed by Join Filter: 9589
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.291..0.293 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.252..3.036 rows=10000 loops=1)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..33.06 rows=80 width=18) (actual time=0.091..1.610 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 17.651 ms
 Execution Time: 743.761 ms
(34 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29188.63..29188.63 rows=1 width=36) (actual time=83.553..83.558 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=14020.21..14020.23 rows=1 width=32) (actual time=26.418..26.420 rows=1 loops=1)
           ->  Nested Loop  (cost=7.81..13780.21 rows=32000 width=10) (actual time=0.056..18.817 rows=32880 loops=1)
                 ->  Nested Loop  (cost=7.38..234.45 rows=400 width=4) (actual time=0.050..0.291 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=7.38..229.14 rows=400 width=8) (actual time=0.040..0.231 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.024..0.024 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..33.06 rows=80 width=14) (actual time=0.003..0.036 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=15168.40..15195.07 rows=10667 width=36) (actual time=83.551..83.553 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=14555.07..15115.07 rows=10667 width=36) (actual time=72.818..83.412 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=0.42..13995.07 rows=32000 width=14) (actual time=0.039..28.341 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..449.31 rows=400 width=4) (actual time=0.033..1.802 rows=411 loops=1)
                           Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                           Rows Removed by Join Filter: 9589
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.008..0.649 rows=10000 loops=1)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..33.06 rows=80 width=18) (actual time=0.004..0.055 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.334 ms
 Execution Time: 83.906 ms
(34 rows)

query 12 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=68235.35..68235.35 rows=1 width=27) (actual time=578.175..578.177 rows=1 loops=1)
   ->  Sort  (cost=68235.35..68235.37 rows=7 width=27) (actual time=578.174..578.175 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=68235.24..68235.31 rows=7 width=27) (actual time=578.152..578.154 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Hash Join  (cost=15050.55..67723.77 rows=29227 width=27) (actual time=93.002..566.355 rows=30953 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.638..286.510 rows=1500000 loops=1)
                     ->  Hash  (cost=14685.21..14685.21 rows=29227 width=15) (actual time=92.040..92.040 rows=30953 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1707kB
                           ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..14685.21 rows=29227 width=15) (actual time=0.401..86.679 rows=30953 loops=1)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 77481
                                 Heap Fetches: 0
 Planning Time: 19.387 ms
 Execution Time: 579.164 ms
(18 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=68235.35..68235.35 rows=1 width=27) (actual time=330.387..330.389 rows=1 loops=1)
   ->  Sort  (cost=68235.35..68235.37 rows=7 width=27) (actual time=330.386..330.387 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=68235.24..68235.31 rows=7 width=27) (actual time=330.365..330.367 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Hash Join  (cost=15050.55..67723.77 rows=29227 width=27) (actual time=64.514..321.161 rows=30953 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.008..78.075 rows=1500000 loops=1)
                     ->  Hash  (cost=14685.21..14685.21 rows=29227 width=15) (actual time=64.458..64.458 rows=30953 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1707kB
                           ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..14685.21 rows=29227 width=15) (actual time=0.023..60.014 rows=30953 loops=1)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 77481
                                 Heap Fetches: 0
 Planning Time: 1.152 ms
 Execution Time: 330.446 ms
(18 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=65023.89..65023.89 rows=1 width=16) (actual time=1436.987..1436.990 rows=1 loops=1)
   ->  Sort  (cost=65023.89..65024.39 rows=200 width=16) (actual time=1436.986..1436.988 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=65020.89..65022.89 rows=200 width=16) (actual time=1436.962..1436.969 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=61270.89..62770.89 rows=150000 width=12) (actual time=1396.717..1419.988 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4953.42..53771.64 rows=1499850 width=8) (actual time=34.010..1040.326 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.564..618.813 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=33.078..33.078 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.284..16.426 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 14.522 ms
 Execution Time: 1438.732 ms
(19 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=65023.89..65023.89 rows=1 width=16) (actual time=1251.192..1251.195 rows=1 loops=1)
   ->  Sort  (cost=65023.89..65024.39 rows=200 width=16) (actual time=1251.191..1251.193 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=65020.89..65022.89 rows=200 width=16) (actual time=1251.167..1251.174 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=61270.89..62770.89 rows=150000 width=12) (actual time=1210.787..1233.852 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4953.42..53771.64 rows=1499850 width=8) (actual time=28.619..870.020 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.012..473.068 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=28.189..28.190 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.023..12.782 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.939 ms
 Execution Time: 1252.298 ms
(19 rows)

query 14 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=87141.47..87141.48 rows=1 width=32) (actual time=821.515..821.517 rows=1 loops=1)
   ->  Aggregate  (cost=87141.47..87141.48 rows=1 width=32) (actual time=821.514..821.515 rows=1 loops=1)
         ->  Hash Join  (cost=10004.75..85773.37 rows=78177 width=33) (actual time=106.928..770.380 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1405.75..76969.15 rows=78177 width=16) (actual time=17.770..638.377 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1386.20 rows=78177 width=0) (actual time=12.328..12.328 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=88.909..88.909 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.316..55.231 rows=200000 loops=1)
 Planning Time: 21.558 ms
 Execution Time: 822.444 ms
(14 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=87141.47..87141.48 rows=1 width=32) (actual time=177.021..177.023 rows=1 loops=1)
   ->  Aggregate  (cost=87141.47..87141.48 rows=1 width=32) (actual time=177.019..177.021 rows=1 loops=1)
         ->  Hash Join  (cost=10004.75..85773.37 rows=78177 width=33) (actual time=69.857..147.410 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1405.75..76969.15 rows=78177 width=16) (actual time=12.595..62.948 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1386.20 rows=78177 width=0) (actual time=7.575..7.575 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=57.048..57.049 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.010..26.643 rows=200000 loops=1)
 Planning Time: 1.068 ms
 Execution Time: 177.086 ms
(14 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=247796.67..247805.87 rows=1 width=103) (actual time=1457.911..1457.914 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=123041.32..123041.33 rows=1 width=32) (actual time=203.886..203.887 rows=1 loops=1)
           ->  HashAggregate  (cost=122792.67..122916.99 rows=9946 width=36) (actual time=200.645..203.253 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4277.89..120410.76 rows=238191 width=16) (actual time=26.946..92.946 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4218.34 rows=238191 width=0) (actual time=18.086..18.086 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=124755.35..125215.10 rows=50 width=103) (actual time=1457.910..1457.911 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..434.29 rows=10000 width=71) (actual time=0.454..4.325 rows=8449 loops=1)
         ->  Sort  (cost=124755.06..124755.19 rows=50 width=36) (actual time=1453.091..1453.092 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=124579.10..124753.65 rows=50 width=36) (actual time=1450.677..1453.085 rows=1 loops=1)
                     ->  HashAggregate  (cost=124579.10..124753.15 rows=50 width=36) (actual time=1450.676..1453.083 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=4277.89..120410.76 rows=238191 width=16) (actual time=40.154..1062.490 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4218.34 rows=238191 width=0) (actual time=30.397..30.397 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 17.861 ms
 Execution Time: 1458.917 ms
(28 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=247796.67..247805.87 rows=1 width=103) (actual time=440.584..440.587 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=123041.32..123041.33 rows=1 width=32) (actual time=201.801..201.803 rows=1 loops=1)
           ->  HashAggregate  (cost=122792.67..122916.99 rows=9946 width=36) (actual time=198.536..201.178 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4277.89..120410.76 rows=238191 width=16) (actual time=26.543..91.580 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4218.34 rows=238191 width=0) (actual time=17.694..17.694 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=124755.35..125215.10 rows=50 width=103) (actual time=440.582..440.583 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..434.29 rows=10000 width=71) (actual time=0.006..1.311 rows=8449 loops=1)
         ->  Sort  (cost=124755.06..124755.19 rows=50 width=36) (actual time=438.798..438.799 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=124579.10..124753.65 rows=50 width=36) (actual time=436.336..438.794 rows=1 loops=1)
                     ->  HashAggregate  (cost=124579.10..124753.15 rows=50 width=36) (actual time=436.335..438.792 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=4277.89..120410.76 rows=238191 width=16) (actual time=28.382..121.814 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4218.34 rows=238191 width=0) (actual time=19.393..19.393 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 1.118 ms
 Execution Time: 440.959 ms
(28 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=34935.62..34935.63 rows=1 width=44) (actual time=607.717..607.720 rows=1 loops=1)
   ->  Sort  (cost=34935.62..34975.56 rows=15973 width=44) (actual time=607.716..607.718 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=33955.55..34855.76 rows=15973 width=44) (actual time=560.114..603.921 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=33955.55..34103.65 rows=59238 width=40) (actual time=560.093..567.712 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9817.66..29259.69 rows=59238 width=40) (actual time=85.711..295.322 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..18740.43 rows=400000 width=8) (actual time=5.557..142.510 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.985..5.021 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29619 width=40) (actual time=80.116..80.117 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29619 width=40) (actual time=0.372..73.500 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning Time: 15.865 ms
 Execution Time: 608.601 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=34935.62..34935.63 rows=1 width=44) (actual time=550.043..550.047 rows=1 loops=1)
   ->  Sort  (cost=34935.62..34975.56 rows=15973 width=44) (actual time=550.042..550.045 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=33955.55..34855.76 rows=15973 width=44) (actual time=502.661..546.229 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=33955.55..34103.65 rows=59238 width=40) (actual time=502.641..510.276 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9817.66..29259.69 rows=59238 width=40) (actual time=49.596..238.737 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..18740.43 rows=400000 width=8) (actual time=2.299..120.969 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.087..2.067 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29619 width=40) (actual time=47.269..47.270 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29619 width=40) (actual time=0.007..42.215 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning Time: 0.819 ms
 Execution Time: 550.100 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=179457.97..179457.98 rows=1 width=32) (actual time=2070.992..2070.995 rows=1 loops=1)
   ->  Aggregate  (cost=179457.97..179457.98 rows=1 width=32) (actual time=2070.990..2070.993 rows=1 loops=1)
         ->  Nested Loop  (cost=7108.60..179452.48 rows=2197 width=8) (actual time=61.810..2070.709 rows=592 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=7108.04..178820.93 rows=220 width=40) (actual time=61.099..1972.588 rows=208 loops=1)
                     Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Sort  (cost=7107.61..7108.16 rows=221 width=4) (actual time=54.341..54.458 rows=208 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 34kB
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=221 width=4) (actual time=1.066..54.255 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
                     ->  GroupAggregate  (cost=0.43..169224.81 rows=198817 width=36) (actual time=0.648..1901.447 rows=199275 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136237.02 rows=6001106 width=9) (actual time=0.585..1118.670 rows=5979328 loops=1)
                                 Heap Fetches: 0
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.75 rows=10 width=17) (actual time=0.435..0.469 rows=3 loops=208)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning Time: 18.281 ms
 Execution Time: 2071.801 ms
(21 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=179457.97..179457.98 rows=1 width=32) (actual time=1746.831..1746.833 rows=1 loops=1)
   ->  Aggregate  (cost=179457.97..179457.98 rows=1 width=32) (actual time=1746.830..1746.831 rows=1 loops=1)
         ->  Nested Loop  (cost=7108.60..179452.48 rows=2197 width=8) (actual time=30.418..1746.745 rows=592 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=7108.04..178820.93 rows=220 width=40) (actual time=30.402..1745.022 rows=208 loops=1)
                     Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Sort  (cost=7107.61..7108.16 rows=221 width=4) (actual time=25.023..25.053 rows=208 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 34kB
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=221 width=4) (actual time=0.094..24.980 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
                     ->  GroupAggregate  (cost=0.43..169224.81 rows=198817 width=36) (actual time=0.036..1705.727 rows=199275 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136237.02 rows=6001106 width=9) (actual time=0.012..936.541 rows=5979328 loops=1)
                                 Heap Fetches: 0
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.75 rows=10 width=17) (actual time=0.007..0.007 rows=3 loops=208)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning Time: 1.818 ms
 Execution Time: 1746.891 ms
(21 rows)

query 18 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=820172.31..820172.56 rows=100 width=71) (actual time=2842.690..2842.693 rows=9 loops=1)
   ->  Sort  (cost=820172.31..825174.15 rows=2000737 width=71) (actual time=2842.688..2842.691 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=698688.99..743705.58 rows=2000737 width=71) (actual time=2842.658..2842.674 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=698688.99..703690.84 rows=2000737 width=44) (actual time=2842.651..2842.656 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=6977.48..445328.36 rows=2000737 width=44) (actual time=713.817..2842.625 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=5.48..433104.28 rows=2000737 width=25) (actual time=643.308..2772.085 rows=63 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Join  (cost=0.86..260613.19 rows=500092 width=24) (actual time=489.784..2187.587 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=1.132..311.618 rows=1201687 loops=1)
                                       ->  GroupAggregate  (cost=0.43..188746.69 rows=500092 width=4) (actual time=385.541..1808.912 rows=9 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 1499991
                                             ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136237.02 rows=6001106 width=9) (actual time=0.289..670.474 rows=6001215 loops=1)
                                                   Heap Fetches: 0
                                 ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136237.02 rows=6001106 width=9) (actual time=0.014..379.125 rows=4807580 loops=1)
                                       Heap Fetches: 0
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=70.196..70.197 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.539..44.342 rows=150000 loops=1)
 Planning Time: 27.461 ms
 Execution Time: 2843.506 ms
(29 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=820172.31..820172.56 rows=100 width=71) (actual time=2456.246..2456.250 rows=9 loops=1)
   ->  Sort  (cost=820172.31..825174.15 rows=2000737 width=71) (actual time=2456.245..2456.248 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=698688.99..743705.58 rows=2000737 width=71) (actual time=2456.215..2456.231 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=698688.99..703690.84 rows=2000737 width=44) (actual time=2456.209..2456.214 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=6977.48..445328.36 rows=2000737 width=44) (actual time=593.628..2456.185 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=5.48..433104.28 rows=2000737 width=25) (actual time=551.714..2414.244 rows=63 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Join  (cost=0.86..260613.19 rows=500092 width=24) (actual time=398.635..1831.179 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.011..159.088 rows=1201687 loops=1)
                                       ->  GroupAggregate  (cost=0.43..188746.69 rows=500092 width=4) (actual time=339.574..1606.532 rows=9 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 1499991
                                             ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136237.02 rows=6001106 width=9) (actual time=0.008..495.646 rows=6001215 loops=1)
                                                   Heap Fetches: 0
                                 ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136237.02 rows=6001106 width=9) (actual time=0.011..378.232 rows=4807580 loops=1)
                                       Heap Fetches: 0
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=41.598..41.598 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.009..18.685 rows=150000 loops=1)
 Planning Time: 1.499 ms
 Execution Time: 2456.328 ms
(29 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=14214.70..14214.71 rows=1 width=32) (actual time=353.538..353.540 rows=1 loops=1)
   ->  Aggregate  (cost=14214.70..14214.71 rows=1 width=32) (actual time=353.537..353.538 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..14213.88 rows=109 width=12) (actual time=2.124..353.247 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=469 width=30) (actual time=1.283..85.520 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.43 rows=1 width=21) (actual time=0.503..0.527 rows=0 loops=507)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning Time: 24.514 ms
 Execution Time: 354.097 ms
(13 rows)

SET
SET
SET


 Limit  (cost=14214.70..14214.71 rows=1 width=32) (actual time=45.978..45.980 rows=1 loops=1)
   ->  Aggregate  (cost=14214.70..14214.71 rows=1 width=32) (actual time=45.977..45.978 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..14213.88 rows=109 width=12) (actual time=0.231..45.899 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=469 width=30) (actual time=0.184..41.477 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.43 rows=1 width=21) (actual time=0.008..0.008 rows=0 loops=507)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning Time: 2.925 ms
 Execution Time: 46.021 ms
(13 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=280419.10..280419.11 rows=1 width=51) (actual time=3369.330..3369.333 rows=1 loops=1)
   ->  Sort  (cost=280419.10..280419.11 rows=1 width=51) (actual time=3369.328..3369.331 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=246250.92..280419.09 rows=1 width=51) (actual time=3199.072..3369.132 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.527..3.844 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.216..0.218 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.304..2.837 rows=10000 loops=1)
               ->  Materialize  (cost=246250.92..279963.78 rows=1 width=8) (actual time=6.000..7.443 rows=4371 loops=438)
                     ->  Merge Join  (cost=246250.92..279963.78 rows=1 width=8) (actual time=2628.031..3195.894 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=246250.07..262836.18 rows=487961 width=40) (actual time=2627.672..3091.077 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=246250.07..248566.75 rows=926669 width=13) (actual time=2627.660..2736.696 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16636.79..143096.82 rows=926669 width=13) (actual time=124.643..2213.537 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16405.12 rows=926669 width=0) (actual time=108.145..108.146 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.84..10599.32 rows=8080 width=16) (actual time=0.056..61.617 rows=23762 loops=1)
                                 ->  Nested Loop  (cost=0.84..10579.12 rows=8080 width=16) (actual time=0.053..59.323 rows=8748 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6454.42 rows=2020 width=4) (actual time=0.025..29.657 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..2.00 rows=4 width=12) (actual time=0.012..0.013 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 25.897 ms
 Execution Time: 3372.922 ms
(40 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=280419.10..280419.11 rows=1 width=51) (actual time=1397.554..1397.557 rows=1 loops=1)
   ->  Sort  (cost=280419.10..280419.11 rows=1 width=51) (actual time=1397.553..1397.555 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=246250.92..280419.09 rows=1 width=51) (actual time=1228.757..1397.395 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.018..1.649 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.008..0.584 rows=10000 loops=1)
               ->  Materialize  (cost=246250.92..279963.78 rows=1 width=8) (actual time=1.607..2.945 rows=4371 loops=438)
                     ->  Merge Join  (cost=246250.92..279963.78 rows=1 width=8) (actual time=703.958..1226.226 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=246250.07..262836.18 rows=487961 width=40) (actual time=703.622..1154.648 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=246250.07..248566.75 rows=926669 width=13) (actual time=703.610..811.460 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16636.79..143096.82 rows=926669 width=13) (actual time=89.832..326.895 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16405.12 rows=926669 width=0) (actual time=74.026..74.026 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.84..10599.32 rows=8080 width=16) (actual time=0.039..28.193 rows=23762 loops=1)
                                 ->  Nested Loop  (cost=0.84..10579.12 rows=8080 width=16) (actual time=0.036..26.172 rows=8748 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6454.42 rows=2020 width=4) (actual time=0.025..19.136 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..2.00 rows=4 width=12) (actual time=0.002..0.002 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 1.852 ms
 Execution Time: 1400.438 ms
(40 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=103800.75..103800.76 rows=1 width=34) (actual time=1598.841..1598.855 rows=100 loops=1)
   ->  Sort  (cost=103800.75..103800.76 rows=1 width=34) (actual time=1598.840..1598.848 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=103800.72..103800.74 rows=1 width=34) (actual time=1597.837..1598.433 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=103800.72..103800.73 rows=1 width=26) (actual time=1597.830..1597.988 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=56060.66..103800.71 rows=1 width=26) (actual time=662.809..1584.285 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 2768
                           ->  Nested Loop  (cost=56060.22..103798.27 rows=1 width=38) (actual time=662.771..1265.640 rows=6909 loops=1)
                                 ->  Merge Anti Join  (cost=56059.80..103795.92 rows=1 width=34) (actual time=662.759..1201.331 rows=14289 loops=1)
                                       Merge Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 55738
                                       ->  Sort  (cost=56059.37..56259.40 rows=80015 width=34) (actual time=662.627..673.926 rows=159165 loops=1)
                                             Sort Key: l1.l_orderkey
                                             Sort Method: quicksort  Memory: 18579kB
                                             ->  Hash Join  (cost=239.88..49542.95 rows=80015 width=34) (actual time=5.181..636.862 rows=159165 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..41001.97 rows=2000369 width=8) (actual time=0.292..385.947 rows=3793296 loops=1)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=234.45..234.45 rows=400 width=30) (actual time=4.870..4.871 rows=421 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=7.38..234.45 rows=400 width=30) (actual time=1.106..4.775 rows=421 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.201..0.204 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=7.38..229.14 rows=400 width=34) (actual time=0.898..4.490 rows=421 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.616..0.616 rows=421 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..41001.97 rows=2000369 width=8) (actual time=0.016..319.761 rows=3797105 loops=1)
                                             Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=14289)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.045..0.046 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 23.800 ms
 Execution Time: 1599.603 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=103800.75..103800.76 rows=1 width=34) (actual time=1145.910..1145.924 rows=100 loops=1)
   ->  Sort  (cost=103800.75..103800.76 rows=1 width=34) (actual time=1145.909..1145.916 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=103800.72..103800.74 rows=1 width=34) (actual time=1144.923..1145.522 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=103800.72..103800.73 rows=1 width=26) (actual time=1144.917..1145.075 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=56060.66..103800.71 rows=1 width=26) (actual time=574.024..1132.215 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 2768
                           ->  Nested Loop  (cost=56060.22..103798.27 rows=1 width=38) (actual time=574.001..1115.761 rows=6909 loops=1)
                                 ->  Merge Anti Join  (cost=56059.80..103795.92 rows=1 width=34) (actual time=573.990..1088.400 rows=14289 loops=1)
                                       Merge Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 55738
                                       ->  Sort  (cost=56059.37..56259.40 rows=80015 width=34) (actual time=573.861..582.937 rows=159165 loops=1)
                                             Sort Key: l1.l_orderkey
                                             Sort Method: quicksort  Memory: 18579kB
                                             ->  Hash Join  (cost=239.88..49542.95 rows=80015 width=34) (actual time=0.428..550.510 rows=159165 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..41001.97 rows=2000369 width=8) (actual time=0.011..308.125 rows=3793296 loops=1)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=234.45..234.45 rows=400 width=30) (actual time=0.403..0.405 rows=421 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=7.38..234.45 rows=400 width=30) (actual time=0.057..0.339 rows=421 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=7.38..229.14 rows=400 width=34) (actual time=0.048..0.284 rows=421 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.029..0.029 rows=421 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..41001.97 rows=2000369 width=8) (actual time=0.015..306.525 rows=3797105 loops=1)
                                             Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=14289)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 2.558 ms
 Execution Time: 1146.002 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16184.31..16184.34 rows=1 width=72) (actual time=236.765..236.767 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.41..7546.42 rows=1 width=32) (actual time=103.831..103.832 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4764 width=6) (actual time=0.008..100.108 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8637.89..8658.43 rows=747 width=72) (actual time=236.764..236.764 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8637.89..8639.76 rows=747 width=38) (actual time=236.562..236.596 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8602.24 rows=747 width=38) (actual time=104.308..234.214 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=104.284..160.936 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.38 rows=17 width=4) (actual time=0.003..0.003 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 16.962 ms
 Execution Time: 237.353 ms
(20 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16184.31..16184.34 rows=1 width=72) (actual time=165.277..165.278 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.41..7546.42 rows=1 width=32) (actual time=75.676..75.677 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4764 width=6) (actual time=0.007..72.413 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8637.89..8658.43 rows=747 width=72) (actual time=165.276..165.276 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8637.89..8639.76 rows=747 width=38) (actual time=165.069..165.104 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8602.24 rows=747 width=38) (actual time=75.715..163.036 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=75.699..127.310 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.38 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 0.659 ms
 Execution Time: 165.319 ms
(20 rows)

