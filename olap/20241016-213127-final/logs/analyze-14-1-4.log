query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184157.80..184158.43 rows=1 width=236) (actual time=2117.875..2117.945 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184157.80..184161.62 rows=6 width=236) (actual time=2117.874..2117.944 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184157.80..184160.67 rows=24 width=236) (actual time=2117.852..2117.923 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183157.74..183157.75 rows=6 width=236) (actual time=2108.147..2108.147 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=183157.53..183157.66 rows=6 width=236) (actual time=2108.120..2108.128 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 32kB
                           Worker 0:  Batches: 1  Memory Usage: 32kB
                           Worker 1:  Batches: 1  Memory Usage: 32kB
                           Worker 2:  Batches: 1  Memory Usage: 32kB
                           Worker 3:  Batches: 1  Memory Usage: 32kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131312.10 rows=1481298 width=25) (actual time=1.315..428.115 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 23.502 ms
 Execution Time: 2118.352 ms
(25 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184157.80..184158.43 rows=1 width=236) (actual time=1986.875..1986.951 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184157.80..184161.62 rows=6 width=236) (actual time=1986.874..1986.950 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184157.80..184160.67 rows=24 width=236) (actual time=1986.838..1986.917 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183157.74..183157.75 rows=6 width=236) (actual time=1981.660..1981.661 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=183157.53..183157.66 rows=6 width=236) (actual time=1981.633..1981.641 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 32kB
                           Worker 0:  Batches: 1  Memory Usage: 32kB
                           Worker 1:  Batches: 1  Memory Usage: 32kB
                           Worker 2:  Batches: 1  Memory Usage: 32kB
                           Worker 3:  Batches: 1  Memory Usage: 32kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131312.10 rows=1481298 width=25) (actual time=0.032..280.466 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 1.038 ms
 Execution Time: 1987.031 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18273.64..18273.64 rows=1 width=192) (actual time=171.850..171.864 rows=100 loops=1)
   ->  Sort  (cost=18273.64..18273.64 rows=1 width=192) (actual time=171.848..171.856 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=14.58..18273.63 rows=1 width=192) (actual time=6.197..171.491 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.389..0.395 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.191..0.192 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.193..0.195 rows=25 loops=1)
               ->  Materialize  (cost=14.58..18270.93 rows=1 width=170) (actual time=0.421..34.130 rows=489 loops=5)
                     ->  Nested Loop  (cost=14.58..18270.93 rows=1 width=170) (actual time=2.101..169.732 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.30..18269.66 rows=1 width=34) (actual time=1.654..122.930 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5437.33 rows=817 width=30) (actual time=0.291..24.416 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.88..15.70 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.44..13.45 rows=1 width=32) (actual time=0.119..0.119 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.85..13.44 rows=1 width=6) (actual time=0.107..0.117 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..12.33 rows=4 width=10) (actual time=0.087..0.114 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.71..11.71 rows=4 width=10) (actual time=0.085..0.108 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.080..0.082 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..2.30 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.095..0.095 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 22.825 ms
 Execution Time: 171.930 ms
(47 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18273.64..18273.64 rows=1 width=192) (actual time=23.810..23.823 rows=100 loops=1)
   ->  Sort  (cost=18273.64..18273.64 rows=1 width=192) (actual time=23.809..23.816 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=14.58..18273.63 rows=1 width=192) (actual time=0.165..23.273 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.013..0.019 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
               ->  Materialize  (cost=14.58..18270.93 rows=1 width=170) (actual time=0.012..4.589 rows=489 loops=5)
                     ->  Nested Loop  (cost=14.58..18270.93 rows=1 width=170) (actual time=0.057..22.554 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.30..18269.66 rows=1 width=34) (actual time=0.053..21.412 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5437.33 rows=817 width=30) (actual time=0.006..6.754 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.88..15.70 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.44..13.45 rows=1 width=32) (actual time=0.016..0.016 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.85..13.44 rows=1 width=6) (actual time=0.011..0.015 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..12.33 rows=4 width=10) (actual time=0.005..0.013 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.71..11.71 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..2.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.002..0.002 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 2.231 ms
 Execution Time: 23.877 ms
(47 rows)

query 3 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233531.67..233531.70 rows=10 width=44) (actual time=1129.501..1130.945 rows=10 loops=1)
   ->  Sort  (cost=233531.67..234324.38 rows=317085 width=44) (actual time=1129.500..1130.943 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=179993.68..226679.58 rows=317085 width=44) (actual time=1105.445..1128.487 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179993.68..217959.74 rows=317085 width=24) (actual time=1105.431..1111.196 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=178993.62..179191.80 rows=79271 width=24) (actual time=1092.716..1092.994 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 697kB
                           Worker 0:  Sort Method: quicksort  Memory: 688kB
                           Worker 1:  Sort Method: quicksort  Memory: 669kB
                           Worker 2:  Sort Method: quicksort  Memory: 632kB
                           Worker 3:  Sort Method: quicksort  Memory: 662kB
                           ->  Parallel Hash Join  (cost=37918.17..172543.14 rows=79271 width=24) (actual time=237.492..1090.644 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131312.10 rows=815251 width=16) (actual time=0.463..780.840 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37330.06..37330.06 rows=47049 width=12) (actual time=235.596..235.598 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                       ->  Parallel Hash Join  (cost=4534.98..37330.06 rows=47049 width=12) (actual time=18.533..226.157 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=234544 width=16) (actual time=0.386..176.943 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12538 width=4) (actual time=18.035..18.035 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12538 width=4) (actual time=0.080..16.489 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 24.511 ms
 Execution Time: 1131.505 ms
(35 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233531.67..233531.70 rows=10 width=44) (actual time=457.870..460.496 rows=10 loops=1)
   ->  Sort  (cost=233531.67..234324.38 rows=317085 width=44) (actual time=457.869..460.494 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=179993.68..226679.58 rows=317085 width=44) (actual time=434.005..457.993 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179993.68..217959.74 rows=317085 width=24) (actual time=433.991..440.954 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=178993.62..179191.80 rows=79271 width=24) (actual time=429.906..430.181 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 661kB
                           Worker 0:  Sort Method: quicksort  Memory: 689kB
                           Worker 1:  Sort Method: quicksort  Memory: 538kB
                           Worker 2:  Sort Method: quicksort  Memory: 742kB
                           Worker 3:  Sort Method: quicksort  Memory: 718kB
                           ->  Parallel Hash Join  (cost=37918.17..172543.14 rows=79271 width=24) (actual time=101.101..427.575 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131312.10 rows=815251 width=16) (actual time=0.054..245.674 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37330.06..37330.06 rows=47049 width=12) (actual time=99.217..99.219 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8960kB
                                       ->  Parallel Hash Join  (cost=4534.98..37330.06 rows=47049 width=12) (actual time=9.704..90.357 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=234544 width=16) (actual time=0.011..54.472 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12538 width=4) (actual time=8.737..8.738 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12538 width=4) (actual time=0.009..6.576 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 1.627 ms
 Execution Time: 460.779 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29413.81..53532.67 rows=1 width=24) (actual time=868.224..871.414 rows=1 loops=1)
   ->  GroupAggregate  (cost=29413.81..150008.11 rows=5 width=24) (actual time=868.223..871.412 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29413.81..149720.90 rows=57433 width=16) (actual time=439.584..867.903 rows=10479 loops=1)
               ->  Gather Merge  (cost=29413.38..36208.07 rows=57433 width=20) (actual time=439.019..447.838 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28413.34..28459.65 rows=18527 width=20) (actual time=430.953..431.363 rows=3782 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1465kB
                           Worker 0:  Sort Method: quicksort  Memory: 1487kB
                           Worker 1:  Sort Method: quicksort  Memory: 1490kB
                           Worker 2:  Sort Method: quicksort  Memory: 1469kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=691.12..27100.02 rows=18527 width=20) (actual time=4.681..425.055 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5773
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..676.76 rows=57433 width=0) (actual time=7.158..7.158 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.43..2.22 rows=1 width=4) (actual time=0.036..0.036 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Heap Fetches: 0
 Planning Time: 18.899 ms
 Execution Time: 871.503 ms
(23 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29413.81..53532.67 rows=1 width=24) (actual time=63.330..68.833 rows=1 loops=1)
   ->  GroupAggregate  (cost=29413.81..150008.11 rows=5 width=24) (actual time=63.328..68.831 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29413.81..149720.90 rows=57433 width=16) (actual time=33.671..67.368 rows=10479 loops=1)
               ->  Gather Merge  (cost=29413.38..36208.07 rows=57433 width=20) (actual time=33.627..41.976 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28413.34..28459.65 rows=18527 width=20) (actual time=30.698..30.992 rows=3790 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1475kB
                           Worker 0:  Sort Method: quicksort  Memory: 1481kB
                           Worker 1:  Sort Method: quicksort  Memory: 1479kB
                           Worker 2:  Sort Method: quicksort  Memory: 1477kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=691.12..27100.02 rows=18527 width=20) (actual time=6.388..27.057 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5810
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..676.76 rows=57433 width=0) (actual time=5.503..5.504 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.43..2.22 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Heap Fetches: 0
 Planning Time: 1.435 ms
 Execution Time: 68.882 ms
(23 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=71529.25..71529.25 rows=1 width=58) (actual time=773.345..780.043 rows=1 loops=1)
   ->  Sort  (cost=71529.25..71529.31 rows=25 width=58) (actual time=773.344..780.040 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=71489.80..71529.12 rows=25 width=58) (actual time=772.615..780.029 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=71489.80..71528.25 rows=75 width=58) (actual time=772.423..780.007 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=70489.76..70519.39 rows=25 width=58) (actual time=765.048..765.757 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=70489.76..70495.62 rows=2346 width=38) (actual time=764.866..764.948 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 196kB
                                 Worker 0:  Sort Method: quicksort  Memory: 199kB
                                 Worker 1:  Sort Method: quicksort  Memory: 195kB
                                 Worker 2:  Sort Method: quicksort  Memory: 193kB
                                 ->  Hash Join  (cost=7949.32..70358.43 rows=2346 width=38) (actual time=49.390..763.438 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7476.32..69577.24 rows=58702 width=50) (actual time=44.889..748.440 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7475.88..35043.71 rows=14674 width=38) (actual time=44.313..510.144 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2735.75..29967.29 rows=73370 width=8) (actual time=19.779..462.274 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6465
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2678.89 rows=227446 width=0) (actual time=15.798..15.798 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=24.404..24.406 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2400kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.281..21.996 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.091..17.197 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.120..0.122 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.112..0.119 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.049..0.051 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.057..0.057 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.054..0.055 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.43..2.31 rows=4 width=20) (actual time=0.019..0.020 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.759..3.759 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.073..2.312 rows=10000 loops=4)
 Planning Time: 28.540 ms
 Execution Time: 780.130 ms
(50 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=71529.25..71529.25 rows=1 width=58) (actual time=127.490..138.320 rows=1 loops=1)
   ->  Sort  (cost=71529.25..71529.31 rows=25 width=58) (actual time=127.488..138.318 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=71489.80..71529.12 rows=25 width=58) (actual time=126.799..138.307 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=71489.80..71528.25 rows=75 width=58) (actual time=126.608..138.285 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=70489.76..70519.39 rows=25 width=58) (actual time=123.362..124.061 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=70489.76..70495.62 rows=2346 width=38) (actual time=123.184..123.267 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 190kB
                                 Worker 0:  Sort Method: quicksort  Memory: 194kB
                                 Worker 1:  Sort Method: quicksort  Memory: 199kB
                                 Worker 2:  Sort Method: quicksort  Memory: 200kB
                                 ->  Hash Join  (cost=7949.32..70358.43 rows=2346 width=38) (actual time=31.677..122.385 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7476.32..69577.24 rows=58702 width=50) (actual time=28.667..111.876 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7475.88..35043.71 rows=14674 width=38) (actual time=28.632..67.294 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2735.75..29967.29 rows=73370 width=8) (actual time=16.502..41.685 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6532
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2678.89 rows=227446 width=0) (actual time=12.779..12.779 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.998..12.000 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.100..9.734 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.006..3.498 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.087..0.089 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.080..0.086 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.009..0.010 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.43..2.31 rows=4 width=20) (actual time=0.003..0.003 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.925..2.925 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.017..1.537 rows=10000 loops=4)
 Planning Time: 5.368 ms
 Execution Time: 138.400 ms
(50 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116478.30..116478.31 rows=1 width=32) (actual time=1078.960..1086.360 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=116478.30..116478.31 rows=1 width=32) (actual time=1078.959..1086.357 rows=1 loops=1)
         ->  Gather  (cost=116477.87..116478.28 rows=4 width=32) (actual time=1078.945..1086.346 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=115477.87..115477.88 rows=1 width=32) (actual time=1069.300..1069.300 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=23142.65..115326.97 rows=30180 width=12) (actual time=142.371..1050.545 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13209
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..23112.47 rows=120722 width=0) (actual time=138.920..138.920 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 15.242 ms
 Execution Time: 1087.717 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116478.30..116478.31 rows=1 width=32) (actual time=213.311..220.374 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=116478.30..116478.31 rows=1 width=32) (actual time=213.309..220.371 rows=1 loops=1)
         ->  Gather  (cost=116477.87..116478.28 rows=4 width=32) (actual time=210.244..220.352 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=115477.87..115477.88 rows=1 width=32) (actual time=207.036..207.038 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=23142.65..115326.97 rows=30180 width=12) (actual time=119.287..199.009 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=14399
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..23112.47 rows=120722 width=0) (actual time=110.878..110.878 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.988 ms
 Execution Time: 220.650 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141473.28..141631.89 rows=1 width=116) (actual time=2890.435..2891.592 rows=1 loops=1)
   ->  GroupAggregate  (cost=141473.28..1114186.75 rows=6133 width=116) (actual time=2890.434..2891.590 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141473.28..1114002.76 rows=6133 width=96) (actual time=824.642..2888.915 rows=1359 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 32671
               ->  Nested Loop  (cost=141472.86..772823.37 rows=153317 width=76) (actual time=824.043..2446.828 rows=34030 loops=1)
                     ->  Gather Merge  (cost=141472.44..159829.79 rows=153317 width=76) (actual time=822.772..861.555 rows=34030 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140472.38..140568.20 rows=38329 width=76) (actual time=809.558..810.496 rows=7221 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 5126kB
                                 Worker 0:  Sort Method: quicksort  Memory: 4790kB
                                 Worker 1:  Sort Method: quicksort  Memory: 4681kB
                                 Worker 2:  Sort Method: quicksort  Memory: 4757kB
                                 Worker 3:  Sort Method: quicksort  Memory: 4839kB
                                 ->  Hash Join  (cost=381.77..137554.36 rows=38329 width=76) (actual time=3.319..783.667 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135062.52 rows=460514 width=24) (actual time=0.364..728.605 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.875..2.877 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.199..2.738 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.119..1.494 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.074..0.076 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.067..0.074 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.055..0.057 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.005 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=8) (actual time=0.046..0.046 rows=1 loops=34030)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.21 rows=1 width=8) (actual time=0.012..0.012 rows=1 loops=34030)
                     Index Cond: (c_custkey = orders.o_custkey)
                     Heap Fetches: 0
 Planning Time: 26.098 ms
 Execution Time: 2892.026 ms
(46 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141473.28..141631.89 rows=1 width=116) (actual time=511.438..512.531 rows=1 loops=1)
   ->  GroupAggregate  (cost=141473.28..1114186.75 rows=6133 width=116) (actual time=511.437..512.529 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141473.28..1114002.76 rows=6133 width=96) (actual time=345.474..511.309 rows=1359 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 32671
               ->  Nested Loop  (cost=141472.86..772823.37 rows=153317 width=76) (actual time=345.450..442.464 rows=34030 loops=1)
                     ->  Gather Merge  (cost=141472.44..159829.79 rows=153317 width=76) (actual time=345.403..364.837 rows=34030 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140472.38..140568.20 rows=38329 width=76) (actual time=337.805..338.474 rows=7187 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 4272kB
                                 Worker 0:  Sort Method: quicksort  Memory: 5003kB
                                 Worker 1:  Sort Method: quicksort  Memory: 6433kB
                                 Worker 2:  Sort Method: quicksort  Memory: 6574kB
                                 Worker 3:  Sort Method: quicksort  Memory: 3447kB
                                 ->  Hash Join  (cost=381.77..137554.36 rows=38329 width=76) (actual time=2.496..309.143 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135062.52 rows=460514 width=24) (actual time=0.038..251.732 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.379..2.382 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.033..2.249 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.006..0.715 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.024..0.025 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.018..0.023 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.010 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.004 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34030)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.21 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34030)
                     Index Cond: (c_custkey = orders.o_custkey)
                     Heap Fetches: 0
 Planning Time: 3.735 ms
 Execution Time: 512.618 ms
(46 rows)

query 8 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41772.45..41786.50 rows=1 width=64) (actual time=700.722..704.749 rows=1 loops=1)
   ->  GroupAggregate  (cost=41772.45..75433.60 rows=2396 width=64) (actual time=700.720..704.747 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41772.45..75337.76 rows=2396 width=70) (actual time=318.988..702.734 rows=1235 loops=1)
               ->  Nested Loop  (cost=41772.30..75244.12 rows=2396 width=20) (actual time=318.965..700.575 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41772.02..70282.19 rows=2396 width=20) (actual time=318.686..682.598 rows=1235 loops=1)
                           Join Filter: (n1.n_regionkey = region.r_regionkey)
                           Rows Removed by Join Filter: 4863
                           ->  Nested Loop  (cost=41772.02..70101.39 rows=11982 width=24) (actual time=317.826..679.413 rows=6098 loops=1)
                                 ->  Nested Loop  (cost=41771.87..69779.39 rows=11982 width=24) (actual time=317.601..672.330 rows=6098 loops=1)
                                       ->  Gather Merge  (cost=41771.45..43189.00 rows=11982 width=24) (actual time=317.184..325.743 rows=6098 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Sort  (cost=40771.41..40781.07 rows=3865 width=24) (actual time=310.174..310.367 rows=2192 loops=4)
                                                   Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                                   Sort Method: quicksort  Memory: 336kB
                                                   Worker 0:  Sort Method: quicksort  Memory: 340kB
                                                   Worker 1:  Sort Method: quicksort  Memory: 327kB
                                                   Worker 2:  Sort Method: quicksort  Memory: 328kB
                                                   ->  Parallel Hash Join  (cost=6597.94..40541.13 rows=3865 width=24) (actual time=116.466..308.054 rows=3024 loops=4)
                                                         Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=145189 width=12) (actual time=0.425..168.759 rows=114316 loops=4)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 260684
                                                         ->  Parallel Hash  (cost=6473.14..6473.14 rows=9984 width=20) (actual time=115.673..115.674 rows=9924 loops=4)
                                                               Buckets: 65536  Batches: 1  Memory Usage: 2752kB
                                                               ->  Nested Loop  (cost=0.85..6473.14 rows=9984 width=20) (actual time=0.791..111.894 rows=9924 loops=4)
                                                                     ->  Parallel Index Only Scan using q2_idx_1 on part  (cost=0.42..5391.75 rows=333 width=4) (actual time=0.321..12.061 rows=330 loops=4)
                                                                           Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                                           Heap Fetches: 0
                                                                     ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.43..2.94 rows=31 width=24) (actual time=0.243..0.298 rows=30 loops=1320)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                       ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.22 rows=1 width=8) (actual time=0.056..0.056 rows=1 loops=6098)
                                             Index Cond: (c_custkey = orders.o_custkey)
                                             Heap Fetches: 0
                                 ->  Memoize  (cost=0.15..1.17 rows=1 width=8) (actual time=0.000..0.000 rows=1 loops=6098)
                                       Cache Key: customer.c_nationkey
                                       Cache Mode: logical
                                       Hits: 6073  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 3kB
                                       ->  Index Scan using nation_pkey on nation n1  (cost=0.14..1.16 rows=1 width=8) (actual time=0.012..0.012 rows=1 loops=25)
                                             Index Cond: (n_nationkey = customer.c_nationkey)
                           ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6098)
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.236..0.238 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                     ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.29..2.07 rows=1 width=8) (actual time=0.014..0.014 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Heap Fetches: 0
               ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1235)
                     Cache Key: supplier.s_nationkey
                     Cache Mode: logical
                     Hits: 1210  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                     ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.003..0.003 rows=1 loops=25)
                           Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 36.153 ms
 Execution Time: 704.858 ms
(57 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41772.45..41786.50 rows=1 width=64) (actual time=115.028..121.569 rows=1 loops=1)
   ->  GroupAggregate  (cost=41772.45..75433.60 rows=2396 width=64) (actual time=115.027..121.568 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41772.45..75337.76 rows=2396 width=70) (actual time=90.651..120.656 rows=1235 loops=1)
               ->  Nested Loop  (cost=41772.30..75244.12 rows=2396 width=20) (actual time=90.645..119.591 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41772.02..70282.19 rows=2396 width=20) (actual time=90.636..117.418 rows=1235 loops=1)
                           Join Filter: (n1.n_regionkey = region.r_regionkey)
                           Rows Removed by Join Filter: 4865
                           ->  Nested Loop  (cost=41772.02..70101.39 rows=11982 width=24) (actual time=90.613..115.746 rows=6100 loops=1)
                                 ->  Nested Loop  (cost=41771.87..69779.39 rows=11982 width=24) (actual time=90.600..112.721 rows=6100 loops=1)
                                       ->  Gather Merge  (cost=41771.45..43189.00 rows=11982 width=24) (actual time=90.574..99.304 rows=6100 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Sort  (cost=40771.41..40781.07 rows=3865 width=24) (actual time=87.663..87.776 rows=2226 loops=4)
                                                   Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                                   Sort Method: quicksort  Memory: 333kB
                                                   Worker 0:  Sort Method: quicksort  Memory: 333kB
                                                   Worker 1:  Sort Method: quicksort  Memory: 329kB
                                                   Worker 2:  Sort Method: quicksort  Memory: 337kB
                                                   ->  Parallel Hash Join  (cost=6597.94..40541.13 rows=3865 width=24) (actual time=12.490..86.170 rows=3024 loops=4)
                                                         Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=145189 width=12) (actual time=0.008..56.225 rows=114316 loops=4)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 260684
                                                         ->  Parallel Hash  (cost=6473.14..6473.14 rows=9984 width=20) (actual time=12.274..12.275 rows=9924 loops=4)
                                                               Buckets: 65536  Batches: 1  Memory Usage: 2720kB
                                                               ->  Nested Loop  (cost=0.85..6473.14 rows=9984 width=20) (actual time=0.119..9.762 rows=9924 loops=4)
                                                                     ->  Parallel Index Only Scan using q2_idx_1 on part  (cost=0.42..5391.75 rows=333 width=4) (actual time=0.091..5.722 rows=330 loops=4)
                                                                           Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                                           Heap Fetches: 0
                                                                     ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.43..2.94 rows=31 width=24) (actual time=0.005..0.009 rows=30 loops=1320)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                       ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.22 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=6100)
                                             Index Cond: (c_custkey = orders.o_custkey)
                                             Heap Fetches: 0
                                 ->  Memoize  (cost=0.15..1.17 rows=1 width=8) (actual time=0.000..0.000 rows=1 loops=6100)
                                       Cache Key: customer.c_nationkey
                                       Cache Mode: logical
                                       Hits: 6075  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 3kB
                                       ->  Index Scan using nation_pkey on nation n1  (cost=0.14..1.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=25)
                                             Index Cond: (n_nationkey = customer.c_nationkey)
                           ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6100)
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                     ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.29..2.07 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Heap Fetches: 0
               ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1235)
                     Cache Key: supplier.s_nationkey
                     Cache Mode: logical
                     Hits: 1210  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                     ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=25)
                           Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 5.629 ms
 Execution Time: 121.654 ms
(57 rows)

query 9 run 1
SET
SET
SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=63648.46..63662.96 rows=1 width=90) (actual time=1064.317..1070.372 rows=1 loops=1)
   ->  GroupAggregate  (cost=63648.46..935577.81 rows=60150 width=90) (actual time=1064.315..1070.370 rows=1 loops=1)
         Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=63648.46..928311.32 rows=363671 width=81) (actual time=930.489..1067.696 rows=1210 loops=1)
               Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Gather Merge  (cost=63648.04..106672.66 rows=363671 width=63) (actual time=929.539..937.124 rows=1210 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=62648.00..62941.28 rows=117313 width=63) (actual time=919.034..919.144 rows=717 loops=4)
                           Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
                           Sort Method: quicksort  Memory: 14450kB
                           Worker 0:  Sort Method: quicksort  Memory: 14756kB
                           Worker 1:  Sort Method: quicksort  Memory: 14706kB
                           Worker 2:  Sort Method: quicksort  Memory: 14212kB
                           ->  Hash Join  (cost=19247.47..52770.24 rows=117313 width=63) (actual time=540.995..800.616 rows=81482 loops=4)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=19245.91..52408.52 rows=117313 width=41) (actual time=540.845..770.872 rows=81482 loops=4)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.440..115.645 rows=375000 loops=4)
                                       ->  Parallel Hash  (cost=17779.50..17779.50 rows=117313 width=41) (actual time=539.608..539.610 rows=81482 loops=4)
                                             Buckets: 524288  Batches: 1  Memory Usage: 29632kB
                                             ->  Hash Join  (cost=448.85..17779.50 rows=117313 width=41) (actual time=4.172..503.780 rows=81482 loops=4)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.85..17023.42 rows=117313 width=33) (actual time=0.673..477.667 rows=81482 loops=4)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=3910 width=4) (actual time=0.151..18.615 rows=2720 loops=4)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 47280
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.83 rows=31 width=29) (actual time=0.141..0.165 rows=30 loops=10880)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.479..3.479 rows=10000 loops=4)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.078..2.178 rows=10000 loops=4)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.076..0.076 rows=25 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.053..0.067 rows=25 loops=4)
               ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..2.24 rows=1 width=14) (actual time=0.106..0.106 rows=1 loops=1210)
                     Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                     Heap Fetches: 0
 Planning Time: 39.540 ms
 Execution Time: 1070.481 ms
(42 rows)

SET
SET
SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=63648.46..63662.96 rows=1 width=90) (actual time=407.719..416.361 rows=1 loops=1)
   ->  GroupAggregate  (cost=63648.46..935577.81 rows=60150 width=90) (actual time=407.718..416.359 rows=1 loops=1)
         Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=63648.46..928311.32 rows=363671 width=81) (actual time=402.679..415.330 rows=1210 loops=1)
               Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Gather Merge  (cost=63648.04..106672.66 rows=363671 width=63) (actual time=402.631..411.871 rows=1210 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=62648.00..62941.28 rows=117313 width=63) (actual time=397.409..397.494 rows=711 loops=4)
                           Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
                           Sort Method: quicksort  Memory: 14467kB
                           Worker 0:  Sort Method: quicksort  Memory: 14604kB
                           Worker 1:  Sort Method: quicksort  Memory: 14512kB
                           Worker 2:  Sort Method: quicksort  Memory: 14541kB
                           ->  Hash Join  (cost=19247.47..52770.24 rows=117313 width=63) (actual time=102.520..280.002 rows=81482 loops=4)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=19245.91..52408.52 rows=117313 width=41) (actual time=102.430..252.447 rows=81482 loops=4)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.011..31.743 rows=375000 loops=4)
                                       ->  Parallel Hash  (cost=17779.50..17779.50 rows=117313 width=41) (actual time=101.613..101.615 rows=81482 loops=4)
                                             Buckets: 524288  Batches: 1  Memory Usage: 29632kB
                                             ->  Hash Join  (cost=448.85..17779.50 rows=117313 width=41) (actual time=2.581..69.541 rows=81482 loops=4)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.85..17023.42 rows=117313 width=33) (actual time=0.091..47.342 rows=81482 loops=4)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=3910 width=4) (actual time=0.064..10.895 rows=2720 loops=4)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 47280
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.83 rows=31 width=29) (actual time=0.004..0.010 rows=30 loops=10880)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.472..2.472 rows=10000 loops=4)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.006..1.263 rows=10000 loops=4)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.021..0.022 rows=25 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.009..0.012 rows=25 loops=4)
               ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..2.24 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=1210)
                     Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                     Heap Fetches: 0
 Planning Time: 7.209 ms
 Execution Time: 416.445 ms
(42 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84220.42..84220.47 rows=20 width=202) (actual time=717.652..722.030 rows=20 loops=1)
   ->  Sort  (cost=84220.42..84363.94 rows=57411 width=202) (actual time=717.650..722.026 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=81975.09..82692.73 rows=57411 width=202) (actual time=686.156..710.616 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 26129kB
               ->  Gather  (cost=6700.04..81257.46 rows=57411 width=182) (actual time=59.180..581.153 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5700.04..74516.36 rows=18520 width=182) (actual time=50.022..633.465 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5698.48..74457.93 rows=18520 width=160) (actual time=49.904..624.872 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=695.23..69406.07 rows=18520 width=16) (actual time=13.675..570.631 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=694.80..27104.49 rows=18580 width=8) (actual time=13.046..347.933 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=4142
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..680.40 rows=57597 width=0) (actual time=9.176..9.176 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.43..2.27 rows=1 width=16) (actual time=0.014..0.015 rows=2 loops=57111)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=35.764..35.764 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29344kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.096..15.134 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.057..0.058 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.049..0.052 rows=25 loops=4)
 Planning Time: 23.754 ms
 Execution Time: 722.374 ms
(31 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84220.42..84220.47 rows=20 width=202) (actual time=201.466..206.003 rows=20 loops=1)
   ->  Sort  (cost=84220.42..84363.94 rows=57411 width=202) (actual time=201.465..206.000 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=81975.09..82692.73 rows=57411 width=202) (actual time=169.361..194.414 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 26129kB
               ->  Gather  (cost=6700.04..81257.46 rows=57411 width=182) (actual time=42.672..85.702 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5700.04..74516.36 rows=18520 width=182) (actual time=39.727..130.401 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5698.48..74457.93 rows=18520 width=160) (actual time=39.647..123.661 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=695.23..69406.07 rows=18520 width=16) (actual time=10.946..82.257 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=694.80..27104.49 rows=18580 width=8) (actual time=10.889..26.704 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=1272
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..680.40 rows=57597 width=0) (actual time=7.491..7.491 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.43..2.27 rows=1 width=16) (actual time=0.003..0.003 rows=2 loops=57111)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=28.247..28.248 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.006..8.051 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.016..0.016 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.008..0.011 rows=25 loops=4)
 Planning Time: 2.183 ms
 Execution Time: 206.344 ms
(31 rows)

query 11 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17302.89..17302.89 rows=1 width=36) (actual time=685.697..685.824 rows=1 loops=1)
   InitPlan 1 (returns $3)
     ->  Finalize Aggregate  (cost=7231.86..7231.87 rows=1 width=32) (actual time=21.140..21.227 rows=1 loops=1)
           ->  Gather  (cost=7231.74..7231.85 rows=1 width=32) (actual time=21.024..21.219 rows=2 loops=1)
                 Workers Planned: 1
                 Workers Launched: 1
                 ->  Partial Aggregate  (cost=6231.74..6231.75 rows=1 width=32) (actual time=19.251..19.253 rows=1 loops=2)
                       ->  Nested Loop  (cost=0.86..6090.56 rows=18824 width=10) (actual time=0.211..15.184 rows=16440 loops=2)
                             ->  Nested Loop  (cost=0.43..640.26 rows=235 width=4) (actual time=0.080..2.298 rows=206 loops=2)
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.021..0.942 rows=5000 loops=2)
                                         Heap Fetches: 0
                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=4) (actual time=0.000..0.000 rows=0 loops=10000)
                                         Cache Key: supplier_1.s_nationkey
                                         Cache Mode: logical
                                         Hits: 6323  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                         Worker 0:  Hits: 3627  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                         ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=50)
                                               Index Cond: (n_nationkey = supplier_1.s_nationkey)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 1
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..22.39 rows=80 width=14) (actual time=0.003..0.054 rows=80 loops=411)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=10071.02..10097.68 rows=10667 width=36) (actual time=685.695..685.734 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize HashAggregate  (cost=9537.68..10017.68 rows=10667 width=36) (actual time=675.909..685.580 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $3)
               Batches: 1  Memory Usage: 15889kB
               Rows Removed by Filter: 30007
               ->  Gather  (cost=7278.80..9396.50 rows=18824 width=36) (actual time=627.634..637.935 rows=31860 loops=1)
                     Workers Planned: 1
                     Workers Launched: 1
                     ->  Partial HashAggregate  (cost=6278.80..6514.10 rows=18824 width=36) (actual time=622.922..630.797 rows=15930 loops=2)
                           Group Key: partsupp.ps_partkey
                           Batches: 1  Memory Usage: 8977kB
                           Worker 0:  Batches: 1  Memory Usage: 8977kB
                           ->  Nested Loop  (cost=0.86..6090.56 rows=18824 width=14) (actual time=0.968..603.528 rows=16440 loops=2)
                                 ->  Nested Loop  (cost=0.43..640.26 rows=235 width=4) (actual time=0.231..3.622 rows=206 loops=2)
                                       ->  Parallel Index Only Scan using q2_idx_3 on supplier  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.079..1.871 rows=5000 loops=2)
                                             Heap Fetches: 0
                                       ->  Memoize  (cost=0.15..0.17 rows=1 width=4) (actual time=0.000..0.000 rows=0 loops=10000)
                                             Cache Key: supplier.s_nationkey
                                             Cache Mode: logical
                                             Hits: 5163  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                             Worker 0:  Hits: 4787  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                             ->  Index Scan using nation_pkey on nation  (cost=0.14..0.16 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=50)
                                                   Index Cond: (n_nationkey = supplier.s_nationkey)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..22.39 rows=80 width=18) (actual time=0.108..2.899 rows=80 loops=411)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 14.625 ms
 Execution Time: 686.253 ms
(54 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17302.89..17302.89 rows=1 width=36) (actual time=89.731..89.857 rows=1 loops=1)
   InitPlan 1 (returns $3)
     ->  Finalize Aggregate  (cost=7231.86..7231.87 rows=1 width=32) (actual time=20.358..20.447 rows=1 loops=1)
           ->  Gather  (cost=7231.74..7231.85 rows=1 width=32) (actual time=20.340..20.432 rows=2 loops=1)
                 Workers Planned: 1
                 Workers Launched: 1
                 ->  Partial Aggregate  (cost=6231.74..6231.75 rows=1 width=32) (actual time=18.517..18.518 rows=1 loops=2)
                       ->  Nested Loop  (cost=0.86..6090.56 rows=18824 width=10) (actual time=0.099..14.525 rows=16440 loops=2)
                             ->  Nested Loop  (cost=0.43..640.26 rows=235 width=4) (actual time=0.087..2.302 rows=206 loops=2)
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.022..0.955 rows=5000 loops=2)
                                         Heap Fetches: 0
                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=4) (actual time=0.000..0.000 rows=0 loops=10000)
                                         Cache Key: supplier_1.s_nationkey
                                         Cache Mode: logical
                                         Hits: 6485  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                         Worker 0:  Hits: 3465  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                         ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=50)
                                               Index Cond: (n_nationkey = supplier_1.s_nationkey)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 1
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..22.39 rows=80 width=14) (actual time=0.003..0.051 rows=80 loops=411)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=10071.02..10097.68 rows=10667 width=36) (actual time=89.729..89.766 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize HashAggregate  (cost=9537.68..10017.68 rows=10667 width=36) (actual time=79.817..89.617 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $3)
               Batches: 1  Memory Usage: 15889kB
               Rows Removed by Filter: 30007
               ->  Gather  (cost=7278.80..9396.50 rows=18824 width=36) (actual time=31.819..42.641 rows=31893 loops=1)
                     Workers Planned: 1
                     Workers Launched: 1
                     ->  Partial HashAggregate  (cost=6278.80..6514.10 rows=18824 width=36) (actual time=29.935..37.811 rows=15946 loops=2)
                           Group Key: partsupp.ps_partkey
                           Batches: 1  Memory Usage: 8977kB
                           Worker 0:  Batches: 1  Memory Usage: 8977kB
                           ->  Nested Loop  (cost=0.86..6090.56 rows=18824 width=14) (actual time=0.093..19.082 rows=16440 loops=2)
                                 ->  Nested Loop  (cost=0.43..640.26 rows=235 width=4) (actual time=0.083..2.357 rows=206 loops=2)
                                       ->  Parallel Index Only Scan using q2_idx_3 on supplier  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.017..0.983 rows=5000 loops=2)
                                             Heap Fetches: 0
                                       ->  Memoize  (cost=0.15..0.17 rows=1 width=4) (actual time=0.000..0.000 rows=0 loops=10000)
                                             Cache Key: supplier.s_nationkey
                                             Cache Mode: logical
                                             Hits: 5231  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                             Worker 0:  Hits: 4719  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                             ->  Index Scan using nation_pkey on nation  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=50)
                                                   Index Cond: (n_nationkey = supplier.s_nationkey)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..22.39 rows=80 width=18) (actual time=0.003..0.071 rows=80 loops=411)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.234 ms
 Execution Time: 90.231 ms
(54 rows)

query 12 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15171.06..32340.54 rows=1 width=27) (actual time=951.710..952.932 rows=1 loops=1)
   ->  GroupAggregate  (cost=15171.06..135357.45 rows=7 width=27) (actual time=951.709..952.930 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=15171.06..134849.04 rows=29048 width=27) (actual time=66.818..943.492 rows=15492 loops=1)
               ->  Gather Merge  (cost=15170.63..18648.68 rows=29048 width=15) (actual time=66.441..75.446 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=14170.57..14188.73 rows=7262 width=15) (actual time=57.414..57.781 rows=4182 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 769kB
                           Worker 0:  Sort Method: quicksort  Memory: 456kB
                           Worker 1:  Sort Method: quicksort  Memory: 460kB
                           Worker 2:  Sort Method: quicksort  Memory: 461kB
                           Worker 3:  Sort Method: quicksort  Memory: 459kB
                           ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..13704.86 rows=7262 width=15) (actual time=0.146..56.170 rows=6191 loops=5)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 15496
                                 Heap Fetches: 0
               ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=20) (actual time=0.055..0.055 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 21.431 ms
 Execution Time: 953.008 ms
(23 rows)

SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15171.06..32340.54 rows=1 width=27) (actual time=73.966..75.290 rows=1 loops=1)
   ->  GroupAggregate  (cost=15171.06..135357.45 rows=7 width=27) (actual time=73.964..75.288 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=15171.06..134849.04 rows=29048 width=27) (actual time=25.367..70.459 rows=15492 loops=1)
               ->  Gather Merge  (cost=15170.63..18648.68 rows=29048 width=15) (actual time=25.345..30.262 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=14170.57..14188.73 rows=7262 width=15) (actual time=21.762..22.005 rows=4226 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 525kB
                           Worker 0:  Sort Method: quicksort  Memory: 493kB
                           Worker 1:  Sort Method: quicksort  Memory: 458kB
                           Worker 2:  Sort Method: quicksort  Memory: 507kB
                           Worker 3:  Sort Method: quicksort  Memory: 432kB
                           ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..13704.86 rows=7262 width=15) (actual time=0.155..20.678 rows=6191 loops=5)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 15496
                                 Heap Fetches: 0
               ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 1.499 ms
 Execution Time: 75.339 ms
(23 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64909.50..64909.50 rows=1 width=16) (actual time=1458.123..1458.126 rows=1 loops=1)
   ->  Sort  (cost=64909.50..64910.00 rows=200 width=16) (actual time=1458.121..1458.124 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64906.50..64908.50 rows=200 width=16) (actual time=1458.096..1458.104 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61156.50..62656.50 rows=150000 width=12) (actual time=1418.600..1441.060 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4953.42..53732.26 rows=1484848 width=8) (actual time=34.896..1052.417 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484848 width=8) (actual time=0.564..614.554 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=33.937..33.937 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.317..16.814 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 16.158 ms
 Execution Time: 1459.185 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64909.50..64909.50 rows=1 width=16) (actual time=1267.562..1267.565 rows=1 loops=1)
   ->  Sort  (cost=64909.50..64910.00 rows=200 width=16) (actual time=1267.561..1267.563 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64906.50..64908.50 rows=200 width=16) (actual time=1267.535..1267.543 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61156.50..62656.50 rows=150000 width=12) (actual time=1228.120..1250.581 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4953.42..53732.26 rows=1484848 width=8) (actual time=29.491..883.199 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484848 width=8) (actual time=0.012..467.031 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=29.077..29.078 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.021..13.083 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 1.211 ms
 Execution Time: 1268.664 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81262.04..81262.05 rows=1 width=32) (actual time=539.686..546.015 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=81262.04..81262.05 rows=1 width=32) (actual time=539.685..546.013 rows=1 loops=1)
         ->  Gather  (cost=81261.58..81261.99 rows=4 width=64) (actual time=539.668..546.000 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=80261.58..80261.59 rows=1 width=64) (actual time=529.258..529.260 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7306.69..79937.08 rows=18543 width=33) (actual time=53.988..513.492 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1332.70..73914.41 rows=18543 width=16) (actual time=21.079..465.683 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8693
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1314.15 rows=74172 width=0) (actual time=14.348..14.348 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=32.493..32.493 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.086..19.046 rows=40000 loops=5)
 Planning Time: 22.757 ms
 Execution Time: 546.074 ms
(18 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81262.04..81262.05 rows=1 width=32) (actual time=107.640..117.028 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=81262.04..81262.05 rows=1 width=32) (actual time=107.639..117.026 rows=1 loops=1)
         ->  Gather  (cost=81261.58..81261.99 rows=4 width=64) (actual time=107.623..117.013 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=80261.58..80261.59 rows=1 width=64) (actual time=103.407..103.409 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7306.69..79937.08 rows=18543 width=33) (actual time=39.418..95.197 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1332.70..73914.41 rows=18543 width=16) (actual time=14.237..62.352 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=7843
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1314.15 rows=74172 width=0) (actual time=8.564..8.565 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=24.145..24.146 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.008..6.922 rows=40000 loops=5)
 Planning Time: 1.477 ms
 Execution Time: 117.068 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=242278.70..242386.58 rows=1 width=103) (actual time=1303.514..1311.282 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122480.31..122480.32 rows=1 width=32) (actual time=246.038..246.040 rows=1 loops=1)
           ->  HashAggregate  (cost=122230.63..122355.47 rows=9987 width=36) (actual time=242.534..245.440 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4043.83..119979.51 rows=225112 width=16) (actual time=28.783..122.369 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3987.55 rows=225112 width=0) (actual time=18.606..18.607 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119798.39..125192.30 rows=50 width=103) (actual time=1303.513..1311.277 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119798.10..125030.68 rows=50 width=36) (actual time=1303.040..1310.804 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119798.10..124581.26 rows=39948 width=36) (actual time=1029.579..1045.034 rows=41770 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118798.05..118823.01 rows=9987 width=36) (actual time=1015.929..1016.868 rows=8851 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1777kB
                           Worker 0:  Sort Method: quicksort  Memory: 1773kB
                           Worker 1:  Sort Method: quicksort  Memory: 1775kB
                           Worker 2:  Sort Method: quicksort  Memory: 1776kB
                           Worker 3:  Sort Method: quicksort  Memory: 1775kB
                           ->  Partial HashAggregate  (cost=118009.78..118134.62 rows=9987 width=36) (actual time=1005.469..1012.626 rows=9888 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=4043.83..117447.00 rows=56278 width=16) (actual time=41.373..950.012 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13471
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3987.55 rows=225112 width=0) (actual time=37.520..37.520 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.22 rows=1 width=71) (actual time=0.467..0.467 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 18.011 ms
 Execution Time: 1312.055 ms
(42 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=242278.70..242386.58 rows=1 width=103) (actual time=437.305..447.063 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122480.31..122480.32 rows=1 width=32) (actual time=232.762..232.764 rows=1 loops=1)
           ->  HashAggregate  (cost=122230.63..122355.47 rows=9987 width=36) (actual time=229.329..232.157 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4043.83..119979.51 rows=225112 width=16) (actual time=28.768..110.130 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3987.55 rows=225112 width=0) (actual time=18.566..18.566 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119798.39..125192.30 rows=50 width=103) (actual time=437.304..447.059 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119798.10..125030.68 rows=50 width=36) (actual time=437.284..447.038 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119798.10..124581.26 rows=39948 width=36) (actual time=177.861..195.361 rows=41783 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118798.05..118823.01 rows=9987 width=36) (actual time=168.029..168.968 rows=8847 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1772kB
                           Worker 0:  Sort Method: quicksort  Memory: 1780kB
                           Worker 1:  Sort Method: quicksort  Memory: 1774kB
                           Worker 2:  Sort Method: quicksort  Memory: 1776kB
                           Worker 3:  Sort Method: quicksort  Memory: 1772kB
                           ->  Partial HashAggregate  (cost=118009.78..118134.62 rows=9987 width=36) (actual time=159.789..165.444 rows=9887 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=4043.83..117447.00 rows=56278 width=16) (actual time=33.225..124.605 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=12938
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3987.55 rows=225112 width=0) (actual time=26.578..26.578 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.22 rows=1 width=71) (actual time=0.016..0.016 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 1.415 ms
 Execution Time: 447.433 ms
(42 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=27761.76..27761.77 rows=1 width=44) (actual time=280.821..281.243 rows=1 loops=1)
   ->  Sort  (cost=27761.76..27801.64 rows=15951 width=44) (actual time=280.820..281.242 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=19861.41..27682.01 rows=15951 width=44) (actual time=190.704..277.186 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=19861.41..26931.98 rows=59052 width=40) (actual time=190.678..239.555 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=18861.35..18898.26 rows=14763 width=40) (actual time=162.615..164.395 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 2772kB
                           Worker 0:  Sort Method: quicksort  Memory: 2417kB
                           Worker 1:  Sort Method: quicksort  Memory: 2810kB
                           Worker 2:  Sort Method: quicksort  Memory: 2451kB
                           Worker 3:  Sort Method: quicksort  Memory: 2606kB
                           ->  Parallel Hash Join  (cost=6684.54..17839.04 rows=14763 width=40) (actual time=32.801..99.537 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..11240.43 rows=100000 width=8) (actual time=7.108..55.754 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.750..6.411 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12302 width=40) (actual time=25.466..25.466 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12302 width=40) (actual time=0.357..23.486 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 19.611 ms
 Execution Time: 281.321 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=27761.76..27761.77 rows=1 width=44) (actual time=246.955..247.359 rows=1 loops=1)
   ->  Sort  (cost=27761.76..27801.64 rows=15951 width=44) (actual time=246.953..247.357 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=19861.41..27682.01 rows=15951 width=44) (actual time=156.946..243.424 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=19861.41..26931.98 rows=59052 width=40) (actual time=156.921..205.724 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=18861.35..18898.26 rows=14763 width=40) (actual time=138.368..140.090 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 2629kB
                           Worker 0:  Sort Method: quicksort  Memory: 2362kB
                           Worker 1:  Sort Method: quicksort  Memory: 2585kB
                           Worker 2:  Sort Method: quicksort  Memory: 2781kB
                           Worker 3:  Sort Method: quicksort  Memory: 2699kB
                           ->  Parallel Hash Join  (cost=6684.54..17839.04 rows=14763 width=40) (actual time=18.845..75.622 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..11240.43 rows=100000 width=8) (actual time=2.565..41.183 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.081..2.517 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12302 width=40) (actual time=15.841..15.842 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12302 width=40) (actual time=0.014..11.267 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 0.999 ms
 Execution Time: 247.414 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=178087.10..178087.11 rows=1 width=32) (actual time=2418.466..2422.498 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=178087.10..178087.11 rows=1 width=32) (actual time=2418.465..2422.496 rows=1 loops=1)
         ->  Gather  (cost=178086.88..178087.09 rows=2 width=32) (actual time=2409.438..2422.482 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=177086.88..177086.89 rows=1 width=32) (actual time=2405.913..2405.914 rows=1 loops=3)
                     ->  Nested Loop  (cost=5352.55..177084.87 rows=802 width=8) (actual time=315.988..2405.828 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=5352.12..176864.42 rows=80 width=40) (actual time=315.686..2371.008 rows=69 loops=3)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=5351.68..5351.89 rows=84 width=4) (actual time=26.346..26.383 rows=69 loops=3)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 29kB
                                       Worker 0:  Sort Method: quicksort  Memory: 27kB
                                       Worker 1:  Sort Method: quicksort  Memory: 27kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=84 width=4) (actual time=0.347..26.301 rows=69 loops=3)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 66597
                                 ->  GroupAggregate  (cost=0.43..169118.94 rows=191406 width=36) (actual time=0.457..2330.415 rows=198926 loops=3)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136244.50 rows=6000671 width=9) (actual time=0.423..1487.785 rows=5968847 loops=3)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.63 rows=10 width=17) (actual time=0.466..0.499 rows=3 loops=208)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 23.323 ms
 Execution Time: 2422.817 ms
(27 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=178087.10..178087.11 rows=1 width=32) (actual time=2105.729..2109.663 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=178087.10..178087.11 rows=1 width=32) (actual time=2105.728..2109.661 rows=1 loops=1)
         ->  Gather  (cost=178086.88..178087.09 rows=2 width=32) (actual time=2100.227..2109.647 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=177086.88..177086.89 rows=1 width=32) (actual time=2100.525..2100.527 rows=1 loops=3)
                     ->  Nested Loop  (cost=5352.55..177084.87 rows=802 width=8) (actual time=188.419..2100.484 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=5352.12..176864.42 rows=80 width=40) (actual time=188.403..2099.795 rows=69 loops=3)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=5351.68..5351.89 rows=84 width=4) (actual time=10.804..10.820 rows=69 loops=3)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 28kB
                                       Worker 0:  Sort Method: quicksort  Memory: 28kB
                                       Worker 1:  Sort Method: quicksort  Memory: 27kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=84 width=4) (actual time=0.152..10.781 rows=69 loops=3)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 66597
                                 ->  GroupAggregate  (cost=0.43..169118.94 rows=191406 width=36) (actual time=0.059..2077.674 rows=198926 loops=3)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136244.50 rows=6000671 width=9) (actual time=0.031..1262.181 rows=5968847 loops=3)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.63 rows=10 width=17) (actual time=0.008..0.009 rows=3 loops=208)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 1.774 ms
 Execution Time: 2109.722 ms
(27 rows)

query 18 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=707243.73..707243.98 rows=100 width=71) (actual time=2985.910..2985.914 rows=9 loops=1)
   ->  Sort  (cost=707243.73..712244.85 rows=2000448 width=71) (actual time=2985.909..2985.912 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=570618.32..630788.05 rows=2000448 width=71) (actual time=2985.518..2985.879 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 3097kB
               ->  Hash Join  (cost=6982.19..445277.75 rows=2000448 width=44) (actual time=746.980..2985.449 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=10.19..433054.43 rows=2000448 width=25) (actual time=677.571..2916.006 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=0.86..260588.06 rows=500056 width=24) (actual time=510.813..2280.601 rows=9 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.733..326.057 rows=1201687 loops=1)
                                 ->  GroupAggregate  (cost=0.43..188722.37 rows=500056 width=4) (actual time=401.284..1881.856 rows=9 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 1499991
                                       ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136216.50 rows=6000671 width=9) (actual time=0.327..722.455 rows=6001215 loops=1)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136216.50 rows=6000671 width=9) (actual time=0.015..425.504 rows=4807580 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=69.075..69.076 rows=150000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.513..43.043 rows=150000 loops=1)
 Planning Time: 25.551 ms
 Execution Time: 2986.826 ms
(27 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=707243.73..707243.98 rows=100 width=71) (actual time=2593.745..2593.750 rows=9 loops=1)
   ->  Sort  (cost=707243.73..712244.85 rows=2000448 width=71) (actual time=2593.744..2593.747 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=570618.32..630788.05 rows=2000448 width=71) (actual time=2593.358..2593.712 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 3097kB
               ->  Hash Join  (cost=6982.19..445277.75 rows=2000448 width=44) (actual time=626.297..2593.298 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=10.19..433054.43 rows=2000448 width=25) (actual time=583.946..2550.915 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=0.86..260588.06 rows=500056 width=24) (actual time=418.164..1920.430 rows=9 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.007..168.959 rows=1201687 loops=1)
                                 ->  GroupAggregate  (cost=0.43..188722.37 rows=500056 width=4) (actual time=355.386..1682.411 rows=9 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 1499991
                                       ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136216.50 rows=6000671 width=9) (actual time=0.020..548.290 rows=6001215 loops=1)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136216.50 rows=6000671 width=9) (actual time=0.013..420.760 rows=4807580 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=42.025..42.026 rows=150000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.009..18.873 rows=150000 loops=1)
 Planning Time: 2.111 ms
 Execution Time: 2594.424 ms
(27 rows)

query 19 run 1
SET
SET
SET

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9328.45..9328.46 rows=1 width=32) (actual time=130.910..132.310 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=9328.45..9328.46 rows=1 width=32) (actual time=130.909..132.308 rows=1 loops=1)
         ->  Gather  (cost=9328.23..9328.44 rows=2 width=32) (actual time=130.826..132.298 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=8328.23..8328.24 rows=1 width=32) (actual time=124.360..124.361 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.56..8327.87 rows=47 width=12) (actual time=3.664..124.285 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=199 width=30) (actual time=0.437..37.866 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.44 rows=1 width=21) (actual time=0.491..0.510 rows=0 loops=507)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning Time: 24.344 ms
 Execution Time: 132.375 ms
(17 rows)

SET
SET
SET


 Limit  (cost=9328.45..9328.46 rows=1 width=32) (actual time=21.877..23.662 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=9328.45..9328.46 rows=1 width=32) (actual time=21.876..23.660 rows=1 loops=1)
         ->  Gather  (cost=9328.23..9328.44 rows=2 width=32) (actual time=21.805..23.651 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=8328.23..8328.24 rows=1 width=32) (actual time=19.271..19.271 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.56..8327.87 rows=47 width=12) (actual time=0.341..19.234 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=199 width=30) (actual time=0.123..17.283 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.44 rows=1 width=21) (actual time=0.010..0.011 rows=0 loops=507)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning Time: 2.784 ms
 Execution Time: 23.704 ms
(17 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=219726.10..219726.10 rows=1 width=51) (actual time=3792.163..3792.265 rows=1 loops=1)
   ->  Sort  (cost=219726.10..219726.10 rows=1 width=51) (actual time=3792.162..3792.263 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=191382.67..219726.09 rows=1 width=51) (actual time=3620.288..3792.062 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900814
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.491..3.820 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.202..0.205 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.282..2.819 rows=10000 loops=1)
               ->  Materialize  (cost=191382.67..219270.78 rows=1 width=8) (actual time=6.329..8.410 rows=4340 loops=438)
                     ->  Nested Loop  (cost=191382.67..219270.77 rows=1 width=8) (actual time=2771.858..3614.841 rows=5898 loops=1)
                           ->  Hash Join  (cost=191382.24..213649.15 rows=4891 width=44) (actual time=2771.378..3371.839 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=185374.73..201527.83 rows=484260 width=40) (actual time=2739.778..3297.639 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 9  Memory Usage: 33873kB  Disk Usage: 32032kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16350.54..142564.35 rows=910254 width=13) (actual time=130.948..2114.960 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16122.97 rows=910254 width=0) (actual time=112.137..112.138 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=5982.26..5982.26 rows=2020 width=4) (actual time=31.580..31.678 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather Merge  (cost=1000.46..5982.26 rows=2020 width=4) (actual time=9.477..31.328 rows=2187 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=652 width=4) (actual time=0.268..18.541 rows=547 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 49453
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..1.14 rows=1 width=12) (actual time=0.040..0.040 rows=1 loops=5914)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning Time: 31.196 ms
 Execution Time: 3797.698 ms
(42 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=219726.10..219726.10 rows=1 width=51) (actual time=1479.048..1479.139 rows=1 loops=1)
   ->  Sort  (cost=219726.10..219726.10 rows=1 width=51) (actual time=1479.047..1479.137 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=191382.67..219726.09 rows=1 width=51) (actual time=1308.272..1478.975 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900814
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.013..1.731 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.002..0.604 rows=10000 loops=1)
               ->  Materialize  (cost=191382.67..219270.78 rows=1 width=8) (actual time=1.632..3.135 rows=4340 loops=438)
                     ->  Nested Loop  (cost=191382.67..219270.77 rows=1 width=8) (actual time=714.859..1304.896 rows=5898 loops=1)
                           ->  Hash Join  (cost=191382.24..213649.15 rows=4891 width=44) (actual time=714.835..1285.900 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=185374.73..201527.83 rows=484260 width=40) (actual time=698.044..1230.361 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 9  Memory Usage: 33873kB  Disk Usage: 32032kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16350.54..142564.35 rows=910254 width=13) (actual time=92.759..310.431 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16122.97 rows=910254 width=0) (actual time=74.340..74.340 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=5982.26..5982.26 rows=2020 width=4) (actual time=16.774..16.861 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather Merge  (cost=1000.46..5982.26 rows=2020 width=4) (actual time=3.546..16.610 rows=2187 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=652 width=4) (actual time=0.040..9.012 rows=547 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 49453
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..1.14 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning Time: 2.675 ms
 Execution Time: 1484.159 ms
(42 rows)

query 21 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=61196.54..61196.54 rows=1 width=34) (actual time=4511.992..4565.909 rows=100 loops=1)
   ->  Sort  (cost=61196.54..61196.54 rows=1 width=34) (actual time=4511.991..4565.901 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=61191.13..61196.53 rows=1 width=34) (actual time=1730.932..4564.740 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Nested Loop Semi Join  (cost=61191.13..61196.51 rows=1 width=26) (actual time=1679.567..4560.897 rows=4227 loops=1)
                     Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                     Rows Removed by Join Filter: 2768
                     ->  Nested Loop  (cost=61190.70..61194.08 rows=1 width=38) (actual time=1677.925..3574.109 rows=6909 loops=1)
                           Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                           Rows Removed by Join Filter: 158582
                           ->  Nested Loop  (cost=61190.70..61192.75 rows=1 width=42) (actual time=1677.734..3040.402 rows=165491 loops=1)
                                 ->  Gather Merge  (cost=61190.27..61190.39 rows=1 width=38) (actual time=1675.859..1853.393 rows=337680 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Sort  (cost=60190.21..60190.22 rows=1 width=38) (actual time=1623.513..1632.823 rows=67536 loops=5)
                                             Sort Key: supplier.s_name
                                             Sort Method: quicksort  Memory: 9298kB
                                             Worker 0:  Sort Method: quicksort  Memory: 6080kB
                                             Worker 1:  Sort Method: quicksort  Memory: 6188kB
                                             Worker 2:  Sort Method: quicksort  Memory: 8616kB
                                             Worker 3:  Sort Method: quicksort  Memory: 8490kB
                                             ->  Nested Loop  (cost=32281.53..60190.20 rows=1 width=38) (actual time=709.324..1174.499 rows=67536 loops=5)
                                                   ->  Parallel Hash Anti Join  (cost=32281.24..60186.13 rows=1 width=8) (actual time=709.088..1034.364 rows=67536 loops=5)
                                                         Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                                         Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                                         Rows Removed by Join Filter: 275171
                                                         ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..26030.11 rows=500056 width=8) (actual time=0.053..115.178 rows=758659 loops=5)
                                                               Heap Fetches: 0
                                                         ->  Parallel Hash  (cost=26030.11..26030.11 rows=500056 width=8) (actual time=456.694..456.695 rows=758659 loops=5)
                                                               Buckets: 524288 (originally 2097152)  Batches: 16 (originally 1)  Memory Usage: 13504kB
                                                               ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..26030.11 rows=500056 width=8) (actual time=0.639..157.163 rows=758659 loops=5)
                                                                     Heap Fetches: 0
                                                   ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4.07 rows=1 width=34) (actual time=0.002..0.002 rows=1 loops=337680)
                                                         Index Cond: (s_suppkey = l1.l_suppkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=337680)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=165491)
                                 Filter: (n_name = 'PERU'::bpchar)
                                 Rows Removed by Filter: 24
                     ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.142..0.142 rows=1 loops=6909)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Heap Fetches: 0
 Planning Time: 25.819 ms
 Execution Time: 4565.998 ms
(47 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=61196.54..61196.54 rows=1 width=34) (actual time=3036.176..3090.831 rows=100 loops=1)
   ->  Sort  (cost=61196.54..61196.54 rows=1 width=34) (actual time=3036.175..3090.823 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=61191.13..61196.53 rows=1 width=34) (actual time=1639.721..3090.002 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Nested Loop Semi Join  (cost=61191.13..61196.51 rows=1 width=26) (actual time=1638.377..3088.631 rows=4227 loops=1)
                     Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                     Rows Removed by Join Filter: 2768
                     ->  Nested Loop  (cost=61190.70..61194.08 rows=1 width=38) (actual time=1638.365..3064.533 rows=6909 loops=1)
                           Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                           Rows Removed by Join Filter: 158582
                           ->  Nested Loop  (cost=61190.70..61192.75 rows=1 width=42) (actual time=1638.347..2558.378 rows=165491 loops=1)
                                 ->  Gather Merge  (cost=61190.27..61190.39 rows=1 width=38) (actual time=1638.293..1803.801 rows=337680 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Sort  (cost=60190.21..60190.22 rows=1 width=38) (actual time=1573.739..1582.770 rows=67536 loops=5)
                                             Sort Key: supplier.s_name
                                             Sort Method: quicksort  Memory: 8251kB
                                             Worker 0:  Sort Method: quicksort  Memory: 8445kB
                                             Worker 1:  Sort Method: quicksort  Memory: 8272kB
                                             Worker 2:  Sort Method: quicksort  Memory: 9090kB
                                             Worker 3:  Sort Method: quicksort  Memory: 6151kB
                                             ->  Nested Loop  (cost=32281.53..60190.20 rows=1 width=38) (actual time=666.360..1124.764 rows=67536 loops=5)
                                                   ->  Parallel Hash Anti Join  (cost=32281.24..60186.13 rows=1 width=8) (actual time=666.323..990.543 rows=67536 loops=5)
                                                         Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                                         Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                                         Rows Removed by Join Filter: 275171
                                                         ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..26030.11 rows=500056 width=8) (actual time=0.055..116.502 rows=758659 loops=5)
                                                               Heap Fetches: 0
                                                         ->  Parallel Hash  (cost=26030.11..26030.11 rows=500056 width=8) (actual time=412.821..412.821 rows=758659 loops=5)
                                                               Buckets: 524288 (originally 2097152)  Batches: 16 (originally 1)  Memory Usage: 13472kB
                                                               ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..26030.11 rows=500056 width=8) (actual time=0.183..108.543 rows=758659 loops=5)
                                                                     Heap Fetches: 0
                                                   ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4.07 rows=1 width=34) (actual time=0.002..0.002 rows=1 loops=337680)
                                                         Index Cond: (s_suppkey = l1.l_suppkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=337680)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=165491)
                                 Filter: (n_name = 'PERU'::bpchar)
                                 Rows Removed by Filter: 24
                     ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=6909)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Heap Fetches: 0
 Planning Time: 3.174 ms
 Execution Time: 3090.912 ms
(47 rows)

query 22 run 1
SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.56..12517.26 rows=1 width=72) (actual time=171.454..173.107 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.81..6242.82 rows=1 width=32) (actual time=43.377..43.455 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=43.283..43.445 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=36.066..36.067 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1985 width=6) (actual time=0.287..34.795 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7510.50 rows=729 width=72) (actual time=171.453..173.027 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7492.27 rows=729 width=38) (actual time=68.700..172.416 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=67.880..71.089 rows=2736 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=21.738..21.882 rows=1525 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 760kB
                           Worker 0:  Sort Method: quicksort  Memory: 636kB
                           Worker 1:  Sort Method: quicksort  Memory: 671kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.022..19.745 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.00 rows=17 width=4) (actual time=0.036..0.036 rows=1 loops=2736)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 11.849 ms
 Execution Time: 173.645 ms
(30 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.56..12517.26 rows=1 width=72) (actual time=63.008..64.352 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.81..6242.82 rows=1 width=32) (actual time=28.687..28.759 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=28.567..28.748 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=26.542..26.543 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1985 width=6) (actual time=0.184..25.369 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7510.50 rows=729 width=72) (actual time=63.007..64.278 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7492.27 rows=729 width=38) (actual time=56.658..64.063 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=56.610..58.608 rows=2740 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=23.934..24.019 rows=1581 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 1063kB
                           Worker 0:  Sort Method: quicksort  Memory: 644kB
                           Worker 1:  Sort Method: quicksort  Memory: 553kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.019..21.902 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.00 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=2740)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 0.906 ms
 Execution Time: 64.406 ms
(30 rows)

