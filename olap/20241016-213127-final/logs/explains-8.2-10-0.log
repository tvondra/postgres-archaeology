query 1 run 1
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=3812278.57..3812278.58 rows=1 width=51)
   ->  Sort  (cost=3812278.57..3812278.59 rows=6 width=51)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=3812278.22..3812278.49 rows=6 width=51)
               ->  Seq Scan on lineitem  (cost=0.00..2329118.60 rows=59326385 width=51)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
(6 rows)

query 2 run 1
SET
SET
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1032002.60..1032002.61 rows=1 width=216)
   ->  Sort  (cost=1032002.60..1032002.61 rows=1 width=216)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         ->  Hash Join  (cost=85596.12..1032002.59 rows=1 width=216)
               Hash Cond: (partsupp.ps_partkey = part.p_partkey)
               Join Filter: (partsupp.ps_supplycost = (subplan))
               ->  Hash Join  (cost=4410.53..319464.89 rows=1579754 width=198)
                     Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..269251.96 rows=8001296 width=19)
                     ->  Hash  (cost=4160.53..4160.53 rows=20000 width=187)
                           ->  Hash Join  (cost=2.53..4160.53 rows=20000 width=187)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=162)
                                 ->  Hash  (cost=2.47..2.47 rows=5 width=33)
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=33)
                                             Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37)
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                         Filter: (r_name = 'AMERICA'::bpchar)
               ->  Hash  (cost=81082.55..81082.55 rows=8243 width=33)
                     ->  Seq Scan on part  (cost=0.00..81082.55 rows=8243 width=33)
                           Filter: ((p_size = 16) AND ((p_type)::text ~~ '%NICKEL'::text))
               SubPlan
                 ->  Aggregate  (cost=93.91..93.92 rows=1 width=11)
                       ->  Nested Loop  (cost=1.56..93.90 rows=4 width=11)
                             Join Filter: (nation.n_regionkey = region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Hash Join  (cost=1.56..92.59 rows=20 width=15)
                                   Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                   ->  Nested Loop  (cost=0.00..90.75 rows=20 width=15)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..5.04 rows=20 width=15)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4.27 rows=1 width=8)
                                               Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8)
(38 rows)

query 3 run 1
SET
SET
                                                   QUERY PLAN                                                    
-----------------------------------------------------------------------------------------------------------------
 Limit  (cost=4632341.87..4632341.89 rows=10 width=34)
   ->  Sort  (cost=4632341.87..4640283.03 rows=3176467 width=34)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))), orders.o_orderdate
         ->  GroupAggregate  (cost=4124207.94..4219501.95 rows=3176467 width=34)
               ->  Sort  (cost=4124207.94..4132149.10 rows=3176467 width=34)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=712556.70..3711368.02 rows=3176467 width=34)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2329118.60 rows=32481612 width=26)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=685623.85..685623.85 rows=1466948 width=12)
                                 ->  Hash Join  (cost=64680.40..685623.85 rows=1466948 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..506304.22 rows=7270527 width=16)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=60897.40..60897.40 rows=302640 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..60897.40 rows=302640 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(18 rows)

query 4 run 1
SET
SET
                                                     QUERY PLAN                                                     
--------------------------------------------------------------------------------------------------------------------
 Limit  (cost=410314.64..410314.65 rows=1 width=19)
   ->  Sort  (cost=410314.64..410314.65 rows=1 width=19)
         Sort Key: o_orderpriority
         ->  HashAggregate  (cost=410314.62..410314.63 rows=1 width=19)
               ->  Bitmap Heap Scan on orders  (cost=8749.19..408913.60 rows=280203 width=19)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8679.14 rows=560407 width=0)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using q4_idx_1 on lineitem  (cost=0.00..9.56 rows=64 width=152)
                             Index Cond: (l_orderkey = $0)
(12 rows)

query 5 run 1
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3533580.31..3533580.31 rows=1 width=51)
   ->  Sort  (cost=3533580.31..3533580.37 rows=25 width=51)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  HashAggregate  (cost=3533579.29..3533579.72 rows=25 width=51)
               ->  Hash Join  (cost=520615.71..3533212.27 rows=73404 width=51)
                     Hash Cond: ((orders.o_custkey = customer.c_custkey) AND (supplier.s_nationkey = customer.c_nationkey))
                     ->  Hash Join  (cost=433644.91..3358447.15 rows=1835614 width=63)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Hash Join  (cost=4410.53..2528484.31 rows=11997242 width=63)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..2179153.08 rows=59986208 width=30)
                                 ->  Hash  (cost=4160.53..4160.53 rows=20000 width=41)
                                       ->  Hash Join  (cost=2.53..4160.53 rows=20000 width=41)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=33)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=33)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=389338.21..389338.21 rows=2295134 width=8)
                                 ->  Bitmap Heap Scan on orders  (cost=36114.20..389338.21 rows=2295134 width=8)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..35540.41 rows=2295134 width=0)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                     ->  Hash  (cost=57147.52..57147.52 rows=1499952 width=8)
                           ->  Seq Scan on customer  (cost=0.00..57147.52 rows=1499952 width=8)
(29 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1389750.79..1389750.81 rows=1 width=22)
   ->  Aggregate  (cost=1389750.79..1389750.81 rows=1 width=22)
         ->  Bitmap Heap Scan on lineitem  (cost=267099.46..1386757.33 rows=1197385 width=22)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..266800.11 rows=1197385 width=0)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(6 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3353959.81..3353959.85 rows=1 width=84)
   ->  GroupAggregate  (cost=3353959.81..3356010.32 rows=58586 width=84)
         ->  Sort  (cost=3353959.81..3354106.28 rows=58586 width=84)
               Sort Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=1044389.26..3349320.31 rows=58586 width=84)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=1039306.26..3314067.01 rows=1464577 width=92)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=406556.54..2260675.53 rows=18321866 width=34)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..401976.07 rows=18321866 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=602538.15..602538.15 rows=1199086 width=66)
                                 ->  Hash Join  (cost=65492.35..602538.15 rows=1199086 width=66)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..468802.78 rows=15000578 width=8)
                                       ->  Hash  (cost=63993.60..63993.60 rows=119900 width=66)
                                             ->  Hash Join  (cost=21.30..63993.60 rows=119900 width=66)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..57147.52 rows=1499952 width=8)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=66)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=66)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=33)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=33)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33)
                     ->  Hash  (cost=3583.00..3583.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8)
(28 rows)

query 8 run 1
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1565747.38..1565747.38 rows=1 width=55)
   ->  Sort  (cost=1565747.38..1565749.20 rows=726 width=55)
         Sort Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  HashAggregate  (cost=1565687.47..1565712.88 rows=726 width=55)
               ->  Hash Join  (cost=574011.37..1565506.48 rows=24132 width=55)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=574009.81..1565052.45 rows=24132 width=30)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=569176.81..1559736.81 rows=24132 width=30)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..978148.97 rows=399921 width=30)
                                       ->  Index Scan using q2_idx_1 on part  (cost=0.00..71581.19 rows=13334 width=4)
                                             Index Cond: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..67.60 rows=31 width=34)
                                             Index Cond: (part.p_partkey = lineitem.l_partkey)
                                 ->  Hash  (cost=553442.32..553442.32 rows=905159 width=8)
                                       ->  Hash Join  (cost=140735.11..553442.32 rows=905159 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=71210.46..457894.37 rows=4525794 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..70079.01 rows=4525794 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=65774.77..65774.77 rows=299990 width=4)
                                                   ->  Hash Join  (cost=2.53..65774.77 rows=299990 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..57147.52 rows=1499952 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=3583.00..3583.00 rows=100000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=33)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33)
(37 rows)

query 9 run 1
SET
SET
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4366323.00..4366323.04 rows=1 width=76)
   ->  GroupAggregate  (cost=4366323.00..4366329.22 rows=166 width=76)
         ->  Sort  (cost=4366323.00..4366323.41 rows=166 width=76)
               Sort Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=3694684.43..4366316.88 rows=166 width=76)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=3694682.87..4366312.20 rows=166 width=51)
                           ->  Nested Loop  (cost=3694682.87..4365470.16 rows=166 width=51)
                                 ->  Merge Join  (cost=3694682.87..4364756.29 rows=168 width=55)
                                       Merge Cond: (partsupp.ps_partkey = part.p_partkey)
                                       Join Filter: (partsupp.ps_suppkey = lineitem.l_suppkey)
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..353134.13 rows=8001296 width=19)
                                       ->  Sort  (cost=3694682.87..3705286.51 rows=4241456 width=48)
                                             Sort Key: part.p_partkey
                                             ->  Hash Join  (cost=77850.17..3124228.17 rows=4241456 width=48)
                                                   Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                   ->  Seq Scan on lineitem  (cost=0.00..2179153.08 rows=59986208 width=44)
                                                   ->  Hash  (cost=76082.46..76082.46 rows=141417 width=4)
                                                         ->  Seq Scan on part  (cost=0.00..76082.46 rows=141417 width=4)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4.24 rows=1 width=8)
                                       Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..5.06 rows=1 width=8)
                                 Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=33)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33)
(26 rows)

query 10 run 1
SET
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3274574.94..3274574.99 rows=20 width=211)
   ->  Sort  (cost=3274574.94..3276025.04 rows=580039 width=211)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  GroupAggregate  (cost=3151946.86..3175148.42 rows=580039 width=211)
               ->  Sort  (cost=3151946.86..3153396.95 rows=580039 width=211)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=448973.43..3052520.33 rows=580039 width=211)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=448971.87..3044543.23 rows=580039 width=186)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=336454.95..2876916.68 rows=580039 width=26)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..2329118.60 rows=14948563 width=26)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=329179.24..329179.24 rows=582057 width=8)
                                             ->  Bitmap Heap Scan on orders  (cost=9159.16..329179.24 rows=582057 width=8)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..9013.64 rows=582057 width=0)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=57147.52..57147.52 rows=1499952 width=164)
                                       ->  Seq Scan on customer  (cost=0.00..57147.52 rows=1499952 width=164)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=33)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33)
(23 rows)

query 11 run 1
SET
SET
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=680392.09..680392.09 rows=1 width=19)
   InitPlan
     ->  Aggregate  (cost=305805.81..305805.83 rows=1 width=15)
           ->  Hash Join  (cost=2599.60..305015.93 rows=315951 width=15)
                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..269251.96 rows=8001296 width=19)
                 ->  Hash  (cost=2549.60..2549.60 rows=4000 width=4)
                       ->  Nested Loop  (cost=55.26..2549.60 rows=4000 width=4)
                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Bitmap Heap Scan on supplier  (cost=55.26..2498.29 rows=4000 width=8)
                                   Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.26 rows=4000 width=0)
                                         Index Cond: (supplier.s_nationkey = nation.n_nationkey)
   ->  Sort  (cost=374586.26..375376.14 rows=315951 width=19)
         Sort Key: sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))
         ->  GroupAggregate  (cost=333877.01..345725.18 rows=315951 width=19)
               Filter: (sum((ps_supplycost * (ps_availqty)::numeric)) > $0)
               ->  Sort  (cost=333877.01..334666.89 rows=315951 width=19)
                     Sort Key: partsupp.ps_partkey
                     ->  Hash Join  (cost=2599.60..305015.93 rows=315951 width=19)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..269251.96 rows=8001296 width=23)
                           ->  Hash  (cost=2549.60..2549.60 rows=4000 width=4)
                                 ->  Nested Loop  (cost=55.26..2549.60 rows=4000 width=4)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=55.26..2498.29 rows=4000 width=8)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.26 rows=4000 width=0)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
(31 rows)

query 12 run 1
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1406228.78..1406228.79 rows=1 width=33)
   ->  Sort  (cost=1406228.78..1406228.79 rows=1 width=33)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=1406228.75..1406228.77 rows=1 width=33)
               ->  Merge Join  (cost=736868.74..1404277.02 rows=260230 width=33)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..626069.74 rows=15000578 width=23)
                     ->  Sort  (cost=736868.74..737519.31 rows=260230 width=18)
                           Sort Key: lineitem.l_orderkey
                           ->  Bitmap Heap Scan on lineitem  (cost=320567.12..713461.79 rows=260230 width=18)
                                 Recheck Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate))
                                 ->  Bitmap Index Scan on q12_idx_1  (cost=0.00..320502.06 rows=260230 width=0)
                                       Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(13 rows)

query 13 run 1
SET
SET
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2871259.94..2871259.94 rows=1 width=8)
   ->  Sort  (cost=2871259.94..2871260.44 rows=200 width=8)
         Sort Key: count(*), c_orders.c_count
         ->  HashAggregate  (cost=2871249.79..2871252.29 rows=200 width=8)
               ->  GroupAggregate  (cost=2456388.06..2848750.51 rows=1499952 width=8)
                     ->  Merge Left Join  (cost=2456388.06..2755755.47 rows=14849128 width=8)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..72880.61 rows=1499952 width=4)
                           ->  Sort  (cost=2456388.06..2493510.88 rows=14849128 width=8)
                                 Sort Key: orders.o_custkey
                                 ->  Seq Scan on orders  (cost=0.00..506304.22 rows=14849128 width=8)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(12 rows)

query 14 run 1
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1026788.21..1026788.24 rows=1 width=46)
   ->  Aggregate  (cost=1026788.21..1026788.24 rows=1 width=46)
         ->  Hash Join  (cost=128430.68..1023022.14 rows=753213 width=46)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=16721.85..866970.02 rows=753213 width=26)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16533.54 rows=753213 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=71082.37..71082.37 rows=2000037 width=28)
                     ->  Seq Scan on part  (cost=0.00..71082.37 rows=2000037 width=28)
(10 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3091421.36..3091422.64 rows=1 width=113)
   InitPlan
     ->  Aggregate  (cost=1542678.69..1542678.70 rows=1 width=32)
           ->  HashAggregate  (cost=1542562.89..1542630.44 rows=3860 width=26)
                 ->  Bitmap Heap Scan on lineitem  (cost=51532.21..1530952.74 rows=2322029 width=26)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..50951.70 rows=2322029 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1548742.66..1553686.81 rows=3860 width=113)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4636.26 rows=100000 width=81)
         ->  Sort  (cost=1548742.66..1548752.31 rows=3860 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=1548367.96..1548512.71 rows=3860 width=36)
                     ->  HashAggregate  (cost=1548367.96..1548474.11 rows=3860 width=26)
                           Filter: (sum((l_extendedprice * (1::numeric - l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=51532.21..1530952.74 rows=2322029 width=26)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..50951.70 rows=2322029 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=528908.75..528908.76 rows=1 width=46)
   ->  Sort  (cost=528908.75..528973.81 rows=26022 width=46)
         Sort Key: count(DISTINCT partsupp.ps_suppkey), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=519734.77..527000.37 rows=26022 width=46)
               ->  Sort  (cost=519734.77..521122.84 rows=555226 width=46)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=108385.61..453201.17 rows=555226 width=46)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=3833.03..293088.23 rows=4000648 width=8)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..3833.00 rows=10 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=101082.93..101082.93 rows=277573 width=46)
                                 ->  Seq Scan on part  (cost=0.00..101082.93 rows=277573 width=46)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 17 run 1
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=11441276.17..11441276.18 rows=1 width=13)
   ->  Aggregate  (cost=11441276.17..11441276.18 rows=1 width=13)
         ->  Nested Loop  (cost=10888702.23..11441228.00 rows=19265 width=13)
               ->  Merge Join  (cost=10888702.23..11391250.56 rows=1844 width=40)
                     Merge Cond: (part_agg.agg_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=10807514.53..11286114.93 rows=1913589 width=14)
                           ->  Sort  (cost=10807514.53..10957480.05 rows=59986208 width=14)
                                 Sort Key: public.lineitem.l_partkey
                                 ->  Seq Scan on lineitem  (cost=0.00..2179153.08 rows=59986208 width=14)
                     ->  Sort  (cost=81187.69..81192.51 rows=1927 width=4)
                           Sort Key: part.p_partkey
                           ->  Seq Scan on part  (cost=0.00..81082.55 rows=1927 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using q17_idx_1 on lineitem  (cost=0.00..26.95 rows=10 width=27)
                     Index Cond: ((part.p_partkey = public.lineitem.l_partkey) AND (public.lineitem.l_quantity < part_agg.avg_quantity))
(15 rows)

query 18 run 1
SET
SET
                                                                        QUERY PLAN                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6482312.21..6482315.21 rows=100 width=57)
   ->  GroupAggregate  (cost=6482312.21..6520058.87 rows=1258222 width=57)
         ->  Sort  (cost=6482312.21..6485457.76 rows=1258222 width=57)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=3901289.65..6317973.23 rows=1258222 width=57)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..2179153.08 rows=59986208 width=14)
                     ->  Hash  (cost=3897356.65..3897356.65 rows=314640 width=51)
                           ->  Hash Join  (cost=3203776.26..3897356.65 rows=314640 width=51)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge IN Join  (cost=3116160.34..3786810.93 rows=314640 width=29)
                                       Merge Cond: (orders.o_orderkey = "IN_subquery".l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..626069.74 rows=15000578 width=25)
                                       ->  Materialize  (cost=3116160.34..3119306.74 rows=314640 width=4)
                                             ->  GroupAggregate  (cost=0.00..3112699.30 rows=314640 width=14)
                                                   Filter: (sum(l_quantity) > 313::numeric)
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2808048.66 rows=59986208 width=14)
                                 ->  Hash  (cost=57147.52..57147.52 rows=1499952 width=26)
                                       ->  Seq Scan on customer  (cost=0.00..57147.52 rows=1499952 width=26)
(19 rows)

query 19 run 1
SET
SET


 Limit  (cost=3571679.50..3571679.51 rows=1 width=22)
   ->  Aggregate  (cost=3571679.50..3571679.51 rows=1 width=22)
         ->  Hash Join  (cost=127184.08..3571676.89 rows=1042 width=22)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..3378877.24 rows=1087299 width=36)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=106083.02..106083.02 rows=991125 width=36)
                     ->  Seq Scan on part  (cost=0.00..106083.02 rows=991125 width=36)
                           Filter: ((p_size >= 1) AND (((p_size <= 5) AND (p_size >= 1)) OR ((p_size <= 10) AND (p_size >= 1)) OR ((p_size <= 15) AND (p_size >= 1))))
(10 rows)

query 20 run 1
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3367798.13..3367798.14 rows=1 width=58)
   ->  Sort  (cost=3367798.13..3367798.14 rows=1 width=58)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=3367792.54..3367798.12 rows=1 width=58)
               ->  Nested Loop  (cost=3367792.54..3367796.84 rows=1 width=62)
                     ->  HashAggregate  (cost=3367792.54..3367792.55 rows=1 width=8)
                           ->  Nested Loop  (cost=3208992.87..3367792.54 rows=1 width=8)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > agg_lineitem.agg_quantity)
                                 ->  Merge Join  (cost=3208992.87..3325652.46 rows=9227 width=44)
                                       Merge Cond: (agg_lineitem.agg_partkey = part.p_partkey)
                                       ->  GroupAggregate  (cost=3131213.22..3236261.25 rows=913462 width=18)
                                             ->  Sort  (cost=3131213.22..3154049.74 rows=9134610 width=18)
                                                   Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                                   ->  Bitmap Heap Scan on lineitem  (cost=202699.16..1919009.31 rows=9134610 width=18)
                                                         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..200415.51 rows=9134610 width=0)
                                                               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Sort  (cost=77779.65..77830.16 rows=20202 width=4)
                                             Sort Key: part.p_partkey
                                             ->  HashAggregate  (cost=76132.97..76334.99 rows=20202 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..76082.46 rows=20202 width=4)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..4.55 rows=1 width=12)
                                       Index Cond: ((agg_lineitem.agg_partkey = partsupp.ps_partkey) AND (agg_lineitem.agg_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4.27 rows=1 width=66)
                           Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..1.27 rows=1 width=4)
                     Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     Filter: (n_name = 'IRAQ'::bpchar)
(29 rows)

query 21 run 1
SET
SET
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9911568.10..9911568.35 rows=100 width=29)
   ->  Sort  (cost=9911568.10..9911812.89 rows=97917 width=29)
         Sort Key: count(*), supplier.s_name
         ->  HashAggregate  (cost=9902227.17..9903451.13 rows=97917 width=29)
               ->  Hash Join  (cost=1036107.42..9901737.59 rows=97917 width=29)
                     Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                     ->  Hash Join  (cost=402111.90..9225128.42 rows=199954 width=33)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem l1  (cost=399512.30..9201783.59 rows=4998851 width=8)
                                 Recheck Cond: (l_receiptdate > l_commitdate)
                                 Filter: ((subplan) AND (NOT (subplan)))
                                 ->  Bitmap Index Scan on q21_idx_2  (cost=0.00..398262.59 rows=19995403 width=0)
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..16.84 rows=64 width=152)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..16.36 rows=191 width=152)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=2549.60..2549.60 rows=4000 width=33)
                                 ->  Nested Loop  (cost=55.26..2549.60 rows=4000 width=33)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=55.26..2498.29 rows=4000 width=37)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.26 rows=4000 width=0)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash  (cost=506304.22..506304.22 rows=7345783 width=4)
                           ->  Seq Scan on orders  (cost=0.00..506304.22 rows=7345783 width=4)
                                 Filter: (o_orderstatus = 'F'::bpchar)
(30 rows)

query 22 run 1
SET
SET
                                                           QUERY PLAN                                                            
---------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1327741.12..1327741.15 rows=1 width=30)
   InitPlan
     ->  Aggregate  (cost=81639.31..81639.32 rows=1 width=11)
           ->  Seq Scan on customer  (cost=0.00..81521.74 rows=47027 width=11)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  GroupAggregate  (cost=1246101.80..1246360.40 rows=8620 width=30)
         ->  Sort  (cost=1246101.80..1246123.35 rows=8620 width=30)
               Sort Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Bitmap Heap Scan on customer  (cost=91194.84..1245538.33 rows=8620 width=30)
                     Recheck Cond: (c_acctbal > $0)
                     Filter: (("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (NOT (subplan)))
                     ->  Bitmap Index Scan on q10_idx_1  (cost=0.00..91192.69 rows=499984 width=0)
                           Index Cond: (c_acctbal > $0)
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..37.37 rows=17 width=124)
                             Index Cond: (o_custkey = $1)
(16 rows)

