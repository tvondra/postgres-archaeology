query 1 run 1
SET
SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3950235.62..3950235.62 rows=1 width=236) (actual time=76334.298..76334.300 rows=1 loops=1)
   ->  Sort  (cost=3950235.62..3950235.63 rows=6 width=236) (actual time=76334.297..76334.297 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3950235.42..3950235.59 rows=6 width=236) (actual time=76334.268..76334.276 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1875052.70 rows=59290935 width=25) (actual time=0.451..11639.443 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning Time: 23.381 ms
 Execution Time: 76335.026 ms
(12 rows)

SET
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3950235.62..3950235.62 rows=1 width=236) (actual time=73673.794..73673.795 rows=1 loops=1)
   ->  Sort  (cost=3950235.62..3950235.63 rows=6 width=236) (actual time=73673.793..73673.794 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3950235.42..3950235.59 rows=6 width=236) (actual time=73673.766..73673.774 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1875052.70 rows=59290935 width=25) (actual time=0.026..9837.215 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning Time: 1.311 ms
 Execution Time: 73673.866 ms
(12 rows)

query 2 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=461405.45..461405.46 rows=1 width=192) (actual time=31793.342..31793.357 rows=100 loops=1)
   ->  Sort  (cost=461405.45..461405.46 rows=1 width=192) (actual time=31793.341..31793.349 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Nested Loop  (cost=52.83..461405.44 rows=1 width=192) (actual time=32.506..31790.367 rows=4737 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.431..0.437 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.221..0.222 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.204..0.207 rows=25 loops=1)
               ->  Materialize  (cost=52.83..461402.74 rows=1 width=170) (actual time=5.290..6356.959 rows=4737 loops=5)
                     ->  Nested Loop  (cost=52.83..461402.74 rows=1 width=170) (actual time=26.446..31774.219 rows=4737 loops=1)
                           Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
                           Rows Removed by Join Filter: 236714834
                           ->  Nested Loop  (cost=52.83..456931.74 rows=1 width=34) (actual time=2.046..1146.855 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..54317.05 rows=7387 width=30) (actual time=0.261..269.180 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=52.41..54.49 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=51.96..51.97 rows=1 width=32) (actual time=0.104..0.104 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.41..51.95 rows=4 width=6) (actual time=0.091..0.100 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.41..50.65 rows=19 width=10) (actual time=0.076..0.097 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.85..49.03 rows=19 width=10) (actual time=0.074..0.094 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.77 rows=19 width=10) (actual time=0.067..0.068 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.42..2.43 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.009..0.010 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.005 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..2.665 rows=49972 loops=4737)
 Planning Time: 23.926 ms
 Execution Time: 31793.722 ms
(50 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=461405.45..461405.46 rows=1 width=192) (actual time=30541.880..30541.895 rows=100 loops=1)
   ->  Sort  (cost=461405.45..461405.46 rows=1 width=192) (actual time=30541.879..30541.887 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Nested Loop  (cost=52.83..461405.44 rows=1 width=192) (actual time=14.340..30539.045 rows=4737 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.010..0.017 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.004 rows=25 loops=1)
               ->  Materialize  (cost=52.83..461402.74 rows=1 width=170) (actual time=2.185..6106.780 rows=4737 loops=5)
                     ->  Nested Loop  (cost=52.83..461402.74 rows=1 width=170) (actual time=10.922..30523.404 rows=4737 loops=1)
                           Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
                           Rows Removed by Join Filter: 236714834
                           ->  Nested Loop  (cost=52.83..456931.74 rows=1 width=34) (actual time=0.068..321.116 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..54317.05 rows=7387 width=30) (actual time=0.007..86.021 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=52.41..54.49 rows=1 width=14) (actual time=0.001..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=51.96..51.97 rows=1 width=32) (actual time=0.024..0.024 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.41..51.95 rows=4 width=6) (actual time=0.017..0.021 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.41..50.65 rows=19 width=10) (actual time=0.009..0.018 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.85..49.03 rows=19 width=10) (actual time=0.008..0.016 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.77 rows=19 width=10) (actual time=0.004..0.005 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.42..2.43 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.010..0.010 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.005 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..2.664 rows=49972 loops=4737)
 Planning Time: 2.407 ms
 Execution Time: 30541.985 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3209769.19..3209769.22 rows=10 width=44) (actual time=27190.642..27190.646 rows=10 loops=1)
   ->  Sort  (cost=3209769.19..3217775.36 rows=3202468 width=44) (actual time=27190.640..27190.644 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=3063005.24..3140565.01 rows=3202468 width=44) (actual time=27047.627..27171.325 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 64  Batches: 65  Memory Usage: 34321kB  Disk Usage: 12176kB
               ->  Hash Join  (cost=524087.21..2875861.01 rows=3202468 width=24) (actual time=7238.801..26825.013 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1875052.70 rows=32365979 width=16) (actual time=0.435..11360.022 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=498286.67..498286.67 rows=1484203 width=12) (actual time=7235.188..7235.190 rows=1451805 loops=1)
                           Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                           ->  Hash Join  (cost=127209.85..498286.67 rows=1484203 width=12) (actual time=1052.862..6913.426 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=68680.09..420699.14 rows=7260084 width=16) (actual time=544.895..4771.192 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=261268
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..66865.07 rows=7260084 width=0) (actual time=493.934..493.934 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54696.70..54696.70 rows=306645 width=4) (actual time=507.317..507.317 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54696.70 rows=306645 width=4) (actual time=0.692..452.444 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Planning Time: 34.337 ms
 Execution Time: 27193.450 ms
(28 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3209769.19..3209769.22 rows=10 width=44) (actual time=22388.919..22388.924 rows=10 loops=1)
   ->  Sort  (cost=3209769.19..3217775.36 rows=3202468 width=44) (actual time=22388.918..22388.921 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=3063005.24..3140565.01 rows=3202468 width=44) (actual time=22245.401..22369.418 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 64  Batches: 65  Memory Usage: 34321kB  Disk Usage: 12176kB
               ->  Hash Join  (cost=524087.21..2875861.01 rows=3202468 width=24) (actual time=4616.653..22038.338 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1875052.70 rows=32365979 width=16) (actual time=0.024..9347.250 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=498286.67..498286.67 rows=1484203 width=12) (actual time=4614.794..4614.797 rows=1451805 loops=1)
                           Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                           ->  Hash Join  (cost=127209.85..498286.67 rows=1484203 width=12) (actual time=895.940..4341.307 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=68680.09..420699.14 rows=7260084 width=16) (actual time=520.175..2439.260 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=261268
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..66865.07 rows=7260084 width=0) (actual time=470.003..470.003 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54696.70..54696.70 rows=306645 width=4) (actual time=375.104..375.105 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54696.70 rows=306645 width=4) (actual time=0.031..323.394 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Planning Time: 2.608 ms
 Execution Time: 22391.439 ms
(28 rows)

query 4 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=765407.93..765407.93 rows=1 width=24) (actual time=9904.589..9904.591 rows=1 loops=1)
   ->  Sort  (cost=765407.93..765407.94 rows=5 width=24) (actual time=9904.587..9904.588 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=765407.86..765407.91 rows=5 width=24) (actual time=9904.559..9904.562 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Merge Semi Join  (cost=327783.05..762688.07 rows=543958 width=16) (actual time=4843.428..9798.529 rows=513822 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=327765.23..329125.30 rows=544031 width=20) (actual time=4843.038..4908.817 rows=560424 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: external merge  Disk: 16456kB
                           ->  Bitmap Heap Scan on orders  (cost=6508.75..275937.22 rows=544031 width=20) (actual time=109.488..4665.547 rows=560424 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=231887
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6372.75 rows=544031 width=0) (actual time=64.019..64.019 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.44..374956.32 rows=19997592 width=4) (actual time=0.381..3127.607 rows=37929279 loops=1)
                           Heap Fetches: 0
 Planning Time: 28.535 ms
 Execution Time: 9908.020 ms
(21 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=765407.93..765407.93 rows=1 width=24) (actual time=6462.910..6462.911 rows=1 loops=1)
   ->  Sort  (cost=765407.93..765407.94 rows=5 width=24) (actual time=6462.908..6462.909 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=765407.86..765407.91 rows=5 width=24) (actual time=6462.889..6462.891 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Merge Semi Join  (cost=327783.05..762688.07 rows=543958 width=16) (actual time=1566.363..6360.916 rows=513822 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=327765.23..329125.30 rows=544031 width=20) (actual time=1566.308..1632.499 rows=560424 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: external merge  Disk: 16456kB
                           ->  Bitmap Heap Scan on orders  (cost=6508.75..275937.22 rows=544031 width=20) (actual time=108.628..1436.282 rows=560424 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=231887
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6372.75 rows=544031 width=0) (actual time=63.864..63.864 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.44..374956.32 rows=19997592 width=4) (actual time=0.047..2977.976 rows=37929279 loops=1)
                           Heap Fetches: 0
 Planning Time: 2.553 ms
 Execution Time: 6465.227 ms
(21 rows)

query 5 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1636705.14..1636705.15 rows=1 width=58) (actual time=9922.223..9922.229 rows=1 loops=1)
   ->  Sort  (cost=1636705.14..1636705.21 rows=25 width=58) (actual time=9922.221..9922.227 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=1635789.02..1636705.02 rows=25 width=58) (actual time=9897.571..9922.197 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=1635789.02..1635972.16 rows=73255 width=38) (actual time=9891.391..9894.533 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=95427.29..1629869.78 rows=73255 width=38) (actual time=880.855..9850.221 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=90706.29..1615535.04 rows=1831186 width=50) (actual time=833.613..9410.167 rows=1815327 loops=1)
                                 ->  Hash Join  (cost=90705.72..399476.49 rows=457858 width=38) (actual time=832.973..6027.819 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=27381.66..322989.01 rows=2289290 width=8) (actual time=224.283..4778.964 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=261246
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..26809.34 rows=2289290 width=0) (actual time=173.273..173.273 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59574.13..59574.13 rows=299995 width=38) (actual time=608.230..608.233 rows=299436 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                             ->  Hash Join  (cost=2.51..59574.13 rows=299995 width=38) (actual time=1.359..544.295 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50946.76 rows=1499976 width=8) (actual time=0.740..372.607 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.611..0.613 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.605..0.610 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.295..0.296 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.304..0.305 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.300..0.301 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.006..0.007 rows=4 loops=453399)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=45.262..45.263 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.329..29.280 rows=100000 loops=1)
 Planning Time: 39.944 ms
 Execution Time: 9923.051 ms
(42 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1636705.14..1636705.15 rows=1 width=58) (actual time=5146.999..5147.006 rows=1 loops=1)
   ->  Sort  (cost=1636705.14..1636705.21 rows=25 width=58) (actual time=5146.998..5147.004 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=1635789.02..1636705.02 rows=25 width=58) (actual time=5123.154..5146.985 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=1635789.02..1635972.16 rows=73255 width=38) (actual time=5117.229..5120.271 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=95427.29..1629869.78 rows=73255 width=38) (actual time=735.481..5085.467 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=90706.29..1615535.04 rows=1831186 width=50) (actual time=695.879..4673.213 rows=1815327 loops=1)
                                 ->  Hash Join  (cost=90705.72..399476.49 rows=457858 width=38) (actual time=695.844..2657.985 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=27381.66..322989.01 rows=2289290 width=8) (actual time=213.837..1609.508 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=261246
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..26809.34 rows=2289290 width=0) (actual time=163.740..163.740 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59574.13..59574.13 rows=299995 width=38) (actual time=481.647..481.650 rows=299436 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                             ->  Hash Join  (cost=2.51..59574.13 rows=299995 width=38) (actual time=0.060..420.732 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50946.76 rows=1499976 width=8) (actual time=0.019..255.200 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.034..0.036 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.028..0.034 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.008..0.010 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.010..0.012 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.003..0.004 rows=4 loops=453399)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=39.114..39.114 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.016..21.934 rows=100000 loops=1)
 Planning Time: 5.125 ms
 Execution Time: 5147.201 ms
(42 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2067507.66..2067507.67 rows=1 width=32) (actual time=14334.471..14334.472 rows=1 loops=1)
   ->  Aggregate  (cost=2067507.66..2067507.67 rows=1 width=32) (actual time=14334.469..14334.470 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=231567.48..2061413.53 rows=1218827 width=12) (actual time=1400.989..13638.692 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 13724091
               Heap Blocks: exact=395900 lossy=267068
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231262.78 rows=1218827 width=0) (actual time=1318.470..1318.471 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 19.853 ms
 Execution Time: 14335.698 ms
(10 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2067507.66..2067507.67 rows=1 width=32) (actual time=6506.071..6506.072 rows=1 loops=1)
   ->  Aggregate  (cost=2067507.66..2067507.67 rows=1 width=32) (actual time=6506.069..6506.070 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=231567.48..2061413.53 rows=1218827 width=12) (actual time=1269.626..6135.303 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 13724091
               Heap Blocks: exact=395900 lossy=267068
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231262.78 rows=1218827 width=0) (actual time=1188.129..1188.129 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 1.360 ms
 Execution Time: 6506.273 ms
(10 rows)

query 7 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2717562.75..2717562.87 rows=1 width=116) (actual time=19135.776..19135.783 rows=1 loops=1)
   ->  GroupAggregate  (cost=2717562.75..2718771.01 rows=10000 width=116) (actual time=19135.767..19135.773 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2717562.75..2717713.93 rows=60472 width=96) (actual time=19127.695..19128.426 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=563407.65..2712760.07 rows=60472 width=96) (actual time=5234.620..19092.288 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=3629.40..2111308.61 rows=1453091 width=46) (actual time=36.886..13082.609 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2025034.64 rows=18163642 width=24) (actual time=0.446..10827.321 rows=18230325 loops=1)
                                 Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Filter: 41755727
                           ->  Hash  (cost=3529.40..3529.40 rows=8000 width=30) (actual time=36.424..36.426 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3529.40 rows=8000 width=30) (actual time=0.535..34.804 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.329..24.730 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.197..0.197 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.188..0.192 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536574.05..536574.05 rows=1200016 width=30) (actual time=5193.172..5193.175 rows=1191175 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 22152kB
                           ->  Hash Join  (cost=57053.06..536574.05 rows=1200016 width=30) (actual time=546.251..4931.185 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411270.06 rows=15000206 width=8) (actual time=0.840..1722.219 rows=15000000 loops=1)
                                 ->  Hash  (cost=55553.09..55553.09 rows=119998 width=30) (actual time=545.331..545.332 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55553.09 rows=119998 width=30) (actual time=0.757..519.617 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.76 rows=1499976 width=8) (actual time=0.733..371.483 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.016..0.016 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.011..0.013 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 34.311 ms
 Execution Time: 19136.557 ms
(42 rows)

SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2717562.75..2717562.87 rows=1 width=116) (actual time=15795.388..15795.395 rows=1 loops=1)
   ->  GroupAggregate  (cost=2717562.75..2718771.01 rows=10000 width=116) (actual time=15795.387..15795.393 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2717562.75..2717713.93 rows=60472 width=96) (actual time=15787.418..15788.116 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=563407.65..2712760.07 rows=60472 width=96) (actual time=4300.072..15753.523 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=3629.40..2111308.61 rows=1453091 width=46) (actual time=19.890..10713.453 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2025034.64 rows=18163642 width=24) (actual time=0.035..8794.544 rows=18230325 loops=1)
                                 Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Filter: 41755727
                           ->  Hash  (cost=3529.40..3529.40 rows=8000 width=30) (actual time=19.844..19.846 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3529.40 rows=8000 width=30) (actual time=0.016..18.611 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.002..5.854 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.010..0.011 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536574.05..536574.05 rows=1200016 width=30) (actual time=4278.013..4278.015 rows=1191175 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 22152kB
                           ->  Hash Join  (cost=57053.06..536574.05 rows=1200016 width=30) (actual time=300.972..4034.466 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411270.06 rows=15000206 width=8) (actual time=0.031..1291.653 rows=15000000 loops=1)
                                 ->  Hash  (cost=55553.09..55553.09 rows=119998 width=30) (actual time=300.869..300.871 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55553.09 rows=119998 width=30) (actual time=0.019..280.276 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.76 rows=1499976 width=8) (actual time=0.003..88.763 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.013 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.010 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 3.477 ms
 Execution Time: 15795.538 ms
(42 rows)

query 8 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=576242.41..576242.66 rows=1 width=64) (actual time=11161.898..11161.904 rows=1 loops=1)
   ->  GroupAggregate  (cost=576242.41..576832.49 rows=2406 width=64) (actual time=11161.897..11161.903 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=576242.41..576302.63 rows=24087 width=70) (actual time=11156.046..11156.489 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=225775.13..574489.36 rows=24087 width=70) (actual time=5375.339..11138.697 rows=23842 loops=1)
                     ->  Hash Join  (cost=225774.99..573811.22 rows=24087 width=20) (actual time=5375.322..11098.907 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=221303.99..569276.99 rows=24087 width=20) (actual time=5331.455..11043.078 rows=23842 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=157979.92..505260.41 rows=120437 width=24) (actual time=4739.838..10415.874 rows=118593 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=54096.21..383210.71 rows=4523100 width=12) (actual time=374.984..5040.139 rows=4557513 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..52965.43 rows=4523100 width=0) (actual time=323.614..323.615 rows=4557513 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=98891.06..98891.06 rows=399412 width=20) (actual time=4364.543..4364.544 rows=389521 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25019kB
                                             ->  Nested Loop  (cost=0.99..98891.06 rows=399412 width=20) (actual time=2.565..4210.776 rows=389521 loops=1)
                                                   ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..53965.21 rows=13315 width=4) (actual time=1.146..353.053 rows=13011 loops=1)
                                                         Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.07 rows=30 width=24) (actual time=0.228..0.290 rows=30 loops=13011)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=59574.13..59574.13 rows=299995 width=4) (actual time=591.031..591.033 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                       ->  Hash Join  (cost=2.51..59574.13 rows=299995 width=4) (actual time=1.464..540.718 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.76 rows=1499976 width=8) (actual time=0.802..372.932 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.653..0.654 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.648..0.653 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.318..0.319 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.323..0.323 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.319..0.320 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=43.597..43.598 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.332..28.662 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Cache Mode: logical
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.003..0.003 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 43.584 ms
 Execution Time: 11162.587 ms
(53 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=576242.41..576242.66 rows=1 width=64) (actual time=3802.323..3802.329 rows=1 loops=1)
   ->  GroupAggregate  (cost=576242.41..576832.49 rows=2406 width=64) (actual time=3802.321..3802.327 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=576242.41..576302.63 rows=24087 width=70) (actual time=3796.570..3797.010 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=225775.13..574489.36 rows=24087 width=70) (actual time=1266.923..3784.857 rows=23842 loops=1)
                     ->  Hash Join  (cost=225774.99..573811.22 rows=24087 width=20) (actual time=1266.909..3758.826 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=221303.99..569276.99 rows=24087 width=20) (actual time=1229.989..3712.069 rows=23842 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=157979.92..505260.41 rows=120437 width=24) (actual time=780.211..3233.116 rows=118593 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=54096.21..383210.71 rows=4523100 width=12) (actual time=350.187..1948.548 rows=4557513 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..52965.43 rows=4523100 width=0) (actual time=299.649..299.650 rows=4557513 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=98891.06..98891.06 rows=399412 width=20) (actual time=429.708..429.709 rows=389521 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25019kB
                                             ->  Nested Loop  (cost=0.99..98891.06 rows=399412 width=20) (actual time=0.085..347.887 rows=389521 loops=1)
                                                   ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..53965.21 rows=13315 width=4) (actual time=0.052..132.450 rows=13011 loops=1)
                                                         Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.07 rows=30 width=24) (actual time=0.007..0.014 rows=30 loops=13011)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=59574.13..59574.13 rows=299995 width=4) (actual time=449.112..449.114 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                       ->  Hash Join  (cost=2.51..59574.13 rows=299995 width=4) (actual time=0.069..401.552 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.76 rows=1499976 width=8) (actual time=0.023..241.770 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.038..0.039 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.033..0.038 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.012..0.014 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=36.635..36.636 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.015..20.853 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Cache Mode: logical
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 5.516 ms
 Execution Time: 3802.616 ms
(53 rows)

query 9 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1454041.70..1454041.70 rows=1 width=90) (actual time=25045.883..25045.888 rows=1 loops=1)
   ->  Sort  (cost=1454041.70..1454192.07 rows=60150 width=90) (actual time=25045.882..25045.886 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1452838.70..1453740.95 rows=60150 width=90) (actual time=25045.359..25045.802 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=752647.65..1410419.61 rows=2423948 width=81) (actual time=12953.620..22030.555 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=752646.08..1396916.65 rows=2423948 width=31) (actual time=12953.308..21022.821 rows=3248192 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..411270.06 rows=15000206 width=8) (actual time=0.636..2475.427 rows=15000000 loops=1)
                           ->  Hash  (cost=705776.73..705776.73 rows=2423948 width=31) (actual time=12951.822..12951.825 rows=3248192 loops=1)
                                 Buckets: 524288  Batches: 8  Memory Usage: 30530kB
                                 ->  Hash Join  (cost=4485.24..705776.73 rows=2423948 width=31) (actual time=48.191..12096.201 rows=3248192 loops=1)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Merge Join  (cost=14.24..694942.60 rows=2423948 width=35) (actual time=2.905..11283.454 rows=3248192 loops=1)
                                             Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                             Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                             Rows Removed by Join Filter: 4873781
                                             ->  Nested Loop  (cost=0.99..336917.91 rows=2423948 width=33) (actual time=2.503..6745.109 rows=3248192 loops=1)
                                                   ->  Index Only Scan using q20_idx_2 on part  (cost=0.43..64305.57 rows=80806 width=4) (actual time=0.023..495.760 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.07 rows=30 width=29) (actual time=0.039..0.054 rows=30 loops=108312)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                             ->  Materialize  (cost=0.43..201523.00 rows=7999918 width=14) (actual time=0.364..2762.236 rows=12548878 loops=1)
                                                   ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..181523.20 rows=7999918 width=14) (actual time=0.360..1081.045 rows=7999980 loops=1)
                                                         Heap Fetches: 0
                                       ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=44.999..45.000 rows=100000 loops=1)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.663..29.164 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.304..0.304 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.284..0.290 rows=25 loops=1)
 Planning Time: 43.992 ms
 Execution Time: 25046.715 ms
(39 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1454041.70..1454041.70 rows=1 width=90) (actual time=19395.588..19395.594 rows=1 loops=1)
   ->  Sort  (cost=1454041.70..1454192.07 rows=60150 width=90) (actual time=19395.586..19395.591 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1452838.70..1453740.95 rows=60150 width=90) (actual time=19395.063..19395.513 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=752647.65..1410419.61 rows=2423948 width=81) (actual time=7569.250..16284.521 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=752646.08..1396916.65 rows=2423948 width=31) (actual time=7569.223..15213.473 rows=3248192 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..411270.06 rows=15000206 width=8) (actual time=0.037..2085.830 rows=15000000 loops=1)
                           ->  Hash  (cost=705776.73..705776.73 rows=2423948 width=31) (actual time=7568.369..7568.372 rows=3248192 loops=1)
                                 Buckets: 524288  Batches: 8  Memory Usage: 30530kB
                                 ->  Hash Join  (cost=4485.24..705776.73 rows=2423948 width=31) (actual time=29.907..6771.987 rows=3248192 loops=1)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Merge Join  (cost=14.24..694942.60 rows=2423948 width=35) (actual time=0.088..6022.740 rows=3248192 loops=1)
                                             Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                             Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                             Rows Removed by Join Filter: 4873781
                                             ->  Nested Loop  (cost=0.99..336917.91 rows=2423948 width=33) (actual time=0.044..1902.031 rows=3248192 loops=1)
                                                   ->  Index Only Scan using q20_idx_2 on part  (cost=0.43..64305.57 rows=80806 width=4) (actual time=0.021..381.056 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.07 rows=30 width=29) (actual time=0.003..0.011 rows=30 loops=108312)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                             ->  Materialize  (cost=0.43..201523.00 rows=7999918 width=14) (actual time=0.016..2422.548 rows=12548878 loops=1)
                                                   ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..181523.20 rows=7999918 width=14) (actual time=0.013..819.335 rows=7999980 loops=1)
                                                         Heap Fetches: 0
                                       ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=29.542..29.543 rows=100000 loops=1)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.007..13.875 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.019..0.019 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.009..0.012 rows=25 loops=1)
 Planning Time: 7.137 ms
 Execution Time: 19396.177 ms
(39 rows)

query 10 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1714289.99..1714290.04 rows=20 width=201) (actual time=14101.813..14101.819 rows=20 loops=1)
   ->  Sort  (cost=1714289.99..1715710.32 rows=568133 width=201) (actual time=14101.812..14101.816 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=1566543.15..1699172.18 rows=568133 width=201) (actual time=11580.973..13978.399 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Incremental Sort  (cost=1566543.15..1684968.85 rows=568133 width=181) (actual time=11580.959..13164.980 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Presorted Key: customer.c_custkey
                     Full-sort Groups: 34068  Sort Method: quicksort  Average Memory: 33kB  Peak Memory: 33kB
                     ->  Nested Loop  (cost=1566542.98..1659402.87 rows=568133 width=181) (actual time=11580.814..12799.553 rows=1145402 loops=1)
                           ->  Merge Join  (cost=1566542.83..1645485.11 rows=568133 width=159) (actual time=11580.541..12388.408 rows=1145402 loops=1)
                                 Merge Cond: (customer.c_custkey = orders.o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.43..66680.07 rows=1499976 width=147) (actual time=0.707..359.858 rows=1499997 loops=1)
                                 ->  Sort  (cost=1566535.97..1567956.30 rows=568133 width=16) (actual time=11579.805..11686.478 rows=1145402 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external sort  Disk: 35288kB
                                       ->  Hash Join  (cost=283954.64..1512234.19 rows=568133 width=16) (actual time=4882.688..11047.001 rows=1145402 loops=1)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..1189366.53 rows=14824215 width=16) (actual time=0.511..4476.228 rows=14808183 loops=1)
                                                   Index Cond: (l_returnflag = 'R'::bpchar)
                                                   Heap Fetches: 0
                                             ->  Hash  (cost=276768.10..276768.10 rows=574878 width=8) (actual time=4880.772..4880.773 rows=573160 loops=1)
                                                   Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                                   ->  Bitmap Heap Scan on orders  (cost=6876.93..276768.10 rows=574878 width=8) (actual time=111.118..4708.161 rows=573160 loops=1)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=233346
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6733.22 rows=574878 width=0) (actual time=65.850..65.851 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                                 Cache Key: customer.c_nationkey
                                 Cache Mode: logical
                                 Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                 ->  Index Scan using nation_pkey on nation  (cost=0.14..1.16 rows=1 width=30) (actual time=0.012..0.012 rows=1 loops=25)
                                       Index Cond: (n_nationkey = customer.c_nationkey)
 Planning Time: 30.726 ms
 Execution Time: 14106.766 ms
(37 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1714289.99..1714290.04 rows=20 width=201) (actual time=10100.559..10100.565 rows=20 loops=1)
   ->  Sort  (cost=1714289.99..1715710.32 rows=568133 width=201) (actual time=10100.558..10100.562 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=1566543.15..1699172.18 rows=568133 width=201) (actual time=7669.355..9977.811 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Incremental Sort  (cost=1566543.15..1684968.85 rows=568133 width=181) (actual time=7669.341..9187.622 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Presorted Key: customer.c_custkey
                     Full-sort Groups: 34068  Sort Method: quicksort  Average Memory: 33kB  Peak Memory: 33kB
                     ->  Nested Loop  (cost=1566542.98..1659402.87 rows=568133 width=181) (actual time=7669.263..8823.697 rows=1145402 loops=1)
                           ->  Merge Join  (cost=1566542.83..1645485.11 rows=568133 width=159) (actual time=7669.241..8414.907 rows=1145402 loops=1)
                                 Merge Cond: (customer.c_custkey = orders.o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.43..66680.07 rows=1499976 width=147) (actual time=0.027..298.607 rows=1499997 loops=1)
                                 ->  Sort  (cost=1566535.97..1567956.30 rows=568133 width=16) (actual time=7669.200..7773.108 rows=1145402 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external sort  Disk: 35288kB
                                       ->  Hash Join  (cost=283954.64..1512234.19 rows=568133 width=16) (actual time=1592.573..7140.175 rows=1145402 loops=1)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..1189366.53 rows=14824215 width=16) (actual time=0.034..3894.677 rows=14808183 loops=1)
                                                   Index Cond: (l_returnflag = 'R'::bpchar)
                                                   Heap Fetches: 0
                                             ->  Hash  (cost=276768.10..276768.10 rows=574878 width=8) (actual time=1591.134..1591.134 rows=573160 loops=1)
                                                   Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                                   ->  Bitmap Heap Scan on orders  (cost=6876.93..276768.10 rows=574878 width=8) (actual time=109.948..1467.020 rows=573160 loops=1)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=233346
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6733.22 rows=574878 width=0) (actual time=65.097..65.097 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                                 Cache Key: customer.c_nationkey
                                 Cache Mode: logical
                                 Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                 ->  Index Scan using nation_pkey on nation  (cost=0.14..1.16 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=25)
                                       Index Cond: (n_nationkey = customer.c_nationkey)
 Planning Time: 2.852 ms
 Execution Time: 10105.487 ms
(37 rows)

query 11 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=608232.41..608232.41 rows=1 width=36) (actual time=3967.753..3967.759 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293162.14..293162.15 rows=1 width=32) (actual time=1593.274..1593.277 rows=1 loops=1)
           ->  Hash Join  (cost=2341.31..290762.16 rows=319997 width=10) (actual time=2.914..1499.850 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255221.18 rows=7999918 width=14) (actual time=0.018..747.024 rows=8000000 loops=1)
                 ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=2.863..2.864 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=0.480..2.359 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=39.29..2250.00 rows=4000 width=8) (actual time=0.470..2.026 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.255..0.255 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=315070.26..315336.93 rows=106666 width=36) (actual time=3967.752..3967.754 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=306612.01..314536.93 rows=106666 width=36) (actual time=3967.728..3967.730 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Planned Partitions: 4  Batches: 5  Memory Usage: 33841kB  Disk Usage: 11168kB
               Rows Removed by Filter: 301833
               ->  Hash Join  (cost=2341.31..290762.16 rows=319997 width=14) (actual time=40.286..1936.298 rows=320800 loops=1)
                     Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..255221.18 rows=7999918 width=18) (actual time=0.690..1088.801 rows=8000000 loops=1)
                     ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=39.536..39.537 rows=4010 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 173kB
                           ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=1.572..38.362 rows=4010 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.216..0.220 rows=1 loops=1)
                                       Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       Rows Removed by Filter: 24
                                 ->  Bitmap Heap Scan on supplier  (cost=39.29..2250.00 rows=4000 width=8) (actual time=1.349..37.557 rows=4010 loops=1)
                                       Recheck Cond: (s_nationkey = nation.n_nationkey)
                                       Heap Blocks: exact=1869
                                       ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.949..0.950 rows=4010 loops=1)
                                             Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 18.648 ms
 Execution Time: 3970.291 ms
(41 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=608232.41..608232.41 rows=1 width=36) (actual time=3527.025..3527.031 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293162.14..293162.15 rows=1 width=32) (actual time=1581.361..1581.364 rows=1 loops=1)
           ->  Hash Join  (cost=2341.31..290762.16 rows=319997 width=10) (actual time=2.889..1489.370 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255221.18 rows=7999918 width=14) (actual time=0.016..743.374 rows=8000000 loops=1)
                 ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=2.845..2.847 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=0.458..2.347 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=39.29..2250.00 rows=4000 width=8) (actual time=0.448..2.015 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.249..0.249 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=315070.26..315336.93 rows=106666 width=36) (actual time=3527.024..3527.026 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=306612.01..314536.93 rows=106666 width=36) (actual time=3527.003..3527.005 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Planned Partitions: 4  Batches: 5  Memory Usage: 33841kB  Disk Usage: 11168kB
               Rows Removed by Filter: 301833
               ->  Hash Join  (cost=2341.31..290762.16 rows=319997 width=14) (actual time=3.798..1519.601 rows=320800 loops=1)
                     Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..255221.18 rows=7999918 width=18) (actual time=0.033..758.610 rows=8000000 loops=1)
                     ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=3.739..3.740 rows=4010 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 173kB
                           ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=0.468..3.217 rows=4010 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                       Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       Rows Removed by Filter: 24
                                 ->  Bitmap Heap Scan on supplier  (cost=39.29..2250.00 rows=4000 width=8) (actual time=0.456..2.868 rows=4010 loops=1)
                                       Recheck Cond: (s_nationkey = nation.n_nationkey)
                                       Heap Blocks: exact=1869
                                       ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.251..0.251 rows=4010 loops=1)
                                             Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 1.157 ms
 Execution Time: 3529.039 ms
(41 rows)

query 12 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=680632.58..680632.58 rows=1 width=27) (actual time=5232.916..5232.919 rows=1 loops=1)
   ->  Sort  (cost=680632.58..680632.60 rows=7 width=27) (actual time=5232.914..5232.916 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=680632.47..680632.54 rows=7 width=27) (actual time=5232.655..5232.657 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               Batches: 1  Memory Usage: 24kB
               ->  Hash Join  (cost=149047.62..675660.41 rows=284118 width=27) (actual time=911.382..5110.172 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..411270.06 rows=15000206 width=20) (actual time=0.473..1699.293 rows=15000000 loops=1)
                     ->  Hash  (cost=145496.15..145496.15 rows=284118 width=15) (actual time=910.173..910.173 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.43..145496.15 rows=284118 width=15) (actual time=0.309..849.167 rows=311258 loops=1)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 778088
                                 Heap Fetches: 0
 Planning Time: 28.941 ms
 Execution Time: 5233.573 ms
(19 rows)

SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=680632.58..680632.58 rows=1 width=27) (actual time=4330.622..4330.625 rows=1 loops=1)
   ->  Sort  (cost=680632.58..680632.60 rows=7 width=27) (actual time=4330.621..4330.623 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=680632.47..680632.54 rows=7 width=27) (actual time=4330.369..4330.371 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               Batches: 1  Memory Usage: 24kB
               ->  Hash Join  (cost=149047.62..675660.41 rows=284118 width=27) (actual time=635.991..4210.868 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..411270.06 rows=15000206 width=20) (actual time=0.030..1244.247 rows=15000000 loops=1)
                     ->  Hash  (cost=145496.15..145496.15 rows=284118 width=15) (actual time=635.273..635.274 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.43..145496.15 rows=284118 width=15) (actual time=0.038..581.024 rows=311258 loops=1)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 778088
                                 Heap Fetches: 0
 Planning Time: 1.649 ms
 Execution Time: 4330.716 ms
(19 rows)

query 13 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1430524.28..1430524.28 rows=1 width=16) (actual time=17674.800..17674.803 rows=1 loops=1)
   ->  Sort  (cost=1430524.28..1430524.78 rows=200 width=16) (actual time=17674.799..17674.801 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1430521.28..1430523.28 rows=200 width=16) (actual time=17674.772..17674.780 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1275844.49..1408021.64 rows=1499976 width=12) (actual time=15106.541..17502.889 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Planned Partitions: 8  Batches: 9  Memory Usage: 32849kB  Disk Usage: 325144kB
                     ->  Hash Right Join  (cost=55341.77..666522.06 rows=14998706 width=8) (actual time=347.208..11225.370 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448770.58 rows=14998706 width=8) (actual time=0.604..5061.058 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=30732.07..30732.07 rows=1499976 width=4) (actual time=345.176..345.176 rows=1500000 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 21380kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30732.07 rows=1499976 width=4) (actual time=0.323..161.000 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 17.269 ms
 Execution Time: 17728.941 ms
(21 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1430524.28..1430524.28 rows=1 width=16) (actual time=17171.367..17171.370 rows=1 loops=1)
   ->  Sort  (cost=1430524.28..1430524.78 rows=200 width=16) (actual time=17171.366..17171.368 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1430521.28..1430523.28 rows=200 width=16) (actual time=17171.338..17171.346 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1275844.49..1408021.64 rows=1499976 width=12) (actual time=14597.065..17001.830 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Planned Partitions: 8  Batches: 9  Memory Usage: 32849kB  Disk Usage: 325144kB
                     ->  Hash Right Join  (cost=55341.77..666522.06 rows=14998706 width=8) (actual time=310.108..10760.620 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448770.58 rows=14998706 width=8) (actual time=0.033..4591.639 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=30732.07..30732.07 rows=1499976 width=4) (actual time=308.697..308.698 rows=1500000 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 21380kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30732.07 rows=1499976 width=4) (actual time=0.027..128.655 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.746 ms
 Execution Time: 17224.270 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1297975.90..1297975.91 rows=1 width=32) (actual time=4727.286..4727.287 rows=1 loops=1)
   ->  Aggregate  (cost=1297975.90..1297975.91 rows=1 width=32) (actual time=4727.285..4727.285 rows=1 loops=1)
         ->  Merge Join  (cost=6.35..1284308.55 rows=780991 width=33) (actual time=0.988..4331.119 rows=772942 loops=1)
               Merge Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Index Only Scan using q14_idx_1 on lineitem  (cost=0.56..1200816.23 rows=780991 width=16) (actual time=0.697..3688.743 rows=772942 loops=1)
                     Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Fetches: 0
               ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..68831.69 rows=1999951 width=25) (actual time=0.270..349.671 rows=1999998 loops=1)
                     Heap Fetches: 0
 Planning Time: 38.472 ms
 Execution Time: 4728.064 ms
(11 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1297975.90..1297975.91 rows=1 width=32) (actual time=3567.463..3567.464 rows=1 loops=1)
   ->  Aggregate  (cost=1297975.90..1297975.91 rows=1 width=32) (actual time=3567.461..3567.462 rows=1 loops=1)
         ->  Merge Join  (cost=6.35..1284308.55 rows=780991 width=33) (actual time=0.052..3200.219 rows=772942 loops=1)
               Merge Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Index Only Scan using q14_idx_1 on lineitem  (cost=0.56..1200816.23 rows=780991 width=16) (actual time=0.031..2648.502 rows=772942 loops=1)
                     Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Fetches: 0
               ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..68831.69 rows=1999951 width=25) (actual time=0.018..277.505 rows=1999998 loops=1)
                     Heap Fetches: 0
 Planning Time: 1.965 ms
 Execution Time: 3567.508 ms
(11 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3758592.98..3758602.06 rows=1 width=103) (actual time=23122.017..23122.020 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1879781.75..1879781.76 rows=1 width=32) (actual time=6654.204..6654.205 rows=1 loops=1)
           ->  HashAggregate  (cost=1877286.30..1878534.03 rows=99818 width=36) (actual time=6352.176..6648.183 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 5  Memory Usage: 33841kB  Disk Usage: 28280kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=39639.02..1855217.56 rows=2206874 width=16) (actual time=364.976..4643.708 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 13223651
                       Heap Blocks: exact=401153 lossy=267105
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39087.31 rows=2206874 width=0) (actual time=281.207..281.208 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1878811.22..1883342.70 rows=499 width=103) (actual time=23122.015..23122.016 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4274.29 rows=100000 width=71) (actual time=0.790..18.448 rows=69998 loops=1)
         ->  Sort  (cost=1878810.92..1878812.17 rows=499 width=36) (actual time=23099.296..23099.298 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1877286.30..1878788.56 rows=499 width=36) (actual time=22815.176..23099.288 rows=1 loops=1)
                     ->  HashAggregate  (cost=1877286.30..1878783.57 rows=499 width=36) (actual time=22815.175..23099.285 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 5  Memory Usage: 33841kB  Disk Usage: 28280kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=39639.02..1855217.56 rows=2206874 width=16) (actual time=426.565..13362.065 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Rows Removed by Index Recheck: 13223651
                                 Heap Blocks: exact=401153 lossy=267105
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39087.31 rows=2206874 width=0) (actual time=342.037..342.037 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 24.060 ms
 Execution Time: 23131.190 ms
(32 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3758592.98..3758602.06 rows=1 width=103) (actual time=13879.445..13879.449 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1879781.75..1879781.76 rows=1 width=32) (actual time=6633.532..6633.533 rows=1 loops=1)
           ->  HashAggregate  (cost=1877286.30..1878534.03 rows=99818 width=36) (actual time=6330.679..6627.536 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 5  Memory Usage: 33841kB  Disk Usage: 28280kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=39639.02..1855217.56 rows=2206874 width=16) (actual time=367.219..4630.599 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 13223651
                       Heap Blocks: exact=401153 lossy=267105
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39087.31 rows=2206874 width=0) (actual time=283.672..283.673 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1878811.22..1883342.70 rows=499 width=103) (actual time=13879.443..13879.445 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4274.29 rows=100000 width=71) (actual time=0.041..11.617 rows=69998 loops=1)
         ->  Sort  (cost=1878810.92..1878812.17 rows=499 width=36) (actual time=13863.729..13863.730 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1877286.30..1878788.56 rows=499 width=36) (actual time=13584.522..13863.722 rows=1 loops=1)
                     ->  HashAggregate  (cost=1877286.30..1878783.57 rows=499 width=36) (actual time=13584.521..13863.720 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 5  Memory Usage: 33841kB  Disk Usage: 28280kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=39639.02..1855217.56 rows=2206874 width=16) (actual time=389.888..5184.479 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Rows Removed by Index Recheck: 13223651
                                 Heap Blocks: exact=401153 lossy=267105
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39087.31 rows=2206874 width=0) (actual time=306.261..306.261 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 2.010 ms
 Execution Time: 13888.482 ms
(32 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=369136.48..369136.48 rows=1 width=44) (actual time=6694.766..6694.769 rows=1 loops=1)
   ->  Sort  (cost=369136.48..369517.66 rows=152470 width=44) (actual time=6694.765..6694.767 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=359572.91..368374.13 rows=152470 width=44) (actual time=6016.854..6689.788 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=359572.91..361028.21 rows=582122 width=40) (actual time=6016.801..6380.173 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Hash Join  (cost=98089.44..292461.92 rows=582122 width=40) (actual time=819.342..3134.292 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..187344.02 rows=3999959 width=8) (actual time=36.148..1520.834 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=1.097..35.845 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90979.77..90979.77 rows=291057 width=40) (actual time=782.584..782.585 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90979.77 rows=291057 width=40) (actual time=0.772..710.104 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning Time: 21.781 ms
 Execution Time: 6703.576 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=369136.48..369136.48 rows=1 width=44) (actual time=6211.535..6211.539 rows=1 loops=1)
   ->  Sort  (cost=369136.48..369517.66 rows=152470 width=44) (actual time=6211.534..6211.537 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=359572.91..368374.13 rows=152470 width=44) (actual time=5531.745..6206.575 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=359572.91..361028.21 rows=582122 width=40) (actual time=5531.692..5895.654 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Hash Join  (cost=98089.44..292461.92 rows=582122 width=40) (actual time=527.347..2653.218 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..187344.02 rows=3999959 width=8) (actual time=20.609..1336.627 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.085..20.568 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90979.77..90979.77 rows=291057 width=40) (actual time=506.161..506.162 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90979.77 rows=291057 width=40) (actual time=0.019..442.568 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning Time: 1.065 ms
 Execution Time: 6219.985 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1793722.33..1793722.34 rows=1 width=32) (actual time=23134.608..23134.611 rows=1 loops=1)
   ->  Aggregate  (cost=1793722.33..1793722.34 rows=1 width=32) (actual time=23134.606..23134.608 rows=1 loops=1)
         ->  Nested Loop  (cost=71086.35..1793674.45 rows=19151 width=8) (actual time=536.308..23131.789 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=71085.78..1787798.10 rows=1915 width=40) (actual time=535.677..22071.666 rows=1996 loops=1)
                     Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Sort  (cost=71085.22..71090.03 rows=1924 width=4) (actual time=526.283..527.465 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 142kB
                           ->  Seq Scan on part  (cost=0.00..70980.26 rows=1924 width=4) (actual time=1.229..525.529 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
                     ->  GroupAggregate  (cost=0.56..1691797.73 rows=1990910 width=36) (actual time=2.209..21405.888 rows=1999332 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361970.21 rows=59992776 width=9) (actual time=1.284..13321.827 rows=59965964 loops=1)
                                 Heap Fetches: 0
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.94 rows=10 width=17) (actual time=0.485..0.528 rows=3 loops=1996)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning Time: 25.726 ms
 Execution Time: 23134.898 ms
(21 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1793722.33..1793722.34 rows=1 width=32) (actual time=20845.480..20845.481 rows=1 loops=1)
   ->  Aggregate  (cost=1793722.33..1793722.34 rows=1 width=32) (actual time=20845.478..20845.479 rows=1 loops=1)
         ->  Nested Loop  (cost=71086.35..1793674.45 rows=19151 width=8) (actual time=382.478..20844.473 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=71085.78..1787798.10 rows=1915 width=40) (actual time=382.455..20812.750 rows=1996 loops=1)
                     Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Sort  (cost=71085.22..71090.03 rows=1924 width=4) (actual time=375.792..376.253 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 142kB
                           ->  Seq Scan on part  (cost=0.00..70980.26 rows=1924 width=4) (actual time=0.169..375.226 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
                     ->  GroupAggregate  (cost=0.56..1691797.73 rows=1990910 width=36) (actual time=0.068..20309.516 rows=1999332 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361970.21 rows=59992776 width=9) (actual time=0.035..12202.434 rows=59965964 loops=1)
                                 Heap Fetches: 0
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.94 rows=10 width=17) (actual time=0.013..0.015 rows=3 loops=1996)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning Time: 2.640 ms
 Execution Time: 20845.546 ms
(21 rows)

query 18 run 1
SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=7360451.76..7360452.01 rows=100 width=71) (actual time=30840.249..30840.262 rows=99 loops=1)
   ->  Sort  (cost=7360451.76..7410439.04 rows=19994910 width=71) (actual time=30840.247..30840.254 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=5994851.28..6596260.68 rows=19994910 width=71) (actual time=30839.756..30840.167 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 256  Batches: 1  Memory Usage: 3153kB
               ->  Hash Join  (cost=78548.86..4742045.20 rows=19994910 width=44) (actual time=3155.713..30839.417 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=63.40..4328915.95 rows=19994910 width=25) (actual time=672.202..30058.123 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..2605158.49 rows=4999398 width=24) (actual time=506.929..22200.452 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..568534.53 rows=15000206 width=20) (actual time=1.441..3282.961 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..1886637.00 rows=4999398 width=4) (actual time=397.377..18010.076 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361700.21 rows=59992776 width=9) (actual time=0.456..6602.091 rows=59986052 loops=1)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361700.21 rows=59992776 width=9) (actual time=0.015..5242.135 rows=59916431 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=50946.76..50946.76 rows=1499976 width=23) (actual time=675.483..675.483 rows=1500000 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                           ->  Seq Scan on customer  (cost=0.00..50946.76 rows=1499976 width=23) (actual time=0.597..418.735 rows=1500000 loops=1)
 Planning Time: 34.401 ms
 Execution Time: 30841.403 ms
(27 rows)

SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=7360451.76..7360452.01 rows=100 width=71) (actual time=29296.155..29296.168 rows=99 loops=1)
   ->  Sort  (cost=7360451.76..7410439.04 rows=19994910 width=71) (actual time=29296.153..29296.161 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=5994851.28..6596260.68 rows=19994910 width=71) (actual time=29295.672..29296.075 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 256  Batches: 1  Memory Usage: 3153kB
               ->  Hash Join  (cost=78548.86..4742045.20 rows=19994910 width=44) (actual time=2856.750..29295.335 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=63.40..4328915.95 rows=19994910 width=25) (actual time=621.315..28641.002 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..2605158.49 rows=4999398 width=24) (actual time=455.932..20790.531 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..568534.53 rows=15000206 width=20) (actual time=0.046..2541.430 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..1886637.00 rows=4999398 width=4) (actual time=375.471..17362.064 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361700.21 rows=59992776 width=9) (actual time=0.033..6064.147 rows=59986052 loops=1)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361700.21 rows=59992776 width=9) (actual time=0.013..5237.089 rows=59916431 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=50946.76..50946.76 rows=1499976 width=23) (actual time=542.413..542.414 rows=1500000 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                           ->  Seq Scan on customer  (cost=0.00..50946.76 rows=1499976 width=23) (actual time=0.024..292.406 rows=1500000 loops=1)
 Planning Time: 2.769 ms
 Execution Time: 29296.694 ms
(27 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=142725.68..142725.69 rows=1 width=32) (actual time=3210.303..3210.304 rows=1 loops=1)
   ->  Aggregate  (cost=142725.68..142725.69 rows=1 width=32) (actual time=3210.302..3210.302 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..142716.94 rows=1164 width=12) (actual time=16.032..3207.692 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125978.92 rows=4855 width=30) (actual time=1.416..883.357 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.44 rows=1 width=21) (actual time=0.465..0.485 rows=0 loops=4781)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning Time: 30.235 ms
 Execution Time: 3211.099 ms
(13 rows)

SET
SET
SET


 Limit  (cost=142725.68..142725.69 rows=1 width=32) (actual time=518.690..518.691 rows=1 loops=1)
   ->  Aggregate  (cost=142725.68..142725.69 rows=1 width=32) (actual time=518.689..518.689 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..142716.94 rows=1164 width=12) (actual time=1.242..517.994 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125978.92 rows=4855 width=30) (actual time=0.221..475.810 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.44 rows=1 width=21) (actual time=0.008..0.008 rows=0 loops=4781)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning Time: 3.022 ms
 Execution Time: 518.742 ms
(13 rows)

query 20 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2824580.79..2824580.80 rows=1 width=51) (actual time=38934.774..38934.778 rows=1 loops=1)
   ->  Sort  (cost=2824580.79..2824580.80 rows=1 width=51) (actual time=38934.772..38934.775 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2574251.26..2824580.78 rows=1 width=51) (actual time=16635.014..38932.939 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 183452432
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.553..34.244 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.220..0.223 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.325..26.155 rows=100000 loops=1)
               ->  Materialize  (cost=2574251.26..2819928.48 rows=3 width=8) (actual time=3.705..7.045 rows=44800 loops=4095)
                     ->  Hash Join  (cost=2574251.26..2819928.46 rows=3 width=8) (actual time=15172.161..22427.524 rows=59002 loops=1)
                           Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 123
                           ->  HashAggregate  (cost=2451554.65..2612631.90 rows=4834275 width=40) (actual time=14512.830..20930.446 rows=5448842 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 Planned Partitions: 64  Batches: 325  Memory Usage: 34321kB  Disk Usage: 388616kB
                                 ->  Seq Scan on lineitem  (cost=0.00..2025034.64 rows=9068864 width=13) (actual time=0.762..10506.766 rows=9123688 loops=1)
                                       Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       Rows Removed by Filter: 50862364
                           ->  Hash  (cost=121484.48..121484.48 rows=80809 width=16) (actual time=658.978..658.980 rows=86872 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 5097kB
                                 ->  Nested Loop  (cost=0.86..121484.48 rows=80809 width=16) (actual time=0.040..638.096 rows=86872 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.43..64305.57 rows=20202 width=4) (actual time=0.021..312.172 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.64 rows=19 width=12) (actual time=0.014..0.014 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 33.759 ms
 Execution Time: 38986.977 ms
(37 rows)

SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2824580.79..2824580.80 rows=1 width=51) (actual time=36502.918..36502.922 rows=1 loops=1)
   ->  Sort  (cost=2824580.79..2824580.80 rows=1 width=51) (actual time=36502.916..36502.920 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2574251.26..2824580.78 rows=1 width=51) (actual time=14038.379..36501.227 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 183452432
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.014..18.035 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.012 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.002..6.425 rows=100000 loops=1)
               ->  Materialize  (cost=2574251.26..2819928.48 rows=3 width=8) (actual time=3.069..6.407 rows=44800 loops=4095)
                     ->  Hash Join  (cost=2574251.26..2819928.46 rows=3 width=8) (actual time=12568.432..19822.665 rows=59002 loops=1)
                           Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 123
                           ->  HashAggregate  (cost=2451554.65..2612631.90 rows=4834275 width=40) (actual time=12284.016..18699.037 rows=5448842 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 Planned Partitions: 64  Batches: 325  Memory Usage: 34321kB  Disk Usage: 388616kB
                                 ->  Seq Scan on lineitem  (cost=0.00..2025034.64 rows=9068864 width=13) (actual time=0.034..8500.700 rows=9123688 loops=1)
                                       Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       Rows Removed by Filter: 50862364
                           ->  Hash  (cost=121484.48..121484.48 rows=80809 width=16) (actual time=284.090..284.091 rows=86872 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 5097kB
                                 ->  Nested Loop  (cost=0.86..121484.48 rows=80809 width=16) (actual time=0.027..266.545 rows=86872 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.43..64305.57 rows=20202 width=4) (actual time=0.020..205.237 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.64 rows=19 width=12) (actual time=0.002..0.002 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 2.440 ms
 Execution Time: 36546.891 ms
(37 rows)

query 21 run 1
SET
SET
SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1066336.04..1066336.04 rows=1 width=34) (actual time=17847.545..17847.560 rows=100 loops=1)
   ->  Sort  (cost=1066336.04..1066336.04 rows=1 width=34) (actual time=17847.544..17847.552 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=1066336.01..1066336.03 rows=1 width=34) (actual time=17840.240..17846.324 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=1066336.01..1066336.01 rows=1 width=26) (actual time=17840.230..17841.796 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Semi Join  (cost=589196.79..1066336.00 rows=1 width=26) (actual time=7491.893..17667.617 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 27756
                           ->  Nested Loop  (cost=589196.22..1066333.35 rows=1 width=38) (actual time=7491.886..13915.360 rows=65960 loops=1)
                                 ->  Merge Anti Join  (cost=589195.79..1066330.91 rows=1 width=34) (actual time=7491.870..13232.341 rows=134155 loops=1)
                                       Merge Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 551044
                                       ->  Sort  (cost=589195.22..591194.98 rows=799904 width=34) (actual time=7491.819..7709.954 rows=1514267 loops=1)
                                             Sort Key: l1.l_orderkey
                                             Sort Method: external merge  Disk: 68184kB
                                             ->  Hash Join  (cost=2341.88..495141.77 rows=799904 width=34) (actual time=42.026..7159.387 rows=1514267 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..409810.45 rows=19997592 width=8) (actual time=0.441..4228.247 rows=37929348 loops=1)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=2291.31..2291.31 rows=4000 width=30) (actual time=41.566..41.567 rows=3991 loops=1)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                         ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=30) (actual time=1.919..39.962 rows=3991 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.172..0.176 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=39.29..2250.00 rows=4000 width=34) (actual time=1.739..38.692 rows=3991 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=1865
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=1.239..1.239 rows=3991 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..409810.45 rows=19997592 width=8) (actual time=0.021..3496.757 rows=37966635 loops=1)
                                             Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.45 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=134155)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.056..0.056 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 27.613 ms
 Execution Time: 17856.541 ms
(45 rows)

SET
SET
SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1066336.04..1066336.04 rows=1 width=34) (actual time=12409.263..12409.278 rows=100 loops=1)
   ->  Sort  (cost=1066336.04..1066336.04 rows=1 width=34) (actual time=12409.262..12409.270 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=1066336.01..1066336.03 rows=1 width=34) (actual time=12401.955..12408.030 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=1066336.01..1066336.01 rows=1 width=26) (actual time=12401.947..12403.509 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Semi Join  (cost=589196.79..1066336.00 rows=1 width=26) (actual time=6387.413..12238.223 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 27756
                           ->  Nested Loop  (cost=589196.22..1066333.35 rows=1 width=38) (actual time=6387.405..12057.893 rows=65960 loops=1)
                                 ->  Merge Anti Join  (cost=589195.79..1066330.91 rows=1 width=34) (actual time=6387.391..11760.267 rows=134155 loops=1)
                                       Merge Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 551044
                                       ->  Sort  (cost=589195.22..591194.98 rows=799904 width=34) (actual time=6387.361..6569.692 rows=1514267 loops=1)
                                             Sort Key: l1.l_orderkey
                                             Sort Method: external merge  Disk: 68184kB
                                             ->  Hash Join  (cost=2341.88..495141.77 rows=799904 width=34) (actual time=4.099..6076.629 rows=1514267 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..409810.45 rows=19997592 width=8) (actual time=0.019..3294.665 rows=37929348 loops=1)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=2291.31..2291.31 rows=4000 width=30) (actual time=4.064..4.066 rows=3991 loops=1)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                         ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=30) (actual time=0.697..3.542 rows=3991 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=39.29..2250.00 rows=4000 width=34) (actual time=0.687..3.118 rows=3991 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=1865
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.481..0.481 rows=3991 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..409810.45 rows=19997592 width=8) (actual time=0.020..3272.990 rows=37966635 loops=1)
                                             Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=134155)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 3.155 ms
 Execution Time: 12418.613 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=162442.94..162442.96 rows=1 width=72) (actual time=1945.549..1945.551 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75440.79..75440.80 rows=1 width=32) (actual time=964.550..964.551 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75321.37 rows=47769 width=6) (actual time=0.017..928.686 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=87002.13..87206.26 rows=7423 width=72) (actual time=1945.548..1945.549 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=87002.13..87020.69 rows=7423 width=38) (actual time=1943.790..1944.121 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..86524.91 rows=7423 width=38) (actual time=965.075..1923.079 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75321.37 rows=17500 width=26) (actual time=965.058..1490.376 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.63 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 16.850 ms
 Execution Time: 1945.937 ms
(20 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=162442.94..162442.96 rows=1 width=72) (actual time=1531.593..1531.596 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75440.79..75440.80 rows=1 width=32) (actual time=709.458..709.458 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75321.37 rows=47769 width=6) (actual time=0.007..677.017 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=87002.13..87206.26 rows=7423 width=72) (actual time=1531.592..1531.593 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=87002.13..87020.69 rows=7423 width=38) (actual time=1529.837..1530.168 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..86524.91 rows=7423 width=38) (actual time=709.496..1512.051 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75321.37 rows=17500 width=26) (actual time=709.480..1211.296 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.63 rows=17 width=4) (actual time=0.001..0.001 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 0.879 ms
 Execution Time: 1531.642 ms
(20 rows)

