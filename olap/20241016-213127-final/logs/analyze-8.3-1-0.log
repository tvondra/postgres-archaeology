query 1 run 1
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=341862.74..341862.74 rows=1 width=33) (actual time=16153.117..16153.117 rows=1 loops=1)
   ->  Sort  (cost=341862.74..341862.75 rows=6 width=33) (actual time=16153.117..16153.117 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=341862.44..341862.71 rows=6 width=33) (actual time=16153.083..16153.089 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..193580.94 rows=5931260 width=33) (actual time=0.440..1223.472 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 16153.203 ms
(8 rows)

SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=341862.74..341862.74 rows=1 width=33) (actual time=15625.042..15625.043 rows=1 loops=1)
   ->  Sort  (cost=341862.74..341862.75 rows=6 width=33) (actual time=15625.041..15625.041 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=341862.44..341862.71 rows=6 width=33) (actual time=15625.012..15625.018 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..193580.94 rows=5931260 width=33) (actual time=0.021..1026.151 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 15625.092 ms
(8 rows)

query 2 run 1
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=71321.91..71321.92 rows=1 width=194) (actual time=637.520..637.531 rows=100 loops=1)
   ->  Sort  (cost=71321.91..71321.92 rows=1 width=194) (actual time=637.519..637.523 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method:  top-N heapsort  Memory: 53kB
         ->  Merge Join  (cost=45673.54..71321.90 rows=1 width=194) (actual time=461.758..636.860 rows=489 loops=1)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (subplan))
               ->  Index Scan using q2_idx_1 on part  (cost=0.00..8032.01 rows=888 width=30) (actual time=1.179..48.147 rows=799 loops=1)
                     Index Cond: (p_size = 16)
                     Filter: ((p_type)::text ~~ '%NICKEL'::text)
               ->  Sort  (cost=45673.54..46073.50 rows=159984 width=176) (actual time=458.538..488.487 rows=162846 loops=1)
                     Sort Key: public.partsupp.ps_partkey
                     Sort Method:  external sort  Disk: 32072kB
                     ->  Hash Join  (cost=410.03..31844.87 rows=159984 width=176) (actual time=5.987..318.618 rows=162880 loops=1)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25835.00 rows=800000 width=16) (actual time=0.261..187.689 rows=800000 loops=1)
                           ->  Hash  (cost=385.03..385.03 rows=2000 width=168) (actual time=5.716..5.716 rows=2036 loops=1)
                                 ->  Hash Join  (cost=2.53..385.03 rows=2000 width=168) (actual time=0.642..5.269 rows=2036 loops=1)
                                       Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=146) (actual time=0.213..3.561 rows=10000 loops=1)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.421..0.421 rows=5 loops=1)
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.410..0.419 rows=5 loops=1)
                                                   Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.197..0.198 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.206..0.206 rows=1 loops=1)
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.202..0.204 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan
                 ->  Aggregate  (cost=23.73..23.74 rows=1 width=8) (actual time=0.129..0.129 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.00..23.72 rows=1 width=8) (actual time=0.118..0.127 rows=2 loops=650)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.00..22.61 rows=4 width=12) (actual time=0.111..0.125 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.00..21.49 rows=4 width=12) (actual time=0.110..0.120 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..4.36 rows=4 width=12) (actual time=0.106..0.107 rows=4 loops=650)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4.27 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=2600)
                                               Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                         Index Cond: (public.nation.n_nationkey = public.supplier.s_nationkey)
 Total runtime: 641.995 ms
(42 rows)

SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=71321.91..71321.92 rows=1 width=194) (actual time=417.322..417.331 rows=100 loops=1)
   ->  Sort  (cost=71321.91..71321.92 rows=1 width=194) (actual time=417.322..417.326 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method:  top-N heapsort  Memory: 53kB
         ->  Merge Join  (cost=45673.54..71321.90 rows=1 width=194) (actual time=346.554..416.862 rows=489 loops=1)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (subplan))
               ->  Index Scan using q2_idx_1 on part  (cost=0.00..8032.01 rows=888 width=30) (actual time=0.027..16.040 rows=799 loops=1)
                     Index Cond: (p_size = 16)
                     Filter: ((p_type)::text ~~ '%NICKEL'::text)
               ->  Sort  (cost=45673.54..46073.50 rows=159984 width=176) (actual time=346.431..373.961 rows=162846 loops=1)
                     Sort Key: public.partsupp.ps_partkey
                     Sort Method:  external sort  Disk: 32072kB
                     ->  Hash Join  (cost=410.03..31844.87 rows=159984 width=176) (actual time=3.105..213.063 rows=162880 loops=1)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25835.00 rows=800000 width=16) (actual time=0.008..98.657 rows=800000 loops=1)
                           ->  Hash  (cost=385.03..385.03 rows=2000 width=168) (actual time=3.090..3.090 rows=2036 loops=1)
                                 ->  Hash Join  (cost=2.53..385.03 rows=2000 width=168) (actual time=0.026..2.654 rows=2036 loops=1)
                                       Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=146) (actual time=0.006..1.437 rows=10000 loops=1)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.019..0.019 rows=5 loops=1)
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.014..0.018 rows=5 loops=1)
                                                   Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.005..0.006 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan
                 ->  Aggregate  (cost=23.73..23.74 rows=1 width=8) (actual time=0.017..0.018 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.00..23.72 rows=1 width=8) (actual time=0.011..0.016 rows=2 loops=650)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.00..22.61 rows=4 width=12) (actual time=0.007..0.015 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.00..21.49 rows=4 width=12) (actual time=0.006..0.011 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..4.36 rows=4 width=12) (actual time=0.005..0.005 rows=4 loops=650)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4.27 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                               Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8) (actual time=0.000..0.001 rows=1 loops=2600)
                                         Index Cond: (public.nation.n_nationkey = public.supplier.s_nationkey)
 Total runtime: 421.797 ms
(42 rows)

query 3 run 1
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=318281.22..318281.25 rows=10 width=28) (actual time=2540.113..2540.115 rows=10 loops=1)
   ->  Sort  (cost=318281.22..319088.02 rows=322719 width=28) (actual time=2540.112..2540.113 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=301625.81..311307.38 rows=322719 width=28) (actual time=2521.256..2538.186 rows=11612 loops=1)
               ->  Sort  (cost=301625.81..302432.61 rows=322719 width=28) (actual time=2521.243..2522.320 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method:  quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=63034.87..272097.15 rows=322719 width=28) (actual time=659.572..2513.160 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..193580.94 rows=3267774 width=20) (actual time=0.457..1144.520 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=61183.16..61183.16 rows=148137 width=12) (actual time=658.216..658.216 rows=146063 loops=1)
                                 ->  Hash Join  (cost=5887.62..61183.16 rows=148137 width=12) (actual time=55.306..634.237 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..45583.00 rows=731659 width=16) (actual time=0.479..357.374 rows=722275 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5508.00..5508.00 rows=30370 width=4) (actual time=54.808..54.808 rows=30142 loops=1)
                                             ->  Seq Scan on customer  (cost=0.00..5508.00 rows=30370 width=4) (actual time=0.422..50.969 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 2540.161 ms
(21 rows)

SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=318281.22..318281.25 rows=10 width=28) (actual time=2025.742..2025.743 rows=10 loops=1)
   ->  Sort  (cost=318281.22..319088.02 rows=322719 width=28) (actual time=2025.741..2025.742 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=301625.81..311307.38 rows=322719 width=28) (actual time=2006.884..2023.778 rows=11612 loops=1)
               ->  Sort  (cost=301625.81..302432.61 rows=322719 width=28) (actual time=2006.871..2007.946 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method:  quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=63034.87..272097.15 rows=322719 width=28) (actual time=422.774..1999.427 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..193580.94 rows=3267774 width=20) (actual time=0.031..925.387 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=61183.16..61183.16 rows=148137 width=12) (actual time=422.510..422.510 rows=146063 loops=1)
                                 ->  Hash Join  (cost=5887.62..61183.16 rows=148137 width=12) (actual time=34.014..402.454 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..45583.00 rows=731659 width=16) (actual time=0.011..224.019 rows=722275 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5508.00..5508.00 rows=30370 width=4) (actual time=33.991..33.991 rows=30142 loops=1)
                                             ->  Seq Scan on customer  (cost=0.00..5508.00 rows=30370 width=4) (actual time=0.007..30.655 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 2025.794 ms
(21 rows)

query 4 run 1
SET
SET
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=80194.45..80194.45 rows=1 width=16) (actual time=2023.768..2023.768 rows=1 loops=1)
   ->  Sort  (cost=80194.45..80194.45 rows=1 width=16) (actual time=2023.768..2023.768 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=80194.43..80194.44 rows=1 width=16) (actual time=2023.742..2023.742 rows=5 loops=1)
               ->  Bitmap Heap Scan on orders  (cost=868.39..80055.65 rows=27756 width=16) (actual time=15.163..1994.653 rows=51398 loops=1)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..861.45 rows=55512 width=0) (actual time=9.868..9.868 rows=55973 loops=1)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using q4_idx_1 on lineitem  (cost=0.00..4.64 rows=5 width=125) (actual time=0.031..0.031 rows=1 loops=55973)
                             Index Cond: (l_orderkey = $0)
 Total runtime: 2023.859 ms
(14 rows)

SET
SET
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=80194.45..80194.45 rows=1 width=16) (actual time=299.066..299.066 rows=1 loops=1)
   ->  Sort  (cost=80194.45..80194.45 rows=1 width=16) (actual time=299.066..299.066 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=80194.43..80194.44 rows=1 width=16) (actual time=299.040..299.042 rows=5 loops=1)
               ->  Bitmap Heap Scan on orders  (cost=868.39..80055.65 rows=27756 width=16) (actual time=9.638..281.681 rows=51398 loops=1)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..861.45 rows=55512 width=0) (actual time=6.388..6.388 rows=55973 loops=1)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using q4_idx_1 on lineitem  (cost=0.00..4.64 rows=5 width=125) (actual time=0.003..0.003 rows=1 loops=55973)
                             Index Cond: (l_orderkey = $0)
 Total runtime: 299.114 ms
(14 rows)

query 5 run 1
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=251721.32..251721.32 rows=1 width=42) (actual time=2157.402..2157.402 rows=1 loops=1)
   ->  Sort  (cost=251721.32..251721.38 rows=25 width=42) (actual time=2157.400..2157.400 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=251720.76..251721.20 rows=25 width=42) (actual time=2157.391..2157.392 rows=5 loops=1)
               ->  Hash Join  (cost=43063.79..251683.44 rows=7464 width=42) (actual time=462.185..2149.013 rows=7540 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=42588.79..245536.79 rows=186567 width=54) (actual time=456.561..2043.118 rows=182435 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..178578.15 rows=6001115 width=24) (actual time=0.633..691.323 rows=6001215 loops=1)
                           ->  Hash  (cost=42005.87..42005.87 rows=46633 width=38) (actual time=455.833..455.833 rows=45297 loops=1)
                                 ->  Hash Join  (cost=10043.28..42005.87 rows=46633 width=38) (actual time=94.092..444.743 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3670.25..34000.70 rows=233163 width=8) (actual time=33.183..272.288 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3611.96 rows=233163 width=0) (actual time=29.073..29.073 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5998.03..5998.03 rows=30000 width=38) (actual time=60.890..60.890 rows=29952 loops=1)
                                             ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=38) (actual time=1.227..55.895 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.538..38.324 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.681..0.681 rows=5 loops=1)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.676..0.679 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.344..0.345 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.325..0.325 rows=1 loops=1)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.322..0.323 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=5.576..5.576 rows=10000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.302..4.085 rows=10000 loops=1)
 Total runtime: 2157.475 ms
(31 rows)

SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=251721.32..251721.32 rows=1 width=42) (actual time=1595.351..1595.351 rows=1 loops=1)
   ->  Sort  (cost=251721.32..251721.38 rows=25 width=42) (actual time=1595.350..1595.350 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=251720.76..251721.20 rows=25 width=42) (actual time=1595.340..1595.340 rows=5 loops=1)
               ->  Hash Join  (cost=43063.79..251683.44 rows=7464 width=42) (actual time=225.697..1588.132 rows=7540 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=42588.79..245536.79 rows=186567 width=54) (actual time=222.228..1502.360 rows=182435 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..178578.15 rows=6001115 width=24) (actual time=0.027..478.971 rows=6001215 loops=1)
                           ->  Hash  (cost=42005.87..42005.87 rows=46633 width=38) (actual time=222.149..222.149 rows=45297 loops=1)
                                 ->  Hash Join  (cost=10043.28..42005.87 rows=46633 width=38) (actual time=63.092..214.306 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3670.25..34000.70 rows=233163 width=8) (actual time=23.474..121.062 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3611.96 rows=233163 width=0) (actual time=20.106..20.106 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5998.03..5998.03 rows=30000 width=38) (actual time=39.603..39.603 rows=29952 loops=1)
                                             ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=38) (actual time=0.031..35.254 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.005..18.715 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.022..0.022 rows=5 loops=1)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.018..0.022 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.004..0.007 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=3.424..3.424 rows=10000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.014..1.954 rows=10000 loops=1)
 Total runtime: 1595.430 ms
(31 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=120082.05..120082.06 rows=1 width=16) (actual time=1420.645..1420.645 rows=1 loops=1)
   ->  Aggregate  (cost=120082.05..120082.06 rows=1 width=16) (actual time=1420.643..1420.643 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=24382.04..119791.08 rows=116387 width=16) (actual time=139.191..1359.168 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..24352.94 rows=116387 width=0) (actual time=127.722..127.722 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 1420.678 ms
(7 rows)

SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=120082.05..120082.06 rows=1 width=16) (actual time=324.676..324.677 rows=1 loops=1)
   ->  Aggregate  (cost=120082.05..120082.06 rows=1 width=16) (actual time=324.674..324.674 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=24382.04..119791.08 rows=116387 width=16) (actual time=111.279..278.486 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..24352.94 rows=116387 width=0) (actual time=100.466..100.466 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 324.702 ms
(7 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=253126.80..253126.80 rows=1 width=72) (actual time=2547.982..2547.982 rows=1 loops=1)
   ->  Sort  (cost=253126.80..253141.60 rows=5919 width=72) (actual time=2547.981..2547.981 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=252964.03..253097.20 rows=5919 width=72) (actual time=2547.941..2547.953 rows=4 loops=1)
               ->  Hash Join  (cost=93598.92..252904.84 rows=5919 width=72) (actual time=961.743..2538.738 rows=5729 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=93123.92..247899.40 rows=148054 width=80) (actual time=955.342..2439.167 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=36981.44..183330.80 rows=1852157 width=28) (actual time=336.373..1383.407 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36518.40 rows=1852157 width=0) (actual time=313.805..313.805 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=54643.68..54643.68 rows=119904 width=60) (actual time=618.941..618.941 rows=118477 loops=1)
                                 ->  Hash Join  (cost=5986.68..54643.68 rows=119904 width=60) (actual time=56.524..593.485 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41833.00 rows=1500000 width=8) (actual time=0.729..286.560 rows=1500000 loops=1)
                                       ->  Hash  (cost=5836.80..5836.80 rows=11990 width=60) (actual time=55.784..55.784 rows=11896 loops=1)
                                             ->  Hash Join  (cost=21.30..5836.80 rows=11990 width=60) (actual time=0.968..53.495 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.527..38.567 rows=150000 loops=1)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60) (actual time=0.435..0.435 rows=2 loops=1)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60) (actual time=0.393..0.434 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.310..0.310 rows=25 loops=1)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.005 rows=25 loops=1)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=5.552..5.552 rows=10000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.230..4.055 rows=10000 loops=1)
 Total runtime: 2548.067 ms
(30 rows)

SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=253126.80..253126.80 rows=1 width=72) (actual time=1575.888..1575.888 rows=1 loops=1)
   ->  Sort  (cost=253126.80..253141.60 rows=5919 width=72) (actual time=1575.887..1575.887 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=252964.03..253097.20 rows=5919 width=72) (actual time=1575.851..1575.861 rows=4 loops=1)
               ->  Hash Join  (cost=93598.92..252904.84 rows=5919 width=72) (actual time=688.940..1569.211 rows=5729 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=93123.92..247899.40 rows=148054 width=80) (actual time=685.377..1511.651 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=36981.44..183330.80 rows=1852157 width=28) (actual time=255.839..709.343 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36518.40 rows=1852157 width=0) (actual time=234.400..234.400 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=54643.68..54643.68 rows=119904 width=60) (actual time=429.508..429.508 rows=118477 loops=1)
                                 ->  Hash Join  (cost=5986.68..54643.68 rows=119904 width=60) (actual time=34.273..408.148 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41833.00 rows=1500000 width=8) (actual time=0.006..157.433 rows=1500000 loops=1)
                                       ->  Hash  (cost=5836.80..5836.80 rows=11990 width=60) (actual time=34.260..34.260 rows=11896 loops=1)
                                             ->  Hash Join  (cost=21.30..5836.80 rows=11990 width=60) (actual time=0.132..32.370 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.004..18.063 rows=150000 loops=1)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60) (actual time=0.124..0.124 rows=2 loops=1)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60) (actual time=0.082..0.122 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.004..0.005 rows=25 loops=1)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.004 rows=25 loops=1)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=3.451..3.451 rows=10000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.011..2.040 rows=10000 loops=1)
 Total runtime: 1575.968 ms
(30 rows)

query 8 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=139250.91..139250.91 rows=1 width=46) (actual time=6282.533..6282.534 rows=1 loops=1)
   ->  Sort  (cost=139250.91..139252.74 rows=732 width=46) (actual time=6282.531..6282.531 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method:  quicksort  Memory: 25kB
         ->  HashAggregate  (cost=139221.63..139247.25 rows=732 width=46) (actual time=6282.318..6282.320 rows=2 loops=1)
               ->  Hash Join  (cost=52000.19..139203.39 rows=2431 width=46) (actual time=565.881..6273.723 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=51998.63..139156.25 rows=2431 width=24) (actual time=565.664..6269.189 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=51548.63..138645.47 rows=2431 width=24) (actual time=560.264..6260.725 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..86922.55 rows=39997 width=24) (actual time=3.368..5668.825 rows=39694 loops=1)
                                       ->  Index Scan using q2_idx_1 on part  (cost=0.00..6516.81 rows=1333 width=4) (actual time=2.300..86.595 rows=1320 loops=1)
                                             Index Cond: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..59.93 rows=31 width=28) (actual time=0.309..4.212 rows=30 loops=1320)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=50409.04..50409.04 rows=91167 width=8) (actual time=553.709..553.709 rows=91179 loops=1)
                                       ->  Hash Join  (cost=13547.67..50409.04 rows=91167 width=8) (actual time=115.074..537.068 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=7174.64..40845.17 rows=455835 width=12) (actual time=55.271..302.796 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7060.68 rows=455835 width=0) (actual time=51.490..51.490 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5998.03..5998.03 rows=30000 width=4) (actual time=59.787..59.787 rows=29952 loops=1)
                                                   ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=4) (actual time=0.590..56.068 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.384..39.802 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.200..0.200 rows=5 loops=1)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.190..0.198 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.002 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.184..0.184 rows=1 loops=1)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.181..0.183 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=5.392..5.392 rows=10000 loops=1)
                                 ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.241..4.092 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.205..0.205 rows=25 loops=1)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.189..0.193 rows=25 loops=1)
 Total runtime: 6282.611 ms
(39 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=139250.91..139250.91 rows=1 width=46) (actual time=434.593..434.594 rows=1 loops=1)
   ->  Sort  (cost=139250.91..139252.74 rows=732 width=46) (actual time=434.591..434.591 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method:  quicksort  Memory: 25kB
         ->  HashAggregate  (cost=139221.63..139247.25 rows=732 width=46) (actual time=434.578..434.579 rows=2 loops=1)
               ->  Hash Join  (cost=52000.19..139203.39 rows=2431 width=46) (actual time=303.439..431.925 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=51998.63..139156.25 rows=2431 width=24) (actual time=303.412..430.662 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=51548.63..138645.47 rows=2431 width=24) (actual time=300.164..425.580 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..86922.55 rows=39997 width=24) (actual time=0.060..107.031 rows=39694 loops=1)
                                       ->  Index Scan using q2_idx_1 on part  (cost=0.00..6516.81 rows=1333 width=4) (actual time=0.037..13.492 rows=1320 loops=1)
                                             Index Cond: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..59.93 rows=31 width=28) (actual time=0.007..0.066 rows=30 loops=1320)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=50409.04..50409.04 rows=91167 width=8) (actual time=300.036..300.036 rows=91179 loops=1)
                                       ->  Hash Join  (cost=13547.67..50409.04 rows=91167 width=8) (actual time=80.120..287.695 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=7174.64..40845.17 rows=455835 width=12) (actual time=41.166..153.406 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7060.68 rows=455835 width=0) (actual time=37.841..37.841 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5998.03..5998.03 rows=30000 width=4) (actual time=38.941..38.941 rows=29952 loops=1)
                                                   ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=4) (actual time=0.025..35.615 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.006..19.662 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.016..0.016 rows=5 loops=1)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.012..0.016 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.002 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=3.244..3.244 rows=10000 loops=1)
                                 ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.006..1.957 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.016..0.016 rows=25 loops=1)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.012 rows=25 loops=1)
 Total runtime: 434.669 ms
(39 rows)

query 9 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=284646.81..284646.82 rows=1 width=61) (actual time=17423.114..17423.115 rows=1 loops=1)
   ->  Sort  (cost=284646.81..284647.23 rows=168 width=61) (actual time=17423.113..17423.113 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=284641.35..284645.97 rows=168 width=61) (actual time=17423.023..17423.065 rows=175 loops=1)
               ->  Hash Join  (cost=6835.32..284640.09 rows=168 width=61) (actual time=74.506..16827.971 rows=325928 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=6833.76..284635.38 rows=168 width=39) (actual time=74.264..16537.388 rows=325928 loops=1)
                           ->  Nested Loop  (cost=6833.76..283982.29 rows=168 width=43) (actual time=73.437..15991.204 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=6833.76..283313.55 rows=168 width=43) (actual time=71.560..12020.572 rows=325928 loops=1)
                                       ->  Hash Join  (cost=6833.76..42232.30 rows=56354 width=20) (actual time=70.393..437.801 rows=43520 loops=1)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..25835.00 rows=800000 width=16) (actual time=0.307..215.224 rows=800000 loops=1)
                                             ->  Hash  (cost=6657.00..6657.00 rows=14141 width=4) (actual time=70.006..70.006 rows=10880 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6657.00 rows=14141 width=4) (actual time=0.353..68.260 rows=10880 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..4.26 rows=1 width=35) (actual time=0.040..0.264 rows=7 loops=43520)
                                             Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using q21_idx_3 on orders  (cost=0.00..3.97 rows=1 width=8) (actual time=0.011..0.012 rows=1 loops=325928)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.87 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.228..0.228 rows=25 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.213..0.219 rows=25 loops=1)
 Total runtime: 17423.176 ms
(25 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=284646.81..284646.82 rows=1 width=61) (actual time=2779.025..2779.025 rows=1 loops=1)
   ->  Sort  (cost=284646.81..284647.23 rows=168 width=61) (actual time=2779.024..2779.024 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=284641.35..284645.97 rows=168 width=61) (actual time=2778.934..2778.958 rows=175 loops=1)
               ->  Hash Join  (cost=6835.32..284640.09 rows=168 width=61) (actual time=47.336..2391.896 rows=325928 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=6833.76..284635.38 rows=168 width=39) (actual time=47.308..2216.640 rows=325928 loops=1)
                           ->  Nested Loop  (cost=6833.76..283982.29 rows=168 width=43) (actual time=47.297..1837.937 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=6833.76..283313.55 rows=168 width=43) (actual time=47.282..890.539 rows=325928 loops=1)
                                       ->  Hash Join  (cost=6833.76..42232.30 rows=56354 width=20) (actual time=47.263..270.854 rows=43520 loops=1)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..25835.00 rows=800000 width=16) (actual time=0.006..105.705 rows=800000 loops=1)
                                             ->  Hash  (cost=6657.00..6657.00 rows=14141 width=4) (actual time=47.236..47.236 rows=10880 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6657.00 rows=14141 width=4) (actual time=0.010..46.088 rows=10880 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..4.26 rows=1 width=35) (actual time=0.003..0.013 rows=7 loops=43520)
                                             Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using q21_idx_3 on orders  (cost=0.00..3.97 rows=1 width=8) (actual time=0.002..0.003 rows=1 loops=325928)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.87 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.018..0.018 rows=25 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.013 rows=25 loops=1)
 Total runtime: 2779.103 ms
(25 rows)

query 10 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=253279.49..253279.54 rows=20 width=188) (actual time=2150.783..2150.786 rows=20 loops=1)
   ->  Sort  (cost=253279.49..253428.67 rows=59670 width=188) (actual time=2150.783..2150.786 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method:  top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=250647.47..251691.70 rows=59670 width=188) (actual time=2124.581..2140.471 rows=38076 loops=1)
               ->  Hash Join  (cost=36471.23..249454.07 rows=59670 width=188) (actual time=338.659..1973.875 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=36469.66..248632.05 rows=59670 width=166) (actual time=338.423..1947.141 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=29461.66..240206.88 rows=59670 width=20) (actual time=248.781..1786.184 rows=114347 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..193580.94 rows=1472674 width=20) (actual time=0.567..1153.221 rows=1478870 loops=1)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                 ->  Hash  (cost=28701.95..28701.95 rows=60777 width=8) (actual time=247.451..247.451 rows=57111 loops=1)
                                       ->  Bitmap Heap Scan on orders  (cost=957.30..28701.95 rows=60777 width=8) (actual time=13.137..235.115 rows=57111 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..942.10 rows=60777 width=0) (actual time=9.567..9.567 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=5133.00..5133.00 rows=150000 width=150) (actual time=89.626..89.626 rows=150000 loops=1)
                                 ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=150) (actual time=0.494..54.094 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.231..0.231 rows=25 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.215..0.220 rows=25 loops=1)
 Total runtime: 2151.162 ms
(23 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=253279.49..253279.54 rows=20 width=188) (actual time=1698.751..1698.752 rows=20 loops=1)
   ->  Sort  (cost=253279.49..253428.67 rows=59670 width=188) (actual time=1698.750..1698.751 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method:  top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=250647.47..251691.70 rows=59670 width=188) (actual time=1673.042..1688.460 rows=38076 loops=1)
               ->  Hash Join  (cost=36471.23..249454.07 rows=59670 width=188) (actual time=152.835..1525.086 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=36469.66..248632.05 rows=59670 width=166) (actual time=152.814..1499.991 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=29461.66..240206.88 rows=59670 width=20) (actual time=85.318..1363.003 rows=114347 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..193580.94 rows=1472674 width=20) (actual time=0.033..931.739 rows=1478870 loops=1)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                 ->  Hash  (cost=28701.95..28701.95 rows=60777 width=8) (actual time=85.174..85.174 rows=57111 loops=1)
                                       ->  Bitmap Heap Scan on orders  (cost=957.30..28701.95 rows=60777 width=8) (actual time=8.780..77.455 rows=57111 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..942.10 rows=60777 width=0) (actual time=5.813..5.813 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=5133.00..5133.00 rows=150000 width=150) (actual time=67.489..67.489 rows=150000 loops=1)
                                 ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=150) (actual time=0.007..33.414 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.017..0.017 rows=25 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.012 rows=25 loops=1)
 Total runtime: 1699.131 ms
(23 rows)

query 11 run 1
SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=30908.16..30908.16 rows=1 width=16) (actual time=768.786..768.786 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=14854.13..14854.15 rows=1 width=12) (actual time=28.222..28.222 rows=1 loops=1)
           ->  Nested Loop  (cost=0.00..14774.13 rows=31997 width=12) (actual time=0.013..16.807 rows=32880 loops=1)
                 ->  Nested Loop  (cost=0.00..430.71 rows=400 width=4) (actual time=0.009..0.181 rows=411 loops=1)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..424.40 rows=400 width=8) (actual time=0.003..0.133 rows=411 loops=1)
                             Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..34.86 rows=80 width=16) (actual time=0.003..0.032 rows=80 loops=411)
                       Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=16054.01..16134.01 rows=31997 width=16) (actual time=768.785..768.785 rows=1 loops=1)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=15014.11..15894.03 rows=31997 width=16) (actual time=763.432..768.658 rows=839 loops=1)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Nested Loop  (cost=0.00..14774.13 rows=31997 width=16) (actual time=2.051..708.062 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..430.71 rows=400 width=4) (actual time=1.144..5.953 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.303..0.306 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..424.40 rows=400 width=8) (actual time=0.839..5.553 rows=411 loops=1)
                                 Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..34.86 rows=80 width=20) (actual time=0.087..1.690 rows=80 loops=411)
                           Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
 Total runtime: 768.867 ms
(25 rows)

SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=30908.16..30908.16 rows=1 width=16) (actual time=103.363..103.363 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=14854.13..14854.15 rows=1 width=12) (actual time=28.156..28.156 rows=1 loops=1)
           ->  Nested Loop  (cost=0.00..14774.13 rows=31997 width=12) (actual time=0.013..16.760 rows=32880 loops=1)
                 ->  Nested Loop  (cost=0.00..430.71 rows=400 width=4) (actual time=0.009..0.178 rows=411 loops=1)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..424.40 rows=400 width=8) (actual time=0.004..0.138 rows=411 loops=1)
                             Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..34.86 rows=80 width=16) (actual time=0.003..0.032 rows=80 loops=411)
                       Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=16054.01..16134.01 rows=31997 width=16) (actual time=103.363..103.363 rows=1 loops=1)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=15014.11..15894.03 rows=31997 width=16) (actual time=97.969..103.224 rows=839 loops=1)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Nested Loop  (cost=0.00..14774.13 rows=31997 width=16) (actual time=0.052..53.513 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..430.71 rows=400 width=4) (actual time=0.030..0.583 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.016 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..424.40 rows=400 width=8) (actual time=0.015..0.522 rows=411 loops=1)
                                 Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..34.86 rows=80 width=20) (actual time=0.007..0.119 rows=80 loops=411)
                           Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
 Total runtime: 103.433 ms
(25 rows)

query 12 run 1
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=131899.51..131899.52 rows=1 width=27) (actual time=2885.323..2885.323 rows=1 loops=1)
   ->  Sort  (cost=131899.51..131899.52 rows=1 width=27) (actual time=2885.323..2885.323 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method:  quicksort  Memory: 25kB
         ->  HashAggregate  (cost=131899.48..131899.50 rows=1 width=27) (actual time=2885.300..2885.300 rows=2 loops=1)
               ->  Merge Join  (cost=70002.24..131701.76 rows=26363 width=27) (actual time=2335.670..2867.155 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..57566.33 rows=1500000 width=20) (actual time=1.699..405.268 rows=1499957 loops=1)
                     ->  Sort  (cost=69996.11..70062.02 rows=26363 width=15) (actual time=2333.907..2336.893 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method:  quicksort  Memory: 2219kB
                           ->  Bitmap Heap Scan on lineitem  (cost=30628.49..68060.25 rows=26363 width=15) (actual time=98.215..2320.378 rows=30953 loops=1)
                                 Recheck Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate))
                                 ->  Bitmap Index Scan on q12_idx_1  (cost=0.00..30621.90 rows=26363 width=0) (actual time=93.770..93.770 rows=30953 loops=1)
                                       Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 2885.396 ms
(16 rows)

SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=131899.51..131899.52 rows=1 width=27) (actual time=543.637..543.638 rows=1 loops=1)
   ->  Sort  (cost=131899.51..131899.52 rows=1 width=27) (actual time=543.637..543.637 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method:  quicksort  Memory: 25kB
         ->  HashAggregate  (cost=131899.48..131899.50 rows=1 width=27) (actual time=543.616..543.617 rows=2 loops=1)
               ->  Merge Join  (cost=70002.24..131701.76 rows=26363 width=27) (actual time=146.504..528.913 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..57566.33 rows=1500000 width=20) (actual time=0.021..262.439 rows=1499957 loops=1)
                     ->  Sort  (cost=69996.11..70062.02 rows=26363 width=15) (actual time=146.459..148.375 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method:  quicksort  Memory: 2219kB
                           ->  Bitmap Heap Scan on lineitem  (cost=30628.49..68060.25 rows=26363 width=15) (actual time=77.491..141.729 rows=30953 loops=1)
                                 Recheck Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate))
                                 ->  Bitmap Index Scan on q12_idx_1  (cost=0.00..30621.90 rows=26363 width=0) (actual time=73.719..73.719 rows=30953 loops=1)
                                       Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 543.694 ms
(16 rows)

query 13 run 1
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=155167.66..155167.67 rows=1 width=8) (actual time=1574.398..1574.398 rows=1 loops=1)
   ->  Sort  (cost=155167.66..155168.16 rows=200 width=8) (actual time=1574.397..1574.397 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=155164.16..155166.66 rows=200 width=8) (actual time=1574.378..1574.385 rows=42 loops=1)
               ->  HashAggregate  (cost=151039.16..152914.16 rows=150000 width=8) (actual time=1525.968..1554.750 rows=150000 loops=1)
                     ->  Hash Left Join  (cost=69696.44..143690.59 rows=1469715 width=8) (actual time=857.921..1307.977 rows=1533923 loops=1)
                           Hash Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=4) (actual time=0.446..40.462 rows=150000 loops=1)
                           ->  Hash  (cost=45583.00..45583.00 rows=1469715 width=8) (actual time=857.337..857.337 rows=1483918 loops=1)
                                 ->  Seq Scan on orders  (cost=0.00..45583.00 rows=1469715 width=8) (actual time=0.460..639.750 rows=1483918 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 1575.222 ms
(13 rows)

SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=155167.66..155167.67 rows=1 width=8) (actual time=1404.103..1404.103 rows=1 loops=1)
   ->  Sort  (cost=155167.66..155168.16 rows=200 width=8) (actual time=1404.101..1404.101 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=155164.16..155166.66 rows=200 width=8) (actual time=1404.084..1404.089 rows=42 loops=1)
               ->  HashAggregate  (cost=151039.16..152914.16 rows=150000 width=8) (actual time=1356.124..1384.644 rows=150000 loops=1)
                     ->  Hash Left Join  (cost=69696.44..143690.59 rows=1469715 width=8) (actual time=710.499..1139.772 rows=1533923 loops=1)
                           Hash Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=4) (actual time=0.014..21.103 rows=150000 loops=1)
                           ->  Hash  (cost=45583.00..45583.00 rows=1469715 width=8) (actual time=710.385..710.385 rows=1483918 loops=1)
                                 ->  Seq Scan on orders  (cost=0.00..45583.00 rows=1469715 width=8) (actual time=0.011..506.114 rows=1483918 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 1404.873 ms
(13 rows)

query 14 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=91581.27..91581.30 rows=1 width=37) (actual time=1817.083..1817.083 rows=1 loops=1)
   ->  Aggregate  (cost=91581.27..91581.30 rows=1 width=37) (actual time=1817.083..1817.083 rows=1 loops=1)
         ->  Hash Join  (cost=10289.17..91172.81 rows=81691 width=37) (actual time=107.742..1743.051 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1632.17..80881.99 rows=81691 width=20) (actual time=22.710..1580.259 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1611.74 rows=81691 width=0) (actual time=16.362..16.362 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6157.00..6157.00 rows=200000 width=25) (actual time=84.960..84.960 rows=200000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..6157.00 rows=200000 width=25) (actual time=0.436..57.701 rows=200000 loops=1)
 Total runtime: 1817.305 ms
(11 rows)

SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=91581.27..91581.30 rows=1 width=37) (actual time=298.145..298.145 rows=1 loops=1)
   ->  Aggregate  (cost=91581.27..91581.30 rows=1 width=37) (actual time=298.144..298.144 rows=1 loops=1)
         ->  Hash Join  (cost=10289.17..91172.81 rows=81691 width=37) (actual time=77.697..242.743 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1632.17..80881.99 rows=81691 width=20) (actual time=16.281..125.470 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1611.74 rows=81691 width=0) (actual time=10.528..10.528 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6157.00..6157.00 rows=200000 width=25) (actual time=61.368..61.368 rows=200000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..6157.00 rows=200000 width=25) (actual time=0.008..36.365 rows=200000 loops=1)
 Total runtime: 298.177 ms
(11 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=253566.22..253567.46 rows=1 width=103) (actual time=1523.221..1523.221 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=126488.78..126488.79 rows=1 width=32) (actual time=221.085..221.085 rows=1 loops=1)
           ->  HashAggregate  (cost=126477.47..126484.07 rows=377 width=20) (actual time=219.325..220.514 rows=10000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=4550.58..125338.08 rows=227878 width=20) (actual time=34.228..84.013 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4493.61 rows=227878 width=0) (actual time=23.847..23.847 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=127077.43..127544.34 rows=377 width=103) (actual time=1523.221..1523.221 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..436.25 rows=10000 width=71) (actual time=0.587..4.379 rows=8449 loops=1)
         ->  Sort  (cost=127077.43..127078.38 rows=377 width=36) (actual time=1518.319..1518.319 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method:  quicksort  Memory: 25kB
               ->  Subquery Scan revenue0  (cost=127047.16..127061.30 rows=377 width=36) (actual time=1516.729..1518.312 rows=1 loops=1)
                     ->  HashAggregate  (cost=127047.16..127057.53 rows=377 width=20) (actual time=1516.727..1518.309 rows=1 loops=1)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=4550.58..125338.08 rows=227878 width=20) (actual time=54.622..1088.423 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4493.61 rows=227878 width=0) (actual time=43.399..43.399 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 1523.290 ms
(22 rows)

DROP VIEW
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=253566.22..253567.46 rows=1 width=103) (actual time=588.550..588.550 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=126488.78..126488.79 rows=1 width=32) (actual time=220.117..220.117 rows=1 loops=1)
           ->  HashAggregate  (cost=126477.47..126484.07 rows=377 width=20) (actual time=218.379..219.581 rows=10000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=4550.58..125338.08 rows=227878 width=20) (actual time=34.101..84.217 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4493.61 rows=227878 width=0) (actual time=23.777..23.777 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=127077.43..127544.34 rows=377 width=103) (actual time=588.549..588.549 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..436.25 rows=10000 width=71) (actual time=0.018..1.489 rows=8449 loops=1)
         ->  Sort  (cost=127077.43..127078.38 rows=377 width=36) (actual time=586.571..586.571 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method:  quicksort  Memory: 25kB
               ->  Subquery Scan revenue0  (cost=127047.16..127061.30 rows=377 width=36) (actual time=585.002..586.567 rows=1 loops=1)
                     ->  HashAggregate  (cost=127047.16..127057.53 rows=377 width=20) (actual time=585.001..586.566 rows=1 loops=1)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=4550.58..125338.08 rows=227878 width=20) (actual time=39.262..221.289 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4493.61 rows=227878 width=0) (actual time=29.123..29.123 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 588.618 ms
(22 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47742.40..47742.41 rows=1 width=40) (actual time=1314.332..1314.332 rows=1 loops=1)
   ->  Sort  (cost=47742.40..47749.24 rows=2734 width=40) (actual time=1314.331..1314.331 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=47013.65..47728.73 rows=2734 width=40) (actual time=1261.284..1311.251 rows=18220 loops=1)
               ->  Sort  (cost=47013.65..47149.83 rows=54473 width=40) (actual time=1261.264..1268.917 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method:  quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9848.73..42728.46 rows=54473 width=40) (actual time=100.163..496.354 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=350.00..28185.00 rows=400000 width=8) (actual time=5.522..259.844 rows=799680 loops=1)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..350.00 rows=1 width=4) (actual time=0.931..5.234 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9157.00..9157.00 rows=27338 width=40) (actual time=94.615..94.615 rows=29492 loops=1)
                                 ->  Seq Scan on part  (cost=0.00..9157.00 rows=27338 width=40) (actual time=0.506..89.202 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
 Total runtime: 1314.394 ms
(19 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47742.40..47742.41 rows=1 width=40) (actual time=1165.747..1165.747 rows=1 loops=1)
   ->  Sort  (cost=47742.40..47749.24 rows=2734 width=40) (actual time=1165.746..1165.746 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=47013.65..47728.73 rows=2734 width=40) (actual time=1112.636..1162.778 rows=18220 loops=1)
               ->  Sort  (cost=47013.65..47149.83 rows=54473 width=40) (actual time=1112.617..1120.293 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method:  quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9848.73..42728.46 rows=54473 width=40) (actual time=71.234..347.251 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=350.00..28185.00 rows=400000 width=8) (actual time=2.864..164.797 rows=799680 loops=1)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..350.00 rows=1 width=4) (actual time=0.113..2.848 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9157.00..9157.00 rows=27338 width=40) (actual time=68.347..68.347 rows=29492 loops=1)
                                 ->  Seq Scan on part  (cost=0.00..9157.00 rows=27338 width=40) (actual time=0.010..63.354 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
 Total runtime: 1165.802 ms
(19 rows)

query 17 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=225874.17..225874.18 rows=1 width=10) (actual time=5187.742..5187.742 rows=1 loops=1)
   ->  Aggregate  (cost=225874.17..225874.18 rows=1 width=10) (actual time=5187.741..5187.741 rows=1 loops=1)
         ->  Nested Loop  (cost=215743.23..225869.17 rows=2000 width=10) (actual time=4991.527..5187.297 rows=592 loops=1)
               ->  Hash Join  (cost=215743.23..221381.16 rows=196 width=40) (actual time=4990.454..5129.800 rows=208 loops=1)
                     Hash Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=208583.73..211524.23 rows=196034 width=11) (actual time=4932.566..5060.425 rows=200000 loops=1)
                           ->  Seq Scan on lineitem  (cost=0.00..178578.15 rows=6001115 width=11) (actual time=0.610..718.132 rows=6001215 loops=1)
                     ->  Hash  (cost=7157.00..7157.00 rows=200 width=4) (actual time=57.866..57.866 rows=208 loops=1)
                           ->  Seq Scan on part  (cost=0.00..7157.00 rows=200 width=4) (actual time=1.235..57.756 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using q17_idx_1 on lineitem  (cost=0.00..22.75 rows=10 width=21) (actual time=0.254..0.275 rows=3 loops=208)
                     Index Cond: ((public.lineitem.l_partkey = part.p_partkey) AND (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity)))))
 Total runtime: 5188.345 ms
(13 rows)

SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=225874.17..225874.18 rows=1 width=10) (actual time=5002.898..5002.898 rows=1 loops=1)
   ->  Aggregate  (cost=225874.17..225874.18 rows=1 width=10) (actual time=5002.898..5002.898 rows=1 loops=1)
         ->  Nested Loop  (cost=215743.23..225869.17 rows=2000 width=10) (actual time=4857.456..5002.755 rows=592 loops=1)
               ->  Hash Join  (cost=215743.23..221381.16 rows=196 width=40) (actual time=4857.436..5000.959 rows=208 loops=1)
                     Hash Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=208583.73..211524.23 rows=196034 width=11) (actual time=4823.482..4955.792 rows=200000 loops=1)
                           ->  Seq Scan on lineitem  (cost=0.00..178578.15 rows=6001115 width=11) (actual time=0.027..510.438 rows=6001215 loops=1)
                     ->  Hash  (cost=7157.00..7157.00 rows=200 width=4) (actual time=33.932..33.932 rows=208 loops=1)
                           ->  Seq Scan on part  (cost=0.00..7157.00 rows=200 width=4) (actual time=0.136..33.874 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using q17_idx_1 on lineitem  (cost=0.00..22.75 rows=10 width=21) (actual time=0.007..0.008 rows=3 loops=208)
                     Index Cond: ((public.lineitem.l_partkey = part.p_partkey) AND (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity)))))
 Total runtime: 5003.490 ms
(13 rows)

query 18 run 1
SET
SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=771999.13..772002.13 rows=100 width=48) (actual time=4200.032..4200.058 rows=9 loops=1)
   ->  GroupAggregate  (cost=771999.13..817429.96 rows=1514361 width=48) (actual time=4200.032..4200.057 rows=9 loops=1)
         ->  Sort  (cost=771999.13..775785.03 rows=1514361 width=48) (actual time=4200.020..4200.024 rows=63 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method:  quicksort  Memory: 33kB
               ->  Hash Join  (cost=367046.93..583272.87 rows=1514361 width=48) (actual time=3602.765..4199.498 rows=63 loops=1)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..178578.15 rows=6001115 width=11) (actual time=0.465..344.107 rows=6001215 loops=1)
                     ->  Hash  (cost=362315.43..362315.43 rows=378520 width=45) (actual time=3443.268..3443.268 rows=9 loops=1)
                           ->  Hash Join  (cost=292707.38..362315.43 rows=378520 width=45) (actual time=3135.261..3443.247 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=285699.38..346317.58 rows=378520 width=26) (actual time=3070.110..3378.076 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41833.00 rows=1500000 width=22) (actual time=0.555..271.764 rows=1500000 loops=1)
                                       ->  Hash  (cost=280967.88..280967.88 rows=378520 width=4) (actual time=2982.356..2982.356 rows=9 loops=1)
                                             ->  GroupAggregate  (cost=0.00..277182.68 rows=378520 width=11) (actual time=637.244..2982.339 rows=9 loops=1)
                                                   Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..241499.30 rows=6001115 width=11) (actual time=0.625..1592.289 rows=6001215 loops=1)
                                 ->  Hash  (cost=5133.00..5133.00 rows=150000 width=23) (actual time=65.134..65.134 rows=150000 loops=1)
                                       ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=23) (actual time=0.411..44.994 rows=150000 loops=1)
 Total runtime: 4200.322 ms
(21 rows)

SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=771999.13..772002.13 rows=100 width=48) (actual time=3384.462..3384.487 rows=9 loops=1)
   ->  GroupAggregate  (cost=771999.13..817429.96 rows=1514361 width=48) (actual time=3384.462..3384.487 rows=9 loops=1)
         ->  Sort  (cost=771999.13..775785.03 rows=1514361 width=48) (actual time=3384.452..3384.453 rows=63 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method:  quicksort  Memory: 33kB
               ->  Hash Join  (cost=367046.93..583272.87 rows=1514361 width=48) (actual time=2793.200..3384.303 rows=63 loops=1)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..178578.15 rows=6001115 width=11) (actual time=0.008..339.743 rows=6001215 loops=1)
                     ->  Hash  (cost=362315.43..362315.43 rows=378520 width=45) (actual time=2635.728..2635.728 rows=9 loops=1)
                           ->  Hash Join  (cost=292707.38..362315.43 rows=378520 width=45) (actual time=2440.772..2635.711 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=285699.38..346317.58 rows=378520 width=26) (actual time=2394.393..2589.313 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41833.00 rows=1500000 width=22) (actual time=0.004..146.278 rows=1500000 loops=1)
                                       ->  Hash  (cost=280967.88..280967.88 rows=378520 width=4) (actual time=2341.745..2341.745 rows=9 loops=1)
                                             ->  GroupAggregate  (cost=0.00..277182.68 rows=378520 width=11) (actual time=494.064..2341.735 rows=9 loops=1)
                                                   Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..241499.30 rows=6001115 width=11) (actual time=0.015..993.046 rows=6001215 loops=1)
                                 ->  Hash  (cost=5133.00..5133.00 rows=150000 width=23) (actual time=46.370..46.370 rows=150000 loops=1)
                                       ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=23) (actual time=0.008..26.449 rows=150000 loops=1)
 Total runtime: 3384.792 ms
(21 rows)

query 19 run 1
SET
SET


 Limit  (cost=313762.39..313762.40 rows=1 width=16) (actual time=1783.034..1783.035 rows=1 loops=1)
   ->  Aggregate  (cost=313762.39..313762.40 rows=1 width=16) (actual time=1783.033..1783.033 rows=1 loops=1)
         ->  Hash Join  (cost=10926.49..313762.10 rows=113 width=16) (actual time=85.718..1782.721 rows=111 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..298600.45 rows=111661 width=27) (actual time=0.480..1651.102 rows=89766 loops=1)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=9657.00..9657.00 rows=101559 width=30) (actual time=85.205..85.205 rows=60513 loops=1)
                     ->  Seq Scan on part  (cost=0.00..9657.00 rows=101559 width=30) (actual time=0.646..74.881 rows=60513 loops=1)
                           Filter: ((p_size >= 1) AND (((p_size <= 5) AND (p_size >= 1)) OR ((p_size <= 10) AND (p_size >= 1)) OR ((p_size <= 15) AND (p_size >= 1))))
 Total runtime: 1783.076 ms
(11 rows)

SET
SET


 Limit  (cost=313762.39..313762.40 rows=1 width=16) (actual time=1531.565..1531.565 rows=1 loops=1)
   ->  Aggregate  (cost=313762.39..313762.40 rows=1 width=16) (actual time=1531.564..1531.564 rows=1 loops=1)
         ->  Hash Join  (cost=10926.49..313762.10 rows=113 width=16) (actual time=61.719..1531.317 rows=111 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..298600.45 rows=111661 width=27) (actual time=0.075..1426.700 rows=89766 loops=1)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=9657.00..9657.00 rows=101559 width=30) (actual time=61.621..61.621 rows=60513 loops=1)
                     ->  Seq Scan on part  (cost=0.00..9657.00 rows=101559 width=30) (actual time=0.009..52.407 rows=60513 loops=1)
                           Filter: ((p_size >= 1) AND (((p_size <= 5) AND (p_size >= 1)) OR ((p_size <= 10) AND (p_size >= 1)) OR ((p_size <= 15) AND (p_size >= 1))))
 Total runtime: 1531.606 ms
(11 rows)

query 20 run 1
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=171592.51..171592.51 rows=1 width=51) (actual time=2778.259..2778.260 rows=1 loops=1)
   ->  Sort  (cost=171592.51..171592.51 rows=1 width=51) (actual time=2778.259..2778.259 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  Nested Loop  (cost=171587.92..171592.50 rows=1 width=51) (actual time=2747.790..2778.068 rows=196 loops=1)
               ->  Nested Loop  (cost=171587.92..171592.21 rows=1 width=55) (actual time=2742.296..2774.036 rows=4421 loops=1)
                     ->  HashAggregate  (cost=171587.92..171587.93 rows=1 width=8) (actual time=2741.595..2742.292 rows=4421 loops=1)
                           ->  Nested Loop  (cost=165050.62..171587.92 rows=1 width=8) (actual time=1802.025..2737.220 rows=5898 loops=1)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  Hash Join  (cost=165050.62..167870.03 rows=946 width=44) (actual time=1800.526..2121.024 rows=5914 loops=1)
                                       Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                       ->  HashAggregate  (cost=158343.12..159748.10 rows=93665 width=15) (actual time=1745.008..2008.857 rows=544869 loops=1)
                                             ->  Bitmap Heap Scan on lineitem  (cost=18701.50..151318.25 rows=936650 width=15) (actual time=177.727..1236.518 rows=913487 loops=1)
                                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..18467.33 rows=936650 width=0) (actual time=156.939..156.939 rows=913487 loops=1)
                                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Hash  (cost=6682.25..6682.25 rows=2020 width=4) (actual time=55.439..55.439 rows=2187 loops=1)
                                             ->  HashAggregate  (cost=6662.05..6682.25 rows=2020 width=4) (actual time=54.973..55.229 rows=2187 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6657.00 rows=2020 width=4) (actual time=0.454..54.166 rows=2187 loops=1)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.91 rows=1 width=12) (actual time=0.103..0.103 rows=1 loops=5914)
                                       Index Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4.27 rows=1 width=59) (actual time=0.007..0.007 rows=1 loops=4421)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=4421)
                     Index Cond: (nation.n_nationkey = supplier.s_nationkey)
                     Filter: (nation.n_name = 'IRAQ'::bpchar)
 Total runtime: 2778.682 ms
(28 rows)

SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=171592.51..171592.51 rows=1 width=51) (actual time=1287.200..1287.200 rows=1 loops=1)
   ->  Sort  (cost=171592.51..171592.51 rows=1 width=51) (actual time=1287.200..1287.200 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  Nested Loop  (cost=171587.92..171592.50 rows=1 width=51) (actual time=1277.596..1287.043 rows=196 loops=1)
               ->  Nested Loop  (cost=171587.92..171592.21 rows=1 width=55) (actual time=1277.474..1284.004 rows=4421 loops=1)
                     ->  HashAggregate  (cost=171587.92..171587.93 rows=1 width=8) (actual time=1277.462..1278.072 rows=4421 loops=1)
                           ->  Nested Loop  (cost=165050.62..171587.92 rows=1 width=8) (actual time=980.847..1275.251 rows=5898 loops=1)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  Hash Join  (cost=165050.62..167870.03 rows=946 width=44) (actual time=980.825..1248.943 rows=5914 loops=1)
                                       Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                       ->  HashAggregate  (cost=158343.12..159748.10 rows=93665 width=15) (actual time=949.489..1171.911 rows=544869 loops=1)
                                             ->  Bitmap Heap Scan on lineitem  (cost=18701.50..151318.25 rows=936650 width=15) (actual time=130.793..490.703 rows=913487 loops=1)
                                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..18467.33 rows=936650 width=0) (actual time=111.438..111.438 rows=913487 loops=1)
                                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Hash  (cost=6682.25..6682.25 rows=2020 width=4) (actual time=31.262..31.262 rows=2187 loops=1)
                                             ->  HashAggregate  (cost=6662.05..6682.25 rows=2020 width=4) (actual time=30.820..31.064 rows=2187 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6657.00 rows=2020 width=4) (actual time=0.032..30.311 rows=2187 loops=1)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.91 rows=1 width=12) (actual time=0.004..0.004 rows=1 loops=5914)
                                       Index Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4.27 rows=1 width=59) (actual time=0.001..0.001 rows=1 loops=4421)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=4421)
                     Index Cond: (nation.n_nationkey = supplier.s_nationkey)
                     Filter: (nation.n_name = 'IRAQ'::bpchar)
 Total runtime: 1287.644 ms
(28 rows)

query 21 run 1
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2853373.23..2853373.48 rows=100 width=26) (actual time=12027.720..12027.729 rows=100 loops=1)
   ->  Sort  (cost=2853373.23..2853397.83 rows=9839 width=26) (actual time=12027.719..12027.723 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method:  top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=2852874.20..2852997.19 rows=9839 width=26) (actual time=12027.173..12027.256 rows=421 loops=1)
               ->  Nested Loop  (cost=40079.87..2852825.01 rows=9839 width=26) (actual time=307.078..12023.274 rows=4227 loops=1)
                     ->  Hash Join  (cost=40079.87..2774256.79 rows=20004 width=30) (actual time=305.460..11476.695 rows=8678 loops=1)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem l1  (cost=39839.00..2771940.52 rows=500093 width=8) (actual time=295.361..11437.479 rows=202092 loops=1)
                                 Recheck Cond: (l_receiptdate > l_commitdate)
                                 Filter: ((subplan) AND (NOT (subplan)))
                                 ->  Bitmap Index Scan on q21_idx_2  (cost=0.00..39713.97 rows=2000372 width=0) (actual time=271.007..271.007 rows=3793296 loops=1)
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..4.94 rows=5 width=125) (actual time=0.001..0.001 rows=1 loops=3657708)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..4.90 rows=16 width=125) (actual time=0.001..0.001 rows=1 loops=3793296)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=235.88..235.88 rows=400 width=30) (actual time=6.774..6.774 rows=421 loops=1)
                                 ->  Nested Loop  (cost=7.35..235.88 rows=400 width=30) (actual time=1.494..6.689 rows=421 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.286..0.288 rows=1 loops=1)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=7.35..229.57 rows=400 width=34) (actual time=1.205..6.325 rows=421 loops=1)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.25 rows=400 width=0) (actual time=0.939..0.939 rows=421 loops=1)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.92 rows=1 width=4) (actual time=0.063..0.063 rows=0 loops=8678)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (orders.o_orderstatus = 'F'::bpchar)
 Total runtime: 12027.828 ms
(31 rows)

SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2853373.23..2853373.48 rows=100 width=26) (actual time=10697.388..10697.396 rows=100 loops=1)
   ->  Sort  (cost=2853373.23..2853397.83 rows=9839 width=26) (actual time=10697.387..10697.391 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method:  top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=2852874.20..2852997.19 rows=9839 width=26) (actual time=10696.844..10696.919 rows=421 loops=1)
               ->  Nested Loop  (cost=40079.87..2852825.01 rows=9839 width=26) (actual time=239.045..10694.337 rows=4227 loops=1)
                     ->  Hash Join  (cost=40079.87..2774256.79 rows=20004 width=30) (actual time=239.030..10659.084 rows=8678 loops=1)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem l1  (cost=39839.00..2771940.52 rows=500093 width=8) (actual time=235.810..10635.229 rows=202092 loops=1)
                                 Recheck Cond: (l_receiptdate > l_commitdate)
                                 Filter: ((subplan) AND (NOT (subplan)))
                                 ->  Bitmap Index Scan on q21_idx_2  (cost=0.00..39713.97 rows=2000372 width=0) (actual time=212.918..212.918 rows=3793296 loops=1)
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..4.94 rows=5 width=125) (actual time=0.001..0.001 rows=1 loops=3657708)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..4.90 rows=16 width=125) (actual time=0.001..0.001 rows=1 loops=3793296)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=235.88..235.88 rows=400 width=30) (actual time=0.915..0.915 rows=421 loops=1)
                                 ->  Nested Loop  (cost=7.35..235.88 rows=400 width=30) (actual time=0.082..0.860 rows=421 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=7.35..229.57 rows=400 width=34) (actual time=0.069..0.801 rows=421 loops=1)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.25 rows=400 width=0) (actual time=0.049..0.049 rows=421 loops=1)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.92 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=8678)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (orders.o_orderstatus = 'F'::bpchar)
 Total runtime: 10697.487 ms
(31 rows)

query 22 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=128663.02..128663.02 rows=1 width=24) (actual time=925.017..925.017 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=7582.26..7582.27 rows=1 width=8) (actual time=120.678..120.678 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..7570.50 rows=4702 width=8) (actual time=0.520..105.224 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=121080.75..121082.91 rows=862 width=24) (actual time=925.016..925.016 rows=1 loops=1)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=121059.20..121076.44 rows=862 width=24) (actual time=924.989..924.992 rows=7 loops=1)
               ->  Index Scan using q10_idx_1 on customer  (cost=0.00..121052.74 rows=862 width=24) (actual time=122.572..918.684 rows=6397 loops=1)
                     Index Cond: (c_acctbal > $0)
                     Filter: (("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..36.63 rows=17 width=109) (actual time=0.035..0.035 rows=1 loops=19077)
                             Index Cond: (o_custkey = $1)
 Total runtime: 925.094 ms
(16 rows)

SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=128663.02..128663.02 rows=1 width=24) (actual time=232.218..232.218 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=7582.26..7582.27 rows=1 width=8) (actual time=99.267..99.267 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..7570.50 rows=4702 width=8) (actual time=0.016..85.110 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=121080.75..121082.91 rows=862 width=24) (actual time=232.217..232.217 rows=1 loops=1)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=121059.20..121076.44 rows=862 width=24) (actual time=232.193..232.196 rows=7 loops=1)
               ->  Index Scan using q10_idx_1 on customer  (cost=0.00..121052.74 rows=862 width=24) (actual time=99.323..228.961 rows=6397 loops=1)
                     Index Cond: (c_acctbal > $0)
                     Filter: (("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..36.63 rows=17 width=109) (actual time=0.003..0.003 rows=1 loops=19077)
                             Index Cond: (o_custkey = $1)
 Total runtime: 232.269 ms
(16 rows)

