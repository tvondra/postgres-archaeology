query 1 run 1
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=341668.31..341668.32 rows=1 width=33)
   ->  Sort  (cost=341668.31..341668.33 rows=6 width=33)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=341668.01..341668.28 rows=6 width=33)
               ->  Seq Scan on lineitem  (cost=0.00..193580.46 rows=5923502 width=33)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
(6 rows)

query 2 run 1
SET
SET
                                                            QUERY PLAN                                                            
----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=70675.94..70675.95 rows=1 width=194)
   ->  Sort  (cost=70675.94..70675.95 rows=1 width=194)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         ->  Merge Join  (cost=45653.64..70675.93 rows=1 width=194)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using q2_idx_1 on part  (cost=0.00..7905.70 rows=860 width=30)
                     Index Cond: (p_size = 16)
                     Filter: ((p_type)::text ~~ '%NICKEL'::text)
               ->  Sort  (cost=45653.64..46053.12 rows=159792 width=176)
                     Sort Key: public.partsupp.ps_partkey
                     ->  Hash Join  (cost=410.03..31842.95 rows=159792 width=176)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25835.00 rows=800000 width=16)
                           ->  Hash  (cost=385.03..385.03 rows=2000 width=168)
                                 ->  Hash Join  (cost=2.53..385.03 rows=2000 width=168)
                                       Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=146)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                   Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=23.73..23.74 rows=1 width=8)
                       ->  Nested Loop  (cost=0.00..23.72 rows=1 width=8)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.00..22.61 rows=4 width=12)
                                   ->  Nested Loop  (cost=0.00..21.49 rows=4 width=12)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..4.36 rows=4 width=12)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4.27 rows=1 width=8)
                                               Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8)
                                         Index Cond: (public.nation.n_nationkey = public.supplier.s_nationkey)
(39 rows)

query 3 run 1
SET
SET
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Limit  (cost=316765.68..316765.70 rows=10 width=28)
   ->  Sort  (cost=316765.68..317552.56 rows=314754 width=28)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         ->  GroupAggregate  (cost=300521.33..309963.95 rows=314754 width=28)
               ->  Sort  (cost=300521.33..301308.22 rows=314754 width=28)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=62835.69..271778.21 rows=314754 width=28)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..193580.46 rows=3257204 width=20)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=61023.82..61023.82 rows=144950 width=12)
                                 ->  Hash Join  (cost=5885.19..61023.82 rows=144950 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..45583.00 rows=720545 width=16)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5508.00..5508.00 rows=30175 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..5508.00 rows=30175 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(18 rows)

query 4 run 1
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=77252.49..77252.50 rows=1 width=16)
   ->  Sort  (cost=77252.49..77252.50 rows=1 width=16)
         Sort Key: orders.o_orderpriority
         ->  HashAggregate  (cost=77252.47..77252.48 rows=1 width=16)
               ->  Nested Loop Semi Join  (cost=888.63..77184.21 rows=13652 width=16)
                     ->  Bitmap Heap Scan on orders  (cost=888.63..28567.91 rows=56419 width=20)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..874.52 rows=56419 width=0)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using q4_idx_1 on lineitem  (cost=0.00..4.27 rows=6 width=4)
                           Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
(11 rows)

query 5 run 1
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=251202.61..251202.62 rows=1 width=42)
   ->  Sort  (cost=251202.61..251202.68 rows=25 width=42)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=251202.05..251202.49 rows=25 width=42)
               ->  Hash Join  (cost=42777.67..251165.89 rows=7232 width=42)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=42302.67..245193.00 rows=180852 width=54)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..178577.77 rows=6001077 width=24)
                           ->  Hash  (cost=41737.61..41737.61 rows=45205 width=38)
                                 ->  Hash Join  (cost=9932.10..41737.61 rows=45205 width=38)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3559.07..33782.41 rows=226023 width=8)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3502.56 rows=226023 width=0)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5998.03..5998.03 rows=30000 width=38)
                                             ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=38)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
(29 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=120988.56..120988.57 rows=1 width=16)
   ->  Aggregate  (cost=120988.56..120988.57 rows=1 width=16)
         ->  Bitmap Heap Scan on lineitem  (cost=24685.08..120693.56 rows=117999 width=16)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..24655.58 rows=117999 width=0)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(6 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=252525.30..252525.30 rows=1 width=72)
   ->  Sort  (cost=252525.30..252539.98 rows=5874 width=72)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  HashAggregate  (cost=252363.76..252495.93 rows=5874 width=72)
               ->  Hash Join  (cost=93312.75..252305.02 rows=5874 width=72)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=92837.75..247334.46 rows=146914 width=80)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=36695.28..182830.73 rows=1837897 width=28)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36235.80 rows=1837897 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=54643.68..54643.68 rows=119904 width=60)
                                 ->  Hash Join  (cost=5986.68..54643.68 rows=119904 width=60)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41833.00 rows=1500000 width=8)
                                       ->  Hash  (cost=5836.80..5836.80 rows=11990 width=60)
                                             ->  Hash Join  (cost=21.30..5836.80 rows=11990 width=60)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
(28 rows)

query 8 run 1
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=136525.46..136525.46 rows=1 width=46)
   ->  Sort  (cost=136525.46..136527.26 rows=721 width=46)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=136496.62..136521.85 rows=721 width=46)
               ->  Hash Join  (cost=51721.75..136478.68 rows=2392 width=46)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=51720.19..136432.27 rows=2392 width=24)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=51270.19..135922.47 rows=2392 width=24)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..84478.49 rows=39963 width=24)
                                       ->  Index Scan using q2_idx_1 on part  (cost=0.00..6516.81 rows=1333 width=4)
                                             Index Cond: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..58.11 rows=30 width=28)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=50147.90..50147.90 rows=89783 width=8)
                                       ->  Hash Join  (cost=13438.75..50147.90 rows=89783 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=7065.72..40632.46 rows=448916 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6953.49 rows=448916 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5998.03..5998.03 rows=30000 width=4)
                                                   ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
(37 rows)

query 9 run 1
SET
SET
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=93501.01..93501.01 rows=1 width=61)
   ->  Sort  (cost=93501.01..93501.13 rows=48 width=61)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=93499.45..93500.77 rows=48 width=61)
               ->  Nested Loop  (cost=0.00..93499.09 rows=48 width=61)
                     ->  Nested Loop  (cost=0.00..93437.39 rows=48 width=39)
                           ->  Nested Loop  (cost=0.00..93250.81 rows=48 width=43)
                                 ->  Nested Loop  (cost=0.00..93059.74 rows=48 width=43)
                                       ->  Nested Loop  (cost=0.00..23127.24 rows=16160 width=20)
                                             ->  Seq Scan on part  (cost=0.00..6657.00 rows=4040 width=4)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..4.03 rows=4 width=16)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..4.31 rows=1 width=35)
                                             Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using q21_idx_3 on orders  (cost=0.00..3.97 rows=1 width=8)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.87 rows=1 width=8)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.27 rows=1 width=30)
                           Index Cond: (nation.n_nationkey = supplier.s_nationkey)
(21 rows)

query 10 run 1
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=252940.65..252940.70 rows=20 width=187)
   ->  Sort  (cost=252940.65..253083.97 rows=57327 width=187)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=250411.98..251415.20 rows=57327 width=187)
               ->  Hash Join  (cost=36362.96..249265.44 rows=57327 width=187)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=36361.40..248475.63 rows=57327 width=165)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=29353.40..240106.12 rows=57327 width=20)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..193580.46 rows=1475465 width=20)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                 ->  Hash  (cost=28624.90..28624.90 rows=58280 width=8)
                                       ->  Bitmap Heap Scan on orders  (cost=917.70..28624.90 rows=58280 width=8)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..903.13 rows=58280 width=0)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=5133.00..5133.00 rows=150000 width=149)
                                 ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=149)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(21 rows)

query 11 run 1
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=30905.92..30905.92 rows=1 width=16)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=14853.74..14853.76 rows=1 width=12)
           ->  Nested Loop  (cost=0.00..14773.84 rows=31958 width=12)
                 ->  Nested Loop  (cost=0.00..430.71 rows=400 width=4)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..424.40 rows=400 width=8)
                             Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..34.86 rows=80 width=16)
                       Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=16052.16..16132.06 rows=31958 width=16)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         ->  HashAggregate  (cost=15013.53..15892.37 rows=31958 width=16)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Nested Loop  (cost=0.00..14773.84 rows=31958 width=16)
                     ->  Nested Loop  (cost=0.00..430.71 rows=400 width=4)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..424.40 rows=400 width=8)
                                 Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..34.86 rows=80 width=20)
                           Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
(23 rows)

query 12 run 1
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=132302.39..132302.40 rows=1 width=27)
   ->  Sort  (cost=132302.39..132302.40 rows=1 width=27)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=132302.36..132302.38 rows=1 width=27)
               ->  Merge Join  (cost=70403.88..132103.68 rows=26491 width=27)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..57566.33 rows=1500000 width=20)
                     ->  Sort  (cost=70396.11..70462.34 rows=26491 width=15)
                           Sort Key: lineitem.l_orderkey
                           ->  Bitmap Heap Scan on lineitem  (cost=30878.47..68449.92 rows=26491 width=15)
                                 Recheck Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate))
                                 ->  Bitmap Index Scan on q12_idx_1  (cost=0.00..30871.85 rows=26491 width=0)
                                       Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(13 rows)

query 13 run 1
SET
SET
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=155167.88..155167.89 rows=1 width=8)
   ->  Sort  (cost=155167.88..155168.38 rows=200 width=8)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         ->  HashAggregate  (cost=155164.38..155166.88 rows=200 width=8)
               ->  HashAggregate  (cost=151039.38..152914.38 rows=150000 width=8)
                     ->  Hash Left Join  (cost=69696.54..143690.77 rows=1469723 width=8)
                           Hash Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=4)
                           ->  Hash  (cost=45583.00..45583.00 rows=1469723 width=8)
                                 ->  Seq Scan on orders  (cost=0.00..45583.00 rows=1469723 width=8)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(11 rows)

query 14 run 1
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=85477.82..85477.85 rows=1 width=37)
   ->  Aggregate  (cost=85477.82..85477.85 rows=1 width=37)
         ->  Hash Join  (cost=10087.58..85120.20 rows=71523 width=37)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1430.58..75032.12 rows=71585 width=20)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1412.68 rows=71585 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6157.00..6157.00 rows=200000 width=25)
                     ->  Seq Scan on part  (cost=0.00..6157.00 rows=200000 width=25)
(10 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=253062.93..253064.16 rows=1 width=103)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=126238.92..126238.93 rows=1 width=32)
           ->  HashAggregate  (cost=126227.61..126234.21 rows=377 width=20)
                 ->  Bitmap Heap Scan on lineitem  (cost=4521.90..125095.38 rows=226446 width=20)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4465.29 rows=226446 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=126823.99..127290.90 rows=377 width=103)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..436.25 rows=10000 width=71)
         ->  Sort  (cost=126823.99..126824.94 rows=377 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=126793.72..126807.86 rows=377 width=36)
                     ->  HashAggregate  (cost=126793.72..126804.09 rows=377 width=20)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=4521.90..125095.38 rows=226446 width=20)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4465.29 rows=226446 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47635.80..47635.80 rows=1 width=40)
   ->  Sort  (cost=47635.80..47642.50 rows=2679 width=40)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=46919.39..47622.40 rows=2679 width=40)
               ->  Sort  (cost=46919.39..47053.30 rows=53562 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=9841.77..42712.39 rows=53562 width=40)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=350.00..28185.00 rows=400000 width=8)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..350.00 rows=1 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9157.00..9157.00 rows=26781 width=40)
                                 ->  Seq Scan on part  (cost=0.00..9157.00 rows=26781 width=40)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 17 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=225834.83..225834.85 rows=1 width=10)
   ->  Aggregate  (cost=225834.83..225834.85 rows=1 width=10)
         ->  Nested Loop  (cost=215742.52..225830.11 rows=1889 width=10)
               ->  Hash Join  (cost=215742.52..221499.35 rows=189 width=40)
                     Hash Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=208583.16..211585.74 rows=200172 width=11)
                           ->  Seq Scan on lineitem  (cost=0.00..178577.77 rows=6001077 width=11)
                     ->  Hash  (cost=7157.00..7157.00 rows=189 width=4)
                           ->  Seq Scan on part  (cost=0.00..7157.00 rows=189 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using q17_idx_1 on lineitem  (cost=0.00..22.76 rows=10 width=21)
                     Index Cond: ((public.lineitem.l_partkey = part.p_partkey) AND (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity)))))
(12 rows)

query 18 run 1
SET
SET
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1086393.25..1086396.25 rows=100 width=48)
   ->  GroupAggregate  (cost=1086393.25..1176409.39 rows=3000538 width=48)
         ->  Sort  (cost=1086393.25..1093894.60 rows=3000538 width=48)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=386365.65..697653.53 rows=3000538 width=48)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..178577.77 rows=6001077 width=11)
                     ->  Hash  (cost=370398.65..370398.65 rows=750000 width=45)
                           ->  Hash Join  (cost=292123.46..370398.65 rows=750000 width=45)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=285115.46..345578.15 rows=750000 width=26)
                                       Hash Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41833.00 rows=1500000 width=22)
                                       ->  Hash  (cost=280578.34..280578.34 rows=362969 width=4)
                                             ->  GroupAggregate  (cost=0.00..276948.65 rows=362969 width=11)
                                                   Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..241498.73 rows=6001077 width=11)
                                 ->  Hash  (cost=5133.00..5133.00 rows=150000 width=23)
                                       ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=23)
(19 rows)

query 19 run 1
SET
SET


 Limit  (cost=313600.41..313600.42 rows=1 width=16)
   ->  Aggregate  (cost=313600.41..313600.42 rows=1 width=16)
         ->  Hash Join  (cost=10912.77..313600.14 rows=105 width=16)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..298599.31 rows=108715 width=27)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=9657.00..9657.00 rows=100462 width=30)
                     ->  Seq Scan on part  (cost=0.00..9657.00 rows=100462 width=30)
                           Filter: ((p_size >= 1) AND (((p_size <= 5) AND (p_size >= 1)) OR ((p_size <= 10) AND (p_size >= 1)) OR ((p_size <= 15) AND (p_size >= 1))))
(10 rows)

query 20 run 1
SET
SET
                                                                QUERY PLAN                                                                
------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=174845.27..174845.27 rows=1 width=51)
   ->  Sort  (cost=174845.27..174845.27 rows=1 width=51)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=174840.69..174845.26 rows=1 width=51)
               ->  Nested Loop  (cost=174840.69..174844.98 rows=1 width=55)
                     ->  HashAggregate  (cost=174840.69..174840.70 rows=1 width=8)
                           ->  Hash Join  (cost=171852.00..174840.68 rows=1 width=8)
                                 Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  HashAggregate  (cost=157620.37..158999.76 rows=91959 width=15)
                                       ->  Bitmap Heap Scan on lineitem  (cost=18362.62..150723.46 rows=919589 width=15)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..18132.72 rows=919589 width=0)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=14110.37..14110.37 rows=8084 width=16)
                                       ->  Nested Loop  (cost=6662.05..14110.37 rows=8084 width=16)
                                             ->  HashAggregate  (cost=6662.05..6682.25 rows=2020 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..6657.00 rows=2020 width=4)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.63 rows=4 width=12)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4.27 rows=1 width=59)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=4)
                     Index Cond: (nation.n_nationkey = supplier.s_nationkey)
                     Filter: (nation.n_name = 'IRAQ'::bpchar)
(26 rows)

query 21 run 1
SET
SET
                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=441182.49..441182.49 rows=1 width=26)
   ->  Sort  (cost=441182.49..441182.49 rows=1 width=26)
         Sort Key: (count(*)), supplier.s_name
         ->  HashAggregate  (cost=441182.47..441182.48 rows=1 width=26)
               ->  Nested Loop Anti Join  (cost=95337.61..441182.46 rows=1 width=26)
                     Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                     ->  Nested Loop Semi Join  (cost=95337.61..441177.62 rows=1 width=34)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           ->  Hash Join  (cost=95337.61..248398.79 rows=38807 width=38)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=40660.86..192533.83 rows=80014 width=34)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Bitmap Heap Scan on lineitem l1  (cost=40419.98..183991.47 rows=2000359 width=8)
                                             Recheck Cond: (l_receiptdate > l_commitdate)
                                             ->  Bitmap Index Scan on q21_idx_2  (cost=0.00..39919.89 rows=2000359 width=0)
                                       ->  Hash  (cost=235.88..235.88 rows=400 width=30)
                                             ->  Nested Loop  (cost=7.35..235.88 rows=400 width=30)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=7.35..229.57 rows=400 width=34)
                                                         Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.25 rows=400 width=0)
                                                               Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=45583.00..45583.00 rows=727500 width=4)
                                       ->  Seq Scan on orders  (cost=0.00..45583.00 rows=727500 width=4)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..4.71 rows=17 width=8)
                                 Index Cond: (l2.l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..4.76 rows=6 width=8)
                           Index Cond: (l3.l_orderkey = l1.l_orderkey)
                           Filter: (l3.l_receiptdate > l3.l_commitdate)
(31 rows)

query 22 run 1
SET
SET
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18981.52..18981.53 rows=1 width=24)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7582.26..7582.27 rows=1 width=8)
           ->  Seq Scan on customer  (cost=0.00..7570.50 rows=4704 width=8)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=11399.25..11401.12 rows=747 width=24)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         ->  HashAggregate  (cost=11380.58..11395.52 rows=747 width=24)
               ->  Nested Loop Anti Join  (cost=0.00..11374.97 rows=747 width=24)
                     ->  Seq Scan on customer  (cost=0.00..7570.50 rows=1724 width=28)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..25.82 rows=18 width=4)
                           Index Cond: (orders.o_custkey = public.customer.c_custkey)
(13 rows)

