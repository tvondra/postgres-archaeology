query 1 run 1
SET
SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3949457.19..3949457.20 rows=1 width=236) (actual time=78037.507..78037.509 rows=1 loops=1)
   ->  Sort  (cost=3949457.19..3949457.21 rows=6 width=236) (actual time=78037.506..78037.507 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3949457.00..3949457.17 rows=6 width=236) (actual time=78037.479..78037.486 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1874963.60 rows=59271240 width=25) (actual time=0.451..12281.268 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning Time: 22.837 ms
 Execution Time: 78038.431 ms
(12 rows)

SET
SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3949457.19..3949457.20 rows=1 width=236) (actual time=78225.146..78225.147 rows=1 loops=1)
   ->  Sort  (cost=3949457.19..3949457.21 rows=6 width=236) (actual time=78225.145..78225.145 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3949457.00..3949457.17 rows=6 width=236) (actual time=78225.119..78225.126 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1874963.60 rows=59271240 width=25) (actual time=0.021..10511.871 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning Time: 1.070 ms
 Execution Time: 78225.220 ms
(12 rows)

query 2 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=402836.67..402836.67 rows=1 width=192) (actual time=1369.688..1369.702 rows=100 loops=1)
   ->  Sort  (cost=402836.67..402836.67 rows=1 width=192) (actual time=1369.686..1369.694 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Nested Loop  (cost=48.19..402836.66 rows=1 width=192) (actual time=6.139..1366.622 rows=4737 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.429..0.435 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.209..0.209 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.215..0.218 rows=25 loops=1)
               ->  Materialize  (cost=48.19..402833.96 rows=1 width=170) (actual time=0.576..272.454 rows=4737 loops=5)
                     ->  Nested Loop  (cost=48.19..402833.95 rows=1 width=170) (actual time=2.876..1356.201 rows=4737 loops=1)
                           ->  Nested Loop  (cost=47.90..402829.95 rows=1 width=34) (actual time=2.466..1093.026 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..54319.53 rows=7034 width=30) (actual time=0.311..227.759 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=47.47..49.54 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=47.03..47.04 rows=1 width=32) (actual time=0.104..0.104 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.41..47.02 rows=3 width=6) (actual time=0.093..0.102 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.41..45.74 rows=17 width=10) (actual time=0.079..0.099 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.85..44.13 rows=17 width=10) (actual time=0.078..0.097 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.73 rows=17 width=10) (actual time=0.072..0.074 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.42..2.43 rows=1 width=8) (actual time=0.005..0.005 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.009..0.010 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.005 rows=25 loops=1)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4.01 rows=1 width=144) (actual time=0.055..0.055 rows=1 loops=4737)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 25.738 ms
 Execution Time: 1370.142 ms
(49 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=402836.67..402836.67 rows=1 width=192) (actual time=227.428..227.443 rows=100 loops=1)
   ->  Sort  (cost=402836.67..402836.67 rows=1 width=192) (actual time=227.428..227.436 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Nested Loop  (cost=48.19..402836.66 rows=1 width=192) (actual time=0.141..225.690 rows=4737 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.013..0.019 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
               ->  Materialize  (cost=48.19..402833.96 rows=1 width=170) (actual time=0.013..44.536 rows=4737 loops=5)
                     ->  Nested Loop  (cost=48.19..402833.95 rows=1 width=170) (actual time=0.062..218.930 rows=4737 loops=1)
                           ->  Nested Loop  (cost=47.90..402829.95 rows=1 width=34) (actual time=0.056..205.613 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..54319.53 rows=7034 width=30) (actual time=0.006..64.375 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=47.47..49.54 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=47.03..47.04 rows=1 width=32) (actual time=0.015..0.015 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.41..47.02 rows=3 width=6) (actual time=0.011..0.014 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.41..45.74 rows=17 width=10) (actual time=0.005..0.012 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.85..44.13 rows=17 width=10) (actual time=0.005..0.011 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.73 rows=17 width=10) (actual time=0.003..0.003 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.42..2.43 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.008..0.009 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.004 rows=25 loops=1)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4.01 rows=1 width=144) (actual time=0.002..0.002 rows=1 loops=4737)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 2.478 ms
 Execution Time: 227.534 ms
(49 rows)

query 3 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3195441.41..3195441.44 rows=10 width=44) (actual time=25362.388..25362.393 rows=10 loops=1)
   ->  Sort  (cost=3195441.41..3203131.16 rows=3075900 width=44) (actual time=25362.386..25362.390 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=3054477.87..3128972.32 rows=3075900 width=44) (actual time=25295.447..25342.386 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 16  Batches: 1  Memory Usage: 53265kB
               ->  Hash Join  (cost=522719.24..2874729.96 rows=3075900 width=24) (actual time=7279.087..25085.213 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874963.60 rows=32507232 width=16) (actual time=0.699..11219.053 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=498043.85..498043.85 rows=1419471 width=12) (actual time=7274.928..7274.930 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 2  Memory Usage: 47606kB
                           ->  Hash Join  (cost=127013.58..498043.85 rows=1419471 width=12) (actual time=1051.624..6957.707 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=68650.23..420630.81 rows=7257006 width=16) (actual time=543.165..4763.877 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=261268
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..66835.98 rows=7257006 width=0) (actual time=491.925..491.925 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54696.04..54696.04 rows=293385 width=4) (actual time=507.795..507.796 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54696.04 rows=293385 width=4) (actual time=0.525..454.365 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Planning Time: 30.791 ms
 Execution Time: 25364.059 ms
(28 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3195441.41..3195441.44 rows=10 width=44) (actual time=20623.599..20623.604 rows=10 loops=1)
   ->  Sort  (cost=3195441.41..3203131.16 rows=3075900 width=44) (actual time=20623.597..20623.602 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=3054477.87..3128972.32 rows=3075900 width=44) (actual time=20556.513..20603.612 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 16  Batches: 1  Memory Usage: 53265kB
               ->  Hash Join  (cost=522719.24..2874729.96 rows=3075900 width=24) (actual time=4583.177..20358.543 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874963.60 rows=32507232 width=16) (actual time=0.037..9299.293 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=498043.85..498043.85 rows=1419471 width=12) (actual time=4580.318..4580.320 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 2  Memory Usage: 47606kB
                           ->  Hash Join  (cost=127013.58..498043.85 rows=1419471 width=12) (actual time=886.073..4310.567 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=68650.23..420630.81 rows=7257006 width=16) (actual time=511.361..2390.392 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=261268
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..66835.98 rows=7257006 width=0) (actual time=461.148..461.148 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54696.04..54696.04 rows=293385 width=4) (actual time=374.002..374.003 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54696.04 rows=293385 width=4) (actual time=0.030..323.308 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Planning Time: 2.110 ms
 Execution Time: 20625.177 ms
(28 rows)

query 4 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=768270.84..768270.84 rows=1 width=24) (actual time=9749.381..9749.383 rows=1 loops=1)
   ->  Sort  (cost=768270.84..768270.85 rows=5 width=24) (actual time=9749.380..9749.381 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=768270.76..768270.81 rows=5 width=24) (actual time=9749.359..9749.362 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Merge Semi Join  (cost=330222.16..765460.23 rows=562106 width=16) (actual time=4781.714..9645.328 rows=513822 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=330130.40..331536.14 rows=562296 width=20) (actual time=4781.426..4845.748 rows=560424 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: external merge  Disk: 16464kB
                           ->  Bitmap Heap Scan on orders  (cost=6725.97..276428.41 rows=562296 width=20) (actual time=111.169..4614.941 rows=560424 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=231887
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6585.40 rows=562296 width=0) (actual time=64.662..64.662 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.44..375050.68 rows=19995216 width=4) (actual time=0.279..3119.729 rows=37929279 loops=1)
                           Heap Fetches: 0
 Planning Time: 26.901 ms
 Execution Time: 9752.725 ms
(21 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=768270.84..768270.84 rows=1 width=24) (actual time=6333.423..6333.425 rows=1 loops=1)
   ->  Sort  (cost=768270.84..768270.85 rows=5 width=24) (actual time=6333.422..6333.423 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=768270.76..768270.81 rows=5 width=24) (actual time=6333.403..6333.405 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Merge Semi Join  (cost=330222.16..765460.23 rows=562106 width=16) (actual time=1570.134..6235.228 rows=513822 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=330130.40..331536.14 rows=562296 width=20) (actual time=1570.079..1634.547 rows=560424 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: external merge  Disk: 16464kB
                           ->  Bitmap Heap Scan on orders  (cost=6725.97..276428.41 rows=562296 width=20) (actual time=108.862..1441.956 rows=560424 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=231887
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6585.40 rows=562296 width=0) (actual time=63.963..63.963 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.44..375050.68 rows=19995216 width=4) (actual time=0.047..2950.653 rows=37929279 loops=1)
                           Heap Fetches: 0
 Planning Time: 2.565 ms
 Execution Time: 6335.792 ms
(21 rows)

query 5 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1627023.02..1627023.03 rows=1 width=58) (actual time=9951.152..9951.158 rows=1 loops=1)
   ->  Sort  (cost=1627023.02..1627023.09 rows=25 width=58) (actual time=9951.151..9951.156 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=1626114.39..1627022.90 rows=25 width=58) (actual time=9924.603..9951.133 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=1626114.39..1626296.03 rows=72656 width=38) (actual time=9917.936..9921.140 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=95222.81..1620247.85 rows=72656 width=38) (actual time=880.938..9874.868 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=90501.81..1605986.15 rows=1817274 width=50) (actual time=833.950..9436.220 rows=1815327 loops=1)
                                 ->  Hash Join  (cost=90501.25..398920.75 rows=454472 width=38) (actual time=833.448..6052.477 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=27178.14..322531.55 rows=2272361 width=8) (actual time=225.371..4804.369 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=261246
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..26610.05 rows=2272361 width=0) (actual time=174.343..174.343 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59573.30..59573.30 rows=299985 width=38) (actual time=607.611..607.614 rows=299436 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                             ->  Hash Join  (cost=2.51..59573.30 rows=299985 width=38) (actual time=1.395..542.835 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50946.23 rows=1499923 width=8) (actual time=0.779..373.101 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.607..0.609 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.601..0.607 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.297..0.298 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.299..0.299 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.295..0.296 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.006..0.007 rows=4 loops=453399)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=44.181..44.181 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.366..28.184 rows=100000 loops=1)
 Planning Time: 37.132 ms
 Execution Time: 9951.823 ms
(42 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1627023.02..1627023.03 rows=1 width=58) (actual time=5156.377..5156.383 rows=1 loops=1)
   ->  Sort  (cost=1627023.02..1627023.09 rows=25 width=58) (actual time=5156.375..5156.381 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=1626114.39..1627022.90 rows=25 width=58) (actual time=5130.133..5156.360 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=1626114.39..1626296.03 rows=72656 width=38) (actual time=5123.639..5126.791 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=95222.81..1620247.85 rows=72656 width=38) (actual time=731.963..5089.642 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=90501.81..1605986.15 rows=1817274 width=50) (actual time=692.894..4674.765 rows=1815327 loops=1)
                                 ->  Hash Join  (cost=90501.25..398920.75 rows=454472 width=38) (actual time=692.862..2644.288 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=27178.14..322531.55 rows=2272361 width=8) (actual time=214.314..1594.752 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=261246
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..26610.05 rows=2272361 width=0) (actual time=164.154..164.154 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59573.30..59573.30 rows=299985 width=38) (actual time=478.197..478.200 rows=299436 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                             ->  Hash Join  (cost=2.51..59573.30 rows=299985 width=38) (actual time=0.060..416.404 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50946.23 rows=1499923 width=8) (actual time=0.020..252.135 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.033..0.035 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.028..0.033 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.008..0.010 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.003..0.004 rows=4 loops=453399)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=38.615..38.616 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.016..21.452 rows=100000 loops=1)
 Planning Time: 5.238 ms
 Execution Time: 5156.668 ms
(42 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2061235.44..2061235.45 rows=1 width=32) (actual time=12774.834..12774.835 rows=1 loops=1)
   ->  Aggregate  (cost=2061235.44..2061235.45 rows=1 width=32) (actual time=12774.832..12774.833 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=230612.29..2055187.69 rows=1209550 width=12) (actual time=1322.331..12221.883 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 13724091
               Heap Blocks: exact=395900 lossy=267068
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..230309.91 rows=1209550 width=0) (actual time=1239.635..1239.635 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 21.425 ms
 Execution Time: 12776.074 ms
(10 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2061235.44..2061235.45 rows=1 width=32) (actual time=6460.064..6460.065 rows=1 loops=1)
   ->  Aggregate  (cost=2061235.44..2061235.45 rows=1 width=32) (actual time=6460.063..6460.063 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=230612.29..2055187.69 rows=1209550 width=12) (actual time=1155.227..6074.618 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 13724091
               Heap Blocks: exact=395900 lossy=267068
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..230309.91 rows=1209550 width=0) (actual time=1073.105..1073.105 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 1.573 ms
 Execution Time: 6460.275 ms
(10 rows)

query 7 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2719410.95..2719411.07 rows=1 width=116) (actual time=18879.084..18879.091 rows=1 loops=1)
   ->  GroupAggregate  (cost=2719410.95..2720636.40 rows=10044 width=116) (actual time=18879.083..18879.089 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2719410.95..2719564.49 rows=61417 width=96) (actual time=18870.404..18871.124 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 7858kB
               ->  Hash Join  (cost=563426.84..2714526.34 rows=61417 width=96) (actual time=5181.794..18834.494 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=3629.40..2112533.85 rows=1475796 width=46) (actual time=36.325..12993.356 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2024927.72 rows=18458338 width=24) (actual time=0.482..10765.778 rows=18230325 loops=1)
                                 Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Filter: 41755727
                           ->  Hash  (cost=3529.40..3529.40 rows=8000 width=30) (actual time=35.828..35.830 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3529.40 rows=8000 width=30) (actual time=0.514..34.436 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.281..24.257 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.224..0.225 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.215..0.219 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536591.95..536591.95 rows=1200119 width=30) (actual time=5141.584..5141.586 rows=1191175 loops=1)
                           Buckets: 1048576  Batches: 2  Memory Usage: 44259kB
                           ->  Hash Join  (cost=57052.32..536591.95 rows=1200119 width=30) (actual time=543.960..4876.075 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411282.86 rows=15001486 width=8) (actual time=0.684..1685.404 rows=15000000 loops=1)
                                 ->  Hash  (cost=55552.39..55552.39 rows=119994 width=30) (actual time=542.914..542.915 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55552.39 rows=119994 width=30) (actual time=0.635..516.793 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.23 rows=1499923 width=8) (actual time=0.588..369.140 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.036..0.036 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.020..0.031 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 36.779 ms
 Execution Time: 18879.736 ms
(42 rows)

SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2719410.95..2719411.07 rows=1 width=116) (actual time=15582.609..15582.615 rows=1 loops=1)
   ->  GroupAggregate  (cost=2719410.95..2720636.40 rows=10044 width=116) (actual time=15582.607..15582.613 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2719410.95..2719564.49 rows=61417 width=96) (actual time=15573.920..15574.621 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 7858kB
               ->  Hash Join  (cost=563426.84..2714526.34 rows=61417 width=96) (actual time=4228.903..15540.450 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=3629.40..2112533.85 rows=1475796 width=46) (actual time=19.490..10688.845 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2024927.72 rows=18458338 width=24) (actual time=0.035..8817.411 rows=18230325 loops=1)
                                 Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Filter: 41755727
                           ->  Hash  (cost=3529.40..3529.40 rows=8000 width=30) (actual time=19.446..19.448 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3529.40 rows=8000 width=30) (actual time=0.019..18.422 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.002..5.693 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.014 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.011 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536591.95..536591.95 rows=1200119 width=30) (actual time=4207.093..4207.095 rows=1191175 loops=1)
                           Buckets: 1048576  Batches: 2  Memory Usage: 44259kB
                           ->  Hash Join  (cost=57052.32..536591.95 rows=1200119 width=30) (actual time=298.445..3957.005 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411282.86 rows=15001486 width=8) (actual time=0.034..1243.083 rows=15000000 loops=1)
                                 ->  Hash  (cost=55552.39..55552.39 rows=119994 width=30) (actual time=298.100..298.102 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55552.39 rows=119994 width=30) (actual time=0.019..277.641 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.23 rows=1499923 width=8) (actual time=0.003..85.050 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.013 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.010 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 3.758 ms
 Execution Time: 15582.918 ms
(42 rows)

query 8 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=577686.61..577686.86 rows=1 width=64) (actual time=11505.176..11505.182 rows=1 loops=1)
   ->  GroupAggregate  (cost=577686.61..578278.99 rows=2406 width=64) (actual time=11505.175..11505.181 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=577686.61..577747.09 rows=24189 width=70) (actual time=11498.649..11499.117 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2817kB
               ->  Nested Loop  (cost=226775.46..575925.40 rows=24189 width=70) (actual time=5272.770..11477.159 rows=23842 loops=1)
                     ->  Hash Join  (cost=226775.31..575244.52 rows=24189 width=20) (actual time=5272.753..11431.158 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=222304.31..570709.99 rows=24203 width=20) (actual time=5228.581..11373.529 rows=23842 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=158981.20..506691.05 rows=121014 width=24) (actual time=4637.391..10742.064 rows=118593 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=54365.77..383819.13 rows=4545691 width=12) (actual time=376.092..5251.417 rows=4557513 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..53229.35 rows=4545691 width=0) (actual time=324.482..324.482 rows=4557513 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=99623.37..99623.37 rows=399365 width=20) (actual time=4260.976..4260.977 rows=389521 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25019kB
                                             ->  Nested Loop  (cost=0.99..99623.37 rows=399365 width=20) (actual time=2.368..4113.305 rows=389521 loops=1)
                                                   ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..53965.19 rows=13315 width=4) (actual time=1.398..347.093 rows=13011 loops=1)
                                                         Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.11 rows=32 width=24) (actual time=0.222..0.283 rows=30 loops=13011)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=59573.30..59573.30 rows=299985 width=4) (actual time=590.603..590.606 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                       ->  Hash Join  (cost=2.51..59573.30 rows=299985 width=4) (actual time=1.452..538.719 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.23 rows=1499923 width=8) (actual time=0.803..372.739 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.641..0.642 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.636..0.641 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.312..0.313 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.318..0.318 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.314..0.315 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=44.131..44.131 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.256..29.167 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Cache Mode: logical
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.003..0.003 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 40.833 ms
 Execution Time: 11506.167 ms
(53 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=577686.61..577686.86 rows=1 width=64) (actual time=3815.382..3815.389 rows=1 loops=1)
   ->  GroupAggregate  (cost=577686.61..578278.99 rows=2406 width=64) (actual time=3815.381..3815.387 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=577686.61..577747.09 rows=24189 width=70) (actual time=3808.749..3809.228 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2817kB
               ->  Nested Loop  (cost=226775.46..575925.40 rows=24189 width=70) (actual time=1279.599..3796.735 rows=23842 loops=1)
                     ->  Hash Join  (cost=226775.31..575244.52 rows=24189 width=20) (actual time=1279.585..3771.442 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=222304.31..570709.99 rows=24203 width=20) (actual time=1243.080..3725.129 rows=23842 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=158981.20..506691.05 rows=121014 width=24) (actual time=792.985..3246.593 rows=118593 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=54365.77..383819.13 rows=4545691 width=12) (actual time=350.729..1946.358 rows=4557513 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..53229.35 rows=4545691 width=0) (actual time=299.912..299.912 rows=4557513 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=99623.37..99623.37 rows=399365 width=20) (actual time=441.940..441.941 rows=389521 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25019kB
                                             ->  Nested Loop  (cost=0.99..99623.37 rows=399365 width=20) (actual time=0.086..363.047 rows=389521 loops=1)
                                                   ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..53965.19 rows=13315 width=4) (actual time=0.054..136.841 rows=13011 loops=1)
                                                         Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.11 rows=32 width=24) (actual time=0.008..0.014 rows=30 loops=13011)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=59573.30..59573.30 rows=299985 width=4) (actual time=449.451..449.453 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                       ->  Hash Join  (cost=2.51..59573.30 rows=299985 width=4) (actual time=0.070..400.726 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.23 rows=1499923 width=8) (actual time=0.021..240.617 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.041..0.042 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.036..0.041 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.013..0.015 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=36.461..36.461 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.021..20.900 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Cache Mode: logical
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 5.497 ms
 Execution Time: 3815.682 ms
(53 rows)

query 9 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1934753.16..1934753.17 rows=1 width=90) (actual time=25509.616..25509.622 rows=1 loops=1)
   ->  Sort  (cost=1934753.16..1934903.54 rows=60150 width=90) (actual time=25509.615..25509.620 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1933550.16..1934452.41 rows=60150 width=90) (actual time=25509.088..25509.533 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=980459.32..1859369.03 rows=4238922 width=81) (actual time=10185.589..22600.070 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=980457.76..1835756.67 rows=4238922 width=31) (actual time=10185.328..21552.261 rows=3248192 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=975986.76..1820151.47 rows=4241423 width=35) (actual time=10141.786..20603.099 rows=3248192 loops=1)
                                 Hash Cond: ((lineitem.l_suppkey = partsupp.ps_suppkey) AND (lineitem.l_partkey = partsupp.ps_partkey))
                                 ->  Hash Join  (cost=635293.22..1351838.45 rows=4241423 width=33) (actual time=7690.743..15249.780 rows=3248192 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..411282.86 rows=15001486 width=8) (actual time=0.576..2386.509 rows=15000000 loops=1)
                                       ->  Hash  (cost=549138.43..549138.43 rows=4241423 width=33) (actual time=7688.804..7688.805 rows=3248192 loops=1)
                                             Buckets: 1048576  Batches: 8  Memory Usage: 35053kB
                                             ->  Nested Loop  (cost=0.99..549138.43 rows=4241423 width=33) (actual time=2.691..6881.551 rows=3248192 loops=1)
                                                   ->  Index Only Scan using q20_idx_2 on part  (cost=0.43..64305.54 rows=141411 width=4) (actual time=0.025..516.431 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.11 rows=32 width=29) (actual time=0.041..0.055 rows=30 loops=108312)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=181569.99..181569.99 rows=8003037 width=14) (actual time=2448.444..2448.444 rows=8000000 loops=1)
                                       Buckets: 2097152  Batches: 8  Memory Usage: 63251kB
                                       ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..181569.99 rows=8003037 width=14) (actual time=0.339..1115.846 rows=8000000 loops=1)
                                             Heap Fetches: 0
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=43.204..43.205 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.247..29.078 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.252..0.252 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.233..0.239 rows=25 loops=1)
 Planning Time: 45.667 ms
 Execution Time: 25511.159 ms
(38 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1934753.16..1934753.17 rows=1 width=90) (actual time=19477.312..19477.318 rows=1 loops=1)
   ->  Sort  (cost=1934753.16..1934903.54 rows=60150 width=90) (actual time=19477.311..19477.316 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1933550.16..1934452.41 rows=60150 width=90) (actual time=19476.790..19477.228 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=980459.32..1859369.03 rows=4238922 width=81) (actual time=4625.917..16570.103 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=980457.76..1835756.67 rows=4238922 width=31) (actual time=4625.891..15519.866 rows=3248192 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=975986.76..1820151.47 rows=4241423 width=35) (actual time=4597.063..14578.401 rows=3248192 loops=1)
                                 Hash Cond: ((lineitem.l_suppkey = partsupp.ps_suppkey) AND (lineitem.l_partkey = partsupp.ps_partkey))
                                 ->  Hash Join  (cost=635293.22..1351838.45 rows=4241423 width=33) (actual time=2403.742..9470.181 rows=3248192 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..411282.86 rows=15001486 width=8) (actual time=0.031..1952.246 rows=15000000 loops=1)
                                       ->  Hash  (cost=549138.43..549138.43 rows=4241423 width=33) (actual time=2402.099..2402.100 rows=3248192 loops=1)
                                             Buckets: 1048576  Batches: 8  Memory Usage: 35053kB
                                             ->  Nested Loop  (cost=0.99..549138.43 rows=4241423 width=33) (actual time=0.046..1703.103 rows=3248192 loops=1)
                                                   ->  Index Only Scan using q20_idx_2 on part  (cost=0.43..64305.54 rows=141411 width=4) (actual time=0.023..375.688 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.11 rows=32 width=29) (actual time=0.003..0.009 rows=30 loops=108312)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=181569.99..181569.99 rows=8003037 width=14) (actual time=2190.780..2190.781 rows=8000000 loops=1)
                                       Buckets: 2097152  Batches: 8  Memory Usage: 63251kB
                                       ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..181569.99 rows=8003037 width=14) (actual time=0.019..884.330 rows=8000000 loops=1)
                                             Heap Fetches: 0
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=28.510..28.510 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.005..14.232 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.017..0.018 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.008..0.011 rows=25 loops=1)
 Planning Time: 6.452 ms
 Execution Time: 19478.192 ms
(38 rows)

query 10 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1719371.24..1719371.29 rows=20 width=202) (actual time=14018.820..14018.825 rows=20 loops=1)
   ->  Sort  (cost=1719371.24..1720831.68 rows=584177 width=202) (actual time=14018.819..14018.823 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=1569442.98..1703826.50 rows=584177 width=202) (actual time=11476.102..13890.375 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Incremental Sort  (cost=1569442.98..1689222.07 rows=584177 width=182) (actual time=11476.088..13066.301 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Presorted Key: customer.c_custkey
                     Full-sort Groups: 34068  Sort Method: quicksort  Average Memory: 32kB  Peak Memory: 32kB
                     ->  Nested Loop  (cost=1569442.81..1662934.11 rows=584177 width=182) (actual time=11475.936..12693.046 rows=1145402 loops=1)
                           ->  Merge Join  (cost=1569442.66..1648624.14 rows=584177 width=160) (actual time=11475.674..12289.068 rows=1145402 loops=1)
                                 Merge Cond: (customer.c_custkey = orders.o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.43..66679.27 rows=1499923 width=148) (actual time=1.173..353.071 rows=1499997 loops=1)
                                 ->  Sort  (cost=1569442.13..1570902.57 rows=584177 width=16) (actual time=11474.486..11575.427 rows=1145402 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external sort  Disk: 35288kB
                                       ->  Hash Join  (cost=284503.11..1513489.52 rows=584177 width=16) (actual time=4801.178..11006.943 rows=1145402 loops=1)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..1189915.31 rows=14884439 width=16) (actual time=0.577..4537.337 rows=14808183 loops=1)
                                                   Index Cond: (l_returnflag = 'R'::bpchar)
                                                   Heap Fetches: 0
                                             ->  Hash  (cost=277142.90..277142.90 rows=588771 width=8) (actual time=4799.210..4799.211 rows=573160 loops=1)
                                                   Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                                   ->  Bitmap Heap Scan on orders  (cost=7043.34..277142.90 rows=588771 width=8) (actual time=111.154..4635.925 rows=573160 loops=1)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=233346
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6896.15 rows=588771 width=0) (actual time=65.698..65.698 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                                 Cache Key: customer.c_nationkey
                                 Cache Mode: logical
                                 Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                 ->  Index Scan using nation_pkey on nation  (cost=0.14..1.16 rows=1 width=30) (actual time=0.011..0.011 rows=1 loops=25)
                                       Index Cond: (n_nationkey = customer.c_nationkey)
 Planning Time: 32.203 ms
 Execution Time: 14023.618 ms
(37 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1719371.24..1719371.29 rows=20 width=202) (actual time=10079.277..10079.282 rows=20 loops=1)
   ->  Sort  (cost=1719371.24..1720831.68 rows=584177 width=202) (actual time=10079.276..10079.279 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=1569442.98..1703826.50 rows=584177 width=202) (actual time=7607.672..9951.247 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Incremental Sort  (cost=1569442.98..1689222.07 rows=584177 width=182) (actual time=7607.659..9129.867 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Presorted Key: customer.c_custkey
                     Full-sort Groups: 34068  Sort Method: quicksort  Average Memory: 32kB  Peak Memory: 32kB
                     ->  Nested Loop  (cost=1569442.81..1662934.11 rows=584177 width=182) (actual time=7607.580..8759.040 rows=1145402 loops=1)
                           ->  Merge Join  (cost=1569442.66..1648624.14 rows=584177 width=160) (actual time=7607.558..8351.836 rows=1145402 loops=1)
                                 Merge Cond: (customer.c_custkey = orders.o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.43..66679.27 rows=1499923 width=148) (actual time=0.035..292.861 rows=1499997 loops=1)
                                 ->  Sort  (cost=1569442.13..1570902.57 rows=584177 width=16) (actual time=7607.509..7707.854 rows=1145402 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external sort  Disk: 35288kB
                                       ->  Hash Join  (cost=284503.11..1513489.52 rows=584177 width=16) (actual time=1546.995..7143.647 rows=1145402 loops=1)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..1189915.31 rows=14884439 width=16) (actual time=0.029..3968.087 rows=14808183 loops=1)
                                                   Index Cond: (l_returnflag = 'R'::bpchar)
                                                   Heap Fetches: 0
                                             ->  Hash  (cost=277142.90..277142.90 rows=588771 width=8) (actual time=1545.594..1545.595 rows=573160 loops=1)
                                                   Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                                   ->  Bitmap Heap Scan on orders  (cost=7043.34..277142.90 rows=588771 width=8) (actual time=109.896..1420.964 rows=573160 loops=1)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=233346
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6896.15 rows=588771 width=0) (actual time=64.905..64.905 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                                 Cache Key: customer.c_nationkey
                                 Cache Mode: logical
                                 Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                 ->  Index Scan using nation_pkey on nation  (cost=0.14..1.16 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                       Index Cond: (n_nationkey = customer.c_nationkey)
 Planning Time: 2.598 ms
 Execution Time: 10083.913 ms
(37 rows)

query 11 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=608330.31..608330.31 rows=1 width=36) (actual time=3924.055..3924.061 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293206.84..293206.85 rows=1 width=32) (actual time=1597.214..1597.218 rows=1 loops=1)
           ->  Hash Join  (cost=2341.31..290805.93 rows=320121 width=10) (actual time=2.851..1494.853 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255252.37 rows=8003037 width=14) (actual time=0.020..739.071 rows=8000000 loops=1)
                 ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=2.788..2.790 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=0.575..2.423 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=39.29..2250.00 rows=4000 width=8) (actual time=0.565..2.090 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.363..0.363 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=315123.46..315390.22 rows=106707 width=36) (actual time=3924.053..3924.056 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=306661.92..314589.92 rows=106707 width=36) (actual time=3924.020..3924.022 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 7448kB
               Rows Removed by Filter: 301833
               ->  Hash Join  (cost=2341.31..290805.93 rows=320121 width=14) (actual time=40.584..1915.520 rows=320800 loops=1)
                     Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..255252.37 rows=8003037 width=18) (actual time=0.621..1071.740 rows=8000000 loops=1)
                     ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=39.897..39.898 rows=4010 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 173kB
                           ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=1.961..38.877 rows=4010 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.276..0.280 rows=1 loops=1)
                                       Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       Rows Removed by Filter: 24
                                 ->  Bitmap Heap Scan on supplier  (cost=39.29..2250.00 rows=4000 width=8) (actual time=1.676..37.975 rows=4010 loops=1)
                                       Recheck Cond: (s_nationkey = nation.n_nationkey)
                                       Heap Blocks: exact=1869
                                       ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=1.180..1.180 rows=4010 loops=1)
                                             Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 16.899 ms
 Execution Time: 3926.437 ms
(41 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=608330.31..608330.31 rows=1 width=36) (actual time=3505.509..3505.515 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293206.84..293206.85 rows=1 width=32) (actual time=1597.191..1597.194 rows=1 loops=1)
           ->  Hash Join  (cost=2341.31..290805.93 rows=320121 width=10) (actual time=2.851..1495.691 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255252.37 rows=8003037 width=14) (actual time=0.017..741.506 rows=8000000 loops=1)
                 ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=2.792..2.794 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=0.569..2.421 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=39.29..2250.00 rows=4000 width=8) (actual time=0.560..2.089 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.358..0.359 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=315123.46..315390.22 rows=106707 width=36) (actual time=3505.507..3505.509 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=306661.92..314589.92 rows=106707 width=36) (actual time=3505.476..3505.478 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 7448kB
               Rows Removed by Filter: 301833
               ->  Hash Join  (cost=2341.31..290805.93 rows=320121 width=14) (actual time=3.681..1509.511 rows=320800 loops=1)
                     Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..255252.37 rows=8003037 width=18) (actual time=0.041..744.740 rows=8000000 loops=1)
                     ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=3.609..3.610 rows=4010 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 173kB
                           ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=0.497..3.204 rows=4010 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                       Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       Rows Removed by Filter: 24
                                 ->  Bitmap Heap Scan on supplier  (cost=39.29..2250.00 rows=4000 width=8) (actual time=0.484..2.858 rows=4010 loops=1)
                                       Recheck Cond: (s_nationkey = nation.n_nationkey)
                                       Heap Blocks: exact=1869
                                       ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.277..0.277 rows=4010 loops=1)
                                             Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 1.370 ms
 Execution Time: 3507.606 ms
(41 rows)

query 12 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=680109.78..680109.78 rows=1 width=27) (actual time=5228.368..5228.370 rows=1 loops=1)
   ->  Sort  (cost=680109.78..680109.80 rows=7 width=27) (actual time=5228.367..5228.368 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=680109.68..680109.74 rows=7 width=27) (actual time=5228.329..5228.331 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               Batches: 1  Memory Usage: 24kB
               ->  Hash Join  (cost=148198.71..674944.34 rows=295162 width=27) (actual time=903.528..5099.862 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..411282.86 rows=15001486 width=20) (actual time=0.474..1686.622 rows=15000000 loops=1)
                     ->  Hash  (cost=144509.19..144509.19 rows=295162 width=15) (actual time=902.279..902.280 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.43..144509.19 rows=295162 width=15) (actual time=0.558..839.774 rows=311258 loops=1)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 778088
                                 Heap Fetches: 0
 Planning Time: 25.913 ms
 Execution Time: 5228.759 ms
(19 rows)

SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=680109.78..680109.78 rows=1 width=27) (actual time=4327.753..4327.755 rows=1 loops=1)
   ->  Sort  (cost=680109.78..680109.80 rows=7 width=27) (actual time=4327.752..4327.753 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=680109.68..680109.74 rows=7 width=27) (actual time=4327.731..4327.733 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               Batches: 1  Memory Usage: 24kB
               ->  Hash Join  (cost=148198.71..674944.34 rows=295162 width=27) (actual time=629.800..4203.674 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..411282.86 rows=15001486 width=20) (actual time=0.031..1232.503 rows=15000000 loops=1)
                     ->  Hash  (cost=144509.19..144509.19 rows=295162 width=15) (actual time=629.040..629.041 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.43..144509.19 rows=295162 width=15) (actual time=0.039..574.271 rows=311258 loops=1)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 778088
                                 Heap Fetches: 0
 Planning Time: 1.645 ms
 Execution Time: 4327.853 ms
(19 rows)

query 13 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1412858.45..1412858.45 rows=1 width=16) (actual time=17448.975..17448.978 rows=1 loops=1)
   ->  Sort  (cost=1412858.45..1412858.95 rows=200 width=16) (actual time=17448.973..17448.976 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1412855.45..1412857.45 rows=200 width=16) (actual time=17448.673..17448.681 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1260525.92..1390356.60 rows=1499923 width=12) (actual time=15183.986..17280.699 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 216328kB
                     ->  Hash Right Join  (cost=55340.31..663402.36 rows=14698426 width=8) (actual time=366.064..11292.322 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448786.58 rows=14698426 width=8) (actual time=0.781..5111.916 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=30731.27..30731.27 rows=1499923 width=4) (actual time=362.932..362.932 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 2  Memory Usage: 42747kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30731.27 rows=1499923 width=4) (actual time=0.569..160.694 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 18.442 ms
 Execution Time: 17483.010 ms
(21 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1412858.45..1412858.45 rows=1 width=16) (actual time=16485.203..16485.206 rows=1 loops=1)
   ->  Sort  (cost=1412858.45..1412858.95 rows=200 width=16) (actual time=16485.201..16485.204 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1412855.45..1412857.45 rows=200 width=16) (actual time=16484.915..16484.923 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1260525.92..1390356.60 rows=1499923 width=12) (actual time=14226.005..16316.790 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 216328kB
                     ->  Hash Right Join  (cost=55340.31..663402.36 rows=14698426 width=8) (actual time=329.041..10375.425 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448786.58 rows=14698426 width=8) (actual time=0.033..4658.817 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=30731.27..30731.27 rows=1499923 width=4) (actual time=326.625..326.626 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 2  Memory Usage: 42747kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30731.27 rows=1499923 width=4) (actual time=0.026..128.220 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.769 ms
 Execution Time: 16519.191 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1295215.29..1295215.30 rows=1 width=32) (actual time=4784.054..4784.056 rows=1 loops=1)
   ->  Aggregate  (cost=1295215.29..1295215.30 rows=1 width=32) (actual time=4784.053..4784.054 rows=1 loops=1)
         ->  Merge Join  (cost=1.18..1282768.64 rows=711237 width=33) (actual time=1.076..4371.312 rows=772942 loops=1)
               Merge Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Index Only Scan using q14_idx_1 on lineitem  (cost=0.56..1200047.42 rows=711237 width=16) (actual time=0.769..3720.378 rows=772942 loops=1)
                     Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Fetches: 0
               ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..68831.66 rows=1999949 width=25) (actual time=0.302..355.645 rows=1999998 loops=1)
                     Heap Fetches: 0
 Planning Time: 27.753 ms
 Execution Time: 4784.447 ms
(11 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1295215.29..1295215.30 rows=1 width=32) (actual time=3562.406..3562.408 rows=1 loops=1)
   ->  Aggregate  (cost=1295215.29..1295215.30 rows=1 width=32) (actual time=3562.405..3562.406 rows=1 loops=1)
         ->  Merge Join  (cost=1.18..1282768.64 rows=711237 width=33) (actual time=0.059..3181.788 rows=772942 loops=1)
               Merge Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Index Only Scan using q14_idx_1 on lineitem  (cost=0.56..1200047.42 rows=711237 width=16) (actual time=0.033..2629.342 rows=772942 loops=1)
                     Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Fetches: 0
               ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..68831.66 rows=1999949 width=25) (actual time=0.022..283.090 rows=1999998 loops=1)
                     Heap Fetches: 0
 Planning Time: 1.955 ms
 Execution Time: 3562.458 ms
(11 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3782827.38..3782836.45 rows=1 width=103) (actual time=18920.487..18920.490 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1891900.13..1891900.14 rows=1 width=32) (actual time=6276.923..6276.924 rows=1 loops=1)
           ->  HashAggregate  (cost=1889398.65..1890649.39 rows=100059 width=36) (actual time=6233.321..6270.972 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 47121kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=42316.69..1865839.50 rows=2355915 width=16) (actual time=365.960..4612.086 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 13223651
                       Heap Blocks: exact=401153 lossy=267105
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..41727.72 rows=2355915 width=0) (actual time=282.506..282.506 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1890927.25..1895458.75 rows=500 width=103) (actual time=18920.485..18920.487 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4274.29 rows=100000 width=71) (actual time=0.864..18.364 rows=69998 loops=1)
         ->  Sort  (cost=1890926.95..1890928.20 rows=500 width=36) (actual time=18897.874..18897.876 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1889398.65..1890904.54 rows=500 width=36) (actual time=18871.401..18897.866 rows=1 loops=1)
                     ->  HashAggregate  (cost=1889398.65..1890899.54 rows=500 width=36) (actual time=18871.400..18897.863 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 47121kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=42316.69..1865839.50 rows=2355915 width=16) (actual time=425.059..10632.094 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Rows Removed by Index Recheck: 13223651
                                 Heap Blocks: exact=401153 lossy=267105
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..41727.72 rows=2355915 width=0) (actual time=340.478..340.478 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 25.106 ms
 Execution Time: 18922.664 ms
(32 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3782827.38..3782836.45 rows=1 width=103) (actual time=13191.871..13191.875 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1891900.13..1891900.14 rows=1 width=32) (actual time=6296.670..6296.671 rows=1 loops=1)
           ->  HashAggregate  (cost=1889398.65..1890649.39 rows=100059 width=36) (actual time=6253.037..6290.733 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 47121kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=42316.69..1865839.50 rows=2355915 width=16) (actual time=366.389..4637.734 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 13223651
                       Heap Blocks: exact=401153 lossy=267105
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..41727.72 rows=2355915 width=0) (actual time=282.905..282.905 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1890927.25..1895458.75 rows=500 width=103) (actual time=13191.870..13191.871 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4274.29 rows=100000 width=71) (actual time=0.050..11.685 rows=69998 loops=1)
         ->  Sort  (cost=1890926.95..1890928.20 rows=500 width=36) (actual time=13176.120..13176.122 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1889398.65..1890904.54 rows=500 width=36) (actual time=13149.705..13176.113 rows=1 loops=1)
                     ->  HashAggregate  (cost=1889398.65..1890899.54 rows=500 width=36) (actual time=13149.704..13176.111 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 47121kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=42316.69..1865839.50 rows=2355915 width=16) (actual time=388.591..5199.368 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Rows Removed by Index Recheck: 13223651
                                 Heap Blocks: exact=401153 lossy=267105
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..41727.72 rows=2355915 width=0) (actual time=304.816..304.816 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 1.874 ms
 Execution Time: 13193.777 ms
(32 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=371636.47..371636.47 rows=1 width=44) (actual time=6571.781..6571.784 rows=1 loops=1)
   ->  Sort  (cost=371636.47..372022.14 rows=154268 width=44) (actual time=6571.780..6571.782 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=361832.41..370865.13 rows=154268 width=44) (actual time=5925.572..6565.998 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=361832.41..363330.42 rows=599203 width=40) (actual time=5925.518..6274.899 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Hash Join  (cost=98194.68..292625.84 rows=599203 width=40) (actual time=832.969..3147.396 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..187398.61 rows=4001518 width=8) (actual time=35.983..1544.748 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.902..35.678 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90979.73..90979.73 rows=299480 width=40) (actual time=796.412..796.413 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90979.73 rows=299480 width=40) (actual time=1.208..725.272 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning Time: 20.211 ms
 Execution Time: 6580.341 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=371636.47..371636.47 rows=1 width=44) (actual time=6073.897..6073.900 rows=1 loops=1)
   ->  Sort  (cost=371636.47..372022.14 rows=154268 width=44) (actual time=6073.895..6073.898 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=361832.41..370865.13 rows=154268 width=44) (actual time=5425.742..6068.040 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=361832.41..363330.42 rows=599203 width=40) (actual time=5425.690..5774.965 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Hash Join  (cost=98194.68..292625.84 rows=599203 width=40) (actual time=530.873..2653.758 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..187398.61 rows=4001518 width=8) (actual time=20.296..1355.968 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.082..20.258 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90979.73..90979.73 rows=299480 width=40) (actual time=509.990..509.990 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90979.73 rows=299480 width=40) (actual time=0.014..447.549 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning Time: 1.044 ms
 Execution Time: 6082.272 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1790674.73..1790674.74 rows=1 width=32) (actual time=22879.201..22879.204 rows=1 loops=1)
   ->  Aggregate  (cost=1790674.73..1790674.74 rows=1 width=32) (actual time=22879.200..22879.202 rows=1 loops=1)
         ->  Nested Loop  (cost=71093.76..1790626.67 rows=19221 width=8) (actual time=543.832..22876.461 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=71093.19..1784644.04 rows=1923 width=40) (actual time=543.209..21798.502 rows=1996 loops=1)
                     Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Sort  (cost=71092.63..71097.74 rows=2044 width=4) (actual time=533.804..535.004 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 49kB
                           ->  Seq Scan on part  (cost=0.00..70980.24 rows=2044 width=4) (actual time=1.627..533.556 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
                     ->  GroupAggregate  (cost=0.56..1690008.13 rows=1881107 width=36) (actual time=2.413..21126.531 rows=1999332 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361863.28 rows=59985648 width=9) (actual time=1.011..13238.581 rows=59965964 loops=1)
                                 Heap Fetches: 0
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.97 rows=11 width=17) (actual time=0.493..0.537 rows=3 loops=1996)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning Time: 26.476 ms
 Execution Time: 22879.573 ms
(21 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1790674.73..1790674.74 rows=1 width=32) (actual time=20334.667..20334.669 rows=1 loops=1)
   ->  Aggregate  (cost=1790674.73..1790674.74 rows=1 width=32) (actual time=20334.666..20334.667 rows=1 loops=1)
         ->  Nested Loop  (cost=71093.76..1790626.67 rows=19221 width=8) (actual time=384.207..20333.673 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=71093.19..1784644.04 rows=1923 width=40) (actual time=384.184..20303.180 rows=1996 loops=1)
                     Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Sort  (cost=71092.63..71097.74 rows=2044 width=4) (actual time=377.733..378.124 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 49kB
                           ->  Seq Scan on part  (cost=0.00..70980.24 rows=2044 width=4) (actual time=0.152..377.560 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
                     ->  GroupAggregate  (cost=0.56..1690008.13 rows=1881107 width=36) (actual time=0.068..19795.744 rows=1999332 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361863.28 rows=59985648 width=9) (actual time=0.032..12096.288 rows=59965964 loops=1)
                                 Heap Fetches: 0
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.97 rows=11 width=17) (actual time=0.013..0.014 rows=3 loops=1996)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning Time: 2.031 ms
 Execution Time: 20334.728 ms
(21 rows)

query 18 run 1
SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=7359467.53..7359467.78 rows=100 width=71) (actual time=30767.558..30767.587 rows=99 loops=1)
   ->  Sort  (cost=7359467.53..7409438.66 rows=19988453 width=71) (actual time=30767.556..30767.579 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=5994308.04..6595523.23 rows=19988453 width=71) (actual time=30766.676..30767.460 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 128  Batches: 1  Memory Usage: 6225kB
               ->  Hash Join  (cost=78810.57..4741906.53 rows=19988453 width=44) (actual time=2288.015..30766.232 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=326.30..4328883.43 rows=19988453 width=25) (actual time=670.708..29996.986 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..2604998.23 rows=4998804 width=24) (actual time=508.663..22278.197 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..568553.73 rows=15001486 width=20) (actual time=0.766..3276.147 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..1886467.70 rows=4998804 width=4) (actual time=399.084..18098.337 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361593.28 rows=59985648 width=9) (actual time=0.509..6610.526 rows=59986052 loops=1)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361593.28 rows=59985648 width=9) (actual time=0.015..5248.245 rows=59916431 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=50946.23..50946.23 rows=1499923 width=23) (actual time=688.803..688.804 rows=1500000 loops=1)
                           Buckets: 1048576  Batches: 2  Memory Usage: 49242kB
                           ->  Seq Scan on customer  (cost=0.00..50946.23 rows=1499923 width=23) (actual time=0.582..416.799 rows=1500000 loops=1)
 Planning Time: 27.313 ms
 Execution Time: 30769.391 ms
(27 rows)

SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=7359467.53..7359467.78 rows=100 width=71) (actual time=29128.047..29128.060 rows=99 loops=1)
   ->  Sort  (cost=7359467.53..7409438.66 rows=19988453 width=71) (actual time=29128.045..29128.053 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=5994308.04..6595523.23 rows=19988453 width=71) (actual time=29127.163..29127.944 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 128  Batches: 1  Memory Usage: 6225kB
               ->  Hash Join  (cost=78810.57..4741906.53 rows=19988453 width=44) (actual time=2041.488..29126.755 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=326.30..4328883.43 rows=19988453 width=25) (actual time=618.675..28492.052 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..2604998.23 rows=4998804 width=24) (actual time=455.645..20749.746 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..568553.73 rows=15001486 width=20) (actual time=0.050..2517.907 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..1886467.70 rows=4998804 width=4) (actual time=375.576..17354.312 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361593.28 rows=59985648 width=9) (actual time=0.031..6044.583 rows=59986052 loops=1)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361593.28 rows=59985648 width=9) (actual time=0.014..5245.782 rows=59916431 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=50946.23..50946.23 rows=1499923 width=23) (actual time=553.120..553.121 rows=1500000 loops=1)
                           Buckets: 1048576  Batches: 2  Memory Usage: 49242kB
                           ->  Seq Scan on customer  (cost=0.00..50946.23 rows=1499923 width=23) (actual time=0.030..288.993 rows=1500000 loops=1)
 Planning Time: 2.501 ms
 Execution Time: 29129.406 ms
(27 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=142358.62..142358.63 rows=1 width=32) (actual time=3204.438..3204.439 rows=1 loops=1)
   ->  Aggregate  (cost=142358.62..142358.63 rows=1 width=32) (actual time=3204.436..3204.436 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..142350.31 rows=1108 width=12) (actual time=19.206..3201.863 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125978.83 rows=4721 width=30) (actual time=1.828..872.596 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.46 rows=1 width=21) (actual time=0.465..0.486 rows=0 loops=4781)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning Time: 31.589 ms
 Execution Time: 3205.381 ms
(13 rows)

SET
SET
SET


 Limit  (cost=142358.62..142358.63 rows=1 width=32) (actual time=511.352..511.353 rows=1 loops=1)
   ->  Aggregate  (cost=142358.62..142358.63 rows=1 width=32) (actual time=511.350..511.351 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..142350.31 rows=1108 width=12) (actual time=1.217..510.607 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125978.83 rows=4721 width=30) (actual time=0.210..468.548 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.46 rows=1 width=21) (actual time=0.008..0.008 rows=0 loops=4781)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning Time: 3.009 ms
 Execution Time: 511.414 ms
(13 rows)

query 20 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2825690.61..2825690.61 rows=1 width=51) (actual time=38678.505..38678.510 rows=1 loops=1)
   ->  Sort  (cost=2825690.61..2825690.61 rows=1 width=51) (actual time=38678.504..38678.507 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2574746.32..2825690.60 rows=1 width=51) (actual time=16816.375..38676.555 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 183379751
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.676..34.727 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.326..0.329 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.346..26.567 rows=100000 loops=1)
               ->  Materialize  (cost=2574746.32..2821038.29 rows=3 width=8) (actual time=3.698..7.046 rows=44782 loops=4095)
                     ->  Hash Join  (cost=2574746.32..2821038.28 rows=3 width=8) (actual time=15144.425..22572.859 rows=59002 loops=1)
                           Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 123
                           ->  HashAggregate  (cost=2453160.37..2614712.85 rows=4842249 width=40) (actual time=14481.451..21075.750 rows=5448842 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 Planned Partitions: 32  Batches: 161  Memory Usage: 65809kB  Disk Usage: 358200kB
                                 ->  Seq Scan on lineitem  (cost=0.00..2024927.72 rows=9105279 width=13) (actual time=0.582..10458.994 rows=9123688 loops=1)
                                       Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       Rows Removed by Filter: 50862364
                           ->  Hash  (cost=120373.34..120373.34 rows=80841 width=16) (actual time=662.646..662.648 rows=86872 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 5097kB
                                 ->  Nested Loop  (cost=0.86..120373.34 rows=80841 width=16) (actual time=0.039..640.986 rows=86872 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.43..64305.54 rows=20202 width=4) (actual time=0.021..312.576 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.61 rows=17 width=12) (actual time=0.014..0.014 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 34.552 ms
 Execution Time: 38726.425 ms
(37 rows)

SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2825690.61..2825690.61 rows=1 width=51) (actual time=36070.845..36070.849 rows=1 loops=1)
   ->  Sort  (cost=2825690.61..2825690.61 rows=1 width=51) (actual time=36070.843..36070.847 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2574746.32..2825690.60 rows=1 width=51) (actual time=14234.401..36069.131 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 183379751
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.019..17.687 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.014 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.004..6.334 rows=100000 loops=1)
               ->  Materialize  (cost=2574746.32..2821038.29 rows=3 width=8) (actual time=3.067..6.411 rows=44782 loops=4095)
                     ->  Hash Join  (cost=2574746.32..2821038.28 rows=3 width=8) (actual time=12560.452..19994.018 rows=59002 loops=1)
                           Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 123
                           ->  HashAggregate  (cost=2453160.37..2614712.85 rows=4842249 width=40) (actual time=12275.179..18870.381 rows=5448842 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 Planned Partitions: 32  Batches: 161  Memory Usage: 65809kB  Disk Usage: 358200kB
                                 ->  Seq Scan on lineitem  (cost=0.00..2024927.72 rows=9105279 width=13) (actual time=0.036..8434.694 rows=9123688 loops=1)
                                       Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       Rows Removed by Filter: 50862364
                           ->  Hash  (cost=120373.34..120373.34 rows=80841 width=16) (actual time=284.940..284.942 rows=86872 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 5097kB
                                 ->  Nested Loop  (cost=0.86..120373.34 rows=80841 width=16) (actual time=0.026..266.790 rows=86872 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.43..64305.54 rows=20202 width=4) (actual time=0.019..205.988 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.61 rows=17 width=12) (actual time=0.002..0.002 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 2.518 ms
 Execution Time: 36112.066 ms
(37 rows)

query 21 run 1
SET
SET
SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1066543.77..1066543.78 rows=1 width=34) (actual time=17631.356..17631.370 rows=100 loops=1)
   ->  Sort  (cost=1066543.77..1066543.78 rows=1 width=34) (actual time=17631.355..17631.362 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=1066543.74..1066543.76 rows=1 width=34) (actual time=17624.042..17630.154 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=1066543.74..1066543.75 rows=1 width=26) (actual time=17624.032..17625.595 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4298kB
                     ->  Nested Loop Semi Join  (cost=589266.39..1066543.73 rows=1 width=26) (actual time=7227.871..17457.359 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 27756
                           ->  Nested Loop  (cost=589265.82..1066541.09 rows=1 width=38) (actual time=7227.863..13514.236 rows=65960 loops=1)
                                 ->  Merge Anti Join  (cost=589265.39..1066538.64 rows=1 width=34) (actual time=7227.847..12836.761 rows=134155 loops=1)
                                       Merge Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 551044
                                       ->  Sort  (cost=589264.82..591263.17 rows=799337 width=34) (actual time=7227.817..7442.909 rows=1514267 loops=1)
                                             Sort Key: l1.l_orderkey
                                             Sort Method: external merge  Disk: 68192kB
                                             ->  Hash Join  (cost=2341.88..495283.55 rows=799337 width=34) (actual time=39.281..6935.798 rows=1514267 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..409966.80 rows=19995216 width=8) (actual time=0.530..4087.804 rows=37929348 loops=1)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=2291.31..2291.31 rows=4000 width=30) (actual time=38.733..38.735 rows=3991 loops=1)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                         ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=30) (actual time=1.490..37.568 rows=3991 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.204..0.207 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=39.29..2250.00 rows=4000 width=34) (actual time=1.281..36.599 rows=3991 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=1865
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.831..0.831 rows=3991 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..409966.80 rows=19995216 width=8) (actual time=0.020..3460.474 rows=37966635 loops=1)
                                             Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.45 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=134155)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.059..0.059 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 33.660 ms
 Execution Time: 17640.790 ms
(45 rows)

SET
SET
SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1066543.77..1066543.78 rows=1 width=34) (actual time=12251.426..12251.441 rows=100 loops=1)
   ->  Sort  (cost=1066543.77..1066543.78 rows=1 width=34) (actual time=12251.425..12251.433 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=1066543.74..1066543.76 rows=1 width=34) (actual time=12244.118..12250.226 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=1066543.74..1066543.75 rows=1 width=26) (actual time=12244.109..12245.668 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4298kB
                     ->  Nested Loop Semi Join  (cost=589266.39..1066543.73 rows=1 width=26) (actual time=6291.636..12085.803 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 27756
                           ->  Nested Loop  (cost=589265.82..1066541.09 rows=1 width=38) (actual time=6291.630..11909.999 rows=65960 loops=1)
                                 ->  Merge Anti Join  (cost=589265.39..1066538.64 rows=1 width=34) (actual time=6291.615..11620.979 rows=134155 loops=1)
                                       Merge Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 551044
                                       ->  Sort  (cost=589264.82..591263.17 rows=799337 width=34) (actual time=6291.586..6478.557 rows=1514267 loops=1)
                                             Sort Key: l1.l_orderkey
                                             Sort Method: external merge  Disk: 68192kB
                                             ->  Hash Join  (cost=2341.88..495283.55 rows=799337 width=34) (actual time=3.930..6017.612 rows=1514267 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..409966.80 rows=19995216 width=8) (actual time=0.022..3302.352 rows=37929348 loops=1)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=2291.31..2291.31 rows=4000 width=30) (actual time=3.894..3.895 rows=3991 loops=1)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                         ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=30) (actual time=0.489..3.370 rows=3991 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=39.29..2250.00 rows=4000 width=34) (actual time=0.479..2.969 rows=3991 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=1865
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.267..0.267 rows=3991 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..409966.80 rows=19995216 width=8) (actual time=0.019..3297.928 rows=37966635 loops=1)
                                             Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=134155)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 3.390 ms
 Execution Time: 12260.338 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=162439.37..162439.40 rows=1 width=72) (actual time=1944.407..1944.416 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75439.39..75439.40 rows=1 width=32) (actual time=979.785..979.786 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75319.98 rows=47762 width=6) (actual time=0.008..941.867 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=86999.98..87204.08 rows=7422 width=72) (actual time=1944.406..1944.407 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=86999.98..87018.53 rows=7422 width=38) (actual time=1942.620..1942.966 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 5005kB
               ->  Nested Loop Anti Join  (cost=0.43..86522.83 rows=7422 width=38) (actual time=980.391..1922.110 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75319.98 rows=17499 width=26) (actual time=980.373..1503.608 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.63 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 18.212 ms
 Execution Time: 1945.491 ms
(20 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=162439.37..162439.40 rows=1 width=72) (actual time=1542.655..1542.665 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75439.39..75439.40 rows=1 width=32) (actual time=728.289..728.290 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75319.98 rows=47762 width=6) (actual time=0.007..696.048 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=86999.98..87204.08 rows=7422 width=72) (actual time=1542.654..1542.655 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=86999.98..87018.53 rows=7422 width=38) (actual time=1540.847..1541.194 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 5005kB
               ->  Nested Loop Anti Join  (cost=0.43..86522.83 rows=7422 width=38) (actual time=728.328..1522.350 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75319.98 rows=17499 width=26) (actual time=728.313..1232.009 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.63 rows=17 width=4) (actual time=0.001..0.001 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 1.349 ms
 Execution Time: 1542.732 ms
(20 rows)

