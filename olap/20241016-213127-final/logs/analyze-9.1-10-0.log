query 1 run 1
SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4245602.96..4245602.96 rows=1 width=25) (actual time=179905.259..179905.260 rows=1 loops=1)
   ->  Sort  (cost=4245602.96..4245602.97 rows=6 width=25) (actual time=179905.259..179905.259 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=4245602.82..4245602.92 rows=6 width=25) (actual time=179905.225..179905.230 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..1874976.30 rows=59265663 width=25) (actual time=0.389..12404.757 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 179905.358 ms
(8 rows)

SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4245602.96..4245602.96 rows=1 width=25) (actual time=173794.027..173794.028 rows=1 loops=1)
   ->  Sort  (cost=4245602.96..4245602.97 rows=6 width=25) (actual time=173794.026..173794.026 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=4245602.82..4245602.92 rows=6 width=25) (actual time=173793.998..173794.004 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..1874976.30 rows=59265663 width=25) (actual time=0.019..10795.813 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 173794.082 ms
(8 rows)

query 2 run 1
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1162236.10..1162236.11 rows=1 width=192) (actual time=6475.375..6475.387 rows=100 loops=1)
   ->  Sort  (cost=1162236.10..1162236.11 rows=1 width=192) (actual time=6475.373..6475.381 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Merge Join  (cost=567802.35..1162236.09 rows=1 width=192) (actual time=4693.050..6471.767 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using q2_idx_1 on part  (cost=0.00..86368.36 rows=6958 width=30) (actual time=0.949..521.404 rows=8046 loops=1)
                     Index Cond: (p_size = 16)
                     Filter: ((p_type)::text ~~ '%NICKEL'::text)
               ->  Materialize  (cost=567802.29..575802.22 rows=1599985 width=172) (actual time=4689.505..5094.312 rows=1603828 loops=1)
                     ->  Sort  (cost=567802.29..571802.25 rows=1599985 width=172) (actual time=4689.503..4954.983 rows=1603828 loops=1)
                           Sort Key: public.partsupp.ps_partkey
                           Sort Method: external sort  Disk: 293160kB
                           ->  Hash Join  (cost=4048.53..305269.32 rows=1599985 width=172) (actual time=43.165..3248.143 rows=1604080 loops=1)
                                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255221.23 rows=7999923 width=14) (actual time=0.001..1044.679 rows=8000000 loops=1)
                                 ->  Hash  (cost=3798.53..3798.53 rows=20000 width=166) (actual time=43.152..43.152 rows=20051 loops=1)
                                       Buckets: 2048  Batches: 1  Memory Usage: 3955kB
                                       ->  Hash Join  (cost=2.53..3798.53 rows=20000 width=166) (actual time=0.013..38.172 rows=20051 loops=1)
                                             Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..26.698 rows=100000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.010..0.010 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.006..0.010 rows=5 loops=1)
                                                         Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.000..0.001 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=89.10..89.11 rows=1 width=6) (actual time=0.105..0.105 rows=1 loops=6398)
                       ->  Hash Join  (cost=2.53..89.09 rows=4 width=6) (actual time=0.096..0.104 rows=2 loops=6398)
                             Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                             ->  Nested Loop  (cost=0.00..86.45 rows=19 width=10) (actual time=0.090..0.102 rows=4 loops=6398)
                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..5.02 rows=19 width=10) (actual time=0.086..0.088 rows=4 loops=6398)
                                         Index Cond: (part.p_partkey = ps_partkey)
                                   ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4.27 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=25592)
                                         Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
                             ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.024..0.024 rows=5 loops=1)
                                   Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.019..0.022 rows=5 loops=1)
                                         Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.003 rows=25 loops=1)
                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                                     Filter: (r_name = 'AMERICA'::bpchar)
 Total runtime: 6516.284 ms
(50 rows)

SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1162236.10..1162236.11 rows=1 width=192) (actual time=4912.233..4912.242 rows=100 loops=1)
   ->  Sort  (cost=1162236.10..1162236.11 rows=1 width=192) (actual time=4912.231..4912.235 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Merge Join  (cost=567802.35..1162236.09 rows=1 width=192) (actual time=4093.711..4909.890 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using q2_idx_1 on part  (cost=0.00..86368.36 rows=6958 width=30) (actual time=0.027..159.687 rows=8046 loops=1)
                     Index Cond: (p_size = 16)
                     Filter: ((p_type)::text ~~ '%NICKEL'::text)
               ->  Materialize  (cost=567802.29..575802.22 rows=1599985 width=172) (actual time=4093.572..4484.304 rows=1603828 loops=1)
                     ->  Sort  (cost=567802.29..571802.25 rows=1599985 width=172) (actual time=4093.570..4349.743 rows=1603828 loops=1)
                           Sort Key: public.partsupp.ps_partkey
                           Sort Method: external sort  Disk: 293160kB
                           ->  Hash Join  (cost=4048.53..305269.32 rows=1599985 width=172) (actual time=29.629..2677.050 rows=1604080 loops=1)
                                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255221.23 rows=7999923 width=14) (actual time=0.002..758.853 rows=8000000 loops=1)
                                 ->  Hash  (cost=3798.53..3798.53 rows=20000 width=166) (actual time=29.617..29.617 rows=20051 loops=1)
                                       Buckets: 2048  Batches: 1  Memory Usage: 3955kB
                                       ->  Hash Join  (cost=2.53..3798.53 rows=20000 width=166) (actual time=0.013..24.907 rows=20051 loops=1)
                                             Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..6.321 rows=100000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.011..0.011 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.005..0.010 rows=5 loops=1)
                                                         Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.000..0.002 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=89.10..89.11 rows=1 width=6) (actual time=0.014..0.014 rows=1 loops=6398)
                       ->  Hash Join  (cost=2.53..89.09 rows=4 width=6) (actual time=0.009..0.013 rows=2 loops=6398)
                             Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                             ->  Nested Loop  (cost=0.00..86.45 rows=19 width=10) (actual time=0.006..0.013 rows=4 loops=6398)
                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..5.02 rows=19 width=10) (actual time=0.004..0.004 rows=4 loops=6398)
                                         Index Cond: (part.p_partkey = ps_partkey)
                                   ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4.27 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                         Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
                             ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.017..0.017 rows=5 loops=1)
                                   Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.011..0.015 rows=5 loops=1)
                                         Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=1)
                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                     Filter: (r_name = 'AMERICA'::bpchar)
 Total runtime: 4952.639 ms
(50 rows)

query 3 run 1
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3535902.18..3535902.20 rows=10 width=24) (actual time=28501.137..28501.139 rows=10 loops=1)
   ->  Sort  (cost=3535902.18..3543732.22 rows=3132017 width=24) (actual time=28501.136..28501.136 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=3382089.95..3468220.42 rows=3132017 width=24) (actual time=28282.415..28481.133 rows=113934 loops=1)
               ->  Sort  (cost=3382089.95..3389919.99 rows=3132017 width=24) (actual time=28282.399..28307.898 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: external sort  Disk: 10920kB
                     ->  Hash Join  (cost=646208.00..2998286.29 rows=3132017 width=24) (actual time=7876.207..28053.023 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1874976.30 rows=32459684 width=16) (actual time=0.004..11975.429 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=621048.35..621048.35 rows=1447332 width=12) (actual time=7874.223..7874.223 rows=1451805 loops=1)
                                 Buckets: 131072  Batches: 4  Memory Usage: 15620kB
                                 ->  Hash Join  (cost=58453.29..621048.35 rows=1447332 width=12) (actual time=521.595..7608.981 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..448766.76 rows=7225817 width=16) (actual time=0.001..2321.504 rows=7239437 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=54697.55..54697.55 rows=300459 width=4) (actual time=521.335..521.335 rows=300276 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 10557kB
                                             ->  Seq Scan on customer  (cost=0.00..54697.55 rows=300459 width=4) (actual time=0.003..474.407 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 28502.723 ms
(23 rows)

SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3535902.18..3535902.20 rows=10 width=24) (actual time=25432.067..25432.069 rows=10 loops=1)
   ->  Sort  (cost=3535902.18..3543732.22 rows=3132017 width=24) (actual time=25432.066..25432.066 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=3382089.95..3468220.42 rows=3132017 width=24) (actual time=25213.248..25411.105 rows=113934 loops=1)
               ->  Sort  (cost=3382089.95..3389919.99 rows=3132017 width=24) (actual time=25213.233..25238.327 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: external sort  Disk: 10920kB
                     ->  Hash Join  (cost=646208.00..2998286.29 rows=3132017 width=24) (actual time=7000.988..24986.600 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1874976.30 rows=32459684 width=16) (actual time=0.004..10021.171 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=621048.35..621048.35 rows=1447332 width=12) (actual time=7000.190..7000.190 rows=1451805 loops=1)
                                 Buckets: 131072  Batches: 4  Memory Usage: 15620kB
                                 ->  Hash Join  (cost=58453.29..621048.35 rows=1447332 width=12) (actual time=343.840..6746.887 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..448766.76 rows=7225817 width=16) (actual time=0.002..1871.641 rows=7239437 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=54697.55..54697.55 rows=300459 width=4) (actual time=343.588..343.588 rows=300276 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 10557kB
                                             ->  Seq Scan on customer  (cost=0.00..54697.55 rows=300459 width=4) (actual time=0.003..305.942 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 25433.538 ms
(23 rows)

query 4 run 1
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1419642.75..1419642.76 rows=1 width=16) (actual time=16327.726..16327.727 rows=1 loops=1)
   ->  Sort  (cost=1419642.75..1419642.76 rows=1 width=16) (actual time=16327.725..16327.725 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1419642.73..1419642.74 rows=1 width=16) (actual time=16327.695..16327.696 rows=5 loops=1)
               ->  Merge Semi Join  (cost=334387.31..1416755.53 rows=577440 width=16) (actual time=5020.744..16194.987 rows=513822 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=334292.47..335736.39 rows=577565 width=20) (actual time=5019.169..5117.919 rows=560424 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: external sort  Disk: 16448kB
                           ->  Bitmap Heap Scan on orders  (cost=9089.11..279020.59 rows=577565 width=20) (actual time=164.469..4573.435 rows=560424 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8944.72 rows=577565 width=0) (actual time=115.904..115.904 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using q4_idx_1 on lineitem  (cost=0.00..1021967.77 rows=19995555 width=4) (actual time=1.527..8727.341 rows=37929279 loops=1)
 Total runtime: 16330.365 ms
(16 rows)

SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1419642.75..1419642.76 rows=1 width=16) (actual time=10751.300..10751.301 rows=1 loops=1)
   ->  Sort  (cost=1419642.75..1419642.76 rows=1 width=16) (actual time=10751.298..10751.298 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1419642.73..1419642.74 rows=1 width=16) (actual time=10751.272..10751.272 rows=5 loops=1)
               ->  Merge Semi Join  (cost=334387.31..1416755.53 rows=577440 width=16) (actual time=1862.117..10627.491 rows=513822 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=334292.47..335736.39 rows=577565 width=20) (actual time=1862.053..1951.130 rows=560424 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: external sort  Disk: 16448kB
                           ->  Bitmap Heap Scan on orders  (cost=9089.11..279020.59 rows=577565 width=20) (actual time=161.097..1500.017 rows=560424 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8944.72 rows=577565 width=0) (actual time=112.552..112.552 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using q4_idx_1 on lineitem  (cost=0.00..1021967.77 rows=19995555 width=4) (actual time=0.046..6415.442 rows=37929279 loops=1)
 Total runtime: 10753.785 ms
(16 rows)

query 5 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2953803.07..2953803.08 rows=1 width=38) (actual time=35093.193..35093.193 rows=1 loops=1)
   ->  Sort  (cost=2953803.07..2953803.14 rows=25 width=38) (actual time=35093.191..35093.191 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2953802.70..2953802.95 rows=25 width=38) (actual time=35093.177..35093.178 rows=5 loops=1)
               ->  Hash Join  (cost=452575.07..2953069.95 rows=73275 width=38) (actual time=6771.341..35020.786 rows=72033 loops=1)
                     Hash Cond: ((orders.o_custkey = customer.c_custkey) AND (supplier.s_nationkey = customer.c_nationkey))
                     ->  Hash Join  (cost=373266.97..2794764.32 rows=1831539 width=50) (actual time=6084.498..33206.805 rows=1824538 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Hash Join  (cost=4048.53..2073981.49 rows=11997333 width=50) (actual time=37.969..21211.588 rows=12029389 loops=1)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..1725009.64 rows=59986664 width=20) (actual time=0.001..6798.367 rows=59986052 loops=1)
                                 ->  Hash  (cost=3798.53..3798.53 rows=20000 width=38) (actual time=37.941..37.941 rows=20051 loops=1)
                                       Buckets: 2048  Batches: 1  Memory Usage: 1410kB
                                       ->  Hash Join  (cost=2.53..3798.53 rows=20000 width=38) (actual time=0.020..34.664 rows=20051 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.001..23.647 rows=100000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.016..0.016 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.011..0.016 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=331649.48..331649.48 rows=2289917 width=8) (actual time=6045.360..6045.360 rows=2276638 loops=1)
                                 Buckets: 131072  Batches: 4  Memory Usage: 22280kB
                                 ->  Bitmap Heap Scan on orders  (cost=36032.72..331649.48 rows=2289917 width=8) (actual time=501.297..5621.503 rows=2276638 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..35460.24 rows=2289917 width=0) (actual time=445.969..445.969 rows=2276638 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                     ->  Hash  (cost=50947.44..50947.44 rows=1500044 width=8) (actual time=681.863..681.863 rows=1500000 loops=1)
                           Buckets: 131072  Batches: 2  Memory Usage: 29326kB
                           ->  Seq Scan on customer  (cost=0.00..50947.44 rows=1500044 width=8) (actual time=0.002..437.997 rows=1500000 loops=1)
 Total runtime: 35093.487 ms
(36 rows)

SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2953803.07..2953803.08 rows=1 width=38) (actual time=27647.063..27647.064 rows=1 loops=1)
   ->  Sort  (cost=2953803.07..2953803.14 rows=25 width=38) (actual time=27647.063..27647.063 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2953802.70..2953802.95 rows=25 width=38) (actual time=27647.047..27647.048 rows=5 loops=1)
               ->  Hash Join  (cost=452575.07..2953069.95 rows=73275 width=38) (actual time=2986.981..27580.564 rows=72033 loops=1)
                     Hash Cond: ((orders.o_custkey = customer.c_custkey) AND (supplier.s_nationkey = customer.c_nationkey))
                     ->  Hash Join  (cost=373266.97..2794764.32 rows=1831539 width=50) (actual time=2432.563..25901.755 rows=1824538 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Hash Join  (cost=4048.53..2073981.49 rows=11997333 width=50) (actual time=28.233..17602.047 rows=12029389 loops=1)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..1725009.64 rows=59986664 width=20) (actual time=0.001..5040.540 rows=59986052 loops=1)
                                 ->  Hash  (cost=3798.53..3798.53 rows=20000 width=38) (actual time=28.205..28.205 rows=20051 loops=1)
                                       Buckets: 2048  Batches: 1  Memory Usage: 1410kB
                                       ->  Hash Join  (cost=2.53..3798.53 rows=20000 width=38) (actual time=0.021..25.141 rows=20051 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.001..14.708 rows=100000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.017..0.017 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.011..0.016 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=331649.48..331649.48 rows=2289917 width=8) (actual time=2403.639..2403.639 rows=2276638 loops=1)
                                 Buckets: 131072  Batches: 4  Memory Usage: 22280kB
                                 ->  Bitmap Heap Scan on orders  (cost=36032.72..331649.48 rows=2289917 width=8) (actual time=468.415..2038.199 rows=2276638 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..35460.24 rows=2289917 width=0) (actual time=413.045..413.045 rows=2276638 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                     ->  Hash  (cost=50947.44..50947.44 rows=1500044 width=8) (actual time=550.306..550.306 rows=1500000 loops=1)
                           Buckets: 131072  Batches: 2  Memory Usage: 29326kB
                           ->  Seq Scan on customer  (cost=0.00..50947.44 rows=1500044 width=8) (actual time=0.002..312.544 rows=1500000 loops=1)
 Total runtime: 27647.377 ms
(36 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1172397.77..1172397.78 rows=1 width=12) (actual time=15313.749..15313.749 rows=1 loops=1)
   ->  Aggregate  (cost=1172397.77..1172397.78 rows=1 width=12) (actual time=15313.749..15313.749 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=227230.81..1166403.22 rows=1198910 width=12) (actual time=1423.286..14523.598 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..226931.08 rows=1198910 width=0) (actual time=1371.682..1371.682 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 15314.517 ms
(7 rows)

SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1172397.77..1172397.78 rows=1 width=12) (actual time=8721.932..8721.932 rows=1 loops=1)
   ->  Aggregate  (cost=1172397.77..1172397.78 rows=1 width=12) (actual time=8721.931..8721.931 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=227230.81..1166403.22 rows=1198910 width=12) (actual time=1280.683..8184.149 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..226931.08 rows=1198910 width=0) (actual time=1229.914..1229.914 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 8721.967 ms
(7 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2633599.75..2633599.75 rows=1 width=68) (actual time=40371.580..40371.580 rows=1 loops=1)
   ->  Sort  (cost=2633599.75..2633744.67 rows=57967 width=68) (actual time=40371.578..40371.578 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2632440.41..2633309.91 rows=57967 width=68) (actual time=40371.468..40371.542 rows=4 loops=1)
               ->  Hash Join  (cost=896824.68..2631570.90 rows=57967 width=68) (actual time=11759.646..40286.165 rows=57794 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=892103.68..2596996.82 rows=1449179 width=76) (actual time=11713.613..39513.114 rows=1448126 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=325439.63..1722521.31 rows=18129245 width=24) (actual time=3191.029..24632.879 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..320907.32 rows=18129245 width=0) (actual time=3132.299..3132.299 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=538795.15..538795.15 rows=1199032 width=60) (actual time=8520.631..8520.631 rows=1191175 loops=1)
                                 Buckets: 65536  Batches: 4  Memory Usage: 26805kB
                                 ->  Hash Join  (cost=59288.15..538795.15 rows=1199032 width=60) (actual time=525.545..8224.304 rows=1191175 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..411267.01 rows=14999901 width=8) (actual time=0.003..1590.703 rows=15000000 loops=1)
                                       ->  Hash  (cost=57789.30..57789.30 rows=119908 width=60) (actual time=525.526..525.526 rows=119622 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 10748kB
                                             ->  Hash Join  (cost=16.65..57789.30 rows=119908 width=60) (actual time=0.128..498.261 rows=119622 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50947.44 rows=1500044 width=8) (actual time=0.002..356.885 rows=1500000 loops=1)
                                                   ->  Hash  (cost=16.62..16.62 rows=2 width=60) (actual time=0.123..0.123 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Nested Loop  (cost=0.00..16.62 rows=2 width=60) (actual time=0.080..0.122 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.001 rows=25 loops=1)
                                                               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.000..0.003 rows=25 loops=1)
                     ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=42.722..42.722 rows=100000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 3907kB
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.002..29.408 rows=100000 loops=1)
 Total runtime: 40371.903 ms
(34 rows)

SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2633599.75..2633599.75 rows=1 width=68) (actual time=28611.303..28611.303 rows=1 loops=1)
   ->  Sort  (cost=2633599.75..2633744.67 rows=57967 width=68) (actual time=28611.302..28611.302 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2632440.41..2633309.91 rows=57967 width=68) (actual time=28611.195..28611.265 rows=4 loops=1)
               ->  Hash Join  (cost=896824.68..2631570.90 rows=57967 width=68) (actual time=10386.580..28543.885 rows=57794 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=892103.68..2596996.82 rows=1449179 width=76) (actual time=10348.125..27799.195 rows=1448126 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=325439.63..1722521.31 rows=18129245 width=24) (actual time=2825.220..14404.487 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..320907.32 rows=18129245 width=0) (actual time=2766.450..2766.450 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=538795.15..538795.15 rows=1199032 width=60) (actual time=7522.376..7522.376 rows=1191175 loops=1)
                                 Buckets: 65536  Batches: 4  Memory Usage: 26805kB
                                 ->  Hash Join  (cost=59288.15..538795.15 rows=1199032 width=60) (actual time=391.396..7236.601 rows=1191175 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..411267.01 rows=14999901 width=8) (actual time=0.003..1218.386 rows=15000000 loops=1)
                                       ->  Hash  (cost=57789.30..57789.30 rows=119908 width=60) (actual time=391.377..391.377 rows=119622 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 10748kB
                                             ->  Hash Join  (cost=16.65..57789.30 rows=119908 width=60) (actual time=0.128..367.487 rows=119622 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50947.44 rows=1500044 width=8) (actual time=0.001..231.733 rows=1500000 loops=1)
                                                   ->  Hash  (cost=16.62..16.62 rows=2 width=60) (actual time=0.123..0.123 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Nested Loop  (cost=0.00..16.62 rows=2 width=60) (actual time=0.081..0.123 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.004 rows=25 loops=1)
                                                               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.003 rows=25 loops=1)
                     ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=36.527..36.527 rows=100000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 3907kB
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.002..22.767 rows=100000 loops=1)
 Total runtime: 28611.624 ms
(34 rows)

query 8 run 1
SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1461672.46..1461672.47 rows=1 width=42) (actual time=64063.085..64063.085 rows=1 loops=1)
   ->  Sort  (cost=1461672.46..1461674.26 rows=717 width=42) (actual time=64063.084..64063.084 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=1461656.33..1461668.88 rows=717 width=42) (actual time=64063.072..64063.073 rows=2 loops=1)
               ->  Hash Join  (cost=506677.82..1461180.03 rows=23815 width=42) (actual time=10104.897..64003.655 rows=23842 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=506676.26..1460731.94 rows=23815 width=20) (actual time=10104.877..63978.769 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=502205.26..1455784.64 rows=23815 width=20) (actual time=10063.351..63917.154 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..943663.60 rows=399901 width=20) (actual time=3.528..53386.844 rows=389521 loops=1)
                                       ->  Index Scan using q2_idx_1 on part  (cost=0.00..66009.04 rows=13333 width=4) (actual time=1.575..678.750 rows=13011 loops=1)
                                             Index Cond: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..65.45 rows=30 width=24) (actual time=0.298..4.031 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=487549.22..487549.22 rows=893283 width=8) (actual time=10048.278..10048.278 rows=910360 loops=1)
                                       Buckets: 131072  Batches: 2  Memory Usage: 17786kB
                                       ->  Hash Join  (cost=133603.14..487549.22 rows=893283 width=8) (actual time=1501.995..9801.052 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=70277.81..398542.00 rows=4466413 width=12) (actual time=933.990..5329.798 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..69161.20 rows=4466413 width=0) (actual time=878.455..878.455 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59575.23..59575.23 rows=300009 width=4) (actual time=567.972..567.972 rows=299436 loops=1)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 10528kB
                                                   ->  Hash Join  (cost=2.53..59575.23 rows=300009 width=4) (actual time=0.022..522.610 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50947.44 rows=1500044 width=8) (actual time=0.002..361.995 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.017..0.017 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.012..0.016 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.000..0.002 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=41.307..41.307 rows=100000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 3907kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.002..29.421 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.008..0.008 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.004 rows=25 loops=1)
 Total runtime: 64063.183 ms
(45 rows)

SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1461672.46..1461672.47 rows=1 width=42) (actual time=7991.105..7991.105 rows=1 loops=1)
   ->  Sort  (cost=1461672.46..1461674.26 rows=717 width=42) (actual time=7991.105..7991.105 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=1461656.33..1461668.88 rows=717 width=42) (actual time=7990.868..7990.869 rows=2 loops=1)
               ->  Hash Join  (cost=506677.82..1461180.03 rows=23815 width=42) (actual time=6305.780..7962.863 rows=23842 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=506676.26..1460731.94 rows=23815 width=20) (actual time=6305.757..7951.310 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=502205.26..1455784.64 rows=23815 width=20) (actual time=6270.114..7899.061 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..943663.60 rows=399901 width=20) (actual time=0.106..1395.833 rows=389521 loops=1)
                                       ->  Index Scan using q2_idx_1 on part  (cost=0.00..66009.04 rows=13333 width=4) (actual time=0.061..122.765 rows=13011 loops=1)
                                             Index Cond: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..65.45 rows=30 width=24) (actual time=0.008..0.092 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=487549.22..487549.22 rows=893283 width=8) (actual time=6269.513..6269.513 rows=910360 loops=1)
                                       Buckets: 131072  Batches: 2  Memory Usage: 17786kB
                                       ->  Hash Join  (cost=133603.14..487549.22 rows=893283 width=8) (actual time=1307.526..6094.669 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=70277.81..398542.00 rows=4466413 width=12) (actual time=871.028..2509.023 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..69161.20 rows=4466413 width=0) (actual time=815.685..815.685 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59575.23..59575.23 rows=300009 width=4) (actual time=436.463..436.463 rows=299436 loops=1)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 10528kB
                                                   ->  Hash Join  (cost=2.53..59575.23 rows=300009 width=4) (actual time=0.022..396.297 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50947.44 rows=1500044 width=8) (actual time=0.002..239.991 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.017..0.017 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.012..0.017 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.005 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=35.636..35.636 rows=100000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 3907kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.001..23.254 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.011..0.011 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.006 rows=25 loops=1)
 Total runtime: 7991.194 ms
(45 rows)

query 9 run 1
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3879270.09..3879270.09 rows=1 width=53) (actual time=91817.970..91817.970 rows=1 loops=1)
   ->  Sort  (cost=3879270.09..3879270.51 rows=170 width=53) (actual time=91817.969..91817.969 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3879266.69..3879269.24 rows=170 width=53) (actual time=91817.875..91817.894 rows=175 loops=1)
               ->  Hash Join  (cost=3209741.16..3879263.71 rows=170 width=53) (actual time=33170.496..87125.611 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=3209739.59..3879258.96 rows=170 width=31) (actual time=33170.473..85231.517 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=3209739.59..3878398.29 rows=170 width=31) (actual time=33169.205..44846.761 rows=3248192 loops=1)
                                 ->  Merge Join  (cost=3209739.59..3877672.55 rows=171 width=35) (actual time=33168.607..39521.287 rows=3248192 loops=1)
                                       Merge Cond: (partsupp.ps_partkey = lineitem.l_partkey)
                                       Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..339096.53 rows=7999923 width=14) (actual time=0.584..1700.921 rows=7999981 loops=1)
                                       ->  Materialize  (cost=3209736.63..3230944.01 rows=4241475 width=33) (actual time=33167.916..35213.186 rows=12992765 loops=1)
                                             ->  Sort  (cost=3209736.63..3220340.32 rows=4241475 width=33) (actual time=33167.914..34304.979 rows=3248192 loops=1)
                                                   Sort Key: part.p_partkey
                                                   Sort Method: external merge  Disk: 145768kB
                                                   ->  Hash Join  (cost=67748.69..2659989.71 rows=4241475 width=33) (actual time=698.200..29950.585 rows=3248192 loops=1)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Seq Scan on lineitem  (cost=0.00..1725009.64 rows=59986664 width=29) (actual time=0.001..6679.088 rows=59986052 loops=1)
                                                         ->  Hash  (cost=65981.01..65981.01 rows=141414 width=4) (actual time=698.182..698.182 rows=108312 loops=1)
                                                               Buckets: 16384  Batches: 1  Memory Usage: 3808kB
                                                               ->  Seq Scan on part  (cost=0.00..65981.01 rows=141414 width=4) (actual time=0.006..677.099 rows=108312 loops=1)
                                                                     Filter: ((p_name)::text ~~ '%navy%'::text)
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4.23 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3248192)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using q21_idx_3 on orders  (cost=0.00..5.05 rows=1 width=8) (actual time=0.012..0.012 rows=1 loops=3248192)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.008..0.008 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.005 rows=25 loops=1)
 Total runtime: 91833.916 ms
(32 rows)

SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3879270.09..3879270.09 rows=1 width=53) (actual time=59826.177..59826.177 rows=1 loops=1)
   ->  Sort  (cost=3879270.09..3879270.51 rows=170 width=53) (actual time=59826.175..59826.175 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3879266.69..3879269.24 rows=170 width=53) (actual time=59826.075..59826.106 rows=175 loops=1)
               ->  Hash Join  (cost=3209741.16..3879263.71 rows=170 width=53) (actual time=29675.686..55582.077 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=3209739.59..3879258.96 rows=170 width=31) (actual time=29675.661..53971.761 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=3209739.59..3878398.29 rows=170 width=31) (actual time=29675.647..40297.361 rows=3248192 loops=1)
                                 ->  Merge Join  (cost=3209739.59..3877672.55 rows=171 width=35) (actual time=29675.621..35437.790 rows=3248192 loops=1)
                                       Merge Cond: (partsupp.ps_partkey = lineitem.l_partkey)
                                       Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..339096.53 rows=7999923 width=14) (actual time=0.681..1325.327 rows=7999981 loops=1)
                                       ->  Materialize  (cost=3209736.63..3230944.01 rows=4241475 width=33) (actual time=29674.829..31669.661 rows=12992765 loops=1)
                                             ->  Sort  (cost=3209736.63..3220340.32 rows=4241475 width=33) (actual time=29674.825..30813.145 rows=3248192 loops=1)
                                                   Sort Key: part.p_partkey
                                                   Sort Method: external merge  Disk: 145768kB
                                                   ->  Hash Join  (cost=67748.69..2659989.71 rows=4241475 width=33) (actual time=666.683..26544.924 rows=3248192 loops=1)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Seq Scan on lineitem  (cost=0.00..1725009.64 rows=59986664 width=29) (actual time=0.001..5080.085 rows=59986052 loops=1)
                                                         ->  Hash  (cost=65981.01..65981.01 rows=141414 width=4) (actual time=666.658..666.658 rows=108312 loops=1)
                                                               Buckets: 16384  Batches: 1  Memory Usage: 3808kB
                                                               ->  Seq Scan on part  (cost=0.00..65981.01 rows=141414 width=4) (actual time=0.007..646.768 rows=108312 loops=1)
                                                                     Filter: ((p_name)::text ~~ '%navy%'::text)
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4.23 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3248192)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using q21_idx_3 on orders  (cost=0.00..5.05 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=3248192)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.010..0.010 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.006 rows=25 loops=1)
 Total runtime: 59843.192 ms
(32 rows)

query 10 run 1
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2665718.76..2665718.81 rows=20 width=182) (actual time=30742.188..30742.191 rows=20 loops=1)
   ->  Sort  (cost=2665718.76..2667211.98 rows=597287 width=182) (actual time=30742.186..30742.189 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 30kB
         ->  GroupAggregate  (cost=2627426.91..2649825.17 rows=597287 width=182) (actual time=28999.618..30632.367 rows=381205 loops=1)
               ->  Sort  (cost=2627426.91..2628920.13 rows=597287 width=182) (actual time=28999.596..29608.774 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     Sort Method: external merge  Disk: 218224kB
                     ->  Hash Join  (cost=389019.08..2532208.00 rows=597287 width=182) (actual time=5879.985..23363.346 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=389017.51..2523993.74 rows=597287 width=160) (actual time=5879.972..23162.317 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=287091.52..2374299.84 rows=597287 width=16) (actual time=4942.147..21328.747 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1874976.30 rows=15000665 width=16) (actual time=0.007..11042.204 rows=14808183 loops=1)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=279625.81..279625.81 rows=597257 width=8) (actual time=4941.350..4941.350 rows=573160 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 22390kB
                                             ->  Bitmap Heap Scan on orders  (cost=9398.96..279625.81 rows=597257 width=8) (actual time=167.146..4785.894 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..9249.64 rows=597257 width=0) (actual time=117.039..117.039 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=50947.44..50947.44 rows=1500044 width=148) (actual time=936.226..936.226 rows=1500000 loops=1)
                                       Buckets: 32768  Batches: 16  Memory Usage: 16828kB
                                       ->  Seq Scan on customer  (cost=0.00..50947.44 rows=1500044 width=148) (actual time=0.001..493.449 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.008..0.008 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 2kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.004 rows=25 loops=1)
 Total runtime: 30776.316 ms
(29 rows)

SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2665718.76..2665718.81 rows=20 width=182) (actual time=24986.675..24986.678 rows=20 loops=1)
   ->  Sort  (cost=2665718.76..2667211.98 rows=597287 width=182) (actual time=24986.675..24986.675 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 30kB
         ->  GroupAggregate  (cost=2627426.91..2649825.17 rows=597287 width=182) (actual time=23256.035..24872.925 rows=381205 loops=1)
               ->  Sort  (cost=2627426.91..2628920.13 rows=597287 width=182) (actual time=23256.013..23867.216 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     Sort Method: external merge  Disk: 218224kB
                     ->  Hash Join  (cost=389019.08..2532208.00 rows=597287 width=182) (actual time=2377.041..17625.876 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=389017.51..2523993.74 rows=597287 width=160) (actual time=2377.027..17425.850 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=287091.52..2374299.84 rows=597287 width=16) (actual time=1574.293..15749.378 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1874976.30 rows=15000665 width=16) (actual time=0.007..9073.269 rows=14808183 loops=1)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=279625.81..279625.81 rows=597257 width=8) (actual time=1573.966..1573.966 rows=573160 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 22390kB
                                             ->  Bitmap Heap Scan on orders  (cost=9398.96..279625.81 rows=597257 width=8) (actual time=154.097..1453.499 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..9249.64 rows=597257 width=0) (actual time=104.002..104.002 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=50947.44..50947.44 rows=1500044 width=148) (actual time=801.754..801.754 rows=1500000 loops=1)
                                       Buckets: 32768  Batches: 16  Memory Usage: 16828kB
                                       ->  Seq Scan on customer  (cost=0.00..50947.44 rows=1500044 width=148) (actual time=0.001..367.565 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.010..0.010 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 2kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.007 rows=25 loops=1)
 Total runtime: 25020.706 ms
(29 rows)

query 11 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=685215.72..685215.72 rows=1 width=14) (actual time=3909.003..3909.003 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=323177.88..323177.89 rows=1 width=10) (actual time=1725.180..1725.180 rows=1 loops=1)
           ->  Hash Join  (cost=2357.28..320777.90 rows=319997 width=10) (actual time=2.677..1574.052 rows=320800 loops=1)
                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..255221.23 rows=7999923 width=14) (actual time=0.032..683.754 rows=8000000 loops=1)
                 ->  Hash  (cost=2307.28..2307.28 rows=4000 width=4) (actual time=2.616..2.616 rows=4010 loops=1)
                       Buckets: 1024  Batches: 1  Memory Usage: 141kB
                       ->  Nested Loop  (cost=55.26..2307.28 rows=4000 width=4) (actual time=0.503..2.253 rows=4010 loops=1)
                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Bitmap Heap Scan on supplier  (cost=55.26..2255.96 rows=4000 width=8) (actual time=0.493..1.820 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = public.nation.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.26 rows=4000 width=0) (actual time=0.316..0.316 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = public.nation.n_nationkey)
   ->  Sort  (cost=362037.83..362837.82 rows=319997 width=14) (actual time=3909.001..3909.001 rows=0 loops=1)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=350037.94..360437.84 rows=319997 width=14) (actual time=3908.992..3908.992 rows=0 loops=1)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $1)
               ->  Sort  (cost=350037.94..350837.93 rows=319997 width=14) (actual time=2016.488..2028.801 rows=320800 loops=1)
                     Sort Key: public.partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 27326kB
                     ->  Hash Join  (cost=2357.28..320777.90 rows=319997 width=14) (actual time=25.303..1970.325 rows=320800 loops=1)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255221.23 rows=7999923 width=18) (actual time=0.394..1003.542 rows=8000000 loops=1)
                           ->  Hash  (cost=2307.28..2307.28 rows=4000 width=4) (actual time=24.824..24.824 rows=4010 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 141kB
                                 ->  Nested Loop  (cost=55.26..2307.28 rows=4000 width=4) (actual time=2.127..23.857 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=55.26..2255.96 rows=4000 width=8) (actual time=2.120..23.203 rows=4010 loops=1)
                                             Recheck Cond: (s_nationkey = public.nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.26 rows=4000 width=0) (actual time=1.899..1.899 rows=4010 loops=1)
                                                   Index Cond: (s_nationkey = public.nation.n_nationkey)
 Total runtime: 3909.527 ms
(36 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=685215.72..685215.72 rows=1 width=14) (actual time=3483.661..3483.661 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=323177.88..323177.89 rows=1 width=10) (actual time=1720.463..1720.463 rows=1 loops=1)
           ->  Hash Join  (cost=2357.28..320777.90 rows=319997 width=10) (actual time=2.673..1569.024 rows=320800 loops=1)
                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..255221.23 rows=7999923 width=14) (actual time=0.030..685.051 rows=8000000 loops=1)
                 ->  Hash  (cost=2307.28..2307.28 rows=4000 width=4) (actual time=2.614..2.614 rows=4010 loops=1)
                       Buckets: 1024  Batches: 1  Memory Usage: 141kB
                       ->  Nested Loop  (cost=55.26..2307.28 rows=4000 width=4) (actual time=0.503..2.219 rows=4010 loops=1)
                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Bitmap Heap Scan on supplier  (cost=55.26..2255.96 rows=4000 width=8) (actual time=0.493..1.808 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = public.nation.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.26 rows=4000 width=0) (actual time=0.316..0.316 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = public.nation.n_nationkey)
   ->  Sort  (cost=362037.83..362837.82 rows=319997 width=14) (actual time=3483.660..3483.660 rows=0 loops=1)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=350037.94..360437.84 rows=319997 width=14) (actual time=3483.654..3483.654 rows=0 loops=1)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $1)
               ->  Sort  (cost=350037.94..350837.93 rows=319997 width=14) (actual time=1595.629..1607.831 rows=320800 loops=1)
                     Sort Key: public.partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 27326kB
                     ->  Hash Join  (cost=2357.28..320777.90 rows=319997 width=14) (actual time=7.480..1551.865 rows=320800 loops=1)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255221.23 rows=7999923 width=18) (actual time=0.024..679.812 rows=8000000 loops=1)
                           ->  Hash  (cost=2307.28..2307.28 rows=4000 width=4) (actual time=7.433..7.433 rows=4010 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 141kB
                                 ->  Nested Loop  (cost=55.26..2307.28 rows=4000 width=4) (actual time=0.571..6.984 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=55.26..2255.96 rows=4000 width=8) (actual time=0.564..6.470 rows=4010 loops=1)
                                             Recheck Cond: (s_nationkey = public.nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.26 rows=4000 width=0) (actual time=0.376..0.376 rows=4010 loops=1)
                                                   Index Cond: (s_nationkey = public.nation.n_nationkey)
 Total runtime: 3483.721 ms
(36 rows)

query 12 run 1
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1345208.05..1345208.05 rows=1 width=27) (actual time=8518.104..8518.104 rows=1 loops=1)
   ->  Sort  (cost=1345208.05..1345208.05 rows=1 width=27) (actual time=8518.103..8518.103 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=1345208.03..1345208.04 rows=1 width=27) (actual time=8518.077..8518.077 rows=2 loops=1)
               ->  Merge Join  (cost=730092.61..1340315.94 rows=279548 width=27) (actual time=4754.170..8359.869 rows=311258 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..568530.59 rows=14999901 width=20) (actual time=0.625..2616.033 rows=14999967 loops=1)
                     ->  Sort  (cost=730092.48..730791.35 rows=279548 width=15) (actual time=4753.455..4778.423 rows=311258 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 26879kB
                           ->  Bitmap Heap Scan on lineitem  (cost=318093.75..704803.54 rows=279548 width=15) (actual time=1018.352..4650.510 rows=311258 loops=1)
                                 Recheck Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate))
                                 ->  Bitmap Index Scan on q12_idx_1  (cost=0.00..318023.86 rows=279548 width=0) (actual time=961.864..961.864 rows=311258 loops=1)
                                       Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 8518.215 ms
(16 rows)

SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1345208.05..1345208.05 rows=1 width=27) (actual time=5576.192..5576.192 rows=1 loops=1)
   ->  Sort  (cost=1345208.05..1345208.05 rows=1 width=27) (actual time=5576.191..5576.191 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=1345208.03..1345208.04 rows=1 width=27) (actual time=5576.166..5576.166 rows=2 loops=1)
               ->  Merge Join  (cost=730092.61..1340315.94 rows=279548 width=27) (actual time=2383.399..5423.833 rows=311258 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..568530.59 rows=14999901 width=20) (actual time=0.037..2073.254 rows=14999967 loops=1)
                     ->  Sort  (cost=730092.48..730791.35 rows=279548 width=15) (actual time=2383.325..2407.622 rows=311258 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 26879kB
                           ->  Bitmap Heap Scan on lineitem  (cost=318093.75..704803.54 rows=279548 width=15) (actual time=886.150..2314.912 rows=311258 loops=1)
                                 Recheck Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate))
                                 ->  Bitmap Index Scan on q12_idx_1  (cost=0.00..318023.86 rows=279548 width=0) (actual time=831.116..831.116 rows=311258 loops=1)
                                       Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 5576.314 ms
(16 rows)

query 13 run 1
SET
SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2804530.88..2804530.88 rows=1 width=8) (actual time=25861.745..25861.745 rows=1 loops=1)
   ->  Sort  (cost=2804530.88..2804531.38 rows=200 width=8) (actual time=25861.745..25861.745 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2804527.88..2804529.88 rows=200 width=8) (actual time=25861.728..25861.733 rows=46 loops=1)
               ->  GroupAggregate  (cost=2362508.48..2782027.22 rows=1500044 width=8) (actual time=15626.651..25643.316 rows=1500000 loops=1)
                     ->  Merge Left Join  (cost=2362508.48..2692784.39 rows=14848478 width=8) (actual time=15626.635..24382.782 rows=15337604 loops=1)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..66680.99 rows=1500044 width=4) (actual time=0.396..532.327 rows=1500000 loops=1)
                           ->  Materialize  (cost=2362508.48..2436750.87 rows=14848478 width=8) (actual time=15626.233..21856.590 rows=14837583 loops=1)
                                 ->  Sort  (cost=2362508.48..2399629.68 rows=14848478 width=8) (actual time=15626.230..20516.270 rows=14837583 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external merge  Disk: 260904kB
                                       ->  Seq Scan on orders  (cost=0.00..448766.76 rows=14848478 width=8) (actual time=0.302..5350.324 rows=14837583 loops=1)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 25897.960 ms
(16 rows)

SET
SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2804530.88..2804530.88 rows=1 width=8) (actual time=24916.611..24916.611 rows=1 loops=1)
   ->  Sort  (cost=2804530.88..2804531.38 rows=200 width=8) (actual time=24916.611..24916.611 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2804527.88..2804529.88 rows=200 width=8) (actual time=24916.577..24916.580 rows=46 loops=1)
               ->  GroupAggregate  (cost=2362508.48..2782027.22 rows=1500044 width=8) (actual time=14924.853..24702.882 rows=1500000 loops=1)
                     ->  Merge Left Join  (cost=2362508.48..2692784.39 rows=14848478 width=8) (actual time=14924.835..23446.930 rows=15337604 loops=1)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..66680.99 rows=1500044 width=4) (actual time=0.019..383.662 rows=1500000 loops=1)
                           ->  Materialize  (cost=2362508.48..2436750.87 rows=14848478 width=8) (actual time=14924.811..21082.808 rows=14837583 loops=1)
                                 ->  Sort  (cost=2362508.48..2399629.68 rows=14848478 width=8) (actual time=14924.809..19739.554 rows=14837583 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external merge  Disk: 260904kB
                                       ->  Seq Scan on orders  (cost=0.00..448766.76 rows=14848478 width=8) (actual time=0.031..4883.469 rows=14837583 loops=1)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 24952.902 ms
(16 rows)

query 14 run 1
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=944638.11..944638.13 rows=1 width=33) (actual time=9894.071..9894.071 rows=1 loops=1)
   ->  Aggregate  (cost=944638.11..944638.13 rows=1 width=33) (actual time=9894.071..9894.071 rows=1 loops=1)
         ->  Hash Join  (cost=114401.98..930265.76 rows=821277 width=33) (actual time=1129.598..9117.369 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=14748.96..790440.01 rows=821277 width=16) (actual time=285.011..7162.235 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14543.64 rows=821277 width=0) (actual time=189.057..189.057 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60981.01..60981.01 rows=2000001 width=25) (actual time=843.986..843.986 rows=2000000 loops=1)
                     Buckets: 65536  Batches: 4  Memory Usage: 28922kB
                     ->  Seq Scan on part  (cost=0.00..60981.01 rows=2000001 width=25) (actual time=0.003..531.380 rows=2000000 loops=1)
 Total runtime: 9894.193 ms
(12 rows)

SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=944638.11..944638.13 rows=1 width=33) (actual time=4523.013..4523.013 rows=1 loops=1)
   ->  Aggregate  (cost=944638.11..944638.13 rows=1 width=33) (actual time=4523.012..4523.012 rows=1 loops=1)
         ->  Hash Join  (cost=114401.98..930265.76 rows=821277 width=33) (actual time=966.474..3891.151 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=14748.96..790440.01 rows=821277 width=16) (actual time=274.046..2341.040 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14543.64 rows=821277 width=0) (actual time=178.838..178.838 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60981.01..60981.01 rows=2000001 width=25) (actual time=692.248..692.248 rows=2000000 loops=1)
                     Buckets: 65536  Batches: 4  Memory Usage: 28922kB
                     ->  Seq Scan on part  (cost=0.00..60981.01 rows=2000001 width=25) (actual time=0.003..389.498 rows=2000000 loops=1)
 Total runtime: 4523.115 ms
(12 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2465511.16..2465512.36 rows=1 width=103) (actual time=22169.519..22169.520 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1224017.09..1224017.10 rows=1 width=32) (actual time=8132.445..8132.445 rows=1 loops=1)
           ->  HashAggregate  (cost=1223930.96..1223969.24 rows=3828 width=16) (actual time=8103.127..8126.063 rows=100000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=41290.73..1200932.07 rows=2299889 width=16) (actual time=540.843..6022.390 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40715.76 rows=2299889 width=0) (actual time=488.592..488.592 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1241494.07..1246075.74 rows=3828 width=103) (actual time=22169.518..22169.518 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4274.26 rows=100000 width=71) (actual time=0.747..19.233 rows=69998 loops=1)
         ->  Sort  (cost=1241494.07..1241503.64 rows=3828 width=36) (actual time=22146.096..22146.096 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1241180.12..1241266.25 rows=3828 width=36) (actual time=22133.892..22146.087 rows=1 loops=1)
                     ->  HashAggregate  (cost=1241180.12..1241227.97 rows=3828 width=16) (actual time=22133.892..22146.086 rows=1 loops=1)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=41290.73..1200932.07 rows=2299889 width=16) (actual time=614.190..11502.110 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40715.76 rows=2299889 width=0) (actual time=560.350..560.350 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 22169.706 ms
(22 rows)

DROP VIEW
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2465511.16..2465512.36 rows=1 width=103) (actual time=16943.477..16943.477 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1224017.09..1224017.10 rows=1 width=32) (actual time=8170.281..8170.281 rows=1 loops=1)
           ->  HashAggregate  (cost=1223930.96..1223969.24 rows=3828 width=16) (actual time=8140.711..8163.930 rows=100000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=41290.73..1200932.07 rows=2299889 width=16) (actual time=545.202..6045.975 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40715.76 rows=2299889 width=0) (actual time=492.734..492.734 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1241494.07..1246075.74 rows=3828 width=103) (actual time=16943.477..16943.477 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4274.26 rows=100000 width=71) (actual time=0.035..10.587 rows=69998 loops=1)
         ->  Sort  (cost=1241494.07..1241503.64 rows=3828 width=36) (actual time=16929.013..16929.013 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1241180.12..1241266.25 rows=3828 width=36) (actual time=16916.736..16929.007 rows=1 loops=1)
                     ->  HashAggregate  (cost=1241180.12..1241227.97 rows=3828 width=16) (actual time=16916.735..16929.005 rows=1 loops=1)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=41290.73..1200932.07 rows=2299889 width=16) (actual time=574.987..6599.361 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..40715.76 rows=2299889 width=0) (actual time=522.290..522.290 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 16943.658 ms
(22 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=498531.85..498531.85 rows=1 width=40) (actual time=20799.464..20799.464 rows=1 loops=1)
   ->  Sort  (cost=498531.85..498595.90 rows=25620 width=40) (actual time=20799.463..20799.463 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=491315.64..498403.75 rows=25620 width=40) (actual time=18440.080..20794.123 rows=27838 loops=1)
               ->  Sort  (cost=491315.64..492682.02 rows=546553 width=40) (actual time=18439.944..20444.417 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60504kB
                     ->  Hash Join  (cost=97868.04..428554.13 rows=546553 width=40) (actual time=947.084..4640.996 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=3471.03..278692.06 rows=3999962 width=8) (actual time=38.054..1763.430 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=1.232..38.013 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=90981.02..90981.02 rows=273279 width=40) (actual time=908.980..908.980 rows=296733 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 21497kB
                                 ->  Seq Scan on part  (cost=0.00..90981.02 rows=273279 width=40) (actual time=0.011..836.892 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
 Total runtime: 20807.948 ms
(20 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=498531.85..498531.85 rows=1 width=40) (actual time=20186.965..20186.965 rows=1 loops=1)
   ->  Sort  (cost=498531.85..498595.90 rows=25620 width=40) (actual time=20186.964..20186.964 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=491315.64..498403.75 rows=25620 width=40) (actual time=17828.959..20181.689 rows=27838 loops=1)
               ->  Sort  (cost=491315.64..492682.02 rows=546553 width=40) (actual time=17828.826..19833.418 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60504kB
                     ->  Hash Join  (cost=97868.04..428554.13 rows=546553 width=40) (actual time=734.709..4101.766 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=3471.03..278692.06 rows=3999962 width=8) (actual time=26.247..1459.090 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.110..26.219 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=90981.02..90981.02 rows=273279 width=40) (actual time=708.413..708.413 rows=296733 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 21497kB
                                 ->  Seq Scan on part  (cost=0.00..90981.02 rows=273279 width=40) (actual time=0.009..648.402 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
 Total runtime: 20195.498 ms
(20 rows)

query 17 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10834807.00..10834807.01 rows=1 width=8) (actual time=100969.125..100969.125 rows=1 loops=1)
   ->  Aggregate  (cost=10834807.00..10834807.01 rows=1 width=8) (actual time=100969.124..100969.124 rows=1 loops=1)
         ->  Nested Loop  (cost=10278074.69..10834758.95 rows=19217 width=8) (actual time=51252.392..100963.801 rows=5319 loops=1)
               ->  Merge Join  (cost=10278074.69..10782751.54 rows=1922 width=40) (actual time=51251.351..100096.938 rows=1996 loops=1)
                     Merge Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=10206988.29..10686750.81 rows=1990836 width=9) (actual time=50740.836..99493.398 rows=1999333 loops=1)
                           ->  Sort  (cost=10206988.29..10356954.95 rows=59986664 width=9) (actual time=50740.798..73507.438 rows=59965994 loops=1)
                                 Sort Key: public.lineitem.l_partkey
                                 Sort Method: external merge  Disk: 1113352kB
                                 ->  Seq Scan on lineitem  (cost=0.00..1725009.64 rows=59986664 width=9) (actual time=0.354..9354.561 rows=59986052 loops=1)
                     ->  Sort  (cost=71086.40..71091.23 rows=1931 width=4) (actual time=497.923..498.651 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 142kB
                           ->  Seq Scan on part  (cost=0.00..70981.01 rows=1931 width=4) (actual time=0.723..497.132 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using q17_idx_1 on lineitem  (cost=0.00..26.91 rows=10 width=17) (actual time=0.401..0.430 rows=3 loops=1996)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_quantity < ((0.2 * avg(public.lineitem.l_quantity)))))
 Total runtime: 101093.446 ms
(18 rows)

SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10834807.00..10834807.01 rows=1 width=8) (actual time=96043.615..96043.615 rows=1 loops=1)
   ->  Aggregate  (cost=10834807.00..10834807.01 rows=1 width=8) (actual time=96043.614..96043.614 rows=1 loops=1)
         ->  Nested Loop  (cost=10278074.69..10834758.95 rows=19217 width=8) (actual time=48151.084..96041.437 rows=5319 loops=1)
               ->  Merge Join  (cost=10278074.69..10782751.54 rows=1922 width=40) (actual time=48151.059..96004.003 rows=1996 loops=1)
                     Merge Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=10206988.29..10686750.81 rows=1990836 width=9) (actual time=47818.789..95581.588 rows=1999333 loops=1)
                           ->  Sort  (cost=10206988.29..10356954.95 rows=59986664 width=9) (actual time=47818.751..69238.831 rows=59965994 loops=1)
                                 Sort Key: public.lineitem.l_partkey
                                 Sort Method: external merge  Disk: 1113352kB
                                 ->  Seq Scan on lineitem  (cost=0.00..1725009.64 rows=59986664 width=9) (actual time=0.030..7604.197 rows=59986052 loops=1)
                     ->  Sort  (cost=71086.40..71091.23 rows=1931 width=4) (actual time=318.904..319.218 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 142kB
                           ->  Seq Scan on part  (cost=0.00..70981.01 rows=1931 width=4) (actual time=0.122..318.497 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using q17_idx_1 on lineitem  (cost=0.00..26.91 rows=10 width=17) (actual time=0.015..0.017 rows=3 loops=1996)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_quantity < ((0.2 * avg(public.lineitem.l_quantity)))))
 Total runtime: 96168.904 ms
(18 rows)

query 18 run 1
SET
SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12042529.08..12042531.83 rows=100 width=44) (actual time=48880.225..48880.520 rows=99 loops=1)
   ->  GroupAggregate  (cost=12042529.08..12867345.71 rows=29993332 width=44) (actual time=48880.224..48880.512 rows=99 loops=1)
         ->  Sort  (cost=12042529.08..12117512.41 rows=29993332 width=44) (actual time=48880.212..48880.238 rows=693 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 79kB
               ->  Hash Join  (cost=4307082.50..7658601.41 rows=29993332 width=44) (actual time=33692.097..48879.016 rows=693 loops=1)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1725009.64 rows=59986664 width=9) (actual time=0.003..7599.678 rows=59986052 loops=1)
                     ->  Hash  (cost=4147415.12..4147415.12 rows=7499950 width=43) (actual time=31013.910..31013.910 rows=99 loops=1)
                           Buckets: 65536  Batches: 32  Memory Usage: 1kB
                           ->  Hash Join  (cost=78487.99..4147415.12 rows=7499950 width=43) (actual time=5358.989..31012.409 rows=99 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge Semi Join  (cost=0.00..3822246.13 rows=7499950 width=24) (actual time=779.659..30277.355 rows=99 loops=1)
                                       Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..568530.59 rows=14999901 width=20) (actual time=0.736..2751.459 rows=14982724 loops=1)
                                       ->  Materialize  (cost=0.00..3028757.47 rows=14996666 width=4) (actual time=676.788..26657.310 rows=99 loops=1)
                                             ->  GroupAggregate  (cost=0.00..2841299.14 rows=14996666 width=9) (actual time=676.785..26657.136 rows=99 loops=1)
                                                   Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2353907.50 rows=59986664 width=9) (actual time=1.094..11568.415 rows=59986052 loops=1)
                                 ->  Hash  (cost=50947.44..50947.44 rows=1500044 width=23) (actual time=660.273..660.273 rows=1500000 loops=1)
                                       Buckets: 65536  Batches: 4  Memory Usage: 20537kB
                                       ->  Seq Scan on customer  (cost=0.00..50947.44 rows=1500044 width=23) (actual time=0.003..419.815 rows=1500000 loops=1)
 Total runtime: 48880.610 ms
(23 rows)

SET
SET
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12042529.08..12042531.83 rows=100 width=44) (actual time=45920.650..45920.948 rows=99 loops=1)
   ->  GroupAggregate  (cost=12042529.08..12867345.71 rows=29993332 width=44) (actual time=45920.648..45920.939 rows=99 loops=1)
         ->  Sort  (cost=12042529.08..12117512.41 rows=29993332 width=44) (actual time=45920.636..45920.657 rows=693 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 79kB
               ->  Hash Join  (cost=4307082.50..7658601.41 rows=29993332 width=44) (actual time=30716.021..45919.446 rows=693 loops=1)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1725009.64 rows=59986664 width=9) (actual time=0.002..7645.232 rows=59986052 loops=1)
                     ->  Hash  (cost=4147415.12..4147415.12 rows=7499950 width=43) (actual time=28033.062..28033.062 rows=99 loops=1)
                           Buckets: 65536  Batches: 32  Memory Usage: 1kB
                           ->  Hash Join  (cost=78487.99..4147415.12 rows=7499950 width=43) (actual time=4880.595..28031.659 rows=99 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge Semi Join  (cost=0.00..3822246.13 rows=7499950 width=24) (actual time=756.780..27333.282 rows=99 loops=1)
                                       Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..568530.59 rows=14999901 width=20) (actual time=0.537..2211.003 rows=14982724 loops=1)
                                       ->  Materialize  (cost=0.00..3028757.47 rows=14996666 width=4) (actual time=651.386..24276.724 rows=99 loops=1)
                                             ->  GroupAggregate  (cost=0.00..2841299.14 rows=14996666 width=9) (actual time=651.383..24276.564 rows=99 loops=1)
                                                   Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2353907.50 rows=59986664 width=9) (actual time=1.897..9401.139 rows=59986052 loops=1)
                                 ->  Hash  (cost=50947.44..50947.44 rows=1500044 width=23) (actual time=623.447..623.447 rows=1500000 loops=1)
                                       Buckets: 65536  Batches: 4  Memory Usage: 20537kB
                                       ->  Seq Scan on customer  (cost=0.00..50947.44 rows=1500044 width=23) (actual time=0.003..381.405 rows=1500000 loops=1)
 Total runtime: 45921.032 ms
(23 rows)

query 19 run 1
SET
SET

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3103008.30..3103008.31 rows=1 width=12) (actual time=17215.445..17215.445 rows=1 loops=1)
   ->  Aggregate  (cost=3103008.30..3103008.31 rows=1 width=12) (actual time=17215.445..17215.445 rows=1 loops=1)
         ->  Hash Join  (cost=115055.57..3103000.67 rows=1017 width=12) (actual time=918.463..17213.311 rows=1063 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..2924742.92 rows=1099554 width=21) (actual time=0.486..15701.355 rows=899485 loops=1)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=95981.03..95981.03 rows=986443 width=30) (actual time=865.733..865.733 rows=598661 loops=1)
                     Buckets: 65536  Batches: 2  Memory Usage: 18758kB
                     ->  Seq Scan on part  (cost=0.00..95981.03 rows=986443 width=30) (actual time=0.002..743.653 rows=598661 loops=1)
                           Filter: ((p_size >= 1) AND (((p_size <= 5) AND (p_size >= 1)) OR ((p_size <= 10) AND (p_size >= 1)) OR ((p_size <= 15) AND (p_size >= 1))))
 Total runtime: 17215.482 ms
(12 rows)

SET
SET


 Limit  (cost=3103008.30..3103008.31 rows=1 width=12) (actual time=14959.838..14959.839 rows=1 loops=1)
   ->  Aggregate  (cost=3103008.30..3103008.31 rows=1 width=12) (actual time=14959.837..14959.837 rows=1 loops=1)
         ->  Hash Join  (cost=115055.57..3103000.67 rows=1017 width=12) (actual time=713.111..14958.186 rows=1063 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..2924742.92 rows=1099554 width=21) (actual time=0.082..13685.322 rows=899485 loops=1)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=95981.03..95981.03 rows=986443 width=30) (actual time=669.955..669.955 rows=598661 loops=1)
                     Buckets: 65536  Batches: 2  Memory Usage: 18758kB
                     ->  Seq Scan on part  (cost=0.00..95981.03 rows=986443 width=30) (actual time=0.003..558.451 rows=598661 loops=1)
                           Filter: ((p_size >= 1) AND (((p_size <= 5) AND (p_size >= 1)) OR ((p_size <= 10) AND (p_size >= 1)) OR ((p_size <= 15) AND (p_size >= 1))))
 Total runtime: 14959.876 ms
(12 rows)

query 20 run 1
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2895594.42..2895594.43 rows=1 width=51) (actual time=56134.730..56134.730 rows=1 loops=1)
   ->  Sort  (cost=2895594.42..2895594.43 rows=1 width=51) (actual time=56134.730..56134.730 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2774080.54..2895594.41 rows=1 width=51) (actual time=33132.124..56132.632 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Nested Loop  (cost=55.26..2307.28 rows=4000 width=55) (actual time=3.238..25.895 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.007 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                     ->  Bitmap Heap Scan on supplier  (cost=55.26..2255.96 rows=4000 width=59) (actual time=3.230..24.959 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.26 rows=4000 width=0) (actual time=1.945..1.945 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Materialize  (cost=2774025.28..2891607.20 rows=28 width=8) (actual time=7.800..10.865 rows=44445 loops=4095)
                     ->  Merge Join  (cost=2774025.28..2891607.06 rows=28 width=8) (actual time=31941.301..38590.380 rows=59002 loops=1)
                           Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           ->  GroupAggregate  (cost=2570986.26..2672226.12 rows=899910 width=13) (actual time=26442.726..32762.229 rows=5448473 loops=1)
                                 ->  Sort  (cost=2570986.26..2593484.01 rows=8999099 width=13) (actual time=26442.712..29674.794 rows=9123091 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 205072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=161547.63..1421677.12 rows=8999099 width=13) (actual time=1914.379..18834.241 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..159297.86 rows=8999099 width=0) (actual time=1820.735..1820.735 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Sort  (cost=203039.03..203986.74 rows=379086 width=16) (actual time=5498.221..5505.976 rows=86872 loops=1)
                                 Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                 Sort Method: quicksort  Memory: 7145kB
                                 ->  Nested Loop  (cost=66031.52..167912.60 rows=379086 width=16) (actual time=336.683..5447.286 rows=86872 loops=1)
                                       ->  HashAggregate  (cost=66031.52..66233.54 rows=20202 width=4) (actual time=335.612..344.845 rows=21718 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..65981.01 rows=20202 width=4) (actual time=0.092..329.294 rows=21718 loops=1)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..4.80 rows=19 width=12) (actual time=0.217..0.233 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Total runtime: 56162.503 ms
(35 rows)

SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2895594.42..2895594.43 rows=1 width=51) (actual time=42626.952..42626.952 rows=1 loops=1)
   ->  Sort  (cost=2895594.42..2895594.43 rows=1 width=51) (actual time=42626.952..42626.952 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2774080.54..2895594.41 rows=1 width=51) (actual time=19688.382..42625.067 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Nested Loop  (cost=55.26..2307.28 rows=4000 width=55) (actual time=0.644..10.217 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                     ->  Bitmap Heap Scan on supplier  (cost=55.26..2255.96 rows=4000 width=59) (actual time=0.636..9.533 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.26 rows=4000 width=0) (actual time=0.442..0.442 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Materialize  (cost=2774025.28..2891607.20 rows=28 width=8) (actual time=4.519..7.568 rows=44445 loops=4095)
                     ->  Merge Join  (cost=2774025.28..2891607.06 rows=28 width=8) (actual time=18503.450..25142.930 rows=59002 loops=1)
                           Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           ->  GroupAggregate  (cost=2570986.26..2672226.12 rows=899910 width=13) (actual time=18038.989..24341.758 rows=5448473 loops=1)
                                 ->  Sort  (cost=2570986.26..2593484.01 rows=8999099 width=13) (actual time=18038.974..21247.349 rows=9123091 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 205072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=161547.63..1421677.12 rows=8999099 width=13) (actual time=1756.974..10974.145 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..159297.86 rows=8999099 width=0) (actual time=1663.706..1663.706 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Sort  (cost=203039.03..203986.74 rows=379086 width=16) (actual time=464.106..471.660 rows=86872 loops=1)
                                 Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                 Sort Method: quicksort  Memory: 7145kB
                                 ->  Nested Loop  (cost=66031.52..167912.60 rows=379086 width=16) (actual time=258.409..431.049 rows=86872 loops=1)
                                       ->  HashAggregate  (cost=66031.52..66233.54 rows=20202 width=4) (actual time=258.380..263.581 rows=21718 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..65981.01 rows=20202 width=4) (actual time=0.029..252.690 rows=21718 loops=1)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..4.80 rows=19 width=12) (actual time=0.006..0.007 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Total runtime: 42653.463 ms
(35 rows)

query 21 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4820803.74..4820803.75 rows=1 width=26) (actual time=79637.247..79637.256 rows=100 loops=1)
   ->  Sort  (cost=4820803.74..4820803.75 rows=1 width=26) (actual time=79637.244..79637.249 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=4820803.72..4820803.73 rows=1 width=26) (actual time=79635.133..79635.876 rows=3991 loops=1)
               ->  Nested Loop Anti Join  (cost=3113496.43..4820803.72 rows=1 width=26) (actual time=20467.743..79598.002 rows=39281 loops=1)
                     Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                     ->  Nested Loop  (cost=3113496.43..4820790.99 rows=1 width=34) (actual time=20394.504..66361.988 rows=704306 loops=1)
                           ->  Hash Semi Join  (cost=3113496.43..4820785.89 rows=1 width=38) (actual time=20379.531..41661.099 rows=1460326 loops=1)
                                 Hash Cond: (l1.l_orderkey = l2.l_orderkey)
                                 Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                 ->  Hash Join  (cost=404330.49..1862399.48 rows=799822 width=34) (actual time=3324.170..19006.195 rows=1514267 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Bitmap Heap Scan on lineitem l1  (cost=401973.22..1777060.66 rows=19995555 width=8) (actual time=3282.892..14812.309 rows=37929348 loops=1)
                                             Recheck Cond: (l_receiptdate > l_commitdate)
                                             ->  Bitmap Index Scan on q21_idx_2  (cost=0.00..396974.33 rows=19995555 width=0) (actual time=3222.466..3222.466 rows=37929348 loops=1)
                                       ->  Hash  (cost=2307.28..2307.28 rows=4000 width=30) (actual time=40.901..40.901 rows=3991 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 250kB
                                             ->  Nested Loop  (cost=55.26..2307.28 rows=4000 width=30) (actual time=2.035..39.711 rows=3991 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.009 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=55.26..2255.96 rows=4000 width=34) (actual time=2.028..38.787 rows=3991 loops=1)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.26 rows=4000 width=0) (actual time=1.843..1.843 rows=3991 loops=1)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=1725009.64..1725009.64 rows=59986664 width=8) (actual time=17054.030..17054.030 rows=59986052 loops=1)
                                       Buckets: 131072  Batches: 128  Memory Usage: 18500kB
                                       ->  Seq Scan on lineitem l2  (cost=0.00..1725009.64 rows=59986664 width=8) (actual time=0.003..9010.517 rows=59986052 loops=1)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..5.09 rows=1 width=4) (actual time=0.016..0.017 rows=0 loops=1460326)
                                 Index Cond: (o_orderkey = l1.l_orderkey)
                                 Filter: (o_orderstatus = 'F'::bpchar)
                     ->  Index Scan using q21_idx_2 on lineitem l3  (cost=0.00..6.36 rows=1 width=8) (actual time=0.018..0.018 rows=1 loops=704306)
                           Index Cond: (l_orderkey = l1.l_orderkey)
 Total runtime: 79637.488 ms
(34 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4820803.74..4820803.75 rows=1 width=26) (actual time=70260.462..70260.473 rows=100 loops=1)
   ->  Sort  (cost=4820803.74..4820803.75 rows=1 width=26) (actual time=70260.460..70260.465 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=4820803.72..4820803.73 rows=1 width=26) (actual time=70258.360..70259.078 rows=3991 loops=1)
               ->  Nested Loop Anti Join  (cost=3113496.43..4820803.72 rows=1 width=26) (actual time=18271.824..70224.631 rows=39281 loops=1)
                     Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                     ->  Nested Loop  (cost=3113496.43..4820790.99 rows=1 width=34) (actual time=18217.541..61019.460 rows=704306 loops=1)
                           ->  Hash Semi Join  (cost=3113496.43..4820785.89 rows=1 width=38) (actual time=18205.496..49825.396 rows=1460326 loops=1)
                                 Hash Cond: (l1.l_orderkey = l2.l_orderkey)
                                 Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                 ->  Hash Join  (cost=404330.49..1862399.48 rows=799822 width=34) (actual time=2986.344..28337.169 rows=1514267 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Bitmap Heap Scan on lineitem l1  (cost=401973.22..1777060.66 rows=19995555 width=8) (actual time=2944.374..23586.474 rows=37929348 loops=1)
                                             Recheck Cond: (l_receiptdate > l_commitdate)
                                             ->  Bitmap Index Scan on q21_idx_2  (cost=0.00..396974.33 rows=19995555 width=0) (actual time=2884.001..2884.001 rows=37929348 loops=1)
                                       ->  Hash  (cost=2307.28..2307.28 rows=4000 width=30) (actual time=41.652..41.652 rows=3991 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 250kB
                                             ->  Nested Loop  (cost=55.26..2307.28 rows=4000 width=30) (actual time=1.775..40.116 rows=3991 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.010 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=55.26..2255.96 rows=4000 width=34) (actual time=1.766..39.023 rows=3991 loops=1)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..54.26 rows=4000 width=0) (actual time=1.583..1.583 rows=3991 loops=1)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=1725009.64..1725009.64 rows=59986664 width=8) (actual time=15217.863..15217.863 rows=59986052 loops=1)
                                       Buckets: 131072  Batches: 128  Memory Usage: 18500kB
                                       ->  Seq Scan on lineitem l2  (cost=0.00..1725009.64 rows=59986664 width=8) (actual time=0.003..7426.848 rows=59986052 loops=1)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..5.09 rows=1 width=4) (actual time=0.007..0.007 rows=0 loops=1460326)
                                 Index Cond: (o_orderkey = l1.l_orderkey)
                                 Filter: (o_orderstatus = 'F'::bpchar)
                     ->  Index Scan using q21_idx_2 on lineitem l3  (cost=0.00..6.36 rows=1 width=8) (actual time=0.013..0.013 rows=1 loops=704306)
                           Index Cond: (l_orderkey = l1.l_orderkey)
 Total runtime: 70261.836 ms
(34 rows)

query 22 run 1
SET
SET
                                                                        QUERY PLAN                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=205107.38..205107.38 rows=1 width=22) (actual time=9317.960..9317.961 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75440.61..75440.62 rows=1 width=6) (actual time=1156.005..1156.005 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..75323.15 rows=46980 width=6) (actual time=0.006..994.763 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=129666.76..129685.95 rows=7674 width=22) (actual time=9317.959..9317.959 rows=1 loops=1)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=129513.28..129628.39 rows=7674 width=22) (actual time=9317.923..9317.932 rows=7 loops=1)
               ->  Nested Loop Anti Join  (cost=0.00..129455.73 rows=7674 width=22) (actual time=1156.051..9252.386 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75323.15 rows=17240 width=26) (actual time=1156.030..2055.457 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..37.59 rows=18 width=4) (actual time=0.037..0.037 rows=1 loops=191129)
                           Index Cond: (o_custkey = public.customer.c_custkey)
 Total runtime: 9318.022 ms
(15 rows)

SET
SET
                                                                        QUERY PLAN                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=205107.38..205107.38 rows=1 width=22) (actual time=2168.772..2168.772 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75440.61..75440.62 rows=1 width=6) (actual time=969.137..969.137 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..75323.15 rows=46980 width=6) (actual time=0.007..815.489 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=129666.76..129685.95 rows=7674 width=22) (actual time=2168.770..2168.770 rows=1 loops=1)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=129513.28..129628.39 rows=7674 width=22) (actual time=2168.738..2168.750 rows=7 loops=1)
               ->  Nested Loop Anti Join  (cost=0.00..129455.73 rows=7674 width=22) (actual time=969.177..2137.515 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75323.15 rows=17240 width=26) (actual time=969.162..1520.655 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..37.59 rows=18 width=4) (actual time=0.003..0.003 rows=1 loops=191129)
                           Index Cond: (o_custkey = public.customer.c_custkey)
 Total runtime: 2168.830 ms
(15 rows)

