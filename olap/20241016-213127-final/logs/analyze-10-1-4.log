query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191622.20..191622.40 rows=1 width=236) (actual time=2149.623..2149.686 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191622.20..191623.44 rows=6 width=236) (actual time=2149.623..2149.685 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Sort  (cost=191622.20..191622.26 rows=24 width=236) (actual time=2149.590..2149.653 rows=6 loops=1)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 35kB
               ->  Gather  (cost=191619.08..191621.65 rows=24 width=236) (actual time=2147.657..2148.562 rows=20 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=190619.08..190619.25 rows=6 width=236) (actual time=2140.591..2140.601 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.08 rows=1482650 width=25) (actual time=0.114..547.978 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning time: 18.830 ms
 Execution time: 2150.308 ms
(16 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191622.20..191622.40 rows=1 width=236) (actual time=1977.195..1977.264 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191622.20..191623.44 rows=6 width=236) (actual time=1977.194..1977.263 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Sort  (cost=191622.20..191622.26 rows=24 width=236) (actual time=1977.161..1977.230 rows=6 loops=1)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 35kB
               ->  Gather  (cost=191619.08..191621.65 rows=24 width=236) (actual time=1976.091..1976.985 rows=20 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=190619.08..190619.25 rows=6 width=236) (actual time=1972.061..1972.071 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.08 rows=1482650 width=25) (actual time=0.027..314.143 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning time: 0.830 ms
 Execution time: 1977.337 ms
(16 rows)

query 2 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17195.17..17195.17 rows=1 width=192) (actual time=175.742..175.755 rows=100 loops=1)
   ->  Sort  (cost=17195.17..17195.17 rows=1 width=192) (actual time=175.741..175.748 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=15.08..17195.16 rows=1 width=192) (actual time=5.558..175.410 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.008..0.013 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
               ->  Materialize  (cost=15.08..17192.46 rows=1 width=170) (actual time=0.515..35.005 rows=489 loops=5)
                     ->  Nested Loop  (cost=15.08..17192.45 rows=1 width=170) (actual time=2.574..174.567 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.80..17191.18 rows=1 width=34) (actual time=2.255..136.608 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5472.08 rows=722 width=30) (actual time=0.454..24.904 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=14.38..16.22 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.94..13.95 rows=1 width=32) (actual time=0.136..0.136 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.97..13.94 rows=1 width=6) (actual time=0.123..0.134 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.97..12.83 rows=4 width=10) (actual time=0.104..0.131 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.83..12.21 rows=4 width=10) (actual time=0.102..0.125 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.096..0.098 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.41..2.43 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.077..0.077 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning time: 25.830 ms
 Execution time: 176.334 ms
(47 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17195.17..17195.17 rows=1 width=192) (actual time=22.678..22.690 rows=100 loops=1)
   ->  Sort  (cost=17195.17..17195.17 rows=1 width=192) (actual time=22.677..22.683 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=15.08..17195.16 rows=1 width=192) (actual time=0.170..22.391 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.007..0.012 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
               ->  Materialize  (cost=15.08..17192.46 rows=1 width=170) (actual time=0.015..4.419 rows=489 loops=5)
                     ->  Nested Loop  (cost=15.08..17192.45 rows=1 width=170) (actual time=0.073..21.849 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.80..17191.18 rows=1 width=34) (actual time=0.066..20.827 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5472.08 rows=722 width=30) (actual time=0.018..6.444 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=14.38..16.22 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.94..13.95 rows=1 width=32) (actual time=0.016..0.016 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.97..13.94 rows=1 width=6) (actual time=0.011..0.015 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.97..12.83 rows=4 width=10) (actual time=0.005..0.013 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.83..12.21 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.41..2.43 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.002..0.002 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning time: 2.432 ms
 Execution time: 22.761 ms
(47 rows)

query 3 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=250805.56..250805.59 rows=10 width=44) (actual time=1470.076..1473.271 rows=10 loops=1)
   ->  Sort  (cost=250805.56..251583.97 rows=311362 width=44) (actual time=1470.075..1473.268 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=196871.94..244077.14 rows=311362 width=44) (actual time=1449.778..1470.876 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=196871.94..236293.11 rows=311360 width=44) (actual time=1449.764..1461.105 rows=12053 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=195871.88..198207.08 rows=77840 width=44) (actual time=1440.821..1445.380 rows=2411 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=195871.88..196066.48 rows=77840 width=24) (actual time=1440.797..1441.122 rows=6107 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 596kB
                                 ->  Hash Join  (cost=54401.66..189548.07 rows=77840 width=24) (actual time=617.078..1438.900 rows=6107 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.08 rows=814680 width=16) (actual time=0.072..758.131 rows=652375 loops=5)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 547868
                                       ->  Hash  (cost=52610.15..52610.15 rows=143321 width=12) (actual time=615.099..615.100 rows=146063 loops=5)
                                             Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                                             ->  Hash Join  (cost=5846.75..52610.15 rows=143321 width=12) (actual time=54.418..588.117 rows=146063 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Seq Scan on orders  (cost=0.00..44881.00 rows=717082 width=16) (actual time=0.044..398.042 rows=722275 loops=5)
                                                         Filter: (o_orderdate < '1995-03-07'::date)
                                                         Rows Removed by Filter: 777725
                                                   ->  Hash  (cost=5472.00..5472.00 rows=29980 width=4) (actual time=54.275..54.275 rows=30142 loops=5)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                                         ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29980 width=4) (actual time=0.017..49.576 rows=30142 loops=5)
                                                               Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                               Rows Removed by Filter: 119858
 Planning time: 25.753 ms
 Execution time: 1473.875 ms
(33 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=250805.56..250805.59 rows=10 width=44) (actual time=827.947..832.136 rows=10 loops=1)
   ->  Sort  (cost=250805.56..251583.97 rows=311362 width=44) (actual time=827.946..832.134 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=196871.94..244077.14 rows=311362 width=44) (actual time=806.149..829.742 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=196871.94..236293.11 rows=311360 width=44) (actual time=806.141..819.932 rows=12035 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=195871.88..198207.08 rows=77840 width=44) (actual time=801.484..805.939 rows=2407 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=195871.88..196066.48 rows=77840 width=24) (actual time=801.467..801.763 rows=6107 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 815kB
                                 ->  Hash Join  (cost=54401.66..189548.07 rows=77840 width=24) (actual time=457.984..799.959 rows=6107 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.08 rows=814680 width=16) (actual time=0.855..265.677 rows=652375 loops=5)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 547868
                                       ->  Hash  (cost=52610.15..52610.15 rows=143321 width=12) (actual time=456.506..456.507 rows=146063 loops=5)
                                             Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                                             ->  Hash Join  (cost=5846.75..52610.15 rows=143321 width=12) (actual time=38.269..426.210 rows=146063 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Seq Scan on orders  (cost=0.00..44881.00 rows=717082 width=16) (actual time=0.020..221.766 rows=722275 loops=5)
                                                         Filter: (o_orderdate < '1995-03-07'::date)
                                                         Rows Removed by Filter: 777725
                                                   ->  Hash  (cost=5472.00..5472.00 rows=29980 width=4) (actual time=38.169..38.169 rows=30142 loops=5)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                                         ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29980 width=4) (actual time=0.014..32.998 rows=30142 loops=5)
                                                               Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                               Rows Removed by Filter: 119858
 Planning time: 1.370 ms
 Execution time: 832.224 ms
(33 rows)

query 4 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=63334.17..63334.20 rows=1 width=24) (actual time=548.717..554.749 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=63334.17..63334.33 rows=5 width=24) (actual time=548.716..554.747 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Sort  (cost=63334.17..63334.20 rows=15 width=24) (actual time=548.712..554.743 rows=5 loops=1)
               Sort Key: orders.o_orderpriority
               Sort Method: quicksort  Memory: 26kB
               ->  Gather  (cost=63332.32..63333.87 rows=15 width=24) (actual time=548.534..554.714 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial HashAggregate  (cost=62332.32..62332.37 rows=5 width=24) (actual time=541.245..541.247 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=863.87..62244.04 rows=17656 width=16) (actual time=8.372..534.368 rows=12850 loops=4)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=863.44..27259.28 rows=17656 width=20) (actual time=7.422..413.556 rows=13993 loops=4)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=5628
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..849.76 rows=54733 width=0) (actual time=10.836..10.836 rows=55973 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Only Scan using q21_idx_2 on lineitem  (cost=0.43..2.23 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=55973)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
 Planning time: 22.618 ms
 Execution time: 554.830 ms
(22 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=63334.17..63334.20 rows=1 width=24) (actual time=64.687..71.837 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=63334.17..63334.33 rows=5 width=24) (actual time=64.686..71.836 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Sort  (cost=63334.17..63334.20 rows=15 width=24) (actual time=64.683..71.832 rows=5 loops=1)
               Sort Key: orders.o_orderpriority
               Sort Method: quicksort  Memory: 26kB
               ->  Gather  (cost=63332.32..63333.87 rows=15 width=24) (actual time=64.520..71.806 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial HashAggregate  (cost=62332.32..62332.37 rows=5 width=24) (actual time=61.848..61.850 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=863.87..62244.04 rows=17656 width=16) (actual time=7.578..58.334 rows=12850 loops=4)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=863.44..27259.28 rows=17656 width=20) (actual time=7.545..23.755 rows=13993 loops=4)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=5814
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..849.76 rows=54733 width=0) (actual time=6.424..6.425 rows=55973 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Only Scan using q21_idx_2 on lineitem  (cost=0.43..2.23 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=55973)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
 Planning time: 1.116 ms
 Execution time: 71.894 ms
(22 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=76006.63..76006.63 rows=1 width=58) (actual time=834.431..841.600 rows=1 loops=1)
   ->  Sort  (cost=76006.63..76006.69 rows=25 width=58) (actual time=834.430..841.599 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=75967.17..76006.50 rows=25 width=58) (actual time=833.758..841.588 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=75967.17..76005.63 rows=75 width=58) (actual time=833.591..841.566 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=74967.13..74996.78 rows=25 width=58) (actual time=826.757..827.438 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=74967.13..74972.99 rows=2347 width=38) (actual time=826.587..826.670 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 196kB
                                 ->  Hash Join  (cost=10400.65..74835.74 rows=2347 width=38) (actual time=101.052..825.232 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=9927.65..74053.69 rows=58865 width=50) (actual time=96.564..810.912 rows=45609 loops=4)
                                             ->  Hash Join  (cost=9927.09..37584.65 rows=14714 width=38) (actual time=95.298..579.059 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=3590.08..30824.62 rows=73569 width=8) (actual time=25.797..489.736 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6404
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3533.07 rows=228064 width=0) (actual time=25.980..25.981 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=69.446..69.448 rows=29952 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                                         ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=0.052..63.082 rows=29952 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.014..40.011 rows=150000 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.031..0.032 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.026..0.030 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.006..0.007 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.44 rows=4 width=20) (actual time=0.019..0.019 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.444..3.444 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.016..2.127 rows=10000 loops=4)
 Planning time: 32.492 ms
 Execution time: 842.394 ms
(47 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=76006.63..76006.63 rows=1 width=58) (actual time=154.009..165.137 rows=1 loops=1)
   ->  Sort  (cost=76006.63..76006.69 rows=25 width=58) (actual time=154.008..165.136 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=75967.17..76006.50 rows=25 width=58) (actual time=153.339..165.125 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=75967.17..76005.63 rows=75 width=58) (actual time=153.167..165.103 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=74967.13..74996.78 rows=25 width=58) (actual time=150.257..150.925 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=74967.13..74972.99 rows=2347 width=38) (actual time=150.087..150.167 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 191kB
                                 ->  Hash Join  (cost=10400.65..74835.74 rows=2347 width=38) (actual time=59.447..149.308 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=9927.65..74053.69 rows=58865 width=50) (actual time=56.588..139.186 rows=45609 loops=4)
                                             ->  Hash Join  (cost=9927.09..37584.65 rows=14714 width=38) (actual time=56.550..93.457 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=3590.08..30824.62 rows=73569 width=8) (actual time=19.425..42.627 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6561
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3533.07 rows=228064 width=0) (actual time=17.557..17.557 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=37.087..37.089 rows=29952 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                                         ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=0.048..31.477 rows=29952 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.014..9.658 rows=150000 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.028..0.029 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.022..0.027 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.005..0.006 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.44 rows=4 width=20) (actual time=0.003..0.003 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.792..2.792 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.014..1.488 rows=10000 loops=4)
 Planning time: 3.894 ms
 Execution time: 165.243 ms
(47 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116492.12..116492.13 rows=1 width=32) (actual time=1081.286..1085.766 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=116492.12..116492.13 rows=1 width=32) (actual time=1081.285..1085.764 rows=1 loops=1)
         ->  Gather  (cost=116491.69..116492.10 rows=4 width=32) (actual time=1077.685..1085.748 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=115491.69..115491.70 rows=1 width=32) (actual time=1069.465..1069.465 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=23056.60..115340.40 rows=30258 width=12) (actual time=135.716..1053.852 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13325
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..23026.35 rows=121030 width=0) (actual time=130.981..130.982 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 15.770 ms
 Execution time: 1086.389 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116492.12..116492.13 rows=1 width=32) (actual time=201.441..203.459 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=116492.12..116492.13 rows=1 width=32) (actual time=201.440..203.457 rows=1 loops=1)
         ->  Gather  (cost=116491.69..116492.10 rows=4 width=32) (actual time=195.252..203.440 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=115491.69..115491.70 rows=1 width=32) (actual time=192.129..192.129 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=23056.60..115340.40 rows=30258 width=12) (actual time=109.710..185.167 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13604
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..23026.35 rows=121030 width=0) (actual time=100.540..100.540 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 0.821 ms
 Execution time: 203.499 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=193939.78..193939.94 rows=1 width=92) (actual time=1439.579..1441.398 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=193939.78..194891.36 rows=6028 width=92) (actual time=1439.578..1441.396 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=193939.78..194710.52 rows=6028 width=92) (actual time=1439.378..1441.382 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=192939.72..192992.47 rows=1507 width=92) (actual time=1426.464..1426.841 rows=4 loops=5)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=192939.72..192943.49 rows=1507 width=72) (actual time=1426.317..1426.363 rows=997 loops=5)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 241kB
                           ->  Hash Join  (cost=55530.00..192860.17 rows=1507 width=72) (actual time=637.481..1425.347 rows=1146 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 1165
                                 ->  Hash Join  (cost=365.10..137494.03 rows=36210 width=46) (actual time=2.878..784.081 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135063.70 rows=454169 width=24) (actual time=0.035..740.948 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=2.769..2.770 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                             ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.024..2.661 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.010..1.422 rows=10000 loops=5)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.010..0.010 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.009 rows=2 loops=5)
                                                               Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                               Rows Removed by Filter: 23
                                 ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=632.594..632.596 rows=118477 loops=5)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                       ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=61.791..607.150 rows=118477 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.026..325.292 rows=1500000 loops=5)
                                             ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=61.751..61.752 rows=11896 loops=5)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                                   ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.020..59.488 rows=11896 loops=5)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.006..40.167 rows=150000 loops=5)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.009..0.010 rows=2 loops=5)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.008 rows=2 loops=5)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
 Planning time: 32.319 ms
 Execution time: 1442.297 ms
(47 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=193939.78..193939.94 rows=1 width=92) (actual time=789.270..794.764 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=193939.78..194891.36 rows=6028 width=92) (actual time=789.269..794.762 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=193939.78..194710.52 rows=6028 width=92) (actual time=789.082..794.754 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=192939.72..192992.47 rows=1507 width=92) (actual time=783.708..784.068 rows=4 loops=5)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=192939.72..192943.49 rows=1507 width=72) (actual time=783.562..783.604 rows=973 loops=5)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 270kB
                           ->  Hash Join  (cost=55530.00..192860.17 rows=1507 width=72) (actual time=467.268..782.841 rows=1146 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 1165
                                 ->  Hash Join  (cost=365.10..137494.03 rows=36210 width=46) (actual time=2.056..310.066 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135063.70 rows=454169 width=24) (actual time=0.032..264.991 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=1.983..1.984 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                             ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.025..1.883 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.011..0.640 rows=10000 loops=5)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.010..0.011 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.009 rows=2 loops=5)
                                                               Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                               Rows Removed by Filter: 23
                                 ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=464.681..464.683 rows=118477 loops=5)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                       ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=43.557..437.477 rows=118477 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.019..104.165 rows=1500000 loops=5)
                                             ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=43.527..43.528 rows=11896 loops=5)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                                   ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.018..41.606 rows=11896 loops=5)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.006..13.908 rows=150000 loops=5)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.008..0.009 rows=2 loops=5)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=5)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
 Planning time: 3.057 ms
 Execution time: 794.880 ms
(47 rows)

query 8 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=54420.45..54420.62 rows=1 width=40) (actual time=890.819..893.461 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=54420.45..54817.09 rows=2406 width=40) (actual time=890.818..893.460 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=54420.45..54732.85 rows=2408 width=72) (actual time=890.671..893.444 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=53420.40..53445.98 rows=602 width=72) (actual time=878.875..879.005 rows=2 loops=5)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=53420.40..53421.90 rows=602 width=46) (actual time=878.737..878.765 rows=497 loops=5)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 63kB
                           ->  Hash Join  (cost=6787.98..53392.60 rows=602 width=46) (actual time=79.274..878.352 rows=497 loops=5)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Hash Join  (cost=6786.41..53386.18 rows=602 width=20) (actual time=79.231..877.671 rows=497 loops=5)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Nested Loop  (cost=449.41..47031.86 rows=3011 width=24) (actual time=6.275..806.694 rows=2419 loops=5)
                                             ->  Hash Join  (cost=448.98..7023.05 rows=9965 width=20) (actual time=3.813..105.604 rows=7939 loops=5)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.98..6548.79 rows=9999 width=20) (actual time=0.791..99.204 rows=7939 loops=5)
                                                         ->  Parallel Index Only Scan using q2_idx_1 on part  (cost=0.42..5425.75 rows=333 width=4) (actual time=0.329..6.476 rows=264 loops=5)
                                                               Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.06 rows=31 width=24) (actual time=0.279..0.346 rows=30 loops=1320)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.002..3.002 rows=10000 loops=5)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.009..1.881 rows=10000 loops=5)
                                             ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.01 rows=1 width=12) (actual time=0.088..0.088 rows=0 loops=39694)
                                                   Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                   Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Rows Removed by Filter: 1
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=69.803..69.805 rows=29952 loops=5)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.039..65.238 rows=29952 loops=5)
                                                   Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.014..45.479 rows=150000 loops=5)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.020..0.021 rows=5 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.015..0.020 rows=5 loops=5)
                                                               Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=5)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=5)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.021..0.021 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.013..0.016 rows=25 loops=5)
 Planning time: 37.465 ms
 Execution time: 893.774 ms
(52 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=54420.45..54420.62 rows=1 width=40) (actual time=106.161..106.962 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=54420.45..54817.09 rows=2406 width=40) (actual time=106.160..106.960 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=54420.45..54732.85 rows=2408 width=72) (actual time=105.942..106.945 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=53420.40..53445.98 rows=602 width=72) (actual time=97.368..97.499 rows=2 loops=5)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=53420.40..53421.90 rows=602 width=46) (actual time=97.234..97.260 rows=497 loops=5)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 83kB
                           ->  Hash Join  (cost=6787.98..53392.60 rows=602 width=46) (actual time=49.643..97.038 rows=497 loops=5)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Hash Join  (cost=6786.41..53386.18 rows=602 width=20) (actual time=49.601..96.679 rows=497 loops=5)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Nested Loop  (cost=449.41..47031.86 rows=3011 width=24) (actual time=4.273..50.726 rows=2419 loops=5)
                                             ->  Hash Join  (cost=448.98..7023.05 rows=9965 width=20) (actual time=2.623..14.452 rows=7939 loops=5)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.98..6548.79 rows=9999 width=20) (actual time=0.041..9.906 rows=7939 loops=5)
                                                         ->  Parallel Index Only Scan using q2_idx_1 on part  (cost=0.42..5425.75 rows=333 width=4) (actual time=0.023..5.622 rows=264 loops=5)
                                                               Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.06 rows=31 width=24) (actual time=0.005..0.013 rows=30 loops=1320)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.568..2.568 rows=10000 loops=5)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.008..1.429 rows=10000 loops=5)
                                             ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.01 rows=1 width=12) (actual time=0.004..0.004 rows=0 loops=39694)
                                                   Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                   Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Rows Removed by Filter: 1
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=45.224..45.226 rows=29952 loops=5)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.047..40.870 rows=29952 loops=5)
                                                   Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.022..13.512 rows=150000 loops=5)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.020..0.021 rows=5 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.014..0.019 rows=5 loops=5)
                                                               Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=5)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=5)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.018..0.018 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.014 rows=25 loops=5)
 Planning time: 4.120 ms
 Execution time: 107.272 ms
(52 rows)

query 9 run 1
SET
SET
SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=129941.27..129941.73 rows=1 width=66) (actual time=1640.349..1649.869 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=129941.27..157392.34 rows=60150 width=66) (actual time=1640.348..1649.868 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=129941.27..154535.21 rows=180450 width=66) (actual time=1639.837..1649.856 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=128941.23..132332.30 rows=60150 width=66) (actual time=1629.167..1631.157 rows=6 loops=4)
                     Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=128941.23..129233.54 rows=116922 width=57) (actual time=1628.898..1629.165 rows=2685 loops=4)
                           Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                           Sort Method: quicksort  Memory: 14372kB
                           ->  Hash Join  (cost=66192.75..119099.21 rows=116922 width=57) (actual time=677.332..1555.341 rows=81482 loops=4)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Hash Join  (cost=66191.18..118154.09 rows=116922 width=31) (actual time=676.364..1527.133 rows=81482 loops=4)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Hash Join  (cost=450.18..44646.17 rows=116922 width=31) (actual time=5.868..664.565 rows=81482 loops=4)
                                             Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                             ->  Merge Join  (cost=2.18..43890.07 rows=117319 width=35) (actual time=2.378..641.617 rows=81482 loops=4)
                                                   Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                                   Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                                   Rows Removed by Join Filter: 122101
                                                   ->  Nested Loop  (cost=0.98..17528.81 rows=117319 width=33) (actual time=2.029..477.845 rows=81482 loops=4)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4760.87 rows=3910 width=4) (actual time=0.219..15.399 rows=2720 loops=4)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 47280
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.96 rows=31 width=29) (actual time=0.141..0.166 rows=30 loops=10880)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..18168.42 rows=800000 width=14) (actual time=0.174..97.769 rows=913284 loops=4)
                                                         Heap Fetches: 0
                                             ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.470..3.470 rows=10000 loops=4)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.016..2.192 rows=10000 loops=4)
                                       ->  Hash  (cost=41131.00..41131.00 rows=1500000 width=8) (actual time=668.663..668.663 rows=1500000 loops=4)
                                             Buckets: 1048576  Batches: 4  Memory Usage: 22817kB
                                             ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.023..440.457 rows=1500000 loops=4)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.021..0.021 rows=25 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.013..0.016 rows=25 loops=4)
 Planning time: 40.889 ms
 Execution time: 1650.806 ms
(42 rows)

SET
SET
SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=129941.27..129941.73 rows=1 width=66) (actual time=935.869..946.687 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=129941.27..157392.34 rows=60150 width=66) (actual time=935.868..946.686 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=129941.27..154535.21 rows=180450 width=66) (actual time=935.474..946.678 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=128941.23..132332.30 rows=60150 width=66) (actual time=931.578..933.023 rows=4 loops=4)
                     Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=128941.23..129233.54 rows=116922 width=57) (actual time=931.328..931.491 rows=2102 loops=4)
                           Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                           Sort Method: quicksort  Memory: 14474kB
                           ->  Hash Join  (cost=66192.75..119099.21 rows=116922 width=57) (actual time=427.233..857.362 rows=81482 loops=4)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Hash Join  (cost=66191.18..118154.09 rows=116922 width=31) (actual time=427.172..831.337 rows=81482 loops=4)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Hash Join  (cost=450.18..44646.17 rows=116922 width=31) (actual time=2.915..217.218 rows=81482 loops=4)
                                             Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                             ->  Merge Join  (cost=2.18..43890.07 rows=117319 width=35) (actual time=0.207..196.200 rows=81482 loops=4)
                                                   Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                                   Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                                   Rows Removed by Join Filter: 122101
                                                   ->  Nested Loop  (cost=0.98..17528.81 rows=117319 width=33) (actual time=0.067..52.251 rows=81482 loops=4)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4760.87 rows=3910 width=4) (actual time=0.045..10.527 rows=2720 loops=4)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 47280
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.96 rows=31 width=29) (actual time=0.005..0.012 rows=30 loops=10880)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..18168.42 rows=800000 width=14) (actual time=0.017..81.977 rows=913429 loops=4)
                                                         Heap Fetches: 0
                                             ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.688..2.688 rows=10000 loops=4)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.016..1.494 rows=10000 loops=4)
                                       ->  Hash  (cost=41131.00..41131.00 rows=1500000 width=8) (actual time=421.390..421.390 rows=1500000 loops=4)
                                             Buckets: 1048576  Batches: 4  Memory Usage: 22817kB
                                             ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.024..200.596 rows=1500000 loops=4)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.032..0.032 rows=25 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.023..0.027 rows=25 loops=4)
 Planning time: 5.789 ms
 Execution time: 946.840 ms
(42 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83637.28..83637.33 rows=20 width=202) (actual time=762.975..763.588 rows=20 loops=1)
   ->  Sort  (cost=83637.28..83766.53 rows=51700 width=202) (actual time=762.974..763.585 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=81615.31..82261.56 rows=51700 width=202) (actual time=732.762..753.313 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=8798.53..80969.06 rows=51700 width=182) (actual time=121.315..646.171 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=7798.53..74799.06 rows=16677 width=182) (actual time=114.359..681.787 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=7796.97..74746.30 rows=16677 width=160) (actual time=114.275..673.961 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=824.97..67730.52 rows=16677 width=16) (actual time=7.720..554.573 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=824.41..27208.43 rows=16868 width=8) (actual time=6.657..298.078 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=4201
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..811.34 rows=52291 width=0) (actual time=9.996..9.996 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..2.39 rows=1 width=16) (actual time=0.017..0.017 rows=2 loops=57111)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=105.064..105.064 rows=150000 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.058..60.808 rows=150000 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.018..0.019 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.014 rows=25 loops=4)
 Planning time: 30.298 ms
 Execution time: 764.487 ms
(30 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83637.28..83637.33 rows=20 width=202) (actual time=234.464..235.076 rows=20 loops=1)
   ->  Sort  (cost=83637.28..83766.53 rows=51700 width=202) (actual time=234.463..235.074 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=81615.31..82261.56 rows=51700 width=202) (actual time=203.080..224.146 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=8798.53..80969.06 rows=51700 width=182) (actual time=80.939..132.182 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=7798.53..74799.06 rows=16677 width=182) (actual time=78.459..164.121 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=7796.97..74746.30 rows=16677 width=160) (actual time=78.373..158.011 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=824.97..67730.52 rows=16677 width=16) (actual time=7.916..77.850 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=824.41..27208.43 rows=16868 width=8) (actual time=7.853..21.797 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=981
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..811.34 rows=52291 width=0) (actual time=6.648..6.648 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..2.39 rows=1 width=16) (actual time=0.003..0.003 rows=2 loops=57111)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=69.391..69.391 rows=150000 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.041..25.469 rows=150000 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.020..0.021 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.012..0.016 rows=25 loops=4)
 Planning time: 1.913 ms
 Execution time: 235.270 ms
(30 rows)

query 11 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18803.41..18803.41 rows=1 width=36) (actual time=486.614..486.744 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Finalize Aggregate  (cost=7251.81..7251.82 rows=1 width=32) (actual time=17.513..17.605 rows=1 loops=1)
           ->  Gather  (cost=7251.59..7251.80 rows=2 width=32) (actual time=17.504..17.599 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=6251.59..6251.60 rows=1 width=32) (actual time=14.834..14.835 rows=1 loops=3)
                       ->  Nested Loop  (cost=2.16..6151.59 rows=13333 width=10) (actual time=0.089..11.709 rows=10960 loops=3)
                             ->  Hash Join  (cost=1.74..496.20 rows=167 width=4) (actual time=0.070..1.051 rows=137 loops=3)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.41..482.08 rows=4167 width=8) (actual time=0.020..0.774 rows=3333 loops=3)
                                         Heap Fetches: 0
                                   ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=3)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..33.06 rows=80 width=14) (actual time=0.005..0.068 rows=80 loops=411)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11551.59..11631.59 rows=32000 width=36) (actual time=486.613..486.650 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=10911.59..11391.59 rows=32000 width=36) (actual time=475.231..486.500 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Gather  (cost=1002.16..10351.59 rows=32000 width=14) (actual time=0.923..434.420 rows=32880 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=2.16..6151.59 rows=13333 width=14) (actual time=0.564..438.302 rows=10960 loops=3)
                           ->  Hash Join  (cost=1.74..496.20 rows=167 width=4) (actual time=0.287..1.979 rows=137 loops=3)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Index Only Scan using q2_idx_3 on supplier  (cost=0.41..482.08 rows=4167 width=8) (actual time=0.211..1.551 rows=3333 loops=3)
                                       Heap Fetches: 0
                                 ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=3)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 24
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..33.06 rows=80 width=18) (actual time=0.136..3.164 rows=80 loops=411)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 18.104 ms
 Execution time: 487.396 ms
(43 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18803.41..18803.41 rows=1 width=36) (actual time=55.748..55.880 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Finalize Aggregate  (cost=7251.81..7251.82 rows=1 width=32) (actual time=18.120..18.213 rows=1 loops=1)
           ->  Gather  (cost=7251.59..7251.80 rows=2 width=32) (actual time=17.932..18.205 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=6251.59..6251.60 rows=1 width=32) (actual time=15.605..15.606 rows=1 loops=3)
                       ->  Nested Loop  (cost=2.16..6151.59 rows=13333 width=10) (actual time=0.090..12.461 rows=10960 loops=3)
                             ->  Hash Join  (cost=1.74..496.20 rows=167 width=4) (actual time=0.073..1.052 rows=137 loops=3)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.41..482.08 rows=4167 width=8) (actual time=0.020..0.774 rows=3333 loops=3)
                                         Heap Fetches: 0
                                   ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=3)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=3)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..33.06 rows=80 width=14) (actual time=0.005..0.073 rows=80 loops=411)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11551.59..11631.59 rows=32000 width=36) (actual time=55.747..55.784 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=10911.59..11391.59 rows=32000 width=36) (actual time=44.508..55.641 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Gather  (cost=1002.16..10351.59 rows=32000 width=14) (actual time=0.297..9.110 rows=32880 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=2.16..6151.59 rows=13333 width=14) (actual time=0.109..12.137 rows=10960 loops=3)
                           ->  Hash Join  (cost=1.74..496.20 rows=167 width=4) (actual time=0.093..1.046 rows=137 loops=3)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Index Only Scan using q2_idx_3 on supplier  (cost=0.41..482.08 rows=4167 width=8) (actual time=0.024..0.752 rows=3333 loops=3)
                                       Heap Fetches: 0
                                 ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=3)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 24
                           ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..33.06 rows=80 width=18) (actual time=0.005..0.071 rows=80 loops=411)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 1.080 ms
 Execution time: 56.234 ms
(43 rows)

query 12 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=43450.24..43450.29 rows=1 width=27) (actual time=314.176..317.423 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=43450.24..43450.59 rows=7 width=27) (actual time=314.175..317.421 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=43450.24..43450.31 rows=28 width=27) (actual time=314.171..317.417 rows=6 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 25kB
               ->  Gather  (cost=43446.70..43449.57 rows=28 width=27) (actual time=310.810..317.385 rows=10 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=42446.70..42446.77 rows=7 width=27) (actual time=303.033..303.035 rows=2 loops=5)
                           Group Key: lineitem.l_shipmode
                           ->  Nested Loop  (cost=0.85..42320.52 rows=7210 width=27) (actual time=0.300..297.860 rows=6191 loops=5)
                                 ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..13477.46 rows=7210 width=15) (actual time=0.246..47.119 rows=6191 loops=5)
                                       Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                       Rows Removed by Filter: 15496
                                       Heap Fetches: 0
                                 ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=20) (actual time=0.040..0.040 rows=1 loops=30953)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 27.801 ms
 Execution time: 317.499 ms
(21 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=43450.24..43450.29 rows=1 width=27) (actual time=54.142..57.668 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=43450.24..43450.59 rows=7 width=27) (actual time=54.141..57.667 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=43450.24..43450.31 rows=28 width=27) (actual time=54.136..57.662 rows=6 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 25kB
               ->  Gather  (cost=43446.70..43449.57 rows=28 width=27) (actual time=49.919..57.416 rows=10 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=42446.70..42446.77 rows=7 width=27) (actual time=47.336..47.337 rows=2 loops=5)
                           Group Key: lineitem.l_shipmode
                           ->  Nested Loop  (cost=0.85..42320.52 rows=7210 width=27) (actual time=0.055..44.550 rows=6191 loops=5)
                                 ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..13477.46 rows=7210 width=15) (actual time=0.034..24.565 rows=6191 loops=5)
                                       Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                       Rows Removed by Filter: 15496
                                       Heap Fetches: 0
                                 ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=30953)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 1.497 ms
 Execution time: 57.784 ms
(21 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64909.57..64909.57 rows=1 width=16) (actual time=1453.708..1453.710 rows=1 loops=1)
   ->  Sort  (cost=64909.57..64910.07 rows=200 width=16) (actual time=1453.707..1453.708 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64906.57..64908.57 rows=200 width=16) (actual time=1453.681..1453.688 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=61156.57..62656.57 rows=150000 width=12) (actual time=1412.209..1435.591 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4953.42..53732.28 rows=1484857 width=8) (actual time=34.207..1054.420 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484857 width=8) (actual time=0.452..630.132 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=33.447..33.448 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.582..16.744 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 16.614 ms
 Execution time: 1455.492 ms
(19 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64909.57..64909.57 rows=1 width=16) (actual time=1248.080..1248.082 rows=1 loops=1)
   ->  Sort  (cost=64909.57..64910.07 rows=200 width=16) (actual time=1248.079..1248.081 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64906.57..64908.57 rows=200 width=16) (actual time=1248.054..1248.060 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=61156.57..62656.57 rows=150000 width=12) (actual time=1206.493..1230.459 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4953.42..53732.28 rows=1484857 width=8) (actual time=28.449..868.530 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484857 width=8) (actual time=0.010..472.862 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=28.062..28.062 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.037..13.010 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 0.656 ms
 Execution time: 1249.221 ms
(19 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=82880.05..82880.07 rows=1 width=32) (actual time=604.666..607.466 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=82880.05..82880.07 rows=1 width=32) (actual time=604.665..607.464 rows=1 loops=1)
         ->  Gather  (cost=82879.60..82880.01 rows=4 width=64) (actual time=601.257..607.442 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=81879.60..81879.61 rows=1 width=64) (actual time=594.897..594.898 rows=1 loops=5)
                     ->  Hash Join  (cost=9899.49..81562.86 rows=18099 width=33) (actual time=118.762..579.029 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1300.49..72916.35 rows=18099 width=16) (actual time=18.332..467.227 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8093
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1282.39 rows=72396 width=0) (actual time=17.105..17.105 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=99.439..99.440 rows=200000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                                 ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.046..60.924 rows=200000 loops=5)
 Planning time: 23.767 ms
 Execution time: 608.452 ms
(18 rows)

SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=82880.05..82880.07 rows=1 width=32) (actual time=166.068..167.028 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=82880.05..82880.07 rows=1 width=32) (actual time=166.067..167.026 rows=1 loops=1)
         ->  Gather  (cost=82879.60..82880.01 rows=4 width=64) (actual time=159.949..166.765 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=81879.60..81879.61 rows=1 width=64) (actual time=156.750..156.751 rows=1 loops=5)
                     ->  Hash Join  (cost=9899.49..81562.86 rows=18099 width=33) (actual time=94.470..146.361 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1300.49..72916.35 rows=18099 width=16) (actual time=15.329..58.725 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=10281
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1282.39 rows=72396 width=0) (actual time=10.689..10.690 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=77.832..77.833 rows=200000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                                 ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.039..37.215 rows=200000 loops=5)
 Planning time: 1.089 ms
 Execution time: 167.311 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=243981.39..243981.45 rows=1 width=103) (actual time=1472.668..1472.671 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=120848.37..120848.38 rows=1 width=32) (actual time=205.896..205.897 rows=1 loops=1)
           ->  HashAggregate  (cost=120597.52..120722.94 rows=10034 width=36) (actual time=202.654..205.207 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3872.97..118440.90 rows=215662 width=16) (actual time=27.245..91.530 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3819.05 rows=215662 width=0) (actual time=18.181..18.182 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=123133.01..123742.52 rows=10034 width=103) (actual time=1472.667..1472.668 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..434.29 rows=10000 width=71) (actual time=0.281..5.940 rows=8449 loops=1)
         ->  Sort  (cost=123132.72..123157.81 rows=10034 width=36) (actual time=1466.246..1466.247 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=122214.98..122465.83 rows=10034 width=36) (actual time=1463.824..1466.240 rows=1 loops=1)
                     ->  HashAggregate  (cost=122214.98..122365.49 rows=10034 width=36) (actual time=1463.823..1466.239 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3872.97..118440.90 rows=215662 width=16) (actual time=40.423..1075.955 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3819.05 rows=215662 width=0) (actual time=30.685..30.685 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 18.421 ms
 Execution time: 1473.712 ms
(28 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=243981.39..243981.45 rows=1 width=103) (actual time=443.002..443.005 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=120848.37..120848.38 rows=1 width=32) (actual time=204.622..204.623 rows=1 loops=1)
           ->  HashAggregate  (cost=120597.52..120722.94 rows=10034 width=36) (actual time=201.387..203.932 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3872.97..118440.90 rows=215662 width=16) (actual time=27.110..91.586 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3819.05 rows=215662 width=0) (actual time=18.151..18.152 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=123133.01..123742.52 rows=10034 width=103) (actual time=443.001..443.002 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..434.29 rows=10000 width=71) (actual time=0.010..1.310 rows=8449 loops=1)
         ->  Sort  (cost=123132.72..123157.81 rows=10034 width=36) (actual time=441.216..441.217 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=122214.98..122465.83 rows=10034 width=36) (actual time=438.777..441.212 rows=1 loops=1)
                     ->  HashAggregate  (cost=122214.98..122365.49 rows=10034 width=36) (actual time=438.776..441.210 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3872.97..118440.90 rows=215662 width=16) (actual time=28.198..119.635 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3819.05 rows=215662 width=0) (actual time=19.123..19.123 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 1.113 ms
 Execution time: 443.342 ms
(28 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=33725.93..33725.94 rows=1 width=44) (actual time=489.802..489.910 rows=1 loops=1)
   ->  Sort  (cost=33725.93..33766.08 rows=16060 width=44) (actual time=489.801..489.909 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=32735.26..33645.63 rows=16060 width=44) (actual time=436.052..486.606 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=32735.26..32885.21 rows=59982 width=40) (actual time=436.027..444.181 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Gather  (cost=10822.32..27975.02 rows=59982 width=40) (actual time=99.126..171.810 rows=117930 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Hash Join  (cost=9822.32..20976.82 rows=14996 width=40) (actual time=92.689..165.316 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..11240.43 rows=100000 width=8) (actual time=3.840..58.584 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.300..2.868 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Hash  (cost=9099.00..9099.00 rows=29991 width=40) (actual time=88.624..88.625 rows=29492 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                       ->  Seq Scan on part  (cost=0.00..9099.00 rows=29991 width=40) (actual time=0.025..82.176 rows=29492 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 170508
 Planning time: 16.556 ms
 Execution time: 490.696 ms
(29 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=33725.93..33725.94 rows=1 width=44) (actual time=447.883..448.004 rows=1 loops=1)
   ->  Sort  (cost=33725.93..33766.08 rows=16060 width=44) (actual time=447.882..448.002 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=32735.26..33645.63 rows=16060 width=44) (actual time=394.756..444.696 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=32735.26..32885.21 rows=59982 width=40) (actual time=394.733..402.736 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Gather  (cost=10822.32..27975.02 rows=59982 width=40) (actual time=54.856..129.215 rows=117930 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Hash Join  (cost=9822.32..20976.82 rows=14996 width=40) (actual time=71.085..124.951 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..11240.43 rows=100000 width=8) (actual time=2.134..33.949 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.081..2.102 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Hash  (cost=9099.00..9099.00 rows=29991 width=40) (actual time=68.775..68.776 rows=29492 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                       ->  Seq Scan on part  (cost=0.00..9099.00 rows=29991 width=40) (actual time=0.021..62.019 rows=29492 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 170508
 Planning time: 1.071 ms
 Execution time: 448.115 ms
(29 rows)

query 17 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=178223.08..178223.10 rows=1 width=32) (actual time=2687.286..2693.087 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=178223.08..178223.10 rows=1 width=32) (actual time=2687.285..2693.086 rows=1 loops=1)
         ->  Gather  (cost=178222.86..178223.07 rows=2 width=32) (actual time=2683.832..2693.078 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=177222.86..177222.87 rows=1 width=32) (actual time=2664.967..2664.969 rows=1 loops=3)
                     ->  Nested Loop  (cost=5352.79..177220.73 rows=852 width=8) (actual time=332.202..2664.873 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=5352.24..176975.87 rows=85 width=40) (actual time=331.808..2625.288 rows=69 loops=3)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=5351.80..5352.02 rows=87 width=4) (actual time=22.987..23.022 rows=69 loops=3)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 30kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=87 width=4) (actual time=0.330..22.938 rows=69 loops=3)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 66597
                                 ->  GroupAggregate  (cost=0.43..169176.13 rows=195732 width=36) (actual time=1.105..2586.227 rows=198194 loops=3)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136235.22 rows=6000986 width=9) (actual time=1.053..1652.756 rows=5946975 loops=3)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.76 rows=10 width=17) (actual time=0.530..0.568 rows=3 loops=208)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning time: 22.653 ms
 Execution time: 2693.811 ms
(25 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=178223.08..178223.10 rows=1 width=32) (actual time=2398.439..2403.502 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=178223.08..178223.10 rows=1 width=32) (actual time=2398.438..2403.500 rows=1 loops=1)
         ->  Gather  (cost=178222.86..178223.07 rows=2 width=32) (actual time=2393.516..2403.488 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=177222.86..177222.87 rows=1 width=32) (actual time=2393.089..2393.090 rows=1 loops=3)
                     ->  Nested Loop  (cost=5352.79..177220.73 rows=852 width=8) (actual time=179.396..2393.047 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=5352.24..176975.87 rows=85 width=40) (actual time=179.383..2392.337 rows=69 loops=3)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=5351.80..5352.02 rows=87 width=4) (actual time=10.238..10.257 rows=69 loops=3)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 28kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=87 width=4) (actual time=0.062..10.211 rows=69 loops=3)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 66597
                                 ->  GroupAggregate  (cost=0.43..169176.13 rows=195732 width=36) (actual time=0.067..2367.344 rows=198926 loops=3)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136235.22 rows=6000986 width=9) (actual time=0.037..1457.032 rows=5968847 loops=3)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.76 rows=10 width=17) (actual time=0.008..0.009 rows=3 loops=208)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning time: 1.314 ms
 Execution time: 2403.567 ms
(25 rows)

query 18 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1689129.98..1689130.23 rows=100 width=71) (actual time=2856.114..2856.118 rows=9 loops=1)
   ->  Sort  (cost=1689129.98..1704134.90 rows=6001970 width=71) (actual time=2856.113..2856.116 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=1324694.67..1459739.00 rows=6001970 width=71) (actual time=2856.082..2856.098 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=1324694.67..1339699.60 rows=6001970 width=44) (actual time=2856.076..2856.080 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=6987.26..517082.74 rows=6001970 width=44) (actual time=713.643..2856.048 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=15.26..494355.13 rows=6001970 width=25) (actual time=645.129..2787.504 rows=63 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Join  (cost=0.86..279363.19 rows=1500246 width=24) (actual time=493.766..2209.947 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.297..310.202 rows=1201687 loops=1)
                                       ->  GroupAggregate  (cost=0.43..184993.23 rows=1500246 width=4) (actual time=389.620..1832.126 rows=9 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 1499991
                                             ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136235.22 rows=6000986 width=9) (actual time=0.655..664.466 rows=6001215 loops=1)
                                                   Heap Fetches: 0
                                 ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136235.22 rows=6000986 width=9) (actual time=0.013..378.664 rows=4807580 loops=1)
                                       Heap Fetches: 0
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=68.189..68.189 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.009..43.723 rows=150000 loops=1)
 Planning time: 26.478 ms
 Execution time: 2856.669 ms
(29 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1689129.98..1689130.23 rows=100 width=71) (actual time=2485.825..2485.828 rows=9 loops=1)
   ->  Sort  (cost=1689129.98..1704134.90 rows=6001970 width=71) (actual time=2485.824..2485.826 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=1324694.67..1459739.00 rows=6001970 width=71) (actual time=2485.794..2485.810 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=1324694.67..1339699.60 rows=6001970 width=44) (actual time=2485.789..2485.793 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=6987.26..517082.74 rows=6001970 width=44) (actual time=598.397..2485.764 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=15.26..494355.13 rows=6001970 width=25) (actual time=557.323..2444.661 rows=63 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Join  (cost=0.86..279363.19 rows=1500246 width=24) (actual time=406.570..1870.596 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.006..164.369 rows=1201687 loops=1)
                                       ->  GroupAggregate  (cost=0.43..184993.23 rows=1500246 width=4) (actual time=345.410..1640.018 rows=9 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 1499991
                                             ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136235.22 rows=6000986 width=9) (actual time=0.024..491.366 rows=6001215 loops=1)
                                                   Heap Fetches: 0
                                 ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136235.22 rows=6000986 width=9) (actual time=0.011..377.335 rows=4807580 loops=1)
                                       Heap Fetches: 0
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=40.746..40.747 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.009..19.067 rows=150000 loops=1)
 Planning time: 2.058 ms
 Execution time: 2485.912 ms
(29 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=9338.84..9338.85 rows=1 width=32) (actual time=132.599..133.989 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=9338.84..9338.85 rows=1 width=32) (actual time=132.598..133.987 rows=1 loops=1)
         ->  Gather  (cost=9338.62..9338.83 rows=2 width=32) (actual time=132.543..133.979 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=8338.62..8338.63 rows=1 width=32) (actual time=126.598..126.599 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.56..8338.25 rows=49 width=12) (actual time=1.757..126.500 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=202 width=30) (actual time=0.346..32.335 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.44 rows=1 width=21) (actual time=0.536..0.556 rows=0 loops=507)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning time: 25.945 ms
 Execution time: 134.569 ms
(17 rows)

SET
SET
SET


 Limit  (cost=9338.84..9338.85 rows=1 width=32) (actual time=20.379..22.214 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=9338.84..9338.85 rows=1 width=32) (actual time=20.378..22.213 rows=1 loops=1)
         ->  Gather  (cost=9338.62..9338.83 rows=2 width=32) (actual time=20.318..22.206 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=8338.62..8338.63 rows=1 width=32) (actual time=17.971..17.972 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.56..8338.25 rows=49 width=12) (actual time=0.197..17.923 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=202 width=30) (actual time=0.105..15.851 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.44 rows=1 width=21) (actual time=0.011..0.012 rows=0 loops=507)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning time: 3.360 ms
 Execution time: 22.270 ms
(17 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=273675.65..273675.65 rows=1 width=51) (actual time=3430.517..3430.520 rows=1 loops=1)
   ->  Sort  (cost=273675.65..273675.65 rows=1 width=51) (actual time=3430.516..3430.518 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=240173.36..273675.64 rows=1 width=51) (actual time=3259.446..3430.307 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.289..3.619 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.279..2.826 rows=10000 loops=1)
               ->  Materialize  (cost=240173.36..273220.33 rows=1 width=8) (actual time=6.234..7.583 rows=4371 loops=438)
                     ->  Merge Join  (cost=240173.36..273220.32 rows=1 width=8) (actual time=2730.418..3256.672 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=240172.51..256218.96 rows=478757 width=40) (actual time=2729.501..3166.942 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=240172.51..242388.79 rows=886509 width=13) (actual time=2729.488..2823.045 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=15915.15..141772.78 rows=886509 width=13) (actual time=126.817..2287.594 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..15693.52 rows=886509 width=0) (actual time=109.826..109.827 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.84..10599.32 rows=8080 width=16) (actual time=0.593..60.924 rows=23762 loops=1)
                                 ->  Nested Loop  (cost=0.84..10579.12 rows=8080 width=16) (actual time=0.589..58.758 rows=8748 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6454.42 rows=2020 width=4) (actual time=0.337..29.179 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..2.00 rows=4 width=12) (actual time=0.012..0.013 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning time: 28.723 ms
 Execution time: 3434.058 ms
(40 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=273675.65..273675.65 rows=1 width=51) (actual time=1357.245..1357.247 rows=1 loops=1)
   ->  Sort  (cost=273675.65..273675.65 rows=1 width=51) (actual time=1357.244..1357.246 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=240173.36..273675.64 rows=1 width=51) (actual time=1188.159..1357.090 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.015..1.642 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.002..0.569 rows=10000 loops=1)
               ->  Materialize  (cost=240173.36..273220.33 rows=1 width=8) (actual time=1.589..2.855 rows=4371 loops=438)
                     ->  Merge Join  (cost=240173.36..273220.32 rows=1 width=8) (actual time=695.825..1185.790 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=240172.51..256218.96 rows=478757 width=40) (actual time=695.461..1130.224 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=240172.51..242388.79 rows=886509 width=13) (actual time=695.449..789.204 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=15915.15..141772.78 rows=886509 width=13) (actual time=89.611..326.984 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..15693.52 rows=886509 width=0) (actual time=73.404..73.404 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.84..10599.32 rows=8080 width=16) (actual time=0.073..27.167 rows=23762 loops=1)
                                 ->  Nested Loop  (cost=0.84..10579.12 rows=8080 width=16) (actual time=0.071..25.226 rows=8748 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6454.42 rows=2020 width=4) (actual time=0.046..18.325 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..2.00 rows=4 width=12) (actual time=0.002..0.003 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning time: 2.465 ms
 Execution time: 1359.975 ms
(40 rows)

query 21 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=78493.88..78493.88 rows=1 width=34) (actual time=560.329..560.433 rows=100 loops=1)
   ->  Sort  (cost=78493.88..78493.88 rows=1 width=34) (actual time=560.328..560.426 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=78493.85..78493.87 rows=1 width=34) (actual time=559.268..560.015 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=78493.85..78493.85 rows=1 width=26) (actual time=559.260..559.516 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Anti Join  (cost=1241.17..78493.84 rows=1 width=26) (actual time=6.937..545.740 rows=4227 loops=1)
                           ->  Nested Loop  (cost=1240.74..78491.47 rows=1 width=34) (actual time=6.341..418.131 rows=73962 loops=1)
                                 ->  Gather  (cost=1240.32..78489.11 rows=1 width=38) (actual time=6.161..123.362 rows=153554 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Semi Join  (cost=240.32..77489.01 rows=1 width=38) (actual time=1.740..433.151 rows=30711 loops=5)
                                             ->  Hash Join  (cost=239.88..28291.01 rows=19936 width=34) (actual time=1.715..217.986 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..25976.90 rows=500082 width=8) (actual time=0.436..157.024 rows=758659 loops=5)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=234.45..234.45 rows=400 width=30) (actual time=1.211..1.212 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=7.38..234.45 rows=400 width=30) (actual time=0.162..1.147 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=7.38..229.14 rows=400 width=34) (actual time=0.145..1.070 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.124..0.124 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.43 rows=4 width=8) (actual time=0.006..0.006 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: (l_suppkey <> l1.l_suppkey)
                                                   Rows Removed by Filter: 0
                                                   Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=153554)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..2.36 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=73962)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning time: 27.311 ms
 Execution time: 561.041 ms
(45 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=78493.88..78493.88 rows=1 width=34) (actual time=408.670..408.772 rows=100 loops=1)
   ->  Sort  (cost=78493.88..78493.88 rows=1 width=34) (actual time=408.669..408.765 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=78493.85..78493.87 rows=1 width=34) (actual time=407.634..408.361 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=78493.85..78493.85 rows=1 width=26) (actual time=407.627..407.876 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Anti Join  (cost=1241.17..78493.84 rows=1 width=26) (actual time=1.172..394.969 rows=4227 loops=1)
                           ->  Nested Loop  (cost=1240.74..78491.47 rows=1 width=34) (actual time=0.865..279.216 rows=73962 loops=1)
                                 ->  Gather  (cost=1240.32..78489.11 rows=1 width=38) (actual time=0.851..41.163 rows=153554 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Semi Join  (cost=240.32..77489.01 rows=1 width=38) (actual time=0.478..203.850 rows=30711 loops=5)
                                             ->  Hash Join  (cost=239.88..28291.01 rows=19936 width=34) (actual time=0.467..138.536 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..25976.90 rows=500082 width=8) (actual time=0.023..77.320 rows=758659 loops=5)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=234.45..234.45 rows=400 width=30) (actual time=0.388..0.389 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=7.38..234.45 rows=400 width=30) (actual time=0.060..0.330 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=7.38..229.14 rows=400 width=34) (actual time=0.045..0.265 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.026..0.026 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.43 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: (l_suppkey <> l1.l_suppkey)
                                                   Rows Removed by Filter: 0
                                                   Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=153554)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..2.36 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=73962)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning time: 2.904 ms
 Execution time: 408.849 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14884.31..14884.34 rows=1 width=72) (actual time=174.478..174.555 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=44.361..44.437 rows=1 loops=1)
           ->  Gather  (cost=6242.60..6242.81 rows=2 width=32) (actual time=44.101..44.183 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.60..5242.61 rows=1 width=32) (actual time=37.416..37.417 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1989 width=6) (actual time=0.028..35.931 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=8641.48..8661.67 rows=734 width=72) (actual time=174.477..174.478 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8641.48..8643.32 rows=734 width=38) (actual time=174.284..174.319 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8606.55 rows=734 width=38) (actual time=44.410..172.131 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=44.384..99.516 rows=19077 loops=1)
                           Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.38 rows=17 width=4) (actual time=0.003..0.003 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 13.675 ms
 Execution time: 175.307 ms
(24 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14884.31..14884.34 rows=1 width=72) (actual time=116.529..116.629 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=28.421..28.520 rows=1 loops=1)
           ->  Gather  (cost=6242.60..6242.81 rows=2 width=32) (actual time=28.372..28.511 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.60..5242.61 rows=1 width=32) (actual time=26.532..26.533 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1989 width=6) (actual time=0.013..25.200 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=8641.48..8661.67 rows=734 width=72) (actual time=116.528..116.529 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8641.48..8643.32 rows=734 width=38) (actual time=116.336..116.371 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8606.55 rows=734 width=38) (actual time=28.456..114.333 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=28.442..78.822 rows=19077 loops=1)
                           Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.38 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 0.653 ms
 Execution time: 116.677 ms
(24 rows)

