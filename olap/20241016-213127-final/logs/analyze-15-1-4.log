query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184234.24..184234.88 rows=1 width=236) (actual time=2187.673..2187.748 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184234.24..184238.06 rows=6 width=236) (actual time=2187.672..2187.746 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184234.24..184237.12 rows=24 width=236) (actual time=2187.639..2187.718 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183234.19..183234.20 rows=6 width=236) (actual time=2179.885..2179.886 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=183233.97..183234.11 rows=6 width=236) (actual time=2179.857..2179.863 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 32kB
                           Worker 0:  Batches: 1  Memory Usage: 32kB
                           Worker 1:  Batches: 1  Memory Usage: 32kB
                           Worker 2:  Batches: 1  Memory Usage: 32kB
                           Worker 3:  Batches: 1  Memory Usage: 32kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131312.84 rows=1483461 width=25) (actual time=0.657..455.337 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 19.019 ms
 Execution Time: 2188.908 ms
(25 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184234.24..184234.88 rows=1 width=236) (actual time=2060.702..2060.774 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184234.24..184238.06 rows=6 width=236) (actual time=2060.701..2060.773 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184234.24..184237.12 rows=24 width=236) (actual time=2060.670..2060.746 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183234.19..183234.20 rows=6 width=236) (actual time=2056.052..2056.053 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=183233.97..183234.11 rows=6 width=236) (actual time=2056.024..2056.030 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 32kB
                           Worker 0:  Batches: 1  Memory Usage: 32kB
                           Worker 1:  Batches: 1  Memory Usage: 32kB
                           Worker 2:  Batches: 1  Memory Usage: 32kB
                           Worker 3:  Batches: 1  Memory Usage: 32kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131312.84 rows=1483461 width=25) (actual time=0.028..289.942 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 1.068 ms
 Execution Time: 2060.865 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=19453.77..19453.77 rows=1 width=192) (actual time=167.477..167.490 rows=100 loops=1)
   ->  Sort  (cost=19453.77..19453.77 rows=1 width=192) (actual time=167.476..167.483 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=14.58..19453.76 rows=1 width=192) (actual time=5.579..166.391 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.372..0.378 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.204..0.205 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.163..0.165 rows=25 loops=1)
               ->  Materialize  (cost=14.58..19451.06 rows=1 width=170) (actual time=0.396..33.110 rows=489 loops=5)
                     ->  Nested Loop  (cost=14.58..19451.06 rows=1 width=170) (actual time=1.974..164.885 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.30..19449.78 rows=1 width=34) (actual time=1.606..123.795 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5442.08 rows=893 width=30) (actual time=0.284..25.193 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.88..15.68 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.44..13.45 rows=1 width=32) (actual time=0.120..0.120 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.85..13.44 rows=1 width=6) (actual time=0.106..0.117 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..12.33 rows=4 width=10) (actual time=0.084..0.114 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.71..11.71 rows=4 width=10) (actual time=0.082..0.108 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.077..0.079 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..2.30 rows=1 width=8) (actual time=0.007..0.007 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.083..0.083 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 23.906 ms
 Execution Time: 167.556 ms
(47 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=19453.77..19453.77 rows=1 width=192) (actual time=23.135..23.149 rows=100 loops=1)
   ->  Sort  (cost=19453.77..19453.77 rows=1 width=192) (actual time=23.135..23.142 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=14.58..19453.76 rows=1 width=192) (actual time=0.161..22.826 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.009..0.014 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
               ->  Materialize  (cost=14.58..19451.06 rows=1 width=170) (actual time=0.012..4.497 rows=489 loops=5)
                     ->  Nested Loop  (cost=14.58..19451.06 rows=1 width=170) (actual time=0.059..22.113 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.30..19449.78 rows=1 width=34) (actual time=0.051..21.050 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5442.08 rows=893 width=30) (actual time=0.011..6.695 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.88..15.68 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.44..13.45 rows=1 width=32) (actual time=0.016..0.016 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.85..13.44 rows=1 width=6) (actual time=0.011..0.014 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..12.33 rows=4 width=10) (actual time=0.005..0.013 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.71..11.71 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.003..0.003 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..2.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.002..0.002 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 2.405 ms
 Execution Time: 23.204 ms
(47 rows)

query 3 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=232631.30..232631.33 rows=10 width=44) (actual time=1152.268..1153.690 rows=10 loops=1)
   ->  Sort  (cost=232631.30..233412.43 rows=312453 width=44) (actual time=1152.267..1153.688 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=179875.40..225879.30 rows=312453 width=44) (actual time=1127.743..1151.062 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179875.40..217286.85 rows=312453 width=24) (actual time=1127.730..1133.822 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=178875.34..179070.62 rows=78113 width=24) (actual time=1119.349..1119.614 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 607kB
                           Worker 0:  Sort Method: quicksort  Memory: 622kB
                           Worker 1:  Sort Method: quicksort  Memory: 619kB
                           Worker 2:  Sort Method: quicksort  Memory: 613kB
                           Worker 3:  Sort Method: quicksort  Memory: 590kB
                           ->  Parallel Hash Join  (cost=37898.64..172527.38 rows=78113 width=24) (actual time=253.910..1117.450 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131312.84 rows=817056 width=16) (actual time=0.510..792.438 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37320.39..37320.39 rows=46260 width=12) (actual time=251.989..251.992 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                       ->  Parallel Hash Join  (cost=4534.74..37320.39 rows=46260 width=12) (actual time=22.195..241.973 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=230951 width=16) (actual time=0.277..189.501 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12519 width=4) (actual time=21.850..21.851 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12519 width=4) (actual time=0.081..19.994 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 24.320 ms
 Execution Time: 1154.116 ms
(35 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=232631.30..232631.33 rows=10 width=44) (actual time=461.353..463.582 rows=10 loops=1)
   ->  Sort  (cost=232631.30..233412.43 rows=312453 width=44) (actual time=461.351..463.579 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=179875.40..225879.30 rows=312453 width=44) (actual time=436.128..460.929 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179875.40..217286.85 rows=312453 width=24) (actual time=436.113..443.545 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=178875.34..179070.62 rows=78113 width=24) (actual time=431.280..431.549 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 560kB
                           Worker 0:  Sort Method: quicksort  Memory: 649kB
                           Worker 1:  Sort Method: quicksort  Memory: 612kB
                           Worker 2:  Sort Method: quicksort  Memory: 704kB
                           Worker 3:  Sort Method: quicksort  Memory: 526kB
                           ->  Parallel Hash Join  (cost=37898.64..172527.38 rows=78113 width=24) (actual time=98.683..429.411 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131312.84 rows=817056 width=16) (actual time=0.047..250.134 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37320.39..37320.39 rows=46260 width=12) (actual time=97.677..97.680 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8960kB
                                       ->  Parallel Hash Join  (cost=4534.74..37320.39 rows=46260 width=12) (actual time=9.714..85.615 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=230951 width=16) (actual time=0.013..48.778 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12519 width=4) (actual time=9.204..9.205 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12519 width=4) (actual time=0.010..7.147 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 1.682 ms
 Execution Time: 463.654 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29392.84..53293.31 rows=1 width=24) (actual time=880.283..883.678 rows=1 loops=1)
   ->  GroupAggregate  (cost=29392.84..148895.16 rows=5 width=24) (actual time=880.282..883.676 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29392.84..148610.55 rows=56913 width=16) (actual time=425.091..879.774 rows=10479 loops=1)
               ->  Gather Merge  (cost=29392.41..36125.59 rows=56913 width=20) (actual time=424.541..433.849 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28392.37..28438.27 rows=18359 width=20) (actual time=418.047..418.443 rows=3780 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1259kB
                           Worker 0:  Sort Method: quicksort  Memory: 1244kB
                           Worker 1:  Sort Method: quicksort  Memory: 1265kB
                           Worker 2:  Sort Method: quicksort  Memory: 1268kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=685.79..27092.17 rows=18359 width=20) (actual time=5.214..411.985 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5833
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..671.56 rows=56913 width=0) (actual time=7.202..7.202 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.43..2.22 rows=1 width=4) (actual time=0.039..0.039 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Heap Fetches: 0
 Planning Time: 20.997 ms
 Execution Time: 884.864 ms
(23 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29392.84..53293.31 rows=1 width=24) (actual time=64.342..69.927 rows=1 loops=1)
   ->  GroupAggregate  (cost=29392.84..148895.16 rows=5 width=24) (actual time=64.341..69.925 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29392.84..148610.55 rows=56913 width=16) (actual time=33.868..68.492 rows=10479 loops=1)
               ->  Gather Merge  (cost=29392.41..36125.59 rows=56913 width=20) (actual time=33.813..42.364 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28392.37..28438.27 rows=18359 width=20) (actual time=30.550..30.824 rows=3797 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1281kB
                           Worker 0:  Sort Method: quicksort  Memory: 1248kB
                           Worker 1:  Sort Method: quicksort  Memory: 1249kB
                           Worker 2:  Sort Method: quicksort  Memory: 1258kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=685.79..27092.17 rows=18359 width=20) (actual time=5.912..26.825 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5943
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..671.56 rows=56913 width=0) (actual time=5.385..5.386 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.43..2.22 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Heap Fetches: 0
 Planning Time: 1.971 ms
 Execution Time: 70.014 ms
(23 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=70789.20..70789.20 rows=1 width=58) (actual time=771.397..778.357 rows=1 loops=1)
   ->  Sort  (cost=70789.20..70789.26 rows=25 width=58) (actual time=771.395..778.355 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=70750.36..70789.08 rows=25 width=58) (actual time=770.803..778.343 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=70750.36..70788.20 rows=75 width=58) (actual time=770.592..778.323 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=69750.32..69779.35 rows=25 width=58) (actual time=761.965..762.732 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=69750.32..69756.07 rows=2297 width=38) (actual time=761.761..761.844 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 192kB
                                 Worker 0:  Sort Method: quicksort  Memory: 199kB
                                 Worker 1:  Sort Method: quicksort  Memory: 198kB
                                 Worker 2:  Sort Method: quicksort  Memory: 195kB
                                 ->  Hash Join  (cost=7897.38..69622.09 rows=2297 width=38) (actual time=47.837..760.185 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7424.38..68846.70 rows=57598 width=50) (actual time=43.978..745.230 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7423.95..34964.70 rows=14397 width=38) (actual time=43.217..538.832 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2683.82..29894.62 rows=71987 width=8) (actual time=19.618..491.774 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6474
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2628.03 rows=223160 width=0) (actual time=15.671..15.671 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=23.385..23.388 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.210..21.068 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.098..16.344 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.106..0.107 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.098..0.105 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.046..0.048 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.046..0.046 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.043..0.044 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.43..2.31 rows=4 width=20) (actual time=0.016..0.017 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.671..3.672 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.080..2.220 rows=10000 loops=4)
 Planning Time: 33.563 ms
 Execution Time: 778.446 ms
(50 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=70789.20..70789.20 rows=1 width=58) (actual time=128.179..138.377 rows=1 loops=1)
   ->  Sort  (cost=70789.20..70789.26 rows=25 width=58) (actual time=128.178..138.375 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=70750.36..70789.08 rows=25 width=58) (actual time=127.588..138.363 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=70750.36..70788.20 rows=75 width=58) (actual time=127.359..138.343 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=69750.32..69779.35 rows=25 width=58) (actual time=123.239..123.996 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=69750.32..69756.07 rows=2297 width=38) (actual time=123.041..123.125 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 193kB
                                 Worker 0:  Sort Method: quicksort  Memory: 193kB
                                 Worker 1:  Sort Method: quicksort  Memory: 200kB
                                 Worker 2:  Sort Method: quicksort  Memory: 197kB
                                 ->  Hash Join  (cost=7897.38..69622.09 rows=2297 width=38) (actual time=30.883..122.212 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7424.38..68846.70 rows=57598 width=50) (actual time=27.923..111.499 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7423.95..34964.70 rows=14397 width=38) (actual time=27.889..66.645 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2683.82..29894.62 rows=71987 width=8) (actual time=16.204..41.527 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6567
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2628.03 rows=223160 width=0) (actual time=12.559..12.560 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.536..11.539 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.041..9.510 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.006..3.417 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.029..0.031 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.023..0.029 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.008..0.010 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.43..2.31 rows=4 width=20) (actual time=0.003..0.003 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.883..2.883 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.012..1.481 rows=10000 loops=4)
 Planning Time: 5.367 ms
 Execution Time: 138.459 ms
(50 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=114550.34..114550.35 rows=1 width=32) (actual time=1073.917..1081.422 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=114550.34..114550.35 rows=1 width=32) (actual time=1073.916..1081.420 rows=1 loops=1)
         ->  Gather  (cost=114549.91..114550.32 rows=4 width=32) (actual time=1073.903..1081.410 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=113549.91..113549.92 rows=1 width=32) (actual time=1065.014..1065.015 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=22883.10..113405.30 rows=28922 width=12) (actual time=130.671..1046.972 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13590
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22854.18 rows=115690 width=0) (actual time=127.003..127.003 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 17.104 ms
 Execution Time: 1082.565 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=114550.34..114550.35 rows=1 width=32) (actual time=208.742..215.400 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=114550.34..114550.35 rows=1 width=32) (actual time=208.741..215.398 rows=1 loops=1)
         ->  Gather  (cost=114549.91..114550.32 rows=4 width=32) (actual time=208.497..215.388 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=113549.91..113549.92 rows=1 width=32) (actual time=202.859..202.860 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=22883.10..113405.30 rows=28922 width=12) (actual time=106.400..195.235 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=14176
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22854.18 rows=115690 width=0) (actual time=98.335..98.336 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.978 ms
 Execution Time: 215.456 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141410.20..141568.81 rows=1 width=116) (actual time=2650.293..2651.463 rows=1 loops=1)
   ->  GroupAggregate  (cost=141410.20..1101447.87 rows=6053 width=116) (actual time=2650.291..2651.461 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141410.20..1101266.28 rows=6053 width=96) (actual time=814.228..2649.072 rows=1359 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 32671
               ->  Nested Loop  (cost=141409.78..764533.08 rows=151319 width=76) (actual time=812.250..2168.585 rows=34030 loops=1)
                     ->  Gather Merge  (cost=141409.36..159527.48 rows=151319 width=76) (actual time=811.662..846.459 rows=34030 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140409.30..140503.87 rows=37830 width=76) (actual time=798.792..799.673 rows=7205 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 4241kB
                                 Worker 0:  Sort Method: quicksort  Memory: 4451kB
                                 Worker 1:  Sort Method: quicksort  Memory: 4431kB
                                 Worker 2:  Sort Method: quicksort  Memory: 4472kB
                                 Worker 3:  Sort Method: quicksort  Memory: 4337kB
                                 ->  Hash Join  (cost=381.77..137532.85 rows=37830 width=76) (actual time=3.380..773.939 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135063.40 rows=455873 width=24) (actual time=0.342..715.757 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.964..2.967 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.320..2.823 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.227..1.533 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.083..0.085 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.076..0.082 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.064..0.066 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.008 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=8) (actual time=0.038..0.038 rows=1 loops=34030)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.21 rows=1 width=8) (actual time=0.013..0.013 rows=1 loops=34030)
                     Index Cond: (c_custkey = orders.o_custkey)
                     Heap Fetches: 0
 Planning Time: 29.648 ms
 Execution Time: 2652.249 ms
(46 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141410.20..141568.81 rows=1 width=116) (actual time=512.626..513.783 rows=1 loops=1)
   ->  GroupAggregate  (cost=141410.20..1101447.87 rows=6053 width=116) (actual time=512.626..513.781 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141410.20..1101266.28 rows=6053 width=96) (actual time=346.513..512.561 rows=1359 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 32695
               ->  Nested Loop  (cost=141409.78..764533.08 rows=151319 width=76) (actual time=345.825..443.206 rows=34054 loops=1)
                     ->  Gather Merge  (cost=141409.36..159527.48 rows=151319 width=76) (actual time=345.776..365.730 rows=34054 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140409.30..140503.87 rows=37830 width=76) (actual time=338.099..338.758 rows=7196 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 4261kB
                                 Worker 0:  Sort Method: quicksort  Memory: 4079kB
                                 Worker 1:  Sort Method: quicksort  Memory: 4229kB
                                 Worker 2:  Sort Method: quicksort  Memory: 6077kB
                                 Worker 3:  Sort Method: quicksort  Memory: 4054kB
                                 ->  Hash Join  (cost=381.77..137532.85 rows=37830 width=76) (actual time=2.481..308.354 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135063.40 rows=455873 width=24) (actual time=0.182..247.656 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.223..2.225 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.034..2.082 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.007..0.690 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.024..0.025 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.018..0.023 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.010 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.004 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34054)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.21 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34054)
                     Index Cond: (c_custkey = orders.o_custkey)
                     Heap Fetches: 0
 Planning Time: 3.954 ms
 Execution Time: 513.873 ms
(46 rows)

query 8 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41797.18..41811.51 rows=1 width=64) (actual time=721.734..725.931 rows=1 loops=1)
   ->  GroupAggregate  (cost=41797.18..76277.15 rows=2406 width=64) (actual time=721.733..725.929 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41797.18..76180.09 rows=2447 width=70) (actual time=334.099..723.935 rows=1235 loops=1)
               ->  Nested Loop  (cost=41797.03..76085.07 rows=2447 width=20) (actual time=334.090..721.768 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41796.75..71000.96 rows=2455 width=20) (actual time=333.952..706.570 rows=1235 loops=1)
                           Join Filter: (n1.n_regionkey = region.r_regionkey)
                           Rows Removed by Join Filter: 4863
                           ->  Nested Loop  (cost=41796.75..70815.78 rows=12274 width=24) (actual time=330.660..703.333 rows=6098 loops=1)
                                 ->  Nested Loop  (cost=41796.60..70486.65 rows=12274 width=24) (actual time=330.424..696.238 rows=6098 loops=1)
                                       ->  Gather Merge  (cost=41796.18..43248.27 rows=12274 width=24) (actual time=329.848..338.420 rows=6098 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Sort  (cost=40796.14..40806.04 rows=3959 width=24) (actual time=322.458..322.636 rows=2165 loops=4)
                                                   Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                                   Sort Method: quicksort  Memory: 328kB
                                                   Worker 0:  Sort Method: quicksort  Memory: 331kB
                                                   Worker 1:  Sort Method: quicksort  Memory: 325kB
                                                   Worker 2:  Sort Method: quicksort  Memory: 324kB
                                                   ->  Parallel Hash Join  (cost=6600.42..40559.57 rows=3959 width=24) (actual time=113.509..320.278 rows=3024 loops=4)
                                                         Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=149384 width=12) (actual time=0.279..184.375 rows=114316 loops=4)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 260684
                                                         ->  Parallel Hash  (cost=6476.18..6476.18 rows=9939 width=20) (actual time=112.927..112.928 rows=9924 loops=4)
                                                               Buckets: 65536  Batches: 1  Memory Usage: 2752kB
                                                               ->  Nested Loop  (cost=0.85..6476.18 rows=9939 width=20) (actual time=0.860..108.872 rows=9924 loops=4)
                                                                     ->  Parallel Index Only Scan using q2_idx_1 on part  (cost=0.42..5391.73 rows=331 width=4) (actual time=0.310..11.222 rows=330 loops=4)
                                                                           Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                                           Heap Fetches: 0
                                                                     ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.43..2.96 rows=32 width=24) (actual time=0.238..0.291 rows=30 loops=1320)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                       ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.22 rows=1 width=8) (actual time=0.058..0.058 rows=1 loops=6098)
                                             Index Cond: (c_custkey = orders.o_custkey)
                                             Heap Fetches: 0
                                 ->  Memoize  (cost=0.15..1.17 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=6098)
                                       Cache Key: customer.c_nationkey
                                       Cache Mode: logical
                                       Hits: 6073  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 3kB
                                       ->  Index Scan using nation_pkey on nation n1  (cost=0.14..1.16 rows=1 width=8) (actual time=0.012..0.012 rows=1 loops=25)
                                             Index Cond: (n_nationkey = customer.c_nationkey)
                           ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6098)
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.217..0.219 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                     ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.29..2.07 rows=1 width=8) (actual time=0.012..0.012 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Heap Fetches: 0
               ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1235)
                     Cache Key: supplier.s_nationkey
                     Cache Mode: logical
                     Hits: 1210  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                     ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.003..0.003 rows=1 loops=25)
                           Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 35.350 ms
 Execution Time: 726.049 ms
(57 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41797.18..41811.51 rows=1 width=64) (actual time=114.871..121.518 rows=1 loops=1)
   ->  GroupAggregate  (cost=41797.18..76277.15 rows=2406 width=64) (actual time=114.870..121.517 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41797.18..76180.09 rows=2447 width=70) (actual time=90.339..120.561 rows=1235 loops=1)
               ->  Nested Loop  (cost=41797.03..76085.07 rows=2447 width=20) (actual time=90.332..119.560 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41796.75..71000.96 rows=2455 width=20) (actual time=90.323..117.385 rows=1235 loops=1)
                           Join Filter: (n1.n_regionkey = region.r_regionkey)
                           Rows Removed by Join Filter: 4863
                           ->  Nested Loop  (cost=41796.75..70815.78 rows=12274 width=24) (actual time=90.295..115.664 rows=6098 loops=1)
                                 ->  Nested Loop  (cost=41796.60..70486.65 rows=12274 width=24) (actual time=90.282..112.686 rows=6098 loops=1)
                                       ->  Gather Merge  (cost=41796.18..43248.27 rows=12274 width=24) (actual time=90.252..99.055 rows=6098 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Sort  (cost=40796.14..40806.04 rows=3959 width=24) (actual time=87.143..87.249 rows=2151 loops=4)
                                                   Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                                   Sort Method: quicksort  Memory: 324kB
                                                   Worker 0:  Sort Method: quicksort  Memory: 328kB
                                                   Worker 1:  Sort Method: quicksort  Memory: 328kB
                                                   Worker 2:  Sort Method: quicksort  Memory: 329kB
                                                   ->  Parallel Hash Join  (cost=6600.42..40559.57 rows=3959 width=24) (actual time=12.664..85.711 rows=3024 loops=4)
                                                         Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=149384 width=12) (actual time=0.008..55.967 rows=114316 loops=4)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 260684
                                                         ->  Parallel Hash  (cost=6476.18..6476.18 rows=9939 width=20) (actual time=12.442..12.444 rows=9924 loops=4)
                                                               Buckets: 65536  Batches: 1  Memory Usage: 2752kB
                                                               ->  Nested Loop  (cost=0.85..6476.18 rows=9939 width=20) (actual time=0.095..9.881 rows=9924 loops=4)
                                                                     ->  Parallel Index Only Scan using q2_idx_1 on part  (cost=0.42..5391.73 rows=331 width=4) (actual time=0.072..5.637 rows=330 loops=4)
                                                                           Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                                           Heap Fetches: 0
                                                                     ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.43..2.96 rows=32 width=24) (actual time=0.005..0.009 rows=30 loops=1320)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                       ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.22 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=6098)
                                             Index Cond: (c_custkey = orders.o_custkey)
                                             Heap Fetches: 0
                                 ->  Memoize  (cost=0.15..1.17 rows=1 width=8) (actual time=0.000..0.000 rows=1 loops=6098)
                                       Cache Key: customer.c_nationkey
                                       Cache Mode: logical
                                       Hits: 6073  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 3kB
                                       ->  Index Scan using nation_pkey on nation n1  (cost=0.14..1.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=25)
                                             Index Cond: (n_nationkey = customer.c_nationkey)
                           ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6098)
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                     ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.29..2.07 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Heap Fetches: 0
               ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1235)
                     Cache Key: supplier.s_nationkey
                     Cache Mode: logical
                     Hits: 1210  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                     ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=25)
                           Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 5.774 ms
 Execution Time: 121.604 ms
(57 rows)

query 9 run 1
SET
SET
SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=63717.86..63732.31 rows=1 width=90) (actual time=1074.405..1080.389 rows=1 loops=1)
   ->  GroupAggregate  (cost=63717.86..933074.85 rows=60150 width=90) (actual time=1074.404..1080.386 rows=1 loops=1)
         Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=63717.86..925827.15 rows=362597 width=81) (actual time=942.667..1077.731 rows=1210 loops=1)
               Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Gather Merge  (cost=63717.43..106615.00 rows=362597 width=63) (actual time=941.987..949.540 rows=1210 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=62717.39..63009.81 rows=116967 width=63) (actual time=932.251..932.354 rows=715 loops=4)
                           Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
                           Sort Method: quicksort  Memory: 12289kB
                           Worker 0:  Sort Method: quicksort  Memory: 11787kB
                           Worker 1:  Sort Method: quicksort  Memory: 11953kB
                           Worker 2:  Sort Method: quicksort  Memory: 11910kB
                           ->  Hash Join  (cost=19350.68..52871.26 rows=116967 width=63) (actual time=563.390..819.679 rows=81482 loops=4)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=19349.12..52510.61 rows=116967 width=41) (actual time=563.268..788.391 rows=81482 loops=4)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.369..110.489 rows=375000 loops=4)
                                       ->  Parallel Hash  (cost=17887.03..17887.03 rows=116967 width=41) (actual time=562.074..562.077 rows=81482 loops=4)
                                             Buckets: 524288  Batches: 1  Memory Usage: 29632kB
                                             ->  Hash Join  (cost=448.85..17887.03 rows=116967 width=41) (actual time=4.353..527.976 rows=81482 loops=4)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.85..17130.94 rows=117318 width=33) (actual time=0.599..502.386 rows=81482 loops=4)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=3910 width=4) (actual time=0.147..16.062 rows=2720 loops=4)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 47280
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.85 rows=32 width=29) (actual time=0.149..0.175 rows=30 loops=10880)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.733..3.734 rows=10000 loops=4)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.073..2.119 rows=10000 loops=4)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.055..0.056 rows=25 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.045..0.048 rows=25 loops=4)
               ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..2.24 rows=1 width=14) (actual time=0.104..0.104 rows=1 loops=1210)
                     Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                     Heap Fetches: 0
 Planning Time: 41.905 ms
 Execution Time: 1081.212 ms
(42 rows)

SET
SET
SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=63717.86..63732.31 rows=1 width=90) (actual time=403.031..411.470 rows=1 loops=1)
   ->  GroupAggregate  (cost=63717.86..933074.85 rows=60150 width=90) (actual time=403.030..411.468 rows=1 loops=1)
         Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=63717.86..925827.15 rows=362597 width=81) (actual time=398.042..410.390 rows=1210 loops=1)
               Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Gather Merge  (cost=63717.43..106615.00 rows=362597 width=63) (actual time=398.000..407.066 rows=1210 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=62717.39..63009.81 rows=116967 width=63) (actual time=390.985..391.068 rows=719 loops=4)
                           Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
                           Sort Method: quicksort  Memory: 12075kB
                           Worker 0:  Sort Method: quicksort  Memory: 11946kB
                           Worker 1:  Sort Method: quicksort  Memory: 11986kB
                           Worker 2:  Sort Method: quicksort  Memory: 11931kB
                           ->  Hash Join  (cost=19350.68..52871.26 rows=116967 width=63) (actual time=101.834..280.146 rows=81482 loops=4)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=19349.12..52510.61 rows=116967 width=41) (actual time=101.740..250.383 rows=81482 loops=4)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.011..31.270 rows=375000 loops=4)
                                       ->  Parallel Hash  (cost=17887.03..17887.03 rows=116967 width=41) (actual time=100.916..100.918 rows=81482 loops=4)
                                             Buckets: 524288  Batches: 1  Memory Usage: 29600kB
                                             ->  Hash Join  (cost=448.85..17887.03 rows=116967 width=41) (actual time=3.016..69.599 rows=81482 loops=4)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.85..17130.94 rows=117318 width=33) (actual time=0.051..47.840 rows=81482 loops=4)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=3910 width=4) (actual time=0.027..10.859 rows=2720 loops=4)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 47280
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.85 rows=32 width=29) (actual time=0.004..0.010 rows=30 loops=10880)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.945..2.946 rows=10000 loops=4)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.008..1.348 rows=10000 loops=4)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.020..0.021 rows=25 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.009..0.012 rows=25 loops=4)
               ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..2.24 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=1210)
                     Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                     Heap Fetches: 0
 Planning Time: 7.656 ms
 Execution Time: 411.560 ms
(42 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81954.03..81954.08 rows=20 width=202) (actual time=733.698..738.163 rows=20 loops=1)
   ->  Sort  (cost=81954.03..82087.94 rows=53562 width=202) (actual time=733.696..738.160 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=79859.24..80528.77 rows=53562 width=202) (actual time=701.999..726.733 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 26129kB
               ->  Gather  (cost=6673.13..79189.72 rows=53562 width=182) (actual time=62.773..592.339 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5673.13..72833.52 rows=17278 width=182) (actual time=55.141..650.189 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5671.57..72778.91 rows=17278 width=160) (actual time=55.020..641.396 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=668.32..67730.31 rows=17278 width=16) (actual time=13.870..581.960 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=667.89..27066.77 rows=17859 width=8) (actual time=12.926..367.762 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=4242
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..654.05 rows=55362 width=0) (actual time=9.297..9.297 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.43..2.27 rows=1 width=16) (actual time=0.014..0.014 rows=2 loops=57111)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=40.735..40.735 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.084..20.172 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.055..0.055 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.044..0.047 rows=25 loops=4)
 Planning Time: 27.041 ms
 Execution Time: 738.544 ms
(31 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81954.03..81954.08 rows=20 width=202) (actual time=199.937..204.039 rows=20 loops=1)
   ->  Sort  (cost=81954.03..82087.94 rows=53562 width=202) (actual time=199.936..204.036 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=79859.24..80528.77 rows=53562 width=202) (actual time=167.661..192.225 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 26129kB
               ->  Gather  (cost=6673.13..79189.72 rows=53562 width=182) (actual time=43.015..79.429 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5673.13..72833.52 rows=17278 width=182) (actual time=39.681..128.900 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5671.57..72778.91 rows=17278 width=160) (actual time=39.593..122.155 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=668.32..67730.31 rows=17278 width=16) (actual time=11.027..80.251 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=667.89..27066.77 rows=17859 width=8) (actual time=10.953..26.758 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=1200
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..654.05 rows=55362 width=0) (actual time=7.514..7.514 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.43..2.27 rows=1 width=16) (actual time=0.003..0.003 rows=2 loops=57111)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=28.173..28.174 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.009..7.918 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.019..0.020 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.009..0.012 rows=25 loops=4)
 Planning Time: 2.182 ms
 Execution Time: 204.407 ms
(31 rows)

query 11 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17302.41..17302.41 rows=1 width=36) (actual time=608.148..608.270 rows=1 loops=1)
   InitPlan 1 (returns $3)
     ->  Finalize Aggregate  (cost=7231.62..7231.63 rows=1 width=32) (actual time=21.430..21.520 rows=1 loops=1)
           ->  Gather  (cost=7231.50..7231.61 rows=1 width=32) (actual time=21.309..21.511 rows=2 loops=1)
                 Workers Planned: 1
                 Workers Launched: 1
                 ->  Partial Aggregate  (cost=6231.50..6231.51 rows=1 width=32) (actual time=19.598..19.599 rows=1 loops=2)
                       ->  Nested Loop  (cost=0.86..6090.32 rows=18824 width=10) (actual time=0.092..14.967 rows=16440 loops=2)
                             ->  Nested Loop  (cost=0.43..640.26 rows=235 width=4) (actual time=0.080..2.290 rows=206 loops=2)
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.022..0.954 rows=5000 loops=2)
                                         Heap Fetches: 0
                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=4) (actual time=0.000..0.000 rows=0 loops=10000)
                                         Cache Key: supplier_1.s_nationkey
                                         Cache Mode: logical
                                         Hits: 6255  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                         Worker 0:  Hits: 3695  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                         ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=50)
                                               Index Cond: (n_nationkey = supplier_1.s_nationkey)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 1
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..22.39 rows=80 width=14) (actual time=0.003..0.053 rows=80 loops=411)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=10070.78..10097.44 rows=10667 width=36) (actual time=608.146..608.178 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize HashAggregate  (cost=9537.44..10017.44 rows=10667 width=36) (actual time=598.085..608.004 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $3)
               Batches: 1  Memory Usage: 15889kB
               Rows Removed by Filter: 30007
               ->  Gather  (cost=7278.56..9396.26 rows=18824 width=36) (actual time=551.686..560.998 rows=31770 loops=1)
                     Workers Planned: 1
                     Workers Launched: 1
                     ->  Partial HashAggregate  (cost=6278.56..6513.86 rows=18824 width=36) (actual time=547.377..554.728 rows=15885 loops=2)
                           Group Key: partsupp.ps_partkey
                           Batches: 1  Memory Usage: 8977kB
                           Worker 0:  Batches: 1  Memory Usage: 8977kB
                           ->  Nested Loop  (cost=0.86..6090.32 rows=18824 width=14) (actual time=0.418..529.491 rows=16440 loops=2)
                                 ->  Nested Loop  (cost=0.43..640.26 rows=235 width=4) (actual time=0.247..3.622 rows=206 loops=2)
                                       ->  Parallel Index Only Scan using q2_idx_3 on supplier  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.092..1.874 rows=5000 loops=2)
                                             Heap Fetches: 0
                                       ->  Memoize  (cost=0.15..0.17 rows=1 width=4) (actual time=0.000..0.000 rows=0 loops=10000)
                                             Cache Key: supplier.s_nationkey
                                             Cache Mode: logical
                                             Hits: 5197  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                             Worker 0:  Hits: 4753  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                             ->  Index Scan using nation_pkey on nation  (cost=0.14..0.16 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=50)
                                                   Index Cond: (n_nationkey = supplier.s_nationkey)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..22.39 rows=80 width=18) (actual time=0.074..2.539 rows=80 loops=411)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 16.335 ms
 Execution Time: 608.856 ms
(54 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17302.41..17302.41 rows=1 width=36) (actual time=87.113..87.236 rows=1 loops=1)
   InitPlan 1 (returns $3)
     ->  Finalize Aggregate  (cost=7231.62..7231.63 rows=1 width=32) (actual time=20.709..20.800 rows=1 loops=1)
           ->  Gather  (cost=7231.50..7231.61 rows=1 width=32) (actual time=20.577..20.790 rows=2 loops=1)
                 Workers Planned: 1
                 Workers Launched: 1
                 ->  Partial Aggregate  (cost=6231.50..6231.51 rows=1 width=32) (actual time=18.880..18.881 rows=1 loops=2)
                       ->  Nested Loop  (cost=0.86..6090.32 rows=18824 width=10) (actual time=0.090..14.299 rows=16440 loops=2)
                             ->  Nested Loop  (cost=0.43..640.26 rows=235 width=4) (actual time=0.078..2.262 rows=206 loops=2)
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.023..0.933 rows=5000 loops=2)
                                         Heap Fetches: 0
                                   ->  Memoize  (cost=0.15..0.17 rows=1 width=4) (actual time=0.000..0.000 rows=0 loops=10000)
                                         Cache Key: supplier_1.s_nationkey
                                         Cache Mode: logical
                                         Hits: 6129  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                         Worker 0:  Hits: 3821  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                         ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=50)
                                               Index Cond: (n_nationkey = supplier_1.s_nationkey)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 1
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..22.39 rows=80 width=14) (actual time=0.003..0.050 rows=80 loops=411)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=10070.78..10097.44 rows=10667 width=36) (actual time=87.111..87.143 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize HashAggregate  (cost=9537.44..10017.44 rows=10667 width=36) (actual time=77.073..86.979 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $3)
               Batches: 1  Memory Usage: 15889kB
               Rows Removed by Filter: 30007
               ->  Gather  (cost=7278.56..9396.26 rows=18824 width=36) (actual time=30.702..40.885 rows=31838 loops=1)
                     Workers Planned: 1
                     Workers Launched: 1
                     ->  Partial HashAggregate  (cost=6278.56..6513.86 rows=18824 width=36) (actual time=28.811..36.248 rows=15919 loops=2)
                           Group Key: partsupp.ps_partkey
                           Batches: 1  Memory Usage: 8977kB
                           Worker 0:  Batches: 1  Memory Usage: 6929kB
                           ->  Nested Loop  (cost=0.86..6090.32 rows=18824 width=14) (actual time=0.090..18.646 rows=16440 loops=2)
                                 ->  Nested Loop  (cost=0.43..640.26 rows=235 width=4) (actual time=0.079..2.399 rows=206 loops=2)
                                       ->  Parallel Index Only Scan using q2_idx_3 on supplier  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.019..1.001 rows=5000 loops=2)
                                             Heap Fetches: 0
                                       ->  Memoize  (cost=0.15..0.17 rows=1 width=4) (actual time=0.000..0.000 rows=0 loops=10000)
                                             Cache Key: supplier.s_nationkey
                                             Cache Mode: logical
                                             Hits: 5377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                             Worker 0:  Hits: 4573  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                                             ->  Index Scan using nation_pkey on nation  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=50)
                                                   Index Cond: (n_nationkey = supplier.s_nationkey)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..22.39 rows=80 width=18) (actual time=0.003..0.069 rows=80 loops=411)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.259 ms
 Execution Time: 87.835 ms
(54 rows)

query 12 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14868.53..31831.68 rows=1 width=27) (actual time=1180.126..1181.511 rows=1 loops=1)
   ->  GroupAggregate  (cost=14868.53..133610.56 rows=7 width=27) (actual time=1180.126..1181.510 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=14868.53..133108.30 rows=28697 width=27) (actual time=63.423..1168.869 rows=15492 loops=1)
               ->  Gather Merge  (cost=14868.11..18304.13 rows=28697 width=15) (actual time=62.803..74.530 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=13868.05..13885.98 rows=7174 width=15) (actual time=54.206..54.604 rows=4254 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 633kB
                           Worker 0:  Sort Method: quicksort  Memory: 487kB
                           Worker 1:  Sort Method: quicksort  Memory: 510kB
                           Worker 2:  Sort Method: quicksort  Memory: 503kB
                           Worker 3:  Sort Method: quicksort  Memory: 523kB
                           ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..13408.60 rows=7174 width=15) (actual time=0.101..52.758 rows=6191 loops=5)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 15496
                                 Heap Fetches: 0
               ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=20) (actual time=0.069..0.069 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 20.385 ms
 Execution Time: 1181.610 ms
(23 rows)

SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14868.53..31831.68 rows=1 width=27) (actual time=75.603..77.095 rows=1 loops=1)
   ->  GroupAggregate  (cost=14868.53..133610.56 rows=7 width=27) (actual time=75.602..77.094 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=14868.53..133108.30 rows=28697 width=27) (actual time=26.489..71.941 rows=15492 loops=1)
               ->  Gather Merge  (cost=14868.11..18304.13 rows=28697 width=15) (actual time=26.456..31.889 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=13868.05..13885.98 rows=7174 width=15) (actual time=22.862..23.100 rows=4291 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 566kB
                           Worker 0:  Sort Method: quicksort  Memory: 502kB
                           Worker 1:  Sort Method: quicksort  Memory: 609kB
                           Worker 2:  Sort Method: quicksort  Memory: 464kB
                           Worker 3:  Sort Method: quicksort  Memory: 514kB
                           ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..13408.60 rows=7174 width=15) (actual time=0.047..21.588 rows=6191 loops=5)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 15496
                                 Heap Fetches: 0
               ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 1.578 ms
 Execution Time: 77.146 ms
(23 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=65023.89..65023.89 rows=1 width=16) (actual time=1441.293..1441.296 rows=1 loops=1)
   ->  Sort  (cost=65023.89..65024.39 rows=200 width=16) (actual time=1441.292..1441.294 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=65020.89..65022.89 rows=200 width=16) (actual time=1441.266..1441.273 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61270.89..62770.89 rows=150000 width=12) (actual time=1401.462..1424.346 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4953.42..53771.64 rows=1499850 width=8) (actual time=34.323..1048.464 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.430..615.496 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=33.579..33.579 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.345..16.340 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 15.250 ms
 Execution Time: 1442.377 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=65023.89..65023.89 rows=1 width=16) (actual time=1242.141..1242.144 rows=1 loops=1)
   ->  Sort  (cost=65023.89..65024.39 rows=200 width=16) (actual time=1242.139..1242.142 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=65020.89..65022.89 rows=200 width=16) (actual time=1242.113..1242.120 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61270.89..62770.89 rows=150000 width=12) (actual time=1202.770..1225.438 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4953.42..53771.64 rows=1499850 width=8) (actual time=29.460..866.545 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.011..465.047 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=29.117..29.118 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.024..12.902 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.837 ms
 Execution Time: 1243.261 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=80320.17..80320.19 rows=1 width=32) (actual time=534.698..537.027 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=80320.17..80320.19 rows=1 width=32) (actual time=534.697..537.025 rows=1 loops=1)
         ->  Gather  (cost=80319.72..80320.13 rows=4 width=64) (actual time=529.652..537.000 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=79319.72..79319.73 rows=1 width=64) (actual time=520.945..520.949 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7277.63..79002.49 rows=18127 width=33) (actual time=54.134..505.029 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1303.63..72980.91 rows=18127 width=16) (actual time=21.283..456.736 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8533
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1285.50 rows=72507 width=0) (actual time=14.383..14.384 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=32.417..32.419 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.085..18.989 rows=40000 loops=5)
 Planning Time: 20.706 ms
 Execution Time: 537.071 ms
(18 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=80320.17..80320.19 rows=1 width=32) (actual time=109.573..116.162 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=80320.17..80320.19 rows=1 width=32) (actual time=109.572..116.160 rows=1 loops=1)
         ->  Gather  (cost=80319.72..80320.13 rows=4 width=64) (actual time=109.106..116.140 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=79319.72..79319.73 rows=1 width=64) (actual time=104.968..104.971 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7277.63..79002.49 rows=18127 width=33) (actual time=38.505..95.718 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1303.63..72980.91 rows=18127 width=16) (actual time=14.363..63.580 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1285.50 rows=72507 width=0) (actual time=8.593..8.594 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=23.172..23.173 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14240kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.009..6.761 rows=40000 loops=5)
 Planning Time: 1.416 ms
 Execution Time: 116.201 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=242722.89..242831.22 rows=1 width=103) (actual time=1288.966..1296.779 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122762.21..122762.22 rows=1 width=32) (actual time=240.030..240.032 rows=1 loops=1)
           ->  HashAggregate  (cost=122511.46..122636.84 rows=10030 width=36) (actual time=236.461..239.440 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4160.66..120195.14 rows=231632 width=16) (actual time=29.080..121.581 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4102.75 rows=231632 width=0) (actual time=18.856..18.856 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119960.67..125377.12 rows=50 width=103) (actual time=1288.965..1296.775 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119960.39..125215.49 rows=50 width=36) (actual time=1288.406..1296.214 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119960.39..124764.14 rows=40120 width=36) (actual time=1023.333..1038.883 rows=41792 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118960.33..118985.41 rows=10030 width=36) (actual time=1012.767..1013.615 rows=8785 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1466kB
                           Worker 0:  Sort Method: quicksort  Memory: 1463kB
                           Worker 1:  Sort Method: quicksort  Memory: 1468kB
                           Worker 2:  Sort Method: quicksort  Memory: 1467kB
                           Worker 3:  Sort Method: quicksort  Memory: 1467kB
                           ->  Partial HashAggregate  (cost=118168.36..118293.74 rows=10030 width=36) (actual time=1004.964..1009.887 rows=9890 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=4160.66..117589.28 rows=57908 width=16) (actual time=42.377..950.347 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13181
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4102.75 rows=231632 width=0) (actual time=38.278..38.278 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.22 rows=1 width=71) (actual time=0.553..0.554 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 18.351 ms
 Execution Time: 1297.404 ms
(42 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=242722.89..242831.22 rows=1 width=103) (actual time=411.355..421.429 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122762.21..122762.22 rows=1 width=32) (actual time=224.159..224.160 rows=1 loops=1)
           ->  HashAggregate  (cost=122511.46..122636.84 rows=10030 width=36) (actual time=220.748..223.569 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4160.66..120195.14 rows=231632 width=16) (actual time=28.911..107.300 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4102.75 rows=231632 width=0) (actual time=18.749..18.750 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119960.67..125377.12 rows=50 width=103) (actual time=411.354..421.425 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119960.39..125215.49 rows=50 width=36) (actual time=411.313..421.383 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119960.39..124764.14 rows=40120 width=36) (actual time=162.226..179.917 rows=41829 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118960.33..118985.41 rows=10030 width=36) (actual time=154.047..154.948 rows=8880 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1468kB
                           Worker 0:  Sort Method: quicksort  Memory: 1468kB
                           Worker 1:  Sort Method: quicksort  Memory: 1462kB
                           Worker 2:  Sort Method: quicksort  Memory: 1469kB
                           Worker 3:  Sort Method: quicksort  Memory: 1470kB
                           ->  Partial HashAggregate  (cost=118168.36..118293.74 rows=10030 width=36) (actual time=145.679..151.844 rows=9901 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=4160.66..117589.28 rows=57908 width=16) (actual time=33.062..109.763 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13122
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4102.75 rows=231632 width=0) (actual time=26.846..26.847 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.22 rows=1 width=71) (actual time=0.037..0.037 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 1.399 ms
 Execution Time: 421.560 ms
(42 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=27722.21..27722.21 rows=1 width=44) (actual time=282.876..283.571 rows=1 loops=1)
   ->  Sort  (cost=27722.21..27762.01 rows=15921 width=44) (actual time=282.875..283.569 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=19855.78..27642.61 rows=15921 width=44) (actual time=187.605..278.928 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=19855.78..26895.46 rows=58794 width=40) (actual time=187.577..236.236 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=18855.72..18892.46 rows=14698 width=40) (actual time=164.573..166.363 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 2790kB
                           Worker 0:  Sort Method: quicksort  Memory: 2780kB
                           Worker 1:  Sort Method: quicksort  Memory: 2785kB
                           Worker 2:  Sort Method: quicksort  Memory: 2485kB
                           Worker 3:  Sort Method: quicksort  Memory: 2727kB
                           ->  Parallel Hash Join  (cost=6683.87..17838.37 rows=14698 width=40) (actual time=36.783..103.107 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..11240.43 rows=100000 width=8) (actual time=6.907..55.368 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.488..6.265 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12249 width=40) (actual time=29.722..29.722 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2592kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12249 width=40) (actual time=0.150..27.417 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 16.841 ms
 Execution Time: 283.653 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=27722.21..27722.21 rows=1 width=44) (actual time=249.139..249.537 rows=1 loops=1)
   ->  Sort  (cost=27722.21..27762.01 rows=15921 width=44) (actual time=249.138..249.535 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=19855.78..27642.61 rows=15921 width=44) (actual time=153.393..244.905 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=19855.78..26895.46 rows=58794 width=40) (actual time=153.364..201.441 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=18855.72..18892.46 rows=14698 width=40) (actual time=135.260..137.017 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 2657kB
                           Worker 0:  Sort Method: quicksort  Memory: 2780kB
                           Worker 1:  Sort Method: quicksort  Memory: 2970kB
                           Worker 2:  Sort Method: quicksort  Memory: 2684kB
                           Worker 3:  Sort Method: quicksort  Memory: 2476kB
                           ->  Parallel Hash Join  (cost=6683.87..17838.37 rows=14698 width=40) (actual time=18.103..75.690 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..11240.43 rows=100000 width=8) (actual time=2.419..43.008 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.086..2.344 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12249 width=40) (actual time=15.270..15.271 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12249 width=40) (actual time=0.015..13.489 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 1.054 ms
 Execution Time: 249.591 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=177983.84..177983.85 rows=1 width=32) (actual time=2418.480..2424.226 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=177983.84..177983.85 rows=1 width=32) (actual time=2418.471..2424.216 rows=1 loops=1)
         ->  Gather  (cost=177983.62..177983.83 rows=2 width=32) (actual time=2416.048..2424.205 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=176983.62..176983.63 rows=1 width=32) (actual time=2407.358..2407.360 rows=1 loops=3)
                     ->  Nested Loop  (cost=5352.59..176981.62 rows=797 width=8) (actual time=223.229..2407.277 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=5352.16..176758.57 rows=80 width=40) (actual time=222.847..2374.662 rows=69 loops=3)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=5351.72..5351.94 rows=85 width=4) (actual time=26.684..26.720 rows=69 loops=3)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 25kB
                                       Worker 0:  Sort Method: quicksort  Memory: 25kB
                                       Worker 1:  Sort Method: quicksort  Memory: 25kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=85 width=4) (actual time=0.487..26.659 rows=69 loops=3)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 66597
                                 ->  GroupAggregate  (cost=0.43..169063.34 rows=187383 width=36) (actual time=0.638..2333.785 rows=198926 loops=3)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136248.05 rows=6000908 width=9) (actual time=0.600..1506.817 rows=5968847 loops=3)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.65 rows=11 width=17) (actual time=0.436..0.467 rows=3 loops=208)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 17.902 ms
 Execution Time: 2424.920 ms
(27 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=177983.84..177983.85 rows=1 width=32) (actual time=2100.256..2103.602 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=177983.84..177983.85 rows=1 width=32) (actual time=2100.255..2103.601 rows=1 loops=1)
         ->  Gather  (cost=177983.62..177983.83 rows=2 width=32) (actual time=2100.245..2103.594 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=176983.62..176983.63 rows=1 width=32) (actual time=2094.298..2094.299 rows=1 loops=3)
                     ->  Nested Loop  (cost=5352.59..176981.62 rows=797 width=8) (actual time=187.566..2094.260 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=5352.16..176758.57 rows=80 width=40) (actual time=187.545..2093.569 rows=69 loops=3)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=5351.72..5351.94 rows=85 width=4) (actual time=10.546..10.558 rows=69 loops=3)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 25kB
                                       Worker 0:  Sort Method: quicksort  Memory: 25kB
                                       Worker 1:  Sort Method: quicksort  Memory: 25kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=85 width=4) (actual time=0.130..10.532 rows=69 loops=3)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 66597
                                 ->  GroupAggregate  (cost=0.43..169063.34 rows=187383 width=36) (actual time=0.073..2070.960 rows=198926 loops=3)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136248.05 rows=6000908 width=9) (actual time=0.041..1268.682 rows=5968847 loops=3)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.65 rows=11 width=17) (actual time=0.008..0.009 rows=3 loops=208)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 1.798 ms
 Execution Time: 2103.670 ms
(27 rows)

query 18 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=700297.20..700297.45 rows=100 width=71) (actual time=3319.534..3319.539 rows=9 loops=1)
   ->  Sort  (cost=700297.20..705298.72 rows=2000607 width=71) (actual time=3319.532..3319.537 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=563660.93..623835.44 rows=2000607 width=71) (actual time=3318.778..3319.484 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=259584.33..438310.40 rows=2000607 width=44) (actual time=2600.223..3318.703 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136220.05 rows=6000908 width=9) (actual time=0.389..531.051 rows=6001215 loops=1)
                           Heap Fetches: 0
                     ->  Hash  (cost=253332.95..253332.95 rows=500076 width=43) (actual time=2406.959..2406.962 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=206951.71..253332.95 rows=500076 width=43) (actual time=2047.060..2406.937 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=199979.71..245048.22 rows=500076 width=24) (actual time=1977.049..2336.916 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.422..280.541 rows=1500000 loops=1)
                                       ->  Hash  (cost=193728.76..193728.76 rows=500076 width=4) (actual time=1875.463..1875.464 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..188728.00 rows=500076 width=4) (actual time=397.978..1875.448 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136220.05 rows=6000908 width=9) (actual time=0.016..722.485 rows=6001215 loops=1)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=69.690..69.690 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.422..43.481 rows=150000 loops=1)
 Planning Time: 25.958 ms
 Execution Time: 3321.236 ms
(31 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=700297.20..700297.45 rows=100 width=71) (actual time=2898.188..2898.194 rows=9 loops=1)
   ->  Sort  (cost=700297.20..705298.72 rows=2000607 width=71) (actual time=2898.187..2898.191 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=563660.93..623835.44 rows=2000607 width=71) (actual time=2897.425..2898.140 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=259584.33..438310.40 rows=2000607 width=44) (actual time=2180.421..2897.350 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136220.05 rows=6000908 width=9) (actual time=0.012..528.866 rows=6001215 loops=1)
                           Heap Fetches: 0
                     ->  Hash  (cost=253332.95..253332.95 rows=500076 width=43) (actual time=1987.969..1987.971 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=206951.71..253332.95 rows=500076 width=43) (actual time=1776.628..1987.951 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=199979.71..245048.22 rows=500076 width=24) (actual time=1733.255..1944.569 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.005..81.527 rows=1500000 loops=1)
                                       ->  Hash  (cost=193728.76..193728.76 rows=500076 width=4) (actual time=1675.921..1675.922 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..188728.00 rows=500076 width=4) (actual time=353.034..1675.910 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136220.05 rows=6000908 width=9) (actual time=0.014..544.646 rows=6001215 loops=1)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=43.030..43.030 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.013..19.147 rows=150000 loops=1)
 Planning Time: 2.137 ms
 Execution Time: 2899.397 ms
(31 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=9320.04..9320.05 rows=1 width=32) (actual time=127.972..129.480 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=9320.04..9320.05 rows=1 width=32) (actual time=127.970..129.478 rows=1 loops=1)
         ->  Gather  (cost=9319.82..9320.03 rows=2 width=32) (actual time=127.926..129.470 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=8319.82..8319.83 rows=1 width=32) (actual time=121.932..121.933 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.56..8319.46 rows=47 width=12) (actual time=2.247..121.846 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=196 width=30) (actual time=0.506..31.765 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.45 rows=1 width=21) (actual time=0.512..0.532 rows=0 loops=507)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning Time: 24.312 ms
 Execution Time: 129.539 ms
(17 rows)

SET
SET
SET

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9320.04..9320.05 rows=1 width=32) (actual time=22.176..23.984 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=9320.04..9320.05 rows=1 width=32) (actual time=22.175..23.982 rows=1 loops=1)
         ->  Gather  (cost=9319.82..9320.03 rows=2 width=32) (actual time=22.056..23.974 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=8319.82..8319.83 rows=1 width=32) (actual time=19.577..19.578 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.56..8319.46 rows=47 width=12) (actual time=0.384..19.537 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=196 width=30) (actual time=0.167..17.489 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.45 rows=1 width=21) (actual time=0.011..0.012 rows=0 loops=507)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning Time: 2.991 ms
 Execution Time: 24.026 ms
(17 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=218609.94..218609.94 rows=1 width=51) (actual time=3592.196..3592.292 rows=1 loops=1)
   ->  Sort  (cost=218609.94..218609.94 rows=1 width=51) (actual time=3592.194..3592.290 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=190478.03..218609.93 rows=1 width=51) (actual time=3423.102..3592.086 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1891765
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.479..3.861 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.204..0.207 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.271..2.875 rows=10000 loops=1)
               ->  Materialize  (cost=190478.03..218154.62 rows=1 width=8) (actual time=5.793..7.958 rows=4320 loops=438)
                     ->  Nested Loop  (cost=190478.03..218154.61 rows=1 width=8) (actual time=2537.412..3417.191 rows=5898 loops=1)
                           ->  Hash Join  (cost=190477.61..212562.77 rows=4865 width=44) (actual time=2536.990..3120.462 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=184470.10..200474.09 rows=481675 width=40) (actual time=2506.589..3044.733 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 27456kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16146.73..142191.07 rows=898956 width=13) (actual time=131.406..2007.378 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..15921.99 rows=898956 width=0) (actual time=112.334..112.334 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=5982.26..5982.26 rows=2020 width=4) (actual time=30.379..30.473 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather Merge  (cost=1000.46..5982.26 rows=2020 width=4) (actual time=25.348..30.285 rows=2187 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=652 width=4) (actual time=0.287..16.032 rows=547 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 49453
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..1.14 rows=1 width=12) (actual time=0.049..0.049 rows=1 loops=5914)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning Time: 28.080 ms
 Execution Time: 3597.278 ms
(42 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=218609.94..218609.94 rows=1 width=51) (actual time=1435.516..1435.613 rows=1 loops=1)
   ->  Sort  (cost=218609.94..218609.94 rows=1 width=51) (actual time=1435.514..1435.611 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=190478.03..218609.93 rows=1 width=51) (actual time=1269.118..1435.449 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1891765
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.019..1.708 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.014 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.004..0.601 rows=10000 loops=1)
               ->  Materialize  (cost=190478.03..218154.62 rows=1 width=8) (actual time=1.631..3.041 rows=4320 loops=438)
                     ->  Nested Loop  (cost=190478.03..218154.61 rows=1 width=8) (actual time=714.225..1265.889 rows=5898 loops=1)
                           ->  Hash Join  (cost=190477.61..212562.77 rows=4865 width=44) (actual time=714.205..1247.940 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=184470.10..200474.09 rows=481675 width=40) (actual time=700.859..1195.910 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 27456kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16146.73..142191.07 rows=898956 width=13) (actual time=92.841..306.741 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..15921.99 rows=898956 width=0) (actual time=74.322..74.323 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=5982.26..5982.26 rows=2020 width=4) (actual time=13.326..13.420 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather Merge  (cost=1000.46..5982.26 rows=2020 width=4) (actual time=10.579..13.240 rows=2187 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=652 width=4) (actual time=0.069..7.016 rows=547 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 49453
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..1.14 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning Time: 2.702 ms
 Execution Time: 1440.790 ms
(42 rows)

query 21 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=61090.05..61090.05 rows=1 width=34) (actual time=4300.371..4322.290 rows=100 loops=1)
   ->  Sort  (cost=61090.05..61090.05 rows=1 width=34) (actual time=4300.370..4322.282 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=61084.64..61090.04 rows=1 width=34) (actual time=1485.798..4321.278 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Nested Loop Semi Join  (cost=61084.64..61090.02 rows=1 width=26) (actual time=1431.746..4317.071 rows=4227 loops=1)
                     Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                     Rows Removed by Join Filter: 2768
                     ->  Nested Loop  (cost=61084.21..61087.59 rows=1 width=38) (actual time=1431.331..3320.438 rows=6909 loops=1)
                           Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                           Rows Removed by Join Filter: 158582
                           ->  Nested Loop  (cost=61084.21..61086.26 rows=1 width=42) (actual time=1431.117..2793.507 rows=165491 loops=1)
                                 ->  Gather Merge  (cost=61083.78..61083.90 rows=1 width=38) (actual time=1428.897..1582.483 rows=337680 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Sort  (cost=60083.72..60083.73 rows=1 width=38) (actual time=1361.667..1369.481 rows=67536 loops=5)
                                             Sort Key: supplier.s_name
                                             Sort Method: quicksort  Memory: 8354kB
                                             Worker 0:  Sort Method: quicksort  Memory: 8681kB
                                             Worker 1:  Sort Method: quicksort  Memory: 6376kB
                                             Worker 2:  Sort Method: quicksort  Memory: 6653kB
                                             Worker 3:  Sort Method: quicksort  Memory: 8608kB
                                             ->  Nested Loop  (cost=32228.37..60083.71 rows=1 width=38) (actual time=397.169..912.773 rows=67536 loops=5)
                                                   ->  Parallel Hash Anti Join  (cost=32228.08..60079.64 rows=1 width=8) (actual time=396.722..774.696 rows=67536 loops=5)
                                                         Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                                         Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                                         Rows Removed by Join Filter: 275172
                                                         ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..25976.70 rows=500076 width=8) (actual time=0.040..151.296 rows=758659 loops=5)
                                                               Heap Fetches: 0
                                                         ->  Parallel Hash  (cost=25976.70..25976.70 rows=500076 width=8) (actual time=394.470..394.471 rows=758659 loops=5)
                                                               Buckets: 4194304 (originally 2097152)  Batches: 1 (originally 1)  Memory Usage: 197600kB
                                                               ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..25976.70 rows=500076 width=8) (actual time=0.814..164.892 rows=758659 loops=5)
                                                                     Heap Fetches: 0
                                                   ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4.07 rows=1 width=34) (actual time=0.002..0.002 rows=1 loops=337680)
                                                         Index Cond: (s_suppkey = l1.l_suppkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=337680)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=165491)
                                 Filter: (n_name = 'PERU'::bpchar)
                                 Rows Removed by Filter: 24
                     ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.143..0.143 rows=1 loops=6909)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Heap Fetches: 0
 Planning Time: 25.456 ms
 Execution Time: 4322.380 ms
(47 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=61090.05..61090.05 rows=1 width=34) (actual time=2738.903..2761.634 rows=100 loops=1)
   ->  Sort  (cost=61090.05..61090.05 rows=1 width=34) (actual time=2738.902..2761.626 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=61084.64..61090.04 rows=1 width=34) (actual time=1334.675..2761.011 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Nested Loop Semi Join  (cost=61084.64..61090.02 rows=1 width=26) (actual time=1333.305..2759.657 rows=4227 loops=1)
                     Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                     Rows Removed by Join Filter: 2768
                     ->  Nested Loop  (cost=61084.21..61087.59 rows=1 width=38) (actual time=1333.297..2735.635 rows=6909 loops=1)
                           Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                           Rows Removed by Join Filter: 158582
                           ->  Nested Loop  (cost=61084.21..61086.26 rows=1 width=42) (actual time=1333.282..2237.038 rows=165491 loops=1)
                                 ->  Gather Merge  (cost=61083.78..61083.90 rows=1 width=38) (actual time=1333.229..1475.484 rows=337680 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Sort  (cost=60083.72..60083.73 rows=1 width=38) (actual time=1297.122..1304.737 rows=67536 loops=5)
                                             Sort Key: supplier.s_name
                                             Sort Method: quicksort  Memory: 6322kB
                                             Worker 0:  Sort Method: quicksort  Memory: 9059kB
                                             Worker 1:  Sort Method: quicksort  Memory: 8507kB
                                             Worker 2:  Sort Method: quicksort  Memory: 6146kB
                                             Worker 3:  Sort Method: quicksort  Memory: 8638kB
                                             ->  Nested Loop  (cost=32228.37..60083.71 rows=1 width=38) (actual time=344.942..846.143 rows=67536 loops=5)
                                                   ->  Parallel Hash Anti Join  (cost=32228.08..60079.64 rows=1 width=8) (actual time=344.918..709.247 rows=67536 loops=5)
                                                         Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                                         Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                                         Rows Removed by Join Filter: 275172
                                                         ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..25976.70 rows=500076 width=8) (actual time=0.024..113.430 rows=758659 loops=5)
                                                               Heap Fetches: 0
                                                         ->  Parallel Hash  (cost=25976.70..25976.70 rows=500076 width=8) (actual time=341.878..341.879 rows=758659 loops=5)
                                                               Buckets: 4194304 (originally 2097152)  Batches: 1 (originally 1)  Memory Usage: 197632kB
                                                               ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..25976.70 rows=500076 width=8) (actual time=0.186..104.828 rows=758659 loops=5)
                                                                     Heap Fetches: 0
                                                   ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4.07 rows=1 width=34) (actual time=0.002..0.002 rows=1 loops=337680)
                                                         Index Cond: (s_suppkey = l1.l_suppkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=337680)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=165491)
                                 Filter: (n_name = 'PERU'::bpchar)
                                 Rows Removed by Filter: 24
                     ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=6909)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Heap Fetches: 0
 Planning Time: 3.450 ms
 Execution Time: 2761.710 ms
(47 rows)

query 22 run 1
SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.55..12517.18 rows=1 width=72) (actual time=159.306..160.852 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.80..6242.81 rows=1 width=32) (actual time=45.290..45.367 rows=1 loops=1)
           ->  Gather  (cost=6242.58..6242.79 rows=2 width=32) (actual time=45.164..45.355 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.58..5242.59 rows=1 width=32) (actual time=38.043..38.044 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1982 width=6) (actual time=0.112..36.710 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7503.36 rows=757 width=72) (actual time=159.305..160.773 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7484.43 rows=757 width=38) (actual time=74.631..160.282 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=74.218..77.169 rows=2734 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=25.019..25.174 rows=1656 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 961kB
                           Worker 0:  Sort Method: quicksort  Memory: 617kB
                           Worker 1:  Sort Method: quicksort  Memory: 533kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.017..22.915 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.02 rows=18 width=4) (actual time=0.030..0.030 rows=1 loops=2734)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 13.728 ms
 Execution Time: 161.540 ms
(30 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.55..12517.18 rows=1 width=72) (actual time=60.429..61.970 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.80..6242.81 rows=1 width=32) (actual time=29.600..29.679 rows=1 loops=1)
           ->  Gather  (cost=6242.58..6242.79 rows=2 width=32) (actual time=29.479..29.668 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.58..5242.59 rows=1 width=32) (actual time=27.241..27.242 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1982 width=6) (actual time=0.014..26.073 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7503.36 rows=757 width=72) (actual time=60.428..61.889 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7484.43 rows=757 width=38) (actual time=54.218..61.672 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=54.185..56.362 rows=2734 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=22.033..22.108 rows=1535 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 709kB
                           Worker 0:  Sort Method: quicksort  Memory: 599kB
                           Worker 1:  Sort Method: quicksort  Memory: 610kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.018..20.043 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.02 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=2734)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 0.886 ms
 Execution Time: 62.247 ms
(30 rows)

