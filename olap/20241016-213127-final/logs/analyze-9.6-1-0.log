query 1 run 1
SET
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424598.60..424598.60 rows=1 width=236) (actual time=9691.186..9691.187 rows=1 loops=1)
   ->  Sort  (cost=424598.60..424598.61 rows=6 width=236) (actual time=9691.185..9691.185 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424598.40..424598.57 rows=6 width=236) (actual time=9691.152..9691.157 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..187570.92 rows=5925687 width=25) (actual time=0.353..1306.405 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning time: 16.759 ms
 Execution time: 9691.991 ms
(11 rows)

SET
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424598.60..424598.60 rows=1 width=236) (actual time=9444.784..9444.784 rows=1 loops=1)
   ->  Sort  (cost=424598.60..424598.61 rows=6 width=236) (actual time=9444.782..9444.782 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424598.40..424598.57 rows=6 width=236) (actual time=9444.749..9444.754 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..187570.92 rows=5925687 width=25) (actual time=0.028..1116.276 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning time: 0.792 ms
 Execution time: 9444.849 ms
(11 rows)

query 2 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=19215.26..19215.27 rows=1 width=192) (actual time=171.717..171.731 rows=100 loops=1)
   ->  Sort  (cost=19215.26..19215.27 rows=1 width=192) (actual time=171.717..171.721 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Nested Loop  (cost=15.16..19215.25 rows=1 width=192) (actual time=5.863..171.332 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.008..0.014 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
               ->  Materialize  (cost=15.16..19212.55 rows=1 width=170) (actual time=0.545..34.182 rows=489 loops=5)
                     ->  Nested Loop  (cost=15.16..19212.55 rows=1 width=170) (actual time=2.718..170.460 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.88..19211.27 rows=1 width=34) (actual time=2.331..132.656 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5472.58 rows=844 width=30) (actual time=0.459..24.660 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=14.46..16.27 rows=1 width=14) (actual time=0.001..0.002 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=14.02..14.03 rows=1 width=32) (actual time=0.132..0.132 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.97..14.02 rows=1 width=6) (actual time=0.119..0.130 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.97..12.91 rows=4 width=10) (actual time=0.099..0.127 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.83..12.24 rows=4 width=10) (actual time=0.097..0.120 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.091..0.093 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.41..2.43 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.076..0.077 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning time: 23.931 ms
 Execution time: 171.794 ms
(47 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=19215.26..19215.27 rows=1 width=192) (actual time=22.757..22.770 rows=100 loops=1)
   ->  Sort  (cost=19215.26..19215.27 rows=1 width=192) (actual time=22.755..22.759 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Nested Loop  (cost=15.16..19215.25 rows=1 width=192) (actual time=0.176..22.420 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.008..0.013 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.004 rows=25 loops=1)
               ->  Materialize  (cost=15.16..19212.55 rows=1 width=170) (actual time=0.016..4.417 rows=489 loops=5)
                     ->  Nested Loop  (cost=15.16..19212.55 rows=1 width=170) (actual time=0.076..21.833 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.88..19211.27 rows=1 width=34) (actual time=0.073..20.802 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5472.58 rows=844 width=30) (actual time=0.022..6.370 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=14.46..16.27 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=14.02..14.03 rows=1 width=32) (actual time=0.016..0.016 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.97..14.02 rows=1 width=6) (actual time=0.011..0.015 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.97..12.91 rows=4 width=10) (actual time=0.005..0.013 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.83..12.24 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.41..2.43 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.002..0.002 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning time: 1.811 ms
 Execution time: 23.038 ms
(47 rows)

query 3 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=305289.81..305289.84 rows=10 width=44) (actual time=2028.413..2028.414 rows=10 loops=1)
   ->  Sort  (cost=305289.81..306086.53 rows=318688 width=44) (actual time=2028.411..2028.411 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=288842.44..298403.08 rows=318688 width=44) (actual time=2007.791..2026.329 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=288842.44..289639.16 rows=318688 width=24) (actual time=2007.775..2009.832 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=56764.52..259711.51 rows=318688 width=24) (actual time=561.585..2001.721 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187570.92 rows=3250573 width=16) (actual time=0.011..1169.573 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 2739342
                           ->  Hash  (cost=54926.26..54926.26 rows=147061 width=12) (actual time=560.312..560.313 rows=146063 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                                 ->  Hash Join  (cost=5851.75..54926.26 rows=147061 width=12) (actual time=54.018..533.233 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=726106 width=16) (actual time=0.005..358.957 rows=722275 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 777725
                                       ->  Hash  (cost=5472.00..5472.00 rows=30380 width=4) (actual time=53.782..53.782 rows=30142 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30380 width=4) (actual time=0.006..49.576 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
 Planning time: 24.875 ms
 Execution time: 2028.497 ms
(28 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=305289.81..305289.84 rows=10 width=44) (actual time=1571.601..1571.602 rows=10 loops=1)
   ->  Sort  (cost=305289.81..306086.53 rows=318688 width=44) (actual time=1571.600..1571.600 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=288842.44..298403.08 rows=318688 width=44) (actual time=1550.940..1569.606 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=288842.44..289639.16 rows=318688 width=24) (actual time=1550.926..1552.882 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=56764.52..259711.51 rows=318688 width=24) (actual time=329.853..1545.351 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187570.92 rows=3250573 width=16) (actual time=0.012..952.754 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 2739342
                           ->  Hash  (cost=54926.26..54926.26 rows=147061 width=12) (actual time=329.341..329.341 rows=146063 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                                 ->  Hash Join  (cost=5851.75..54926.26 rows=147061 width=12) (actual time=26.878..305.470 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=726106 width=16) (actual time=0.005..189.005 rows=722275 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 777725
                                       ->  Hash  (cost=5472.00..5472.00 rows=30380 width=4) (actual time=26.636..26.636 rows=30142 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30380 width=4) (actual time=0.005..23.477 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
 Planning time: 1.237 ms
 Execution time: 1571.675 ms
(28 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79986.04..79986.04 rows=1 width=24) (actual time=1074.314..1074.314 rows=1 loops=1)
   ->  Sort  (cost=79986.04..79986.05 rows=5 width=24) (actual time=1074.312..1074.312 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=79985.97..79986.02 rows=5 width=24) (actual time=1074.052..1074.053 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Merge Semi Join  (cost=32593.90..79692.18 rows=58758 width=16) (actual time=504.611..1061.275 rows=51398 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=32593.43..32740.33 rows=58758 width=20) (actual time=503.051..510.378 rows=55973 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: quicksort  Memory: 5909kB
                           ->  Bitmap Heap Scan on orders  (cost=926.70..27939.07 rows=58758 width=20) (actual time=12.440..489.609 rows=55973 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=23186
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..912.01 rows=58758 width=0) (actual time=9.546..9.546 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q21_idx_2 on lineitem  (cost=0.43..41020.80 rows=2000291 width=4) (actual time=1.547..373.601 rows=3793256 loops=1)
                           Heap Fetches: 0
 Planning time: 19.964 ms
 Execution time: 1074.557 ms
(20 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79986.04..79986.04 rows=1 width=24) (actual time=529.518..529.518 rows=1 loops=1)
   ->  Sort  (cost=79986.04..79986.05 rows=5 width=24) (actual time=529.517..529.517 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=79985.97..79986.02 rows=5 width=24) (actual time=529.498..529.498 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Merge Semi Join  (cost=32593.90..79692.18 rows=58758 width=16) (actual time=48.819..519.518 rows=51398 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=32593.43..32740.33 rows=58758 width=20) (actual time=48.773..53.610 rows=55973 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: quicksort  Memory: 5909kB
                           ->  Bitmap Heap Scan on orders  (cost=926.70..27939.07 rows=58758 width=20) (actual time=8.443..41.354 rows=55973 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=23186
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..912.01 rows=58758 width=0) (actual time=5.554..5.554 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q21_idx_2 on lineitem  (cost=0.43..41020.80 rows=2000291 width=4) (actual time=0.040..294.377 rows=3793256 loops=1)
                           Heap Fetches: 0
 Planning time: 1.035 ms
 Execution time: 529.568 ms
(20 rows)

query 5 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=156021.98..156021.99 rows=1 width=58) (actual time=1105.900..1105.900 rows=1 loops=1)
   ->  Sort  (cost=156021.98..156022.05 rows=25 width=58) (actual time=1105.898..1105.898 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=155930.80..156021.86 rows=25 width=58) (actual time=1102.614..1105.886 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=155930.80..155948.95 rows=7260 width=38) (actual time=1101.777..1102.270 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 782kB
                     ->  Hash Join  (cost=10393.10..155465.22 rows=7260 width=38) (actual time=97.938..1098.099 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=9920.10..153554.30 rows=182043 width=50) (actual time=93.001..1061.180 rows=182435 loops=1)
                                 ->  Hash Join  (cost=9919.54..40771.58 rows=45504 width=38) (actual time=91.803..671.554 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3582.51..33126.31 rows=227520 width=8) (actual time=31.203..549.616 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3525.63 rows=227520 width=0) (actual time=27.951..27.951 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=60.346..60.346 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.033..54.530 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.006..38.152 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.021..0.021 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.016..0.019 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.003..0.005 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.44 rows=4 width=20) (actual time=0.007..0.008 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=4.871..4.871 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.003..3.685 rows=10000 loops=1)
 Planning time: 28.705 ms
 Execution time: 1105.973 ms
(42 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=156021.98..156021.99 rows=1 width=58) (actual time=299.983..299.983 rows=1 loops=1)
   ->  Sort  (cost=156021.98..156022.05 rows=25 width=58) (actual time=299.983..299.983 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=155930.80..156021.86 rows=25 width=58) (actual time=296.772..299.969 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=155930.80..155948.95 rows=7260 width=38) (actual time=295.967..296.412 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 782kB
                     ->  Hash Join  (cost=10393.10..155465.22 rows=7260 width=38) (actual time=58.496..293.661 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=9920.10..153554.30 rows=182043 width=50) (actual time=55.879..272.316 rows=182435 loops=1)
                                 ->  Hash Join  (cost=9919.54..40771.58 rows=45504 width=38) (actual time=55.836..143.672 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3582.51..33126.31 rows=227520 width=8) (actual time=21.743..70.717 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3525.63 rows=227520 width=0) (actual time=18.493..18.493 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=33.811..33.811 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.032..28.992 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.007..8.298 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.021..0.021 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.015..0.019 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.004 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.44 rows=4 width=20) (actual time=0.002..0.002 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.595..2.595 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.004..1.456 rows=10000 loops=1)
 Planning time: 3.331 ms
 Execution time: 300.058 ms
(42 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=117213.43..117213.44 rows=1 width=32) (actual time=1283.618..1283.618 rows=1 loops=1)
   ->  Aggregate  (cost=117213.43..117213.44 rows=1 width=32) (actual time=1283.617..1283.617 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=22972.06..116618.24 rows=119038 width=12) (actual time=142.545..1199.698 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22942.30 rows=119038 width=0) (actual time=130.685..130.685 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 14.362 ms
 Execution time: 1283.695 ms
(9 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=117213.43..117213.44 rows=1 width=32) (actual time=231.663..231.664 rows=1 loops=1)
   ->  Aggregate  (cost=117213.43..117213.44 rows=1 width=32) (actual time=231.661..231.661 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=22972.06..116618.24 rows=119038 width=12) (actual time=110.814..188.326 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22942.30 rows=119038 width=0) (actual time=100.377..100.377 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 0.716 ms
 Execution time: 231.701 ms
(9 rows)

query 7 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=237450.55..237450.58 rows=1 width=92) (actual time=3252.798..3252.798 rows=1 loops=1)
   ->  GroupAggregate  (cost=237450.55..237661.04 rows=6014 width=92) (actual time=3252.798..3252.798 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=237450.55..237465.58 rows=6014 width=72) (actual time=3251.915..3252.008 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 998kB
               ->  Hash Join  (cost=88293.96..237073.04 rows=6014 width=72) (actual time=835.391..3247.872 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=32907.06..180882.98 rows=144509 width=46) (actual time=303.214..2680.696 rows=144718 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=32527.16..172263.83 rows=1811778 width=24) (actual time=298.596..2465.190 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32074.21 rows=1811778 width=0) (actual time=277.853..277.853 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=369.90..369.90 rows=800 width=30) (actual time=4.489..4.489 rows=794 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                 ->  Hash Join  (cost=1.40..369.90 rows=800 width=30) (actual time=0.014..4.365 rows=794 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.003..3.402 rows=10000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.009..0.009 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.009 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=53886.90..53886.90 rows=120000 width=30) (actual time=531.588..531.588 rows=118477 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                           ->  Hash Join  (cost=5930.90..53886.90 rows=120000 width=30) (actual time=54.767..507.257 rows=118477 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.013..281.407 rows=1500000 loops=1)
                                 ->  Hash  (cost=5780.90..5780.90 rows=12000 width=30) (actual time=54.738..54.738 rows=11896 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                       ->  Hash Join  (cost=1.40..5780.90 rows=12000 width=30) (actual time=0.018..52.379 rows=11896 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.003..38.162 rows=150000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.012..0.012 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.010 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning time: 30.340 ms
 Execution time: 3252.908 ms
(44 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=237450.55..237450.58 rows=1 width=92) (actual time=1005.220..1005.221 rows=1 loops=1)
   ->  GroupAggregate  (cost=237450.55..237661.04 rows=6014 width=92) (actual time=1005.219..1005.219 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=237450.55..237465.58 rows=6014 width=72) (actual time=1004.363..1004.457 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 998kB
               ->  Hash Join  (cost=88293.96..237073.04 rows=6014 width=72) (actual time=534.002..1001.714 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=32907.06..180882.98 rows=144509 width=46) (actual time=228.011..668.670 rows=144718 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=32527.16..172263.83 rows=1811778 width=24) (actual time=226.000..485.992 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32074.21 rows=1811778 width=0) (actual time=205.210..205.211 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=369.90..369.90 rows=800 width=30) (actual time=1.951..1.951 rows=794 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                 ->  Hash Join  (cost=1.40..369.90 rows=800 width=30) (actual time=0.015..1.863 rows=794 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.003..0.546 rows=10000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.009..0.009 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.008 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=53886.90..53886.90 rows=120000 width=30) (actual time=305.815..305.815 rows=118477 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                           ->  Hash Join  (cost=5930.90..53886.90 rows=120000 width=30) (actual time=27.967..285.910 rows=118477 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.006..77.177 rows=1500000 loops=1)
                                 ->  Hash  (cost=5780.90..5780.90 rows=12000 width=30) (actual time=27.946..27.946 rows=11896 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                       ->  Hash Join  (cost=1.40..5780.90 rows=12000 width=30) (actual time=0.017..26.291 rows=11896 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..8.029 rows=150000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.012..0.012 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.010 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning time: 2.460 ms
 Execution time: 1005.316 ms
(44 rows)

query 8 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=60752.12..60752.16 rows=1 width=40) (actual time=1220.394..1220.394 rows=1 loops=1)
   ->  GroupAggregate  (cost=60752.12..60859.49 rows=2386 width=40) (actual time=1220.394..1220.394 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=60752.12..60758.08 rows=2386 width=46) (actual time=1219.541..1219.623 rows=1235 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 291kB
               ->  Hash Join  (cost=50441.53..60618.26 rows=2386 width=46) (actual time=768.913..1217.969 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=50439.97..60571.96 rows=2386 width=20) (actual time=768.884..1215.039 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=49991.97..60091.12 rows=2393 width=20) (actual time=763.923..1208.734 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.98..9926.44 rows=39936 width=20) (actual time=2.444..436.417 rows=39694 loops=1)
                                       ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5435.73 rows=1331 width=4) (actual time=1.240..34.987 rows=1320 loops=1)
                                             Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.06 rows=31 width=24) (actual time=0.243..0.298 rows=30 loops=1320)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Heap Fetches: 0
                                 ->  Hash  (cost=48867.52..48867.52 rows=89878 width=8) (actual time=761.354..761.354 rows=91179 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 4586kB
                                       ->  Hash Join  (cost=13411.70..48867.52 rows=89878 width=8) (actual time=111.504..741.964 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=7074.66..39946.50 rows=449389 width=12) (actual time=53.073..591.232 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=26131
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6962.32 rows=449389 width=0) (actual time=49.776..49.776 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=58.367..58.367 rows=29952 loops=1)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                                   ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.025..54.150 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.004..37.985 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.018..0.018 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.012..0.017 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=4.951..4.951 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..3.644 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.011..0.011 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.005 rows=25 loops=1)
 Planning time: 36.196 ms
 Execution time: 1220.495 ms
(51 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=60752.12..60752.16 rows=1 width=40) (actual time=243.368..243.369 rows=1 loops=1)
   ->  GroupAggregate  (cost=60752.12..60859.49 rows=2386 width=40) (actual time=243.367..243.367 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=60752.12..60758.08 rows=2386 width=46) (actual time=242.537..242.629 rows=1235 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 291kB
               ->  Hash Join  (cost=50441.53..60618.26 rows=2386 width=46) (actual time=215.712..242.055 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=50439.97..60571.96 rows=2386 width=20) (actual time=215.689..241.221 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=49991.97..60091.12 rows=2393 width=20) (actual time=213.078..237.873 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.98..9926.44 rows=39936 width=20) (actual time=0.055..19.121 rows=39694 loops=1)
                                       ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5435.73 rows=1331 width=4) (actual time=0.041..6.814 rows=1320 loops=1)
                                             Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.06 rows=31 width=24) (actual time=0.003..0.007 rows=30 loops=1320)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Heap Fetches: 0
                                 ->  Hash  (cost=48867.52..48867.52 rows=89878 width=8) (actual time=212.969..212.969 rows=91179 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 4586kB
                                       ->  Hash Join  (cost=13411.70..48867.52 rows=89878 width=8) (actual time=70.316..199.580 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=7074.66..39946.50 rows=449389 width=12) (actual time=38.341..106.990 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=26131
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6962.32 rows=449389 width=0) (actual time=35.035..35.035 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=31.949..31.949 rows=29952 loops=1)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                                   ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.021..28.770 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.003..8.354 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.015..0.015 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.010..0.013 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.002 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.600..2.600 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..1.372 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.011..0.012 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.007 rows=25 loops=1)
 Planning time: 4.150 ms
 Execution time: 243.475 ms
(51 rows)

query 9 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141947.18..141947.18 rows=1 width=66) (actual time=2353.952..2353.953 rows=1 loops=1)
   ->  Sort  (cost=141947.18..142097.55 rows=60150 width=66) (actual time=2353.951..2353.951 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=140593.80..141646.43 rows=60150 width=66) (actual time=2353.780..2353.877 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=66330.83..137421.37 rows=181282 width=57) (actual time=585.705..2040.350 rows=325928 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     ->  Hash Join  (cost=65743.76..133433.23 rows=181826 width=35) (actual time=578.661..1920.275 rows=325928 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Merge Join  (cost=2.76..56263.10 rows=181826 width=35) (actual time=2.855..1057.810 rows=325928 loops=1)
                                 Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                 Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                 Rows Removed by Join Filter: 977784
                                 ->  Nested Loop  (cost=0.98..26375.02 rows=181826 width=33) (actual time=2.328..662.475 rows=325928 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6454.42 rows=6060 width=4) (actual time=0.261..50.719 rows=10880 loops=1)
                                             Filter: ((p_name)::text ~~ '%navy%'::text)
                                             Rows Removed by Filter: 189120
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.98 rows=31 width=29) (actual time=0.041..0.053 rows=30 loops=10880)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..18168.42 rows=800000 width=14) (actual time=0.502..205.040 rows=2060177 loops=1)
                                       Heap Fetches: 0
                           ->  Hash  (cost=41131.00..41131.00 rows=1500000 width=8) (actual time=574.358..574.358 rows=1500000 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 22817kB
                                 ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.013..363.986 rows=1500000 loops=1)
                     ->  Hash  (cost=462.06..462.06 rows=10000 width=30) (actual time=6.103..6.103 rows=10000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 734kB
                           ->  Hash Join  (cost=1.56..462.06 rows=10000 width=30) (actual time=0.017..5.057 rows=10000 loops=1)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.004..3.047 rows=10000 loops=1)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.009..0.009 rows=25 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.003 rows=25 loops=1)
 Planning time: 36.237 ms
 Execution time: 2354.333 ms
(37 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141947.18..141947.18 rows=1 width=66) (actual time=1604.908..1604.909 rows=1 loops=1)
   ->  Sort  (cost=141947.18..142097.55 rows=60150 width=66) (actual time=1604.906..1604.906 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=140593.80..141646.43 rows=60150 width=66) (actual time=1604.736..1604.825 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=66330.83..137421.37 rows=181282 width=57) (actual time=400.315..1300.118 rows=325928 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     ->  Hash Join  (cost=65743.76..133433.23 rows=181826 width=35) (actual time=396.420..1188.668 rows=325928 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Merge Join  (cost=2.76..56263.10 rows=181826 width=35) (actual time=0.074..517.342 rows=325928 loops=1)
                                 Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                 Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                 Rows Removed by Join Filter: 977784
                                 ->  Nested Loop  (cost=0.98..26375.02 rows=181826 width=33) (actual time=0.053..165.211 rows=325928 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6454.42 rows=6060 width=4) (actual time=0.035..38.837 rows=10880 loops=1)
                                             Filter: ((p_name)::text ~~ '%navy%'::text)
                                             Rows Removed by Filter: 189120
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.98 rows=31 width=29) (actual time=0.003..0.009 rows=30 loops=10880)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..18168.42 rows=800000 width=14) (actual time=0.012..171.887 rows=2060177 loops=1)
                                       Heap Fetches: 0
                           ->  Hash  (cost=41131.00..41131.00 rows=1500000 width=8) (actual time=395.036..395.036 rows=1500000 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 22817kB
                                 ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.010..195.112 rows=1500000 loops=1)
                     ->  Hash  (cost=462.06..462.06 rows=10000 width=30) (actual time=3.875..3.875 rows=10000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 734kB
                           ->  Hash Join  (cost=1.56..462.06 rows=10000 width=30) (actual time=0.018..2.839 rows=10000 loops=1)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.005..0.686 rows=10000 loops=1)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.010..0.010 rows=25 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.004 rows=25 loops=1)
 Planning time: 4.939 ms
 Execution time: 1605.335 ms
(37 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=165490.15..165490.20 rows=20 width=202) (actual time=1536.240..1536.244 rows=20 loops=1)
   ->  Sort  (cost=165490.15..165632.75 rows=57043 width=202) (actual time=1536.238..1536.241 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=163259.22..163972.25 rows=57043 width=202) (actual time=1509.323..1526.008 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Hash Join  (cost=35582.09..162546.18 rows=57043 width=182) (actual time=632.475..1412.076 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=35580.53..161760.27 rows=57043 width=160) (actual time=632.462..1391.009 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=28608.53..154003.93 rows=57043 width=16) (actual time=543.521..1264.822 rows=114347 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..119219.29 rows=1495018 width=16) (actual time=1.032..559.307 rows=1478870 loops=1)
                                       Index Cond: (l_returnflag = 'R'::bpchar)
                                       Heap Fetches: 0
                                 ->  Hash  (cost=27892.56..27892.56 rows=57233 width=8) (actual time=542.192..542.192 rows=57111 loops=1)
                                       Buckets: 65536  Batches: 1  Memory Usage: 2743kB
                                       ->  Bitmap Heap Scan on orders  (cost=903.07..27892.56 rows=57233 width=8) (actual time=12.480..526.919 rows=57111 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=23377
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..888.76 rows=57233 width=0) (actual time=9.481..9.481 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=88.641..88.641 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.003..50.569 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.010..0.010 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.004..0.006 rows=25 loops=1)
 Planning time: 27.397 ms
 Execution time: 1536.397 ms
(30 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=165490.15..165490.20 rows=20 width=202) (actual time=755.892..755.896 rows=20 loops=1)
   ->  Sort  (cost=165490.15..165632.75 rows=57043 width=202) (actual time=755.891..755.894 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=163259.22..163972.25 rows=57043 width=202) (actual time=729.075..745.841 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Hash Join  (cost=35582.09..162546.18 rows=57043 width=182) (actual time=110.692..642.483 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=35580.53..161760.27 rows=57043 width=160) (actual time=110.675..622.924 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=28608.53..154003.93 rows=57043 width=16) (actual time=47.568..523.933 rows=114347 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..119219.29 rows=1495018 width=16) (actual time=0.042..333.327 rows=1478870 loops=1)
                                       Index Cond: (l_returnflag = 'R'::bpchar)
                                       Heap Fetches: 0
                                 ->  Hash  (cost=27892.56..27892.56 rows=57233 width=8) (actual time=47.265..47.265 rows=57111 loops=1)
                                       Buckets: 65536  Batches: 1  Memory Usage: 2743kB
                                       ->  Bitmap Heap Scan on orders  (cost=903.07..27892.56 rows=57233 width=8) (actual time=8.272..40.237 rows=57111 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=23377
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..888.76 rows=57233 width=0) (actual time=5.339..5.339 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=62.802..62.802 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.003..26.267 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.012..0.012 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.004..0.008 rows=25 loops=1)
 Planning time: 1.764 ms
 Execution time: 756.053 ms
(30 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29215.34..29215.34 rows=1 width=36) (actual time=729.917..729.917 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=14020.24..14020.25 rows=1 width=32) (actual time=32.259..32.259 rows=1 loops=1)
           ->  Nested Loop  (cost=7.81..13780.23 rows=32000 width=10) (actual time=0.800..20.840 rows=32880 loops=1)
                 ->  Nested Loop  (cost=7.38..234.45 rows=400 width=4) (actual time=0.792..1.018 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=7.38..229.14 rows=400 width=8) (actual time=0.784..0.962 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.765..0.765 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..33.06 rows=80 width=14) (actual time=0.003..0.038 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=15195.09..15275.09 rows=32000 width=36) (actual time=729.916..729.916 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=14555.09..15035.09 rows=32000 width=36) (actual time=721.015..729.778 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=0.42..13995.09 rows=32000 width=14) (actual time=0.372..655.717 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..449.31 rows=400 width=4) (actual time=0.070..3.716 rows=411 loops=1)
                           Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                           Rows Removed by Join Filter: 9589
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..2.679 rows=10000 loops=1)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..33.06 rows=80 width=18) (actual time=0.090..1.568 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 15.725 ms
 Execution time: 730.204 ms
(34 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29215.34..29215.34 rows=1 width=36) (actual time=86.515..86.516 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=14020.24..14020.25 rows=1 width=32) (actual time=30.743..30.743 rows=1 loops=1)
           ->  Nested Loop  (cost=7.81..13780.23 rows=32000 width=10) (actual time=0.068..19.137 rows=32880 loops=1)
                 ->  Nested Loop  (cost=7.38..234.45 rows=400 width=4) (actual time=0.064..0.279 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.012 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=7.38..229.14 rows=400 width=8) (actual time=0.052..0.227 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.035..0.035 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..33.06 rows=80 width=14) (actual time=0.003..0.036 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=15195.09..15275.09 rows=32000 width=36) (actual time=86.513..86.513 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=14555.09..15035.09 rows=32000 width=36) (actual time=77.591..86.393 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=0.42..13995.09 rows=32000 width=14) (actual time=0.032..28.348 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..449.31 rows=400 width=4) (actual time=0.022..1.874 rows=411 loops=1)
                           Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                           Rows Removed by Join Filter: 9589
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..0.645 rows=10000 loops=1)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..33.06 rows=80 width=18) (actual time=0.004..0.054 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 0.999 ms
 Execution time: 86.596 ms
(34 rows)

query 12 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=75957.98..75957.98 rows=1 width=27) (actual time=599.037..599.037 rows=1 loops=1)
   ->  Sort  (cost=75957.98..75958.00 rows=7 width=27) (actual time=599.035..599.035 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=75957.87..75957.94 rows=7 width=27) (actual time=599.015..599.015 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Merge Join  (cost=8.29..75463.29 rows=28262 width=27) (actual time=1.514..579.396 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.287..391.741 rows=1499957 loops=1)
                     ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..14497.73 rows=28262 width=15) (actual time=1.126..89.760 rows=30953 loops=1)
                           Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                           Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                           Rows Removed by Filter: 77481
                           Heap Fetches: 0
 Planning time: 20.583 ms
 Execution time: 599.180 ms
(16 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=75957.98..75957.98 rows=1 width=27) (actual time=360.466..360.466 rows=1 loops=1)
   ->  Sort  (cost=75957.98..75958.00 rows=7 width=27) (actual time=360.465..360.465 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=75957.87..75957.94 rows=7 width=27) (actual time=360.447..360.447 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Merge Join  (cost=8.29..75463.29 rows=28262 width=27) (actual time=0.052..346.038 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.009..194.647 rows=1499957 loops=1)
                     ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..14497.73 rows=28262 width=15) (actual time=0.027..59.587 rows=30953 loops=1)
                           Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                           Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                           Rows Removed by Filter: 77481
                           Heap Fetches: 0
 Planning time: 1.148 ms
 Execution time: 360.518 ms
(16 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81709.61..81709.61 rows=1 width=16) (actual time=1624.835..1624.835 rows=1 loops=1)
   ->  Sort  (cost=81709.61..81710.11 rows=200 width=16) (actual time=1624.835..1624.835 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=81706.61..81708.61 rows=200 width=16) (actual time=1624.810..1624.814 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=77956.61..79456.61 rows=150000 width=12) (actual time=1578.405..1604.862 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4953.42..70457.36 rows=1499850 width=8) (actual time=33.480..1122.734 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.377..638.658 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=32.814..32.814 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.532..16.509 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 15.360 ms
 Execution time: 1625.902 ms
(19 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81709.61..81709.61 rows=1 width=16) (actual time=1419.330..1419.331 rows=1 loops=1)
   ->  Sort  (cost=81709.61..81710.11 rows=200 width=16) (actual time=1419.329..1419.329 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=81706.61..81708.61 rows=200 width=16) (actual time=1419.305..1419.310 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=77956.61..79456.61 rows=150000 width=12) (actual time=1373.269..1399.613 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4953.42..70457.36 rows=1499850 width=8) (actual time=30.099..947.812 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.012..492.887 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=29.784..29.784 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.045..13.566 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 0.634 ms
 Execution time: 1419.992 ms
(19 rows)

query 14 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=86804.29..86804.30 rows=1 width=32) (actual time=830.772..830.772 rows=1 loops=1)
   ->  Aggregate  (cost=86804.29..86804.30 rows=1 width=32) (actual time=830.771..830.771 rows=1 loops=1)
         ->  Hash Join  (cost=9967.40..85472.64 rows=76094 width=33) (actual time=109.126..759.539 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1368.40..75827.34 rows=76094 width=16) (actual time=20.765..625.069 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1349.37 rows=76094 width=0) (actual time=14.753..14.753 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=87.959..87.959 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.009..55.649 rows=200000 loops=1)
 Planning time: 22.439 ms
 Execution time: 830.873 ms
(14 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=86804.29..86804.30 rows=1 width=32) (actual time=204.533..204.533 rows=1 loops=1)
   ->  Aggregate  (cost=86804.29..86804.30 rows=1 width=32) (actual time=204.533..204.533 rows=1 loops=1)
         ->  Hash Join  (cost=9967.40..85472.64 rows=76094 width=33) (actual time=72.077..157.773 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1368.40..75827.34 rows=76094 width=16) (actual time=15.101..66.942 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1349.37 rows=76094 width=0) (actual time=9.541..9.541 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=56.569..56.569 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.010..27.383 rows=200000 loops=1)
 Planning time: 1.417 ms
 Execution time: 204.610 ms
(14 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=247516.42..247516.48 rows=1 width=103) (actual time=1510.671..1510.671 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122572.69..122572.70 rows=1 width=32) (actual time=233.484..233.484 rows=1 loops=1)
           ->  HashAggregate  (cost=122321.94..122447.31 rows=10030 width=36) (actual time=231.048..232.809 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4081.44..120049.74 rows=227220 width=16) (actual time=34.999..99.772 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4024.63 rows=227220 width=0) (actual time=24.276..24.276 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=124943.72..125553.17 rows=10030 width=103) (actual time=1510.669..1510.669 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..434.29 rows=10000 width=71) (actual time=0.332..4.318 rows=8449 loops=1)
         ->  Sort  (cost=124943.43..124968.51 rows=10030 width=36) (actual time=1505.862..1505.862 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=124026.09..124276.84 rows=10030 width=36) (actual time=1504.261..1505.853 rows=1 loops=1)
                     ->  HashAggregate  (cost=124026.09..124176.54 rows=10030 width=36) (actual time=1504.260..1505.853 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=4081.44..120049.74 rows=227220 width=16) (actual time=46.580..1044.240 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4024.63 rows=227220 width=0) (actual time=36.069..36.069 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 17.360 ms
 Execution time: 1511.416 ms
(28 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=247516.42..247516.48 rows=1 width=103) (actual time=499.319..499.319 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122572.69..122572.70 rows=1 width=32) (actual time=232.013..232.014 rows=1 loops=1)
           ->  HashAggregate  (cost=122321.94..122447.31 rows=10030 width=36) (actual time=229.593..231.319 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4081.44..120049.74 rows=227220 width=16) (actual time=33.994..99.154 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4024.63 rows=227220 width=0) (actual time=23.385..23.385 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=124943.72..125553.17 rows=10030 width=103) (actual time=499.319..499.319 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..434.29 rows=10000 width=71) (actual time=0.013..1.212 rows=8449 loops=1)
         ->  Sort  (cost=124943.43..124968.51 rows=10030 width=36) (actual time=497.621..497.621 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=124026.09..124276.84 rows=10030 width=36) (actual time=496.000..497.616 rows=1 loops=1)
                     ->  HashAggregate  (cost=124026.09..124176.54 rows=10030 width=36) (actual time=496.000..497.614 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=4081.44..120049.74 rows=227220 width=16) (actual time=34.888..125.512 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4024.63 rows=227220 width=0) (actual time=25.166..25.166 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 1.269 ms
 Execution time: 499.419 ms
(28 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=35798.58..35798.58 rows=1 width=44) (actual time=618.080..618.080 rows=1 loops=1)
   ->  Sort  (cost=35798.58..35838.05 rows=15788 width=44) (actual time=618.078..618.078 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=34840.46..35719.64 rows=15788 width=44) (actual time=563.906..615.191 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=34840.46..34984.72 rows=57704 width=40) (actual time=563.885..573.743 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9808.08..30277.12 rows=57704 width=40) (actual time=99.595..306.074 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..18740.43 rows=400000 width=8) (actual time=5.737..139.901 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.938..5.221 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=28852 width=40) (actual time=93.609..93.609 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=28852 width=40) (actual time=0.013..87.283 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning time: 16.967 ms
 Execution time: 618.661 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=35798.58..35798.58 rows=1 width=44) (actual time=563.016..563.016 rows=1 loops=1)
   ->  Sort  (cost=35798.58..35838.05 rows=15788 width=44) (actual time=563.016..563.016 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=34840.46..35719.64 rows=15788 width=44) (actual time=508.719..560.194 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=34840.46..34984.72 rows=57704 width=40) (actual time=508.699..518.617 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9808.08..30277.12 rows=57704 width=40) (actual time=63.896..251.240 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..18740.43 rows=400000 width=8) (actual time=2.262..120.022 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.090..2.238 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=28852 width=40) (actual time=61.600..61.600 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=28852 width=40) (actual time=0.007..56.387 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning time: 0.800 ms
 Execution time: 563.064 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=179256.39..179256.40 rows=1 width=32) (actual time=2235.016..2235.017 rows=1 loops=1)
   ->  Aggregate  (cost=179256.39..179256.40 rows=1 width=32) (actual time=2235.015..2235.015 rows=1 loops=1)
         ->  Nested Loop  (cost=7108.18..179251.27 rows=2048 width=8) (actual time=60.816..2234.582 rows=592 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=7107.62..178660.72 rows=205 width=40) (actual time=59.956..2115.627 rows=208 loops=1)
                     Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=0.43..169135.64 rows=193182 width=36) (actual time=0.814..2048.295 rows=199276 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136233.54 rows=6000874 width=9) (actual time=0.703..1099.851 rows=5979358 loops=1)
                                 Heap Fetches: 0
                     ->  Sort  (cost=7107.19..7107.72 rows=212 width=4) (actual time=52.512..52.655 rows=208 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 34kB
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=212 width=4) (actual time=0.860..52.417 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.76 rows=10 width=17) (actual time=0.526..0.569 rows=3 loops=208)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning time: 21.582 ms
 Execution time: 2235.663 ms
(21 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=179256.39..179256.40 rows=1 width=32) (actual time=1865.550..1865.551 rows=1 loops=1)
   ->  Aggregate  (cost=179256.39..179256.40 rows=1 width=32) (actual time=1865.550..1865.550 rows=1 loops=1)
         ->  Nested Loop  (cost=7108.18..179251.27 rows=2048 width=8) (actual time=30.299..1865.443 rows=592 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=7107.62..178660.72 rows=205 width=40) (actual time=30.285..1863.810 rows=208 loops=1)
                     Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=0.43..169135.64 rows=193182 width=36) (actual time=0.045..1827.327 rows=199276 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136233.54 rows=6000874 width=9) (actual time=0.018..911.964 rows=5979358 loops=1)
                                 Heap Fetches: 0
                     ->  Sort  (cost=7107.19..7107.72 rows=212 width=4) (actual time=24.537..24.575 rows=208 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 34kB
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=212 width=4) (actual time=0.083..24.490 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.76 rows=10 width=17) (actual time=0.006..0.007 rows=3 loops=208)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning time: 1.229 ms
 Execution time: 1865.594 ms
(21 rows)

query 18 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1085351.89..1085352.14 rows=100 width=71) (actual time=2875.752..2875.752 rows=9 loops=1)
   ->  Sort  (cost=1085351.89..1092852.98 rows=3000437 width=71) (actual time=2875.752..2875.752 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=903167.51..970677.35 rows=3000437 width=71) (actual time=2875.719..2875.735 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=903167.51..910668.61 rows=3000437 width=44) (actual time=2875.713..2875.717 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=7008.25..514439.38 rows=3000437 width=44) (actual time=717.937..2875.686 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=36.25..466211.37 rows=3000437 width=25) (actual time=649.260..2806.983 rows=63 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Semi Join  (cost=0.86..283110.51 rows=750000 width=24) (actual time=501.642..2245.374 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.290..307.732 rows=1201687 loops=1)
                                       ->  Materialize  (cost=0.43..203743.36 rows=1500218 width=4) (actual time=398.584..1870.786 rows=9 loops=1)
                                             ->  GroupAggregate  (cost=0.43..184990.64 rows=1500218 width=4) (actual time=398.582..1870.776 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136233.54 rows=6000874 width=9) (actual time=0.618..670.463 rows=6001215 loops=1)
                                                         Heap Fetches: 0
                                 ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136233.54 rows=6000874 width=9) (actual time=0.009..361.395 rows=4807580 loops=1)
                                       Heap Fetches: 0
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=68.375..68.375 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.008..43.548 rows=150000 loops=1)
 Planning time: 26.198 ms
 Execution time: 2875.834 ms
(30 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1085351.89..1085352.14 rows=100 width=71) (actual time=2494.185..2494.187 rows=9 loops=1)
   ->  Sort  (cost=1085351.89..1092852.98 rows=3000437 width=71) (actual time=2494.184..2494.185 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=903167.51..970677.35 rows=3000437 width=71) (actual time=2494.152..2494.170 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=903167.51..910668.61 rows=3000437 width=44) (actual time=2494.147..2494.148 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=7008.25..514439.38 rows=3000437 width=44) (actual time=600.081..2494.122 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=36.25..466211.37 rows=3000437 width=25) (actual time=559.248..2453.260 rows=63 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Semi Join  (cost=0.86..283110.51 rows=750000 width=24) (actual time=410.464..1889.032 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.005..146.516 rows=1201687 loops=1)
                                       ->  Materialize  (cost=0.43..203743.36 rows=1500218 width=4) (actual time=354.405..1677.453 rows=9 loops=1)
                                             ->  GroupAggregate  (cost=0.43..184990.64 rows=1500218 width=4) (actual time=354.403..1677.443 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136233.54 rows=6000874 width=9) (actual time=0.022..498.556 rows=6001215 loops=1)
                                                         Heap Fetches: 0
                                 ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136233.54 rows=6000874 width=9) (actual time=0.008..364.590 rows=4807580 loops=1)
                                       Heap Fetches: 0
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=40.530..40.530 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.008..18.791 rows=150000 loops=1)
 Planning time: 1.503 ms
 Execution time: 2494.261 ms
(30 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=14302.44..14302.45 rows=1 width=32) (actual time=356.366..356.366 rows=1 loops=1)
   ->  Aggregate  (cost=14302.44..14302.45 rows=1 width=32) (actual time=356.364..356.364 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..14301.55 rows=118 width=12) (actual time=2.415..356.003 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=493 width=30) (actual time=1.083..101.068 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.44 rows=1 width=21) (actual time=0.480..0.502 rows=0 loops=507)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning time: 25.883 ms
 Execution time: 356.416 ms
(13 rows)

SET
SET
SET


 Limit  (cost=14302.44..14302.45 rows=1 width=32) (actual time=60.468..60.468 rows=1 loops=1)
   ->  Aggregate  (cost=14302.44..14302.45 rows=1 width=32) (actual time=60.468..60.468 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..14301.55 rows=118 width=12) (actual time=0.307..60.375 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=493 width=30) (actual time=0.241..55.875 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.44 rows=1 width=21) (actual time=0.008..0.008 rows=0 loops=507)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning time: 2.795 ms
 Execution time: 60.510 ms
(13 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=280864.55..280864.55 rows=1 width=51) (actual time=3356.354..3356.355 rows=1 loops=1)
   ->  Sort  (cost=280864.55..280865.05 rows=200 width=51) (actual time=3356.353..3356.353 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=243726.36..280863.55 rows=200 width=51) (actual time=3172.203..3356.173 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.316..3.682 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.305..2.765 rows=10000 loops=1)
               ->  Materialize  (cost=243726.36..280408.24 rows=1 width=8) (actual time=5.994..7.378 rows=4371 loops=438)
                     ->  Merge Join  (cost=243726.36..280408.23 rows=1 width=8) (actual time=2625.394..3169.139 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=243725.52..260088.49 rows=484208 width=40) (actual time=2624.390..3073.507 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=243725.52..246000.48 rows=909985 width=13) (actual time=2624.373..2737.350 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20544kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16337.78..142547.55 rows=909985 width=13) (actual time=162.137..2234.002 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16110.28 rows=909985 width=0) (actual time=142.186..142.186 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.84..13410.22 rows=16160 width=16) (actual time=0.721..63.573 rows=23762 loops=1)
                                 ->  Nested Loop  (cost=0.84..13369.82 rows=16160 width=16) (actual time=0.718..61.525 rows=8748 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6454.42 rows=4040 width=4) (actual time=0.389..32.310 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..1.67 rows=4 width=12) (actual time=0.012..0.013 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning time: 26.730 ms
 Execution time: 3359.135 ms
(40 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=280864.55..280864.55 rows=1 width=51) (actual time=1415.677..1415.678 rows=1 loops=1)
   ->  Sort  (cost=280864.55..280865.05 rows=200 width=51) (actual time=1415.676..1415.676 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=243726.36..280863.55 rows=200 width=51) (actual time=1233.327..1415.524 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.010..1.762 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.002..0.551 rows=10000 loops=1)
               ->  Materialize  (cost=243726.36..280408.24 rows=1 width=8) (actual time=1.649..2.953 rows=4371 loops=438)
                     ->  Merge Join  (cost=243726.36..280408.23 rows=1 width=8) (actual time=722.301..1230.783 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=243725.52..260088.49 rows=484208 width=40) (actual time=721.956..1168.951 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=243725.52..246000.48 rows=909985 width=13) (actual time=721.940..834.059 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20544kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16337.78..142547.55 rows=909985 width=13) (actual time=122.872..358.962 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16110.28 rows=909985 width=0) (actual time=103.561..103.561 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.84..13410.22 rows=16160 width=16) (actual time=0.069..30.432 rows=23762 loops=1)
                                 ->  Nested Loop  (cost=0.84..13369.82 rows=16160 width=16) (actual time=0.067..28.552 rows=8748 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6454.42 rows=4040 width=4) (actual time=0.051..21.806 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..1.67 rows=4 width=12) (actual time=0.002..0.003 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning time: 1.920 ms
 Execution time: 1418.833 ms
(40 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=181664.15..181664.16 rows=1 width=34) (actual time=1300.680..1300.690 rows=100 loops=1)
   ->  Sort  (cost=181664.15..181664.16 rows=1 width=34) (actual time=1300.680..1300.688 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  GroupAggregate  (cost=181664.12..181664.14 rows=1 width=34) (actual time=1299.547..1300.255 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=181664.12..181664.13 rows=1 width=26) (actual time=1299.541..1299.736 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Anti Join  (cost=56058.74..181664.11 rows=1 width=26) (actual time=637.412..1286.802 rows=4227 loops=1)
                           ->  Nested Loop Semi Join  (cost=56058.31..181659.81 rows=1 width=34) (actual time=637.156..1165.668 rows=73962 loops=1)
                                 Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Join Filter: 8252
                                 ->  Merge Join  (cost=56057.88..85483.90 rows=38971 width=38) (actual time=637.126..855.373 rows=76644 loops=1)
                                       Merge Cond: (l1.l_orderkey = orders.o_orderkey)
                                       ->  Sort  (cost=56053.93..56253.36 rows=79772 width=34) (actual time=636.785..655.869 rows=159165 loops=1)
                                             Sort Key: l1.l_orderkey
                                             Sort Method: quicksort  Memory: 18579kB
                                             ->  Hash Join  (cost=239.88..49559.06 rows=79772 width=34) (actual time=5.121..613.550 rows=159165 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..41020.80 rows=2000291 width=8) (actual time=0.681..374.835 rows=3793296 loops=1)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=234.45..234.45 rows=400 width=30) (actual time=4.404..4.405 rows=421 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=7.38..234.45 rows=400 width=30) (actual time=0.727..4.306 rows=421 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.014..0.016 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=7.38..229.14 rows=400 width=34) (actual time=0.709..4.215 rows=421 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.661..0.661 rows=421 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..26810.43 rows=732800 width=4) (actual time=0.332..129.948 rows=733203 loops=1)
                                             Index Cond: (o_orderstatus = 'F'::bpchar)
                                             Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.004..0.004 rows=1 loops=76644)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..2.36 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=73962)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning time: 26.873 ms
 Execution time: 1300.793 ms
(46 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=181664.15..181664.16 rows=1 width=34) (actual time=967.061..967.071 rows=100 loops=1)
   ->  Sort  (cost=181664.15..181664.16 rows=1 width=34) (actual time=967.060..967.066 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  GroupAggregate  (cost=181664.12..181664.14 rows=1 width=34) (actual time=965.928..966.645 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=181664.12..181664.13 rows=1 width=26) (actual time=965.922..966.124 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Anti Join  (cost=56058.74..181664.11 rows=1 width=26) (actual time=546.909..953.509 rows=4227 loops=1)
                           ->  Nested Loop Semi Join  (cost=56058.31..181659.81 rows=1 width=34) (actual time=546.803..849.695 rows=73962 loops=1)
                                 Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Join Filter: 8252
                                 ->  Merge Join  (cost=56057.88..85483.90 rows=38971 width=38) (actual time=546.792..718.232 rows=76644 loops=1)
                                       Merge Cond: (l1.l_orderkey = orders.o_orderkey)
                                       ->  Sort  (cost=56053.93..56253.36 rows=79772 width=34) (actual time=546.743..560.658 rows=159165 loops=1)
                                             Sort Key: l1.l_orderkey
                                             Sort Method: quicksort  Memory: 18579kB
                                             ->  Hash Join  (cost=239.88..49559.06 rows=79772 width=34) (actual time=0.457..525.105 rows=159165 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..41020.80 rows=2000291 width=8) (actual time=0.023..295.803 rows=3793296 loops=1)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=234.45..234.45 rows=400 width=30) (actual time=0.419..0.419 rows=421 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=7.38..234.45 rows=400 width=30) (actual time=0.060..0.373 rows=421 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=7.38..229.14 rows=400 width=34) (actual time=0.052..0.299 rows=421 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.033..0.033 rows=421 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..26810.43 rows=732800 width=4) (actual time=0.045..95.499 rows=733203 loops=1)
                                             Index Cond: (o_orderstatus = 'F'::bpchar)
                                             Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.001..0.001 rows=1 loops=76644)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..2.36 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=73962)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning time: 2.426 ms
 Execution time: 967.158 ms
(46 rows)

query 22 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16186.01..16186.03 rows=1 width=72) (actual time=236.607..236.608 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.43..7546.44 rows=1 width=32) (actual time=106.793..106.793 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4771 width=6) (actual time=0.009..100.777 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8639.57..8659.94 rows=741 width=72) (actual time=236.607..236.607 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8639.57..8641.42 rows=741 width=38) (actual time=236.355..236.403 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8604.25 rows=741 width=38) (actual time=106.841..234.202 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=106.820..164.938 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.38 rows=17 width=4) (actual time=0.003..0.003 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 14.335 ms
 Execution time: 236.654 ms
(20 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16186.01..16186.03 rows=1 width=72) (actual time=170.028..170.028 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.43..7546.44 rows=1 width=32) (actual time=79.984..79.984 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4771 width=6) (actual time=0.008..74.598 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8639.57..8659.94 rows=741 width=72) (actual time=170.028..170.028 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8639.57..8641.42 rows=741 width=38) (actual time=169.784..169.827 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8604.25 rows=741 width=38) (actual time=80.022..168.024 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=80.011..133.878 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.38 rows=17 width=4) (actual time=0.001..0.001 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 0.639 ms
 Execution time: 170.071 ms
(20 rows)

