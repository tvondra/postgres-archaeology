query 1 run 1
SET
SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3947975.15..3947975.15 rows=1 width=236) (actual time=71877.198..71877.199 rows=1 loops=1)
   ->  Sort  (cost=3947975.15..3947975.17 rows=6 width=236) (actual time=71877.197..71877.197 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3947974.96..3947975.12 rows=6 width=236) (actual time=71877.158..71877.165 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 24kB
               ->  Seq Scan on lineitem  (cost=0.00..1874957.05 rows=59229083 width=25) (actual time=0.394..11483.281 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning Time: 24.721 ms
 Execution Time: 71877.941 ms
(12 rows)

SET
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3947975.15..3947975.15 rows=1 width=236) (actual time=70023.218..70023.219 rows=1 loops=1)
   ->  Sort  (cost=3947975.15..3947975.17 rows=6 width=236) (actual time=70023.217..70023.218 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3947974.96..3947975.12 rows=6 width=236) (actual time=70023.184..70023.191 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 24kB
               ->  Seq Scan on lineitem  (cost=0.00..1874957.05 rows=59229083 width=25) (actual time=0.020..9712.481 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning Time: 1.080 ms
 Execution Time: 70023.297 ms
(12 rows)

query 2 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=518293.24..518293.24 rows=1 width=192) (actual time=27942.759..27942.773 rows=100 loops=1)
   ->  Sort  (cost=518293.24..518293.24 rows=1 width=192) (actual time=27942.758..27942.766 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 67kB
         ->  Nested Loop  (cost=52.83..518293.23 rows=1 width=192) (actual time=32.903..27939.145 rows=4737 loops=1)
               Join Filter: (supplier.s_nationkey = nation.n_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.336..0.343 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.173..0.174 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.158..0.161 rows=25 loops=1)
               ->  Materialize  (cost=52.83..518290.53 rows=1 width=170) (actual time=5.372..5586.796 rows=4737 loops=5)
                     ->  Nested Loop  (cost=52.83..518290.53 rows=1 width=170) (actual time=26.853..27923.278 rows=4737 loops=1)
                           Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
                           Rows Removed by Join Filter: 236714834
                           ->  Nested Loop  (cost=52.83..513819.53 rows=1 width=34) (actual time=1.848..1157.156 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..54376.30 rows=8430 width=30) (actual time=0.246..269.174 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=52.41..54.49 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=51.96..51.97 rows=1 width=32) (actual time=0.105..0.105 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.41..51.95 rows=4 width=6) (actual time=0.091..0.101 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.41..50.65 rows=19 width=10) (actual time=0.075..0.097 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.85..49.03 rows=19 width=10) (actual time=0.074..0.095 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.77 rows=19 width=10) (actual time=0.066..0.067 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.42..2.43 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.009..0.010 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.005 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..2.730 rows=49972 loops=4737)
 Planning Time: 27.872 ms
 Execution Time: 27943.126 ms
(50 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=518293.24..518293.24 rows=1 width=192) (actual time=26956.196..26956.211 rows=100 loops=1)
   ->  Sort  (cost=518293.24..518293.24 rows=1 width=192) (actual time=26956.195..26956.204 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 67kB
         ->  Nested Loop  (cost=52.83..518293.23 rows=1 width=192) (actual time=14.045..26953.460 rows=4737 loops=1)
               Join Filter: (supplier.s_nationkey = nation.n_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.009..0.016 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.004 rows=25 loops=1)
               ->  Materialize  (cost=52.83..518290.53 rows=1 width=170) (actual time=2.208..5389.729 rows=4737 loops=5)
                     ->  Nested Loop  (cost=52.83..518290.53 rows=1 width=170) (actual time=11.036..26938.255 rows=4737 loops=1)
                           Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
                           Rows Removed by Join Filter: 236714834
                           ->  Nested Loop  (cost=52.83..513819.53 rows=1 width=34) (actual time=0.298..326.950 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..54376.30 rows=8430 width=30) (actual time=0.011..92.497 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=52.41..54.49 rows=1 width=14) (actual time=0.001..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=51.96..51.97 rows=1 width=32) (actual time=0.024..0.024 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.41..51.95 rows=4 width=6) (actual time=0.017..0.020 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.41..50.65 rows=19 width=10) (actual time=0.009..0.018 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.85..49.03 rows=19 width=10) (actual time=0.008..0.016 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.77 rows=19 width=10) (actual time=0.005..0.005 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.42..2.43 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.009..0.010 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.005 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..2.716 rows=49972 loops=4737)
 Planning Time: 2.006 ms
 Execution Time: 26956.306 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3198198.83..3198198.85 rows=10 width=44) (actual time=25354.404..25354.409 rows=10 loops=1)
   ->  Sort  (cost=3198198.83..3205990.46 rows=3116652 width=44) (actual time=25354.402..25354.406 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=3055367.68..3130849.10 rows=3116652 width=44) (actual time=25289.773..25334.550 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 16  Batches: 1  Memory Usage: 49169kB
               ->  Hash Join  (cost=522042.60..2873238.33 rows=3116652 width=24) (actual time=7141.072..25085.755 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874957.05 rows=32408843 width=16) (actual time=0.634..11391.833 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=496964.56..496964.56 rows=1442643 width=12) (actual time=7137.148..7137.150 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 2  Memory Usage: 47606kB
                           ->  Hash Join  (cost=126651.28..496964.56 rows=1442643 width=12) (actual time=1036.190..6803.367 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=68200.85..419588.88 rows=7209602 width=16) (actual time=531.092..4675.896 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=261268
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..66398.45 rows=7209602 width=0) (actual time=477.963..477.963 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54698.29..54698.29 rows=300171 width=4) (actual time=504.381..504.381 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54698.29 rows=300171 width=4) (actual time=0.666..452.854 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Planning Time: 33.132 ms
 Execution Time: 25356.406 ms
(28 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3198198.83..3198198.85 rows=10 width=44) (actual time=20604.058..20604.064 rows=10 loops=1)
   ->  Sort  (cost=3198198.83..3205990.46 rows=3116652 width=44) (actual time=20604.057..20604.061 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=3055367.68..3130849.10 rows=3116652 width=44) (actual time=20539.116..20584.091 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 16  Batches: 1  Memory Usage: 49169kB
               ->  Hash Join  (cost=522042.60..2873238.33 rows=3116652 width=24) (actual time=4541.291..20344.821 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874957.05 rows=32408843 width=16) (actual time=0.032..9451.536 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=496964.56..496964.56 rows=1442643 width=12) (actual time=4538.421..4538.423 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 2  Memory Usage: 47606kB
                           ->  Hash Join  (cost=126651.28..496964.56 rows=1442643 width=12) (actual time=877.862..4248.568 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=68200.85..419588.88 rows=7209602 width=16) (actual time=507.669..2355.712 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=261268
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..66398.45 rows=7209602 width=0) (actual time=455.166..455.166 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54698.29..54698.29 rows=300171 width=4) (actual time=369.453..369.454 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54698.29 rows=300171 width=4) (actual time=0.031..320.499 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Planning Time: 2.212 ms
 Execution Time: 20605.428 ms
(28 rows)

query 4 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=764247.77..764247.77 rows=1 width=24) (actual time=9877.497..9877.499 rows=1 loops=1)
   ->  Sort  (cost=764247.77..764247.78 rows=5 width=24) (actual time=9877.496..9877.498 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=764247.69..764247.74 rows=5 width=24) (actual time=9877.468..9877.470 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Merge Semi Join  (cost=326927.34..761560.83 rows=537372 width=16) (actual time=4783.644..9747.614 rows=513822 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=326926.71..328270.60 rows=537558 width=20) (actual time=4783.295..4853.639 rows=560424 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: external merge  Disk: 16464kB
                           ->  Bitmap Heap Scan on orders  (cost=6430.40..275761.77 rows=537558 width=20) (actual time=111.855..4626.229 rows=560424 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=231887
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6296.02 rows=537558 width=0) (actual time=64.427..64.427 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.44..374794.05 rows=19995041 width=4) (actual time=0.341..3177.873 rows=37929279 loops=1)
                           Heap Fetches: 0
 Planning Time: 26.735 ms
 Execution Time: 9880.401 ms
(21 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=764247.77..764247.77 rows=1 width=24) (actual time=6396.671..6396.673 rows=1 loops=1)
   ->  Sort  (cost=764247.77..764247.78 rows=5 width=24) (actual time=6396.670..6396.671 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=764247.69..764247.74 rows=5 width=24) (actual time=6396.642..6396.644 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Merge Semi Join  (cost=326927.34..761560.83 rows=537372 width=16) (actual time=1517.161..6269.656 rows=513822 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=326926.71..328270.60 rows=537558 width=20) (actual time=1517.104..1586.627 rows=560424 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: external merge  Disk: 16464kB
                           ->  Bitmap Heap Scan on orders  (cost=6430.40..275761.77 rows=537558 width=20) (actual time=110.104..1399.762 rows=560424 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=231887
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6296.02 rows=537558 width=0) (actual time=63.508..63.509 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.44..374794.05 rows=19995041 width=4) (actual time=0.049..2977.715 rows=37929279 loops=1)
                           Heap Fetches: 0
 Planning Time: 2.016 ms
 Execution Time: 6399.009 ms
(21 rows)

query 5 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1616521.41..1616521.41 rows=1 width=58) (actual time=10015.930..10015.937 rows=1 loops=1)
   ->  Sort  (cost=1616521.41..1616521.47 rows=25 width=58) (actual time=10015.928..10015.935 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=1615631.46..1616521.28 rows=25 width=58) (actual time=9991.311..10015.915 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=1615631.46..1615809.36 rows=71161 width=38) (actual time=9985.195..9988.105 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 7575kB
                     ->  Hash Join  (cost=95007.27..1609896.31 rows=71161 width=38) (actual time=860.327..9943.179 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=90286.27..1595711.21 rows=1802683 width=50) (actual time=813.674..9506.102 rows=1815327 loops=1)
                                 ->  Hash Join  (cost=90285.71..398326.99 rows=450827 width=38) (actual time=813.302..6121.098 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=26959.31..322039.32 rows=2254134 width=8) (actual time=221.970..4894.192 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=261246
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..26395.78 rows=2254134 width=0) (actual time=168.901..168.902 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59576.14..59576.14 rows=300021 width=38) (actual time=590.843..590.846 rows=299436 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                             ->  Hash Join  (cost=2.51..59576.14 rows=300021 width=38) (actual time=1.255..526.256 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50948.03 rows=1500103 width=8) (actual time=0.677..359.258 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.563..0.565 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.551..0.561 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.252..0.255 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.285..0.286 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.276..0.279 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.006..0.007 rows=4 loops=453399)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=44.924..44.924 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.461..29.057 rows=100000 loops=1)
 Planning Time: 34.760 ms
 Execution Time: 10016.439 ms
(42 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1616521.41..1616521.41 rows=1 width=58) (actual time=5046.468..5046.475 rows=1 loops=1)
   ->  Sort  (cost=1616521.41..1616521.47 rows=25 width=58) (actual time=5046.467..5046.473 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=1615631.46..1616521.28 rows=25 width=58) (actual time=5021.785..5046.453 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=1615631.46..1615809.36 rows=71161 width=38) (actual time=5015.702..5018.562 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 7575kB
                     ->  Hash Join  (cost=95007.27..1609896.31 rows=71161 width=38) (actual time=706.323..4983.637 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=90286.27..1595711.21 rows=1802683 width=50) (actual time=667.393..4582.616 rows=1815327 loops=1)
                                 ->  Hash Join  (cost=90285.71..398326.99 rows=450827 width=38) (actual time=667.360..2610.346 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=26959.31..322039.32 rows=2254134 width=8) (actual time=211.241..1594.454 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=261246
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..26395.78 rows=2254134 width=0) (actual time=158.920..158.920 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59576.14..59576.14 rows=300021 width=38) (actual time=455.766..455.769 rows=299436 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                             ->  Hash Join  (cost=2.51..59576.14 rows=300021 width=38) (actual time=0.056..394.483 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50948.03 rows=1500103 width=8) (actual time=0.018..233.952 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.031..0.033 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.026..0.031 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.008 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.003..0.004 rows=4 loops=453399)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=38.449..38.449 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.018..20.533 rows=100000 loops=1)
 Planning Time: 5.044 ms
 Execution Time: 5046.747 ms
(42 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2078225.86..2078225.87 rows=1 width=32) (actual time=13440.608..13440.609 rows=1 loops=1)
   ->  Aggregate  (cost=2078225.86..2078225.87 rows=1 width=32) (actual time=13440.606..13440.607 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=234989.51..2072064.78 rows=1232216 width=12) (actual time=1276.059..12834.977 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 13724091
               Heap Blocks: exact=395900 lossy=267068
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..234681.46 rows=1232216 width=0) (actual time=1190.390..1190.390 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 25.884 ms
 Execution Time: 13442.170 ms
(10 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2078225.86..2078225.87 rows=1 width=32) (actual time=6326.734..6326.735 rows=1 loops=1)
   ->  Aggregate  (cost=2078225.86..2078225.87 rows=1 width=32) (actual time=6326.732..6326.733 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=234989.51..2072064.78 rows=1232216 width=12) (actual time=1140.839..5960.875 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 13724091
               Heap Blocks: exact=395900 lossy=267068
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..234681.46 rows=1232216 width=0) (actual time=1054.870..1054.871 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 1.325 ms
 Execution Time: 6326.941 ms
(10 rows)

query 7 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2716585.36..2716585.48 rows=1 width=116) (actual time=19035.308..19035.315 rows=1 loops=1)
   ->  GroupAggregate  (cost=2716585.36..2717778.38 rows=10020 width=116) (actual time=19035.306..19035.313 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2716585.36..2716734.32 rows=59584 width=96) (actual time=19027.234..19027.838 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 6955kB
               ->  Hash Join  (cost=563429.19..2711859.56 rows=59584 width=96) (actual time=5124.100..18993.535 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=3629.40..2110878.93 rows=1431754 width=46) (actual time=38.013..13241.293 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2024919.86 rows=18136569 width=24) (actual time=0.552..10948.025 rows=18230325 loops=1)
                                 Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Filter: 41755727
                           ->  Hash  (cost=3529.40..3529.40 rows=8000 width=30) (actual time=37.447..37.450 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3529.40 rows=8000 width=30) (actual time=0.771..36.108 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.513..26.186 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.249..0.249 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.240..0.244 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536594.31..536594.31 rows=1200118 width=30) (actual time=5082.606..5082.609 rows=1191175 loops=1)
                           Buckets: 1048576  Batches: 2  Memory Usage: 44259kB
                           ->  Hash Join  (cost=57054.84..536594.31 rows=1200118 width=30) (actual time=529.801..4846.069 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411282.77 rows=15001477 width=8) (actual time=0.620..1713.869 rows=15000000 loops=1)
                                 ->  Hash  (cost=55554.74..55554.74 rows=120008 width=30) (actual time=529.048..529.049 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55554.74 rows=120008 width=30) (actual time=0.588..503.659 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50948.03 rows=1500103 width=8) (actual time=0.552..358.596 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.025..0.026 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.016..0.020 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 37.883 ms
 Execution Time: 19036.100 ms
(42 rows)

SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2716585.36..2716585.48 rows=1 width=116) (actual time=15600.136..15600.143 rows=1 loops=1)
   ->  GroupAggregate  (cost=2716585.36..2717778.38 rows=10020 width=116) (actual time=15600.135..15600.141 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2716585.36..2716734.32 rows=59584 width=96) (actual time=15592.057..15592.663 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 6955kB
               ->  Hash Join  (cost=563429.19..2711859.56 rows=59584 width=96) (actual time=4204.944..15560.055 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=3629.40..2110878.93 rows=1431754 width=46) (actual time=19.402..10754.921 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2024919.86 rows=18136569 width=24) (actual time=0.038..8868.454 rows=18230325 loops=1)
                                 Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Filter: 41755727
                           ->  Hash  (cost=3529.40..3529.40 rows=8000 width=30) (actual time=19.355..19.357 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3529.40 rows=8000 width=30) (actual time=0.016..18.350 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.002..6.718 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.010..0.011 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.008 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536594.31..536594.31 rows=1200118 width=30) (actual time=4183.171..4183.173 rows=1191175 loops=1)
                           Buckets: 1048576  Batches: 2  Memory Usage: 44259kB
                           ->  Hash Join  (cost=57054.84..536594.31 rows=1200118 width=30) (actual time=295.882..3939.158 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411282.77 rows=15001477 width=8) (actual time=0.038..1272.162 rows=15000000 loops=1)
                                 ->  Hash  (cost=55554.74..55554.74 rows=120008 width=30) (actual time=295.709..295.710 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55554.74 rows=120008 width=30) (actual time=0.022..275.176 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50948.03 rows=1500103 width=8) (actual time=0.003..101.094 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.014 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.011 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 3.398 ms
 Execution Time: 15600.727 ms
(42 rows)

query 8 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=577580.40..577580.65 rows=1 width=64) (actual time=11458.847..11458.854 rows=1 loops=1)
   ->  GroupAggregate  (cost=577580.40..578165.69 rows=2406 width=64) (actual time=11458.845..11458.852 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=577580.40..577640.09 rows=23874 width=70) (actual time=11452.707..11453.166 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2445kB
               ->  Nested Loop  (cost=226063.70..575844.39 rows=23874 width=70) (actual time=5576.248..11435.091 rows=23842 loops=1)
                     ->  Hash Join  (cost=226063.55..575171.99 rows=23874 width=20) (actual time=5576.231..11399.283 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=221592.55..570637.48 rows=24194 width=20) (actual time=5531.510..11343.243 rows=23842 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=158266.15..506615.51 rows=120968 width=24) (actual time=4960.897..10742.136 rows=118593 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=54773.62..384738.97 rows=4579823 width=12) (actual time=365.544..5227.598 rows=4557513 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..53628.67 rows=4579823 width=0) (actual time=312.041..312.042 rows=4557513 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=98539.54..98539.54 rows=396239 width=20) (actual time=4595.043..4595.044 rows=389521 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25019kB
                                             ->  Nested Loop  (cost=0.99..98539.54 rows=396239 width=20) (actual time=2.216..4439.027 rows=389521 loops=1)
                                                   ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..53964.25 rows=13211 width=4) (actual time=1.151..352.851 rows=13011 loops=1)
                                                         Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.07 rows=30 width=24) (actual time=0.241..0.308 rows=30 loops=13011)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=59576.14..59576.14 rows=300021 width=4) (actual time=569.947..569.950 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                       ->  Hash Join  (cost=2.51..59576.14 rows=300021 width=4) (actual time=1.471..520.074 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50948.03 rows=1500103 width=8) (actual time=0.809..358.301 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.653..0.654 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.648..0.653 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.317..0.319 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.324..0.324 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.319..0.321 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=44.456..44.457 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.499..29.481 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Cache Mode: logical
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.003..0.003 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 48.362 ms
 Execution Time: 11459.426 ms
(53 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=577580.40..577580.65 rows=1 width=64) (actual time=3774.886..3774.892 rows=1 loops=1)
   ->  GroupAggregate  (cost=577580.40..578165.69 rows=2406 width=64) (actual time=3774.884..3774.890 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=577580.40..577640.09 rows=23874 width=70) (actual time=3768.936..3769.383 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2445kB
               ->  Nested Loop  (cost=226063.70..575844.39 rows=23874 width=70) (actual time=1239.153..3756.405 rows=23842 loops=1)
                     ->  Hash Join  (cost=226063.55..575171.99 rows=23874 width=20) (actual time=1239.139..3732.222 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=221592.55..570637.48 rows=24194 width=20) (actual time=1202.798..3685.547 rows=23842 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=158266.15..506615.51 rows=120968 width=24) (actual time=766.705..3221.442 rows=118593 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=54773.62..384738.97 rows=4579823 width=12) (actual time=345.433..1929.684 rows=4557513 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..53628.67 rows=4579823 width=0) (actual time=292.608..292.609 rows=4557513 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=98539.54..98539.54 rows=396239 width=20) (actual time=420.968..420.970 rows=389521 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25019kB
                                             ->  Nested Loop  (cost=0.99..98539.54 rows=396239 width=20) (actual time=0.087..343.877 rows=389521 loops=1)
                                                   ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..53964.25 rows=13211 width=4) (actual time=0.051..133.111 rows=13011 loops=1)
                                                         Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.07 rows=30 width=24) (actual time=0.007..0.014 rows=30 loops=13011)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=59576.14..59576.14 rows=300021 width=4) (actual time=435.346..435.349 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                       ->  Hash Join  (cost=2.51..59576.14 rows=300021 width=4) (actual time=0.079..387.664 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50948.03 rows=1500103 width=8) (actual time=0.034..231.137 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.038..0.039 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.032..0.037 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.012..0.013 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=36.070..36.071 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.015..20.341 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Cache Mode: logical
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 5.290 ms
 Execution Time: 3775.191 ms
(53 rows)

query 9 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1451386.93..1451386.93 rows=1 width=90) (actual time=24111.797..24111.802 rows=1 loops=1)
   ->  Sort  (cost=1451386.93..1451537.30 rows=60150 width=90) (actual time=24111.795..24111.800 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1450183.93..1451086.18 rows=60150 width=90) (actual time=24111.284..24111.718 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=751252.54..1408330.39 rows=2391631 width=81) (actual time=12532.330..21314.008 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=751250.98..1395007.44 rows=2391631 width=31) (actual time=12532.117..20356.467 rows=3248192 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..411282.77 rows=15001477 width=8) (actual time=0.592..2423.026 rows=15000000 loops=1)
                           ->  Hash  (cost=705005.59..705005.59 rows=2391631 width=31) (actual time=12530.144..12530.147 rows=3248192 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 61114kB
                                 ->  Hash Join  (cost=4478.37..705005.59 rows=2391631 width=31) (actual time=45.361..11760.108 rows=3248192 loops=1)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Merge Join  (cost=7.37..694172.23 rows=2423655 width=35) (actual time=2.214..11031.717 rows=3248192 loops=1)
                                             Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                             Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                             Rows Removed by Join Filter: 4873781
                                             ->  Nested Loop  (cost=0.99..336921.49 rows=2423655 width=33) (actual time=1.914..6585.169 rows=3248192 loops=1)
                                                   ->  Index Only Scan using q20_idx_2 on part  (cost=0.43..64305.76 rows=80807 width=4) (actual time=0.026..512.711 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.07 rows=30 width=29) (actual time=0.039..0.053 rows=30 loops=108312)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                             ->  Materialize  (cost=0.43..201530.16 rows=8000327 width=14) (actual time=0.272..2782.041 rows=12548878 loops=1)
                                                   ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..181529.34 rows=8000327 width=14) (actual time=0.267..1083.806 rows=7999980 loops=1)
                                                         Heap Fetches: 0
                                       ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=42.852..42.853 rows=100000 loops=1)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.562..28.700 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.205..0.205 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.187..0.192 rows=25 loops=1)
 Planning Time: 46.856 ms
 Execution Time: 24112.881 ms
(39 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1451386.93..1451386.93 rows=1 width=90) (actual time=18217.615..18217.620 rows=1 loops=1)
   ->  Sort  (cost=1451386.93..1451537.30 rows=60150 width=90) (actual time=18217.613..18217.619 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1450183.93..1451086.18 rows=60150 width=90) (actual time=18217.087..18217.532 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=751252.54..1408330.39 rows=2391631 width=81) (actual time=7148.685..15426.517 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=751250.98..1395007.44 rows=2391631 width=31) (actual time=7148.652..14486.953 rows=3248192 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..411282.77 rows=15001477 width=8) (actual time=0.034..2001.071 rows=15000000 loops=1)
                           ->  Hash  (cost=705005.59..705005.59 rows=2391631 width=31) (actual time=7147.115..7147.119 rows=3248192 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 61114kB
                                 ->  Hash Join  (cost=4478.37..705005.59 rows=2391631 width=31) (actual time=28.705..6431.412 rows=3248192 loops=1)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Merge Join  (cost=7.37..694172.23 rows=2423655 width=35) (actual time=0.090..5755.246 rows=3248192 loops=1)
                                             Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                             Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                             Rows Removed by Join Filter: 4873781
                                             ->  Nested Loop  (cost=0.99..336921.49 rows=2423655 width=33) (actual time=0.042..1714.574 rows=3248192 loops=1)
                                                   ->  Index Only Scan using q20_idx_2 on part  (cost=0.43..64305.76 rows=80807 width=4) (actual time=0.025..394.280 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.07 rows=30 width=29) (actual time=0.003..0.009 rows=30 loops=108312)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                             ->  Materialize  (cost=0.43..201530.16 rows=8000327 width=14) (actual time=0.020..2451.733 rows=12548878 loops=1)
                                                   ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..181529.34 rows=8000327 width=14) (actual time=0.017..829.412 rows=7999980 loops=1)
                                                         Heap Fetches: 0
                                       ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=28.304..28.305 rows=100000 loops=1)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.007..13.956 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.025..0.025 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.016..0.018 rows=25 loops=1)
 Planning Time: 6.596 ms
 Execution Time: 18218.455 ms
(39 rows)

query 10 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1716207.04..1716207.09 rows=20 width=201) (actual time=14121.990..14121.996 rows=20 loops=1)
   ->  Sort  (cost=1716207.04..1717631.67 rows=569851 width=201) (actual time=14121.989..14121.993 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=1568215.24..1701043.51 rows=569851 width=201) (actual time=11656.752..14000.795 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Incremental Sort  (cost=1568215.24..1686797.24 rows=569851 width=181) (actual time=11656.738..13237.612 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Presorted Key: customer.c_custkey
                     Full-sort Groups: 34068  Sort Method: quicksort  Average Memory: 31kB  Peak Memory: 31kB
                     ->  Nested Loop  (cost=1568215.07..1661153.94 rows=569851 width=181) (actual time=11656.591..12875.343 rows=1145402 loops=1)
                           ->  Merge Join  (cost=1568214.92..1647194.19 rows=569851 width=159) (actual time=11656.329..12475.385 rows=1145402 loops=1)
                                 Merge Cond: (customer.c_custkey = orders.o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.43..66681.97 rows=1500103 width=147) (actual time=0.820..362.360 rows=1499997 loops=1)
                                 ->  Sort  (cost=1568214.24..1569638.86 rows=569851 width=16) (actual time=11655.494..11758.537 rows=1145402 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external sort  Disk: 35288kB
                                       ->  Hash Join  (cost=283820.97..1513735.84 rows=569851 width=16) (actual time=4849.279..11210.864 rows=1145402 loops=1)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..1190649.90 rows=14958291 width=16) (actual time=0.599..4701.579 rows=14808183 loops=1)
                                                   Index Cond: (l_returnflag = 'R'::bpchar)
                                                   Heap Fetches: 0
                                             ->  Hash  (cost=276676.71..276676.71 rows=571496 width=8) (actual time=4847.342..4847.343 rows=573160 loops=1)
                                                   Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                                   ->  Bitmap Heap Scan on orders  (cost=6836.27..276676.71 rows=571496 width=8) (actual time=112.270..4685.133 rows=573160 loops=1)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=233346
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6693.40 rows=571496 width=0) (actual time=64.739..64.740 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                                 Cache Key: customer.c_nationkey
                                 Cache Mode: logical
                                 Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                 ->  Index Scan using nation_pkey on nation  (cost=0.14..1.16 rows=1 width=30) (actual time=0.012..0.012 rows=1 loops=25)
                                       Index Cond: (n_nationkey = customer.c_nationkey)
 Planning Time: 38.392 ms
 Execution Time: 14126.771 ms
(37 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1716207.04..1716207.09 rows=20 width=201) (actual time=10098.716..10098.721 rows=20 loops=1)
   ->  Sort  (cost=1716207.04..1717631.67 rows=569851 width=201) (actual time=10098.715..10098.718 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=1568215.24..1701043.51 rows=569851 width=201) (actual time=7690.591..9975.586 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Incremental Sort  (cost=1568215.24..1686797.24 rows=569851 width=181) (actual time=7690.577..9212.014 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Presorted Key: customer.c_custkey
                     Full-sort Groups: 34068  Sort Method: quicksort  Average Memory: 31kB  Peak Memory: 31kB
                     ->  Nested Loop  (cost=1568215.07..1661153.94 rows=569851 width=181) (actual time=7690.497..8852.311 rows=1145402 loops=1)
                           ->  Merge Join  (cost=1568214.92..1647194.19 rows=569851 width=159) (actual time=7690.475..8450.144 rows=1145402 loops=1)
                                 Merge Cond: (customer.c_custkey = orders.o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.43..66681.97 rows=1500103 width=147) (actual time=0.027..305.068 rows=1499997 loops=1)
                                 ->  Sort  (cost=1568214.24..1569638.86 rows=569851 width=16) (actual time=7690.433..7792.390 rows=1145402 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external sort  Disk: 35288kB
                                       ->  Hash Join  (cost=283820.97..1513735.84 rows=569851 width=16) (actual time=1504.640..7249.633 rows=1145402 loops=1)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..1190649.90 rows=14958291 width=16) (actual time=0.029..4118.228 rows=14808183 loops=1)
                                                   Index Cond: (l_returnflag = 'R'::bpchar)
                                                   Heap Fetches: 0
                                             ->  Hash  (cost=276676.71..276676.71 rows=571496 width=8) (actual time=1503.239..1503.240 rows=573160 loops=1)
                                                   Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                                   ->  Bitmap Heap Scan on orders  (cost=6836.27..276676.71 rows=571496 width=8) (actual time=111.636..1376.053 rows=573160 loops=1)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=233346
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6693.40 rows=571496 width=0) (actual time=64.812..64.812 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                                 Cache Key: customer.c_nationkey
                                 Cache Mode: logical
                                 Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                 ->  Index Scan using nation_pkey on nation  (cost=0.14..1.16 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                       Index Cond: (n_nationkey = customer.c_nationkey)
 Planning Time: 2.648 ms
 Execution Time: 10103.409 ms
(37 rows)

query 11 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=608128.75..608128.75 rows=1 width=36) (actual time=3895.982..3895.989 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293109.76..293109.77 rows=1 width=32) (actual time=1596.737..1596.740 rows=1 loops=1)
           ->  Hash Join  (cost=2341.31..290709.66 rows=320013 width=10) (actual time=2.894..1506.564 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255225.27 rows=8000327 width=14) (actual time=0.017..770.162 rows=8000000 loops=1)
                 ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=2.828..2.830 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=0.595..2.462 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=39.29..2250.00 rows=4000 width=8) (actual time=0.584..2.127 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.374..0.374 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=315018.98..315285.66 rows=106671 width=36) (actual time=3895.981..3895.984 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=306560.30..314485.62 rows=106671 width=36) (actual time=3895.949..3895.952 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 7312kB
               Rows Removed by Filter: 301833
               ->  Hash Join  (cost=2341.31..290709.66 rows=320013 width=14) (actual time=40.653..1922.694 rows=320800 loops=1)
                     Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..255225.27 rows=8000327 width=18) (actual time=0.710..1095.588 rows=8000000 loops=1)
                     ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=39.875..39.877 rows=4010 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 173kB
                           ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=1.709..38.816 rows=4010 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.233..0.237 rows=1 loops=1)
                                       Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       Rows Removed by Filter: 24
                                 ->  Bitmap Heap Scan on supplier  (cost=39.29..2250.00 rows=4000 width=8) (actual time=1.467..37.938 rows=4010 loops=1)
                                       Recheck Cond: (s_nationkey = nation.n_nationkey)
                                       Heap Blocks: exact=1869
                                       ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.940..0.940 rows=4010 loops=1)
                                             Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 19.106 ms
 Execution Time: 3898.335 ms
(41 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=608128.75..608128.75 rows=1 width=36) (actual time=3463.859..3463.865 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293109.76..293109.77 rows=1 width=32) (actual time=1595.360..1595.363 rows=1 loops=1)
           ->  Hash Join  (cost=2341.31..290709.66 rows=320013 width=10) (actual time=2.916..1505.010 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255225.27 rows=8000327 width=14) (actual time=0.016..753.169 rows=8000000 loops=1)
                 ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=2.856..2.858 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=0.595..2.484 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=39.29..2250.00 rows=4000 width=8) (actual time=0.585..2.138 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.373..0.373 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=315018.98..315285.66 rows=106671 width=36) (actual time=3463.857..3463.860 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=306560.30..314485.62 rows=106671 width=36) (actual time=3463.827..3463.829 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 7312kB
               Rows Removed by Filter: 301833
               ->  Hash Join  (cost=2341.31..290709.66 rows=320013 width=14) (actual time=3.658..1502.404 rows=320800 loops=1)
                     Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..255225.27 rows=8000327 width=18) (actual time=0.039..766.630 rows=8000000 loops=1)
                     ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=3.591..3.592 rows=4010 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 173kB
                           ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=0.552..3.208 rows=4010 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                       Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       Rows Removed by Filter: 24
                                 ->  Bitmap Heap Scan on supplier  (cost=39.29..2250.00 rows=4000 width=8) (actual time=0.539..2.863 rows=4010 loops=1)
                                       Recheck Cond: (s_nationkey = nation.n_nationkey)
                                       Heap Blocks: exact=1869
                                       ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.316..0.317 rows=4010 loops=1)
                                             Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 1.325 ms
 Execution Time: 3465.894 ms
(41 rows)

query 12 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=682772.65..682772.65 rows=1 width=27) (actual time=5243.599..5243.602 rows=1 loops=1)
   ->  Sort  (cost=682772.65..682772.66 rows=7 width=27) (actual time=5243.598..5243.599 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=682772.54..682772.61 rows=7 width=27) (actual time=5243.550..5243.552 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               Batches: 1  Memory Usage: 24kB
               ->  Hash Join  (cost=150777.26..677553.45 rows=298234 width=27) (actual time=1004.048..5123.779 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..411282.77 rows=15001477 width=20) (actual time=0.621..1709.340 rows=15000000 loops=1)
                     ->  Hash  (cost=147049.34..147049.34 rows=298234 width=15) (actual time=1002.724..1002.725 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.43..147049.34 rows=298234 width=15) (actual time=0.406..942.568 rows=311258 loops=1)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 778088
                                 Heap Fetches: 0
 Planning Time: 26.359 ms
 Execution Time: 5244.430 ms
(19 rows)

SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=682772.65..682772.65 rows=1 width=27) (actual time=4381.501..4381.504 rows=1 loops=1)
   ->  Sort  (cost=682772.65..682772.66 rows=7 width=27) (actual time=4381.500..4381.502 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=682772.54..682772.61 rows=7 width=27) (actual time=4381.473..4381.475 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               Batches: 1  Memory Usage: 24kB
               ->  Hash Join  (cost=150777.26..677553.45 rows=298234 width=27) (actual time=733.262..4265.092 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..411282.77 rows=15001477 width=20) (actual time=0.024..1262.074 rows=15000000 loops=1)
                     ->  Hash  (cost=147049.34..147049.34 rows=298234 width=15) (actual time=732.574..732.575 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.43..147049.34 rows=298234 width=15) (actual time=0.037..674.679 rows=311258 loops=1)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 778088
                                 Heap Fetches: 0
 Planning Time: 1.648 ms
 Execution Time: 4381.601 ms
(19 rows)

query 13 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1430621.73..1430621.74 rows=1 width=16) (actual time=17051.567..17051.570 rows=1 loops=1)
   ->  Sort  (cost=1430621.73..1430622.23 rows=200 width=16) (actual time=17051.566..17051.568 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1430618.73..1430620.73 rows=200 width=16) (actual time=17051.540..17051.547 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1275928.84..1408117.19 rows=1500103 width=12) (actual time=14883.079..16882.123 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 212480kB
                     ->  Hash Right Join  (cost=55345.26..666554.77 rows=14999977 width=8) (actual time=367.595..11050.884 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448786.46 rows=14999977 width=8) (actual time=0.607..5270.855 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=30733.97..30733.97 rows=1500103 width=4) (actual time=364.465..364.465 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 2  Memory Usage: 42747kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30733.97 rows=1500103 width=4) (actual time=0.383..160.995 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 17.831 ms
 Execution Time: 17085.521 ms
(21 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1430621.73..1430621.74 rows=1 width=16) (actual time=16458.543..16458.546 rows=1 loops=1)
   ->  Sort  (cost=1430621.73..1430622.23 rows=200 width=16) (actual time=16458.542..16458.544 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1430618.73..1430620.73 rows=200 width=16) (actual time=16458.516..16458.524 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1275928.84..1408117.19 rows=1500103 width=12) (actual time=14315.622..16291.013 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 212480kB
                     ->  Hash Right Join  (cost=55345.26..666554.77 rows=14999977 width=8) (actual time=331.347..10495.782 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448786.46 rows=14999977 width=8) (actual time=0.033..4794.963 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=30733.97..30733.97 rows=1500103 width=4) (actual time=328.704..328.705 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 2  Memory Usage: 42747kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30733.97 rows=1500103 width=4) (actual time=0.031..129.004 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 1.218 ms
 Execution Time: 16491.886 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1299430.95..1299430.97 rows=1 width=32) (actual time=4710.752..4710.753 rows=1 loops=1)
   ->  Aggregate  (cost=1299430.95..1299430.97 rows=1 width=32) (actual time=4710.750..4710.751 rows=1 loops=1)
         ->  Merge Join  (cost=28.93..1285110.43 rows=818315 width=33) (actual time=0.920..4265.543 rows=772942 loops=1)
               Merge Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Index Only Scan using q14_idx_1 on lineitem  (cost=0.56..1201112.95 rows=818315 width=16) (actual time=0.664..3616.007 rows=772942 loops=1)
                     Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Fetches: 0
               ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..68831.86 rows=1999962 width=25) (actual time=0.250..346.799 rows=1999998 loops=1)
                     Heap Fetches: 0
 Planning Time: 31.315 ms
 Execution Time: 4711.087 ms
(11 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1299430.95..1299430.97 rows=1 width=32) (actual time=3478.800..3478.801 rows=1 loops=1)
   ->  Aggregate  (cost=1299430.95..1299430.97 rows=1 width=32) (actual time=3478.798..3478.799 rows=1 loops=1)
         ->  Merge Join  (cost=28.93..1285110.43 rows=818315 width=33) (actual time=0.053..3066.817 rows=772942 loops=1)
               Merge Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Index Only Scan using q14_idx_1 on lineitem  (cost=0.56..1201112.95 rows=818315 width=16) (actual time=0.032..2516.018 rows=772942 loops=1)
                     Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Fetches: 0
               ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..68831.86 rows=1999962 width=25) (actual time=0.018..273.056 rows=1999998 loops=1)
                     Heap Fetches: 0
 Planning Time: 1.929 ms
 Execution Time: 3478.855 ms
(11 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3741152.90..3741161.84 rows=1 width=103) (actual time=19575.919..19575.922 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1871069.07..1871069.08 rows=1 width=32) (actual time=6173.982..6173.984 rows=1 loops=1)
           ->  HashAggregate  (cost=1868535.59..1869802.33 rows=101339 width=36) (actual time=6132.119..6168.353 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 43025kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=38901.12..1846878.46 rows=2165713 width=16) (actual time=366.309..4638.938 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 13223651
                       Heap Blocks: exact=401153 lossy=267105
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..38359.70 rows=2165713 width=0) (actual time=279.193..279.193 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1870083.82..1874615.42 rows=507 width=103) (actual time=19575.917..19575.919 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4274.29 rows=100000 width=71) (actual time=0.753..19.604 rows=69998 loops=1)
         ->  Sort  (cost=1870083.53..1870084.79 rows=507 width=36) (actual time=19552.141..19552.142 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1868535.59..1870060.75 rows=507 width=36) (actual time=19526.440..19552.131 rows=1 loops=1)
                     ->  HashAggregate  (cost=1868535.59..1870055.68 rows=507 width=36) (actual time=19526.438..19552.128 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 43025kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=38901.12..1846878.46 rows=2165713 width=16) (actual time=421.816..11212.808 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Rows Removed by Index Recheck: 13223651
                                 Heap Blocks: exact=401153 lossy=267105
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..38359.70 rows=2165713 width=0) (actual time=334.185..334.185 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 24.441 ms
 Execution Time: 19577.976 ms
(32 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3741152.90..3741161.84 rows=1 width=103) (actual time=12855.403..12855.406 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1871069.07..1871069.08 rows=1 width=32) (actual time=6164.800..6164.801 rows=1 loops=1)
           ->  HashAggregate  (cost=1868535.59..1869802.33 rows=101339 width=36) (actual time=6123.353..6159.214 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 43025kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=38901.12..1846878.46 rows=2165713 width=16) (actual time=364.516..4633.509 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 13223651
                       Heap Blocks: exact=401153 lossy=267105
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..38359.70 rows=2165713 width=0) (actual time=277.571..277.572 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1870083.82..1874615.42 rows=507 width=103) (actual time=12855.401..12855.402 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4274.29 rows=100000 width=71) (actual time=0.048..11.693 rows=69998 loops=1)
         ->  Sort  (cost=1870083.53..1870084.79 rows=507 width=36) (actual time=12839.680..12839.681 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1868535.59..1870060.75 rows=507 width=36) (actual time=12814.149..12839.673 rows=1 loops=1)
                     ->  HashAggregate  (cost=1868535.59..1870055.68 rows=507 width=36) (actual time=12814.148..12839.670 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 43025kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=38901.12..1846878.46 rows=2165713 width=16) (actual time=386.647..5116.261 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Rows Removed by Index Recheck: 13223651
                                 Heap Blocks: exact=401153 lossy=267105
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..38359.70 rows=2165713 width=0) (actual time=299.757..299.757 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 1.874 ms
 Execution Time: 12857.024 ms
(32 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=370469.74..370469.75 rows=1 width=44) (actual time=7649.985..7649.988 rows=1 loops=1)
   ->  Sort  (cost=370469.74..370853.41 rows=153467 width=44) (actual time=7649.983..7649.986 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=360775.43..369702.41 rows=153467 width=44) (actual time=6855.825..7645.414 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=360775.43..362253.89 rows=591385 width=40) (actual time=6855.776..7422.950 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                     Sort Method: external merge  Disk: 60584kB
                     ->  Hash Join  (cost=98147.45..292527.62 rows=591385 width=40) (actual time=831.250..3145.640 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..187351.18 rows=4000164 width=8) (actual time=37.774..1543.986 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=1.537..37.478 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90980.05..90980.05 rows=295675 width=40) (actual time=792.806..792.807 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90980.05 rows=295675 width=40) (actual time=0.811..723.351 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning Time: 21.251 ms
 Execution Time: 7659.245 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=370469.74..370469.75 rows=1 width=44) (actual time=7174.196..7174.200 rows=1 loops=1)
   ->  Sort  (cost=370469.74..370853.41 rows=153467 width=44) (actual time=7174.195..7174.198 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=360775.43..369702.41 rows=153467 width=44) (actual time=6378.708..7169.628 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=360775.43..362253.89 rows=591385 width=40) (actual time=6378.659..6946.828 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                     Sort Method: external merge  Disk: 60584kB
                     ->  Hash Join  (cost=98147.45..292527.62 rows=591385 width=40) (actual time=536.360..2672.975 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..187351.18 rows=4000164 width=8) (actual time=20.110..1365.773 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.086..20.066 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90980.05..90980.05 rows=295675 width=40) (actual time=515.592..515.593 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90980.05 rows=295675 width=40) (actual time=0.017..453.490 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning Time: 1.319 ms
 Execution Time: 7183.034 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1774257.35..1774257.36 rows=1 width=32) (actual time=23048.620..23048.623 rows=1 loops=1)
   ->  Aggregate  (cost=1774257.35..1774257.36 rows=1 width=32) (actual time=23048.618..23048.621 rows=1 loops=1)
         ->  Nested Loop  (cost=71094.57..1774206.01 rows=20534 width=8) (actual time=527.388..23045.814 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=71094.01..1767903.13 rows=2054 width=40) (actual time=526.461..21958.801 rows=1996 loops=1)
                     Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Sort  (cost=71093.44..71098.58 rows=2054 width=4) (actual time=516.901..518.113 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 49kB
                           ->  Seq Scan on part  (cost=0.00..70980.43 rows=2054 width=4) (actual time=1.140..516.689 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
                     ->  GroupAggregate  (cost=0.56..1691779.18 rows=1999876 width=36) (actual time=2.635..21298.769 rows=1999332 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361855.42 rows=59985124 width=9) (actual time=1.386..13511.734 rows=59965964 loops=1)
                                 Heap Fetches: 0
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.94 rows=10 width=17) (actual time=0.496..0.542 rows=3 loops=1996)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning Time: 29.874 ms
 Execution Time: 23049.261 ms
(21 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1774257.35..1774257.36 rows=1 width=32) (actual time=20415.918..20415.920 rows=1 loops=1)
   ->  Aggregate  (cost=1774257.35..1774257.36 rows=1 width=32) (actual time=20415.917..20415.918 rows=1 loops=1)
         ->  Nested Loop  (cost=71094.57..1774206.01 rows=20534 width=8) (actual time=377.466..20414.896 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=71094.01..1767903.13 rows=2054 width=40) (actual time=377.442..20384.764 rows=1996 loops=1)
                     Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Sort  (cost=71093.44..71098.58 rows=2054 width=4) (actual time=370.975..371.461 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 49kB
                           ->  Seq Scan on part  (cost=0.00..70980.43 rows=2054 width=4) (actual time=0.148..370.793 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
                     ->  GroupAggregate  (cost=0.56..1691779.18 rows=1999876 width=36) (actual time=0.068..19890.396 rows=1999332 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361855.42 rows=59985124 width=9) (actual time=0.034..12233.364 rows=59965964 loops=1)
                                 Heap Fetches: 0
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.94 rows=10 width=17) (actual time=0.013..0.014 rows=3 loops=1996)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning Time: 2.199 ms
 Execution Time: 20415.982 ms
(21 rows)

query 18 run 1
SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=7309193.50..7309193.75 rows=100 width=71) (actual time=30772.984..30772.997 rows=99 loops=1)
   ->  Sort  (cost=7309193.50..7359163.79 rows=19988114 width=71) (actual time=30772.982..30772.989 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 31kB
         ->  HashAggregate  (cost=5944057.17..6545262.16 rows=19988114 width=71) (actual time=30772.121..30772.890 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 128  Batches: 1  Memory Usage: 6225kB
               ->  Hash Join  (cost=78673.73..4691676.90 rows=19988114 width=44) (actual time=2267.405..30771.692 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=184.42..4278652.64 rows=19988114 width=25) (actual time=669.894..30017.060 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..2554997.04 rows=4998760 width=24) (actual time=507.070..22269.035 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..568553.59 rows=15001477 width=20) (actual time=0.796..3260.960 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..1886455.26 rows=4998760 width=4) (actual time=399.769..18139.882 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361585.42 rows=59985124 width=9) (actual time=0.516..6546.728 rows=59986052 loops=1)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361585.42 rows=59985124 width=9) (actual time=0.015..5184.975 rows=59916431 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=50948.03..50948.03 rows=1500103 width=23) (actual time=671.466..671.467 rows=1500000 loops=1)
                           Buckets: 1048576  Batches: 2  Memory Usage: 49242kB
                           ->  Seq Scan on customer  (cost=0.00..50948.03 rows=1500103 width=23) (actual time=0.841..403.233 rows=1500000 loops=1)
 Planning Time: 35.436 ms
 Execution Time: 30774.429 ms
(27 rows)

SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=7309193.50..7309193.75 rows=100 width=71) (actual time=29760.564..29760.578 rows=99 loops=1)
   ->  Sort  (cost=7309193.50..7359163.79 rows=19988114 width=71) (actual time=29760.562..29760.570 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 31kB
         ->  HashAggregate  (cost=5944057.17..6545262.16 rows=19988114 width=71) (actual time=29759.701..29760.470 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 128  Batches: 1  Memory Usage: 6225kB
               ->  Hash Join  (cost=78673.73..4691676.90 rows=19988114 width=44) (actual time=2055.102..29759.287 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=184.42..4278652.64 rows=19988114 width=25) (actual time=631.027..29134.973 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..2554997.04 rows=4998760 width=24) (actual time=467.588..21385.311 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..568553.59 rows=15001477 width=20) (actual time=0.051..2531.154 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..1886455.26 rows=4998760 width=4) (actual time=389.300..18006.277 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361585.42 rows=59985124 width=9) (actual time=0.034..5997.000 rows=59986052 loops=1)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361585.42 rows=59985124 width=9) (actual time=0.014..5183.914 rows=59916431 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=50948.03..50948.03 rows=1500103 width=23) (actual time=539.694..539.695 rows=1500000 loops=1)
                           Buckets: 1048576  Batches: 2  Memory Usage: 49242kB
                           ->  Seq Scan on customer  (cost=0.00..50948.03 rows=1500103 width=23) (actual time=0.030..277.800 rows=1500000 loops=1)
 Planning Time: 2.480 ms
 Execution Time: 29761.789 ms
(27 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=141585.91..141585.92 rows=1 width=32) (actual time=3061.095..3061.096 rows=1 loops=1)
   ->  Aggregate  (cost=141585.91..141585.92 rows=1 width=32) (actual time=3061.093..3061.094 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..141577.92 rows=1065 width=12) (actual time=13.128..3058.639 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125979.39 rows=4621 width=30) (actual time=1.280..849.367 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.37 rows=1 width=21) (actual time=0.441..0.461 rows=0 loops=4781)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning Time: 31.117 ms
 Execution Time: 3062.045 ms
(13 rows)

SET
SET
SET


 Limit  (cost=141585.91..141585.92 rows=1 width=32) (actual time=524.905..524.906 rows=1 loops=1)
   ->  Aggregate  (cost=141585.91..141585.92 rows=1 width=32) (actual time=524.904..524.904 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..141577.92 rows=1065 width=12) (actual time=1.281..524.235 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125979.39 rows=4621 width=30) (actual time=0.219..479.174 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.37 rows=1 width=21) (actual time=0.008..0.009 rows=0 loops=4781)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning Time: 3.252 ms
 Execution Time: 524.970 ms
(13 rows)

query 20 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2775854.87..2775854.87 rows=1 width=51) (actual time=38350.343..38350.347 rows=1 loops=1)
   ->  Sort  (cost=2775854.87..2775854.87 rows=1 width=51) (actual time=38350.341..38350.345 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2573938.78..2775854.86 rows=1 width=51) (actual time=16679.519..38348.462 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 183418673
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.901..34.489 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.306..0.309 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.588..26.577 rows=100000 loops=1)
               ->  Materialize  (cost=2573938.78..2771202.55 rows=3 width=8) (actual time=3.693..6.992 rows=44791 loops=4095)
                     ->  Hash Join  (cost=2573938.78..2771202.54 rows=3 width=8) (actual time=15122.436..22104.195 rows=59002 loops=1)
                           Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 123
                           ->  HashAggregate  (cost=2451241.92..2612258.34 rows=4832960 width=40) (actual time=14468.074..20636.440 rows=5448842 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 Planned Partitions: 32  Batches: 161  Memory Usage: 65809kB  Disk Usage: 358152kB
                                 ->  Seq Scan on lineitem  (cost=0.00..2024919.86 rows=9064655 width=13) (actual time=0.795..10482.881 rows=9123688 loops=1)
                                       Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       Rows Removed by Filter: 50862364
                           ->  Hash  (cost=121484.67..121484.67 rows=80813 width=16) (actual time=654.206..654.208 rows=86872 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 5097kB
                                 ->  Nested Loop  (cost=0.86..121484.67 rows=80813 width=16) (actual time=0.039..633.206 rows=86872 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.43..64305.76 rows=20202 width=4) (actual time=0.021..312.324 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.64 rows=19 width=12) (actual time=0.013..0.014 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 36.481 ms
 Execution Time: 38391.779 ms
(37 rows)

SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2775854.87..2775854.87 rows=1 width=51) (actual time=35818.795..35818.800 rows=1 loops=1)
   ->  Sort  (cost=2775854.87..2775854.87 rows=1 width=51) (actual time=35818.794..35818.798 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2573938.78..2775854.86 rows=1 width=51) (actual time=14131.301..35817.093 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 183418673
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.020..17.104 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.015 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.005..7.535 rows=100000 loops=1)
               ->  Materialize  (cost=2573938.78..2771202.55 rows=3 width=8) (actual time=3.069..6.376 rows=44791 loops=4095)
                     ->  Hash Join  (cost=2573938.78..2771202.54 rows=3 width=8) (actual time=12566.386..19588.043 rows=59002 loops=1)
                           Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 123
                           ->  HashAggregate  (cost=2451241.92..2612258.34 rows=4832960 width=40) (actual time=12281.785..18485.241 rows=5448842 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 Planned Partitions: 32  Batches: 161  Memory Usage: 65809kB  Disk Usage: 358152kB
                                 ->  Seq Scan on lineitem  (cost=0.00..2024919.86 rows=9064655 width=13) (actual time=0.037..8479.671 rows=9123688 loops=1)
                                       Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       Rows Removed by Filter: 50862364
                           ->  Hash  (cost=121484.67..121484.67 rows=80813 width=16) (actual time=284.478..284.480 rows=86872 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 5097kB
                                 ->  Nested Loop  (cost=0.86..121484.67 rows=80813 width=16) (actual time=0.039..266.970 rows=86872 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.43..64305.76 rows=20202 width=4) (actual time=0.020..206.908 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.64 rows=19 width=12) (actual time=0.002..0.002 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 2.525 ms
 Execution Time: 35861.526 ms
(37 rows)

query 21 run 1
SET
SET
SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1002409.28..1002409.28 rows=1 width=34) (actual time=31936.878..31936.893 rows=100 loops=1)
   ->  Sort  (cost=1002409.28..1002409.28 rows=1 width=34) (actual time=31936.877..31936.886 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=1002409.25..1002409.27 rows=1 width=34) (actual time=31930.001..31935.709 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=1002409.25..1002409.25 rows=1 width=26) (actual time=31929.989..31931.553 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 3071kB
                     ->  Nested Loop Semi Join  (cost=504676.23..1002409.24 rows=1 width=26) (actual time=15420.013..31749.135 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 27756
                           ->  Nested Loop  (cost=504675.66..1002406.59 rows=1 width=38) (actual time=15417.290..22244.694 rows=65960 loops=1)
                                 ->  Hash Right Anti Join  (cost=504675.23..1002404.15 rows=1 width=34) (actual time=15416.291..17835.325 rows=134155 loops=1)
                                       Hash Cond: (l3.l_orderkey = l1.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 1514311
                                       ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..409594.18 rows=19995041 width=8) (actual time=0.014..3325.086 rows=37929348 loops=1)
                                             Heap Fetches: 0
                                       ->  Hash  (cost=494809.24..494809.24 rows=789234 width=34) (actual time=7297.830..7297.833 rows=1514267 loops=1)
                                             Buckets: 1048576 (originally 1048576)  Batches: 2 (originally 1)  Memory Usage: 58450kB
                                             ->  Hash Join  (cost=2341.88..494809.24 rows=789234 width=34) (actual time=40.590..6957.245 rows=1514267 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..409594.18 rows=19995041 width=8) (actual time=0.509..4106.945 rows=37929348 loops=1)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=2291.31..2291.31 rows=4000 width=30) (actual time=40.051..40.052 rows=3991 loops=1)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                         ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=30) (actual time=1.800..38.976 rows=3991 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.205..0.209 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=39.29..2250.00 rows=4000 width=34) (actual time=1.585..38.092 rows=3991 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=1865
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.866..0.866 rows=3991 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.45 rows=1 width=4) (actual time=0.032..0.032 rows=0 loops=134155)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.143..0.143 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 32.251 ms
 Execution Time: 31938.267 ms
(44 rows)

SET
SET
SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1002409.28..1002409.28 rows=1 width=34) (actual time=17622.395..17622.411 rows=100 loops=1)
   ->  Sort  (cost=1002409.28..1002409.28 rows=1 width=34) (actual time=17622.394..17622.403 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=1002409.25..1002409.27 rows=1 width=34) (actual time=17615.514..17621.223 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=1002409.25..1002409.25 rows=1 width=26) (actual time=17615.501..17617.070 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 3071kB
                     ->  Nested Loop Semi Join  (cost=504676.23..1002409.24 rows=1 width=26) (actual time=14517.221..17453.657 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 27756
                           ->  Nested Loop  (cost=504675.66..1002406.59 rows=1 width=38) (actual time=14517.172..17226.000 rows=65960 loops=1)
                                 ->  Hash Right Anti Join  (cost=504675.23..1002404.15 rows=1 width=34) (actual time=14517.153..16869.446 rows=134155 loops=1)
                                       Hash Cond: (l3.l_orderkey = l1.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 1514311
                                       ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..409594.18 rows=19995041 width=8) (actual time=0.013..3327.081 rows=37929348 loops=1)
                                             Heap Fetches: 0
                                       ->  Hash  (cost=494809.24..494809.24 rows=789234 width=34) (actual time=6404.364..6404.367 rows=1514267 loops=1)
                                             Buckets: 1048576 (originally 1048576)  Batches: 2 (originally 1)  Memory Usage: 58450kB
                                             ->  Hash Join  (cost=2341.88..494809.24 rows=789234 width=34) (actual time=4.112..6084.144 rows=1514267 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..409594.18 rows=19995041 width=8) (actual time=0.029..3350.655 rows=37929348 loops=1)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=2291.31..2291.31 rows=4000 width=30) (actual time=4.062..4.064 rows=3991 loops=1)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                         ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=30) (actual time=0.520..3.495 rows=3991 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.016 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=39.29..2250.00 rows=4000 width=34) (actual time=0.503..3.048 rows=3991 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=1865
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.279..0.279 rows=3991 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=134155)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 3.341 ms
 Execution Time: 17623.515 ms
(44 rows)

query 22 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=162267.90..162267.93 rows=1 width=72) (actual time=1997.788..1997.789 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75444.24..75444.25 rows=1 width=32) (actual time=996.579..996.580 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75324.70 rows=47813 width=6) (actual time=0.017..959.982 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=86823.65..87043.38 rows=7990 width=72) (actual time=1997.787..1997.787 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=86823.65..86843.63 rows=7990 width=38) (actual time=1995.976..1996.322 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4012kB
               ->  Nested Loop Anti Join  (cost=0.43..86305.74 rows=7990 width=38) (actual time=997.174..1974.928 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75324.70 rows=17501 width=26) (actual time=997.157..1540.950 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.65 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 17.611 ms
 Execution Time: 1998.865 ms
(20 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=162267.90..162267.93 rows=1 width=72) (actual time=1587.150..1587.152 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75444.24..75444.25 rows=1 width=32) (actual time=741.651..741.652 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75324.70 rows=47813 width=6) (actual time=0.007..708.363 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=86823.65..87043.38 rows=7990 width=72) (actual time=1587.149..1587.150 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=86823.65..86843.63 rows=7990 width=38) (actual time=1585.355..1585.709 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4012kB
               ->  Nested Loop Anti Join  (cost=0.43..86305.74 rows=7990 width=38) (actual time=741.691..1565.918 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75324.70 rows=17501 width=26) (actual time=741.675..1258.351 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.65 rows=18 width=4) (actual time=0.001..0.001 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 0.927 ms
 Execution Time: 1587.213 ms
(20 rows)

