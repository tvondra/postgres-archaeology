query 1 run 1
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=341862.74..341862.74 rows=1 width=33)
   ->  Sort  (cost=341862.74..341862.75 rows=6 width=33)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=341862.44..341862.71 rows=6 width=33)
               ->  Seq Scan on lineitem  (cost=0.00..193580.94 rows=5931260 width=33)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
(6 rows)

query 2 run 1
SET
SET
                                                            QUERY PLAN                                                            
----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=71321.91..71321.92 rows=1 width=194)
   ->  Sort  (cost=71321.91..71321.92 rows=1 width=194)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         ->  Merge Join  (cost=45673.54..71321.90 rows=1 width=194)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (subplan))
               ->  Index Scan using q2_idx_1 on part  (cost=0.00..8032.01 rows=888 width=30)
                     Index Cond: (p_size = 16)
                     Filter: ((p_type)::text ~~ '%NICKEL'::text)
               ->  Sort  (cost=45673.54..46073.50 rows=159984 width=176)
                     Sort Key: public.partsupp.ps_partkey
                     ->  Hash Join  (cost=410.03..31844.87 rows=159984 width=176)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25835.00 rows=800000 width=16)
                           ->  Hash  (cost=385.03..385.03 rows=2000 width=168)
                                 ->  Hash Join  (cost=2.53..385.03 rows=2000 width=168)
                                       Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=146)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                   Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan
                 ->  Aggregate  (cost=23.73..23.74 rows=1 width=8)
                       ->  Nested Loop  (cost=0.00..23.72 rows=1 width=8)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.00..22.61 rows=4 width=12)
                                   ->  Nested Loop  (cost=0.00..21.49 rows=4 width=12)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..4.36 rows=4 width=12)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4.27 rows=1 width=8)
                                               Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8)
                                         Index Cond: (public.nation.n_nationkey = public.supplier.s_nationkey)
(39 rows)

query 3 run 1
SET
SET
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Limit  (cost=318281.22..318281.25 rows=10 width=28)
   ->  Sort  (cost=318281.22..319088.02 rows=322719 width=28)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         ->  GroupAggregate  (cost=301625.81..311307.38 rows=322719 width=28)
               ->  Sort  (cost=301625.81..302432.61 rows=322719 width=28)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=63034.87..272097.15 rows=322719 width=28)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..193580.94 rows=3267774 width=20)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=61183.16..61183.16 rows=148137 width=12)
                                 ->  Hash Join  (cost=5887.62..61183.16 rows=148137 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..45583.00 rows=731659 width=16)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5508.00..5508.00 rows=30370 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..5508.00 rows=30370 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(18 rows)

query 4 run 1
SET
SET
                                                     QUERY PLAN                                                     
--------------------------------------------------------------------------------------------------------------------
 Limit  (cost=80194.45..80194.45 rows=1 width=16)
   ->  Sort  (cost=80194.45..80194.45 rows=1 width=16)
         Sort Key: orders.o_orderpriority
         ->  HashAggregate  (cost=80194.43..80194.44 rows=1 width=16)
               ->  Bitmap Heap Scan on orders  (cost=868.39..80055.65 rows=27756 width=16)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..861.45 rows=55512 width=0)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using q4_idx_1 on lineitem  (cost=0.00..4.64 rows=5 width=125)
                             Index Cond: (l_orderkey = $0)
(12 rows)

query 5 run 1
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=251721.32..251721.32 rows=1 width=42)
   ->  Sort  (cost=251721.32..251721.38 rows=25 width=42)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=251720.76..251721.20 rows=25 width=42)
               ->  Hash Join  (cost=43063.79..251683.44 rows=7464 width=42)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=42588.79..245536.79 rows=186567 width=54)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..178578.15 rows=6001115 width=24)
                           ->  Hash  (cost=42005.87..42005.87 rows=46633 width=38)
                                 ->  Hash Join  (cost=10043.28..42005.87 rows=46633 width=38)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3670.25..34000.70 rows=233163 width=8)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3611.96 rows=233163 width=0)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5998.03..5998.03 rows=30000 width=38)
                                             ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=38)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
(29 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=120082.05..120082.06 rows=1 width=16)
   ->  Aggregate  (cost=120082.05..120082.06 rows=1 width=16)
         ->  Bitmap Heap Scan on lineitem  (cost=24382.04..119791.08 rows=116387 width=16)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..24352.94 rows=116387 width=0)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(6 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=253126.80..253126.80 rows=1 width=72)
   ->  Sort  (cost=253126.80..253141.60 rows=5919 width=72)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  HashAggregate  (cost=252964.03..253097.20 rows=5919 width=72)
               ->  Hash Join  (cost=93598.92..252904.84 rows=5919 width=72)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=93123.92..247899.40 rows=148054 width=80)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=36981.44..183330.80 rows=1852157 width=28)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36518.40 rows=1852157 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=54643.68..54643.68 rows=119904 width=60)
                                 ->  Hash Join  (cost=5986.68..54643.68 rows=119904 width=60)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41833.00 rows=1500000 width=8)
                                       ->  Hash  (cost=5836.80..5836.80 rows=11990 width=60)
                                             ->  Hash Join  (cost=21.30..5836.80 rows=11990 width=60)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
(28 rows)

query 8 run 1
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=139250.91..139250.91 rows=1 width=46)
   ->  Sort  (cost=139250.91..139252.74 rows=732 width=46)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=139221.63..139247.25 rows=732 width=46)
               ->  Hash Join  (cost=52000.19..139203.39 rows=2431 width=46)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=51998.63..139156.25 rows=2431 width=24)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=51548.63..138645.47 rows=2431 width=24)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..86922.55 rows=39997 width=24)
                                       ->  Index Scan using q2_idx_1 on part  (cost=0.00..6516.81 rows=1333 width=4)
                                             Index Cond: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..59.93 rows=31 width=28)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=50409.04..50409.04 rows=91167 width=8)
                                       ->  Hash Join  (cost=13547.67..50409.04 rows=91167 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=7174.64..40845.17 rows=455835 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7060.68 rows=455835 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5998.03..5998.03 rows=30000 width=4)
                                                   ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
(37 rows)

query 9 run 1
SET
SET
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=284646.81..284646.82 rows=1 width=61)
   ->  Sort  (cost=284646.81..284647.23 rows=168 width=61)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=284641.35..284645.97 rows=168 width=61)
               ->  Hash Join  (cost=6835.32..284640.09 rows=168 width=61)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=6833.76..284635.38 rows=168 width=39)
                           ->  Nested Loop  (cost=6833.76..283982.29 rows=168 width=43)
                                 ->  Nested Loop  (cost=6833.76..283313.55 rows=168 width=43)
                                       ->  Hash Join  (cost=6833.76..42232.30 rows=56354 width=20)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..25835.00 rows=800000 width=16)
                                             ->  Hash  (cost=6657.00..6657.00 rows=14141 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..6657.00 rows=14141 width=4)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..4.26 rows=1 width=35)
                                             Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using q21_idx_3 on orders  (cost=0.00..3.97 rows=1 width=8)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.87 rows=1 width=8)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(23 rows)

query 10 run 1
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=253279.49..253279.54 rows=20 width=188)
   ->  Sort  (cost=253279.49..253428.67 rows=59670 width=188)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=250647.47..251691.70 rows=59670 width=188)
               ->  Hash Join  (cost=36471.23..249454.07 rows=59670 width=188)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=36469.66..248632.05 rows=59670 width=166)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=29461.66..240206.88 rows=59670 width=20)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..193580.94 rows=1472674 width=20)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                 ->  Hash  (cost=28701.95..28701.95 rows=60777 width=8)
                                       ->  Bitmap Heap Scan on orders  (cost=957.30..28701.95 rows=60777 width=8)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..942.10 rows=60777 width=0)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=5133.00..5133.00 rows=150000 width=150)
                                 ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=150)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(21 rows)

query 11 run 1
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=30908.16..30908.16 rows=1 width=16)
   InitPlan
     ->  Aggregate  (cost=14854.13..14854.15 rows=1 width=12)
           ->  Nested Loop  (cost=0.00..14774.13 rows=31997 width=12)
                 ->  Nested Loop  (cost=0.00..430.71 rows=400 width=4)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..424.40 rows=400 width=8)
                             Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..34.86 rows=80 width=16)
                       Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=16054.01..16134.01 rows=31997 width=16)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         ->  HashAggregate  (cost=15014.11..15894.03 rows=31997 width=16)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Nested Loop  (cost=0.00..14774.13 rows=31997 width=16)
                     ->  Nested Loop  (cost=0.00..430.71 rows=400 width=4)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..424.40 rows=400 width=8)
                                 Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..34.86 rows=80 width=20)
                           Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
(23 rows)

query 12 run 1
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=131899.51..131899.52 rows=1 width=27)
   ->  Sort  (cost=131899.51..131899.52 rows=1 width=27)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=131899.48..131899.50 rows=1 width=27)
               ->  Merge Join  (cost=70002.24..131701.76 rows=26363 width=27)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..57566.33 rows=1500000 width=20)
                     ->  Sort  (cost=69996.11..70062.02 rows=26363 width=15)
                           Sort Key: lineitem.l_orderkey
                           ->  Bitmap Heap Scan on lineitem  (cost=30628.49..68060.25 rows=26363 width=15)
                                 Recheck Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate))
                                 ->  Bitmap Index Scan on q12_idx_1  (cost=0.00..30621.90 rows=26363 width=0)
                                       Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(13 rows)

query 13 run 1
SET
SET
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=155167.66..155167.67 rows=1 width=8)
   ->  Sort  (cost=155167.66..155168.16 rows=200 width=8)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         ->  HashAggregate  (cost=155164.16..155166.66 rows=200 width=8)
               ->  HashAggregate  (cost=151039.16..152914.16 rows=150000 width=8)
                     ->  Hash Left Join  (cost=69696.44..143690.59 rows=1469715 width=8)
                           Hash Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=4)
                           ->  Hash  (cost=45583.00..45583.00 rows=1469715 width=8)
                                 ->  Seq Scan on orders  (cost=0.00..45583.00 rows=1469715 width=8)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(11 rows)

query 14 run 1
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=91581.27..91581.30 rows=1 width=37)
   ->  Aggregate  (cost=91581.27..91581.30 rows=1 width=37)
         ->  Hash Join  (cost=10289.17..91172.81 rows=81691 width=37)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1632.17..80881.99 rows=81691 width=20)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1611.74 rows=81691 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6157.00..6157.00 rows=200000 width=25)
                     ->  Seq Scan on part  (cost=0.00..6157.00 rows=200000 width=25)
(10 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=253566.22..253567.46 rows=1 width=103)
   InitPlan
     ->  Aggregate  (cost=126488.78..126488.79 rows=1 width=32)
           ->  HashAggregate  (cost=126477.47..126484.07 rows=377 width=20)
                 ->  Bitmap Heap Scan on lineitem  (cost=4550.58..125338.08 rows=227878 width=20)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4493.61 rows=227878 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=127077.43..127544.34 rows=377 width=103)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..436.25 rows=10000 width=71)
         ->  Sort  (cost=127077.43..127078.38 rows=377 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=127047.16..127061.30 rows=377 width=36)
                     ->  HashAggregate  (cost=127047.16..127057.53 rows=377 width=20)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=4550.58..125338.08 rows=227878 width=20)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4493.61 rows=227878 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47742.40..47742.41 rows=1 width=40)
   ->  Sort  (cost=47742.40..47749.24 rows=2734 width=40)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=47013.65..47728.73 rows=2734 width=40)
               ->  Sort  (cost=47013.65..47149.83 rows=54473 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=9848.73..42728.46 rows=54473 width=40)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=350.00..28185.00 rows=400000 width=8)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..350.00 rows=1 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9157.00..9157.00 rows=27338 width=40)
                                 ->  Seq Scan on part  (cost=0.00..9157.00 rows=27338 width=40)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 17 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=225874.17..225874.18 rows=1 width=10)
   ->  Aggregate  (cost=225874.17..225874.18 rows=1 width=10)
         ->  Nested Loop  (cost=215743.23..225869.17 rows=2000 width=10)
               ->  Hash Join  (cost=215743.23..221381.16 rows=196 width=40)
                     Hash Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=208583.73..211524.23 rows=196034 width=11)
                           ->  Seq Scan on lineitem  (cost=0.00..178578.15 rows=6001115 width=11)
                     ->  Hash  (cost=7157.00..7157.00 rows=200 width=4)
                           ->  Seq Scan on part  (cost=0.00..7157.00 rows=200 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using q17_idx_1 on lineitem  (cost=0.00..22.75 rows=10 width=21)
                     Index Cond: ((public.lineitem.l_partkey = part.p_partkey) AND (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity)))))
(12 rows)

query 18 run 1
SET
SET
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=771999.13..772002.13 rows=100 width=48)
   ->  GroupAggregate  (cost=771999.13..817429.96 rows=1514361 width=48)
         ->  Sort  (cost=771999.13..775785.03 rows=1514361 width=48)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=367046.93..583272.87 rows=1514361 width=48)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..178578.15 rows=6001115 width=11)
                     ->  Hash  (cost=362315.43..362315.43 rows=378520 width=45)
                           ->  Hash Join  (cost=292707.38..362315.43 rows=378520 width=45)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=285699.38..346317.58 rows=378520 width=26)
                                       Hash Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41833.00 rows=1500000 width=22)
                                       ->  Hash  (cost=280967.88..280967.88 rows=378520 width=4)
                                             ->  GroupAggregate  (cost=0.00..277182.68 rows=378520 width=11)
                                                   Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..241499.30 rows=6001115 width=11)
                                 ->  Hash  (cost=5133.00..5133.00 rows=150000 width=23)
                                       ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=23)
(19 rows)

query 19 run 1
SET
SET


 Limit  (cost=313762.39..313762.40 rows=1 width=16)
   ->  Aggregate  (cost=313762.39..313762.40 rows=1 width=16)
         ->  Hash Join  (cost=10926.49..313762.10 rows=113 width=16)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..298600.45 rows=111661 width=27)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=9657.00..9657.00 rows=101559 width=30)
                     ->  Seq Scan on part  (cost=0.00..9657.00 rows=101559 width=30)
                           Filter: ((p_size >= 1) AND (((p_size <= 5) AND (p_size >= 1)) OR ((p_size <= 10) AND (p_size >= 1)) OR ((p_size <= 15) AND (p_size >= 1))))
(10 rows)

query 20 run 1
SET
SET
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=171592.51..171592.51 rows=1 width=51)
   ->  Sort  (cost=171592.51..171592.51 rows=1 width=51)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=171587.92..171592.50 rows=1 width=51)
               ->  Nested Loop  (cost=171587.92..171592.21 rows=1 width=55)
                     ->  HashAggregate  (cost=171587.92..171587.93 rows=1 width=8)
                           ->  Nested Loop  (cost=165050.62..171587.92 rows=1 width=8)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  Hash Join  (cost=165050.62..167870.03 rows=946 width=44)
                                       Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                       ->  HashAggregate  (cost=158343.12..159748.10 rows=93665 width=15)
                                             ->  Bitmap Heap Scan on lineitem  (cost=18701.50..151318.25 rows=936650 width=15)
                                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..18467.33 rows=936650 width=0)
                                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Hash  (cost=6682.25..6682.25 rows=2020 width=4)
                                             ->  HashAggregate  (cost=6662.05..6682.25 rows=2020 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..6657.00 rows=2020 width=4)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.91 rows=1 width=12)
                                       Index Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4.27 rows=1 width=59)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=4)
                     Index Cond: (nation.n_nationkey = supplier.s_nationkey)
                     Filter: (nation.n_name = 'IRAQ'::bpchar)
(26 rows)

query 21 run 1
SET
SET
                                                            QUERY PLAN                                                            
----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2853373.23..2853373.48 rows=100 width=26)
   ->  Sort  (cost=2853373.23..2853397.83 rows=9839 width=26)
         Sort Key: (count(*)), supplier.s_name
         ->  HashAggregate  (cost=2852874.20..2852997.19 rows=9839 width=26)
               ->  Nested Loop  (cost=40079.87..2852825.01 rows=9839 width=26)
                     ->  Hash Join  (cost=40079.87..2774256.79 rows=20004 width=30)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem l1  (cost=39839.00..2771940.52 rows=500093 width=8)
                                 Recheck Cond: (l_receiptdate > l_commitdate)
                                 Filter: ((subplan) AND (NOT (subplan)))
                                 ->  Bitmap Index Scan on q21_idx_2  (cost=0.00..39713.97 rows=2000372 width=0)
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..4.94 rows=5 width=125)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..4.90 rows=16 width=125)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=235.88..235.88 rows=400 width=30)
                                 ->  Nested Loop  (cost=7.35..235.88 rows=400 width=30)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=7.35..229.57 rows=400 width=34)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.25 rows=400 width=0)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.92 rows=1 width=4)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (orders.o_orderstatus = 'F'::bpchar)
(29 rows)

query 22 run 1
SET
SET
                                                           QUERY PLAN                                                            
---------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=128663.02..128663.02 rows=1 width=24)
   InitPlan
     ->  Aggregate  (cost=7582.26..7582.27 rows=1 width=8)
           ->  Seq Scan on customer  (cost=0.00..7570.50 rows=4702 width=8)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=121080.75..121082.91 rows=862 width=24)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         ->  HashAggregate  (cost=121059.20..121076.44 rows=862 width=24)
               ->  Index Scan using q10_idx_1 on customer  (cost=0.00..121052.74 rows=862 width=24)
                     Index Cond: (c_acctbal > $0)
                     Filter: (("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..36.63 rows=17 width=109)
                             Index Cond: (o_custkey = $1)
(14 rows)

